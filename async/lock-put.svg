<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="805"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="805"> </text>
<g id="frames">
<g>
<title>all (14,902 samples, 100.00%)</title><rect x="10.0" y="771.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="782.0">all</text>
</g>
<g>
<title>java/lang/Thread.exit (16 samples, 0.11%)</title><rect x="10.0" y="755.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadGroup.threadTerminated (16 samples, 0.11%)</title><rect x="10.0" y="739.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>java.lang.ThreadGroup (16 samples, 0.11%)</title><rect x="10.0" y="723.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (9,451 samples, 63.42%)</title><rect x="11.3" y="755.0" width="748.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.3" y="766.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9,451 samples, 63.42%)</title><rect x="11.3" y="739.0" width="748.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.3" y="750.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9,451 samples, 63.42%)</title><rect x="11.3" y="723.0" width="748.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.3" y="734.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (4,644 samples, 31.16%)</title><rect x="11.3" y="707.0" width="367.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.3" y="718.0">java/util/concurrent/CompletableFuture$AsyncSupply..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4,644 samples, 31.16%)</title><rect x="11.3" y="691.0" width="367.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.3" y="702.0">java/util/concurrent/CompletableFuture.postComplete</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (4,644 samples, 31.16%)</title><rect x="11.3" y="675.0" width="367.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.3" y="686.0">java/util/concurrent/CompletableFuture$UniCompose...</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$135/69462153.apply (4,640 samples, 31.14%)</title><rect x="11.5" y="659.0" width="367.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.5" y="670.0">jdk/internal/net/http/MultiExchange$$Lambda$135/69..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (4,640 samples, 31.14%)</title><rect x="11.5" y="643.0" width="367.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.5" y="654.0">jdk/internal/net/http/MultiExchange.lambda$respons..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (4,640 samples, 31.14%)</title><rect x="11.5" y="627.0" width="367.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.5" y="638.0">jdk/internal/net/http/MultiExchange.responseAsyncI..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (2,696 samples, 18.09%)</title><rect x="11.5" y="611.0" width="213.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.5" y="622.0">jdk/internal/net/http/Exchan..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (2,696 samples, 18.09%)</title><rect x="11.5" y="595.0" width="213.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.5" y="606.0">jdk/internal/net/http/Exchan..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (2,696 samples, 18.09%)</title><rect x="11.5" y="579.0" width="213.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.5" y="590.0">jdk/internal/net/http/Exchan..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,541 samples, 17.05%)</title><rect x="11.5" y="563.0" width="201.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.5" y="574.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,541 samples, 17.05%)</title><rect x="11.5" y="547.0" width="201.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.5" y="558.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,541 samples, 17.05%)</title><rect x="11.5" y="531.0" width="201.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.5" y="542.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$254/927503844.apply (2,541 samples, 17.05%)</title><rect x="11.5" y="515.0" width="201.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.5" y="526.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (2,541 samples, 17.05%)</title><rect x="11.5" y="499.0" width="201.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.5" y="510.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2,541 samples, 17.05%)</title><rect x="11.5" y="483.0" width="201.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.5" y="494.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$164/1669924159.apply (2,541 samples, 17.05%)</title><rect x="11.5" y="467.0" width="201.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.5" y="478.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2,541 samples, 17.05%)</title><rect x="11.5" y="451.0" width="201.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.5" y="462.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (2,541 samples, 17.05%)</title><rect x="11.5" y="435.0" width="201.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.5" y="446.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,520 samples, 16.91%)</title><rect x="11.5" y="419.0" width="199.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.5" y="430.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,520 samples, 16.91%)</title><rect x="11.5" y="403.0" width="199.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.5" y="414.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$359/49379817.apply (2,520 samples, 16.91%)</title><rect x="11.5" y="387.0" width="199.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.5" y="398.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (2,520 samples, 16.91%)</title><rect x="11.5" y="371.0" width="199.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.5" y="382.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (2,520 samples, 16.91%)</title><rect x="11.5" y="355.0" width="199.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.5" y="366.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2,520 samples, 16.91%)</title><rect x="11.5" y="339.0" width="199.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.5" y="350.0">jdk/internal/net/http/Sock..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (431 samples, 2.89%)</title><rect x="11.5" y="323.0" width="34.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.5" y="334.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (431 samples, 2.89%)</title><rect x="11.5" y="307.0" width="34.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.5" y="318.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (431 samples, 2.89%)</title><rect x="11.5" y="291.0" width="34.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.5" y="302.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (431 samples, 2.89%)</title><rect x="11.5" y="275.0" width="34.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.5" y="286.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (431 samples, 2.89%)</title><rect x="11.5" y="259.0" width="34.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.5" y="270.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (236 samples, 1.58%)</title><rect x="11.5" y="243.0" width="18.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="14.5" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (195 samples, 1.31%)</title><rect x="30.2" y="243.0" width="15.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="33.2" y="254.0"></text>
</g>
<g>
<title>java.lang.Object (195 samples, 1.31%)</title><rect x="30.2" y="227.0" width="15.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="33.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2,089 samples, 14.02%)</title><rect x="45.6" y="323.0" width="165.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="48.6" y="334.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2,089 samples, 14.02%)</title><rect x="45.6" y="307.0" width="165.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.6" y="318.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (2,089 samples, 14.02%)</title><rect x="45.6" y="291.0" width="165.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.6" y="302.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2,089 samples, 14.02%)</title><rect x="45.6" y="275.0" width="165.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="48.6" y="286.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2,089 samples, 14.02%)</title><rect x="45.6" y="259.0" width="165.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.6" y="270.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,655 samples, 11.11%)</title><rect x="45.6" y="243.0" width="131.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="48.6" y="254.0">jdk.internal.net..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (434 samples, 2.91%)</title><rect x="176.7" y="243.0" width="34.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="179.7" y="254.0">su..</text>
</g>
<g>
<title>java.lang.Object (434 samples, 2.91%)</title><rect x="176.7" y="227.0" width="34.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="179.7" y="238.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connectAsync (21 samples, 0.14%)</title><rect x="211.0" y="419.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="214.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (21 samples, 0.14%)</title><rect x="211.0" y="403.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (21 samples, 0.14%)</title><rect x="211.0" y="387.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (21 samples, 0.14%)</title><rect x="211.0" y="371.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="214.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (155 samples, 1.04%)</title><rect x="212.7" y="563.0" width="12.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="215.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (155 samples, 1.04%)</title><rect x="212.7" y="547.0" width="12.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="215.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (147 samples, 0.99%)</title><rect x="212.7" y="531.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="215.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (147 samples, 0.99%)</title><rect x="212.7" y="515.0" width="11.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="215.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (147 samples, 0.99%)</title><rect x="212.7" y="499.0" width="11.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$171/1166121287.apply (147 samples, 0.99%)</title><rect x="212.7" y="483.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="215.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (147 samples, 0.99%)</title><rect x="212.7" y="467.0" width="11.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="215.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (147 samples, 0.99%)</title><rect x="212.7" y="451.0" width="11.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (147 samples, 0.99%)</title><rect x="212.7" y="435.0" width="11.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="215.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (147 samples, 0.99%)</title><rect x="212.7" y="419.0" width="11.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="215.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (142 samples, 0.95%)</title><rect x="212.7" y="403.0" width="11.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="215.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (142 samples, 0.95%)</title><rect x="212.7" y="387.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="215.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (142 samples, 0.95%)</title><rect x="212.7" y="371.0" width="11.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="215.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (5 samples, 0.03%)</title><rect x="224.0" y="403.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.0" y="414.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.03%)</title><rect x="224.0" y="387.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="227.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$177/1022977529.run (5 samples, 0.03%)</title><rect x="224.0" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="227.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (5 samples, 0.03%)</title><rect x="224.0" y="355.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.0" y="366.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (5 samples, 0.03%)</title><rect x="224.0" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.0" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (5 samples, 0.03%)</title><rect x="224.0" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.0" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (5 samples, 0.03%)</title><rect x="224.0" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.0" y="318.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (5 samples, 0.03%)</title><rect x="224.0" y="291.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.0" y="302.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (5 samples, 0.03%)</title><rect x="224.0" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.0" y="286.0"></text>
</g>
<g>
<title>java/net/InetAddress$NameServiceAddresses.get (5 samples, 0.03%)</title><rect x="224.0" y="259.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="227.0" y="270.0"></text>
</g>
<g>
<title>java.net.InetAddress$NameServiceAddresses (5 samples, 0.03%)</title><rect x="224.0" y="243.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="227.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (8 samples, 0.05%)</title><rect x="224.4" y="531.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http2ClientImpl (8 samples, 0.05%)</title><rect x="224.4" y="515.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="227.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (1,820 samples, 12.21%)</title><rect x="225.0" y="611.0" width="144.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="228.0" y="622.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (1,130 samples, 7.58%)</title><rect x="225.0" y="595.0" width="89.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="228.0" y="606.0">jdk.intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (690 samples, 4.63%)</title><rect x="314.5" y="595.0" width="54.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="317.5" y="606.0">jdk/i..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (690 samples, 4.63%)</title><rect x="314.5" y="579.0" width="54.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="317.5" y="590.0">sun/n..</text>
</g>
<g>
<title>java.lang.Object (690 samples, 4.63%)</title><rect x="314.5" y="563.0" width="54.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="317.5" y="574.0">java...</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (124 samples, 0.83%)</title><rect x="369.1" y="611.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="372.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (124 samples, 0.83%)</title><rect x="369.1" y="595.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="372.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (123 samples, 0.83%)</title><rect x="369.2" y="579.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="372.2" y="590.0"></text>
</g>
<g>
<title>java.lang.Class (123 samples, 0.83%)</title><rect x="369.2" y="563.0" width="9.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="372.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (178 samples, 1.19%)</title><rect x="379.0" y="707.0" width="14.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (178 samples, 1.19%)</title><rect x="379.0" y="691.0" width="14.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="382.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (55 samples, 0.37%)</title><rect x="379.0" y="675.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="382.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (55 samples, 0.37%)</title><rect x="379.0" y="659.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (55 samples, 0.37%)</title><rect x="379.0" y="643.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (55 samples, 0.37%)</title><rect x="379.0" y="627.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (55 samples, 0.37%)</title><rect x="379.0" y="611.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.0" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (55 samples, 0.37%)</title><rect x="379.0" y="595.0" width="4.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="382.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (123 samples, 0.83%)</title><rect x="383.4" y="675.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="386.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (123 samples, 0.83%)</title><rect x="383.4" y="659.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="386.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (123 samples, 0.83%)</title><rect x="383.4" y="643.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="386.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (123 samples, 0.83%)</title><rect x="383.4" y="627.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (123 samples, 0.83%)</title><rect x="383.4" y="611.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="386.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (123 samples, 0.83%)</title><rect x="383.4" y="595.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (123 samples, 0.83%)</title><rect x="383.4" y="579.0" width="9.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="386.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.processWorkerExit (4 samples, 0.03%)</title><rect x="393.1" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="396.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.03%)</title><rect x="393.1" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="396.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.03%)</title><rect x="393.1" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.03%)</title><rect x="393.1" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.03%)</title><rect x="393.1" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="396.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.03%)</title><rect x="393.1" y="627.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="396.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.03%)</title><rect x="393.1" y="611.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="396.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (4 samples, 0.03%)</title><rect x="393.1" y="595.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="396.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$399/1148631027.run (6 samples, 0.04%)</title><rect x="393.4" y="707.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="396.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (6 samples, 0.04%)</title><rect x="393.4" y="691.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (6 samples, 0.04%)</title><rect x="393.4" y="675.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="396.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (6 samples, 0.04%)</title><rect x="393.4" y="659.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="396.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.04%)</title><rect x="393.4" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="396.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.04%)</title><rect x="393.4" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.04%)</title><rect x="393.4" y="611.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="396.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.04%)</title><rect x="393.4" y="595.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.04%)</title><rect x="393.4" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="396.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.04%)</title><rect x="393.4" y="563.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="396.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (6 samples, 0.04%)</title><rect x="393.4" y="547.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="396.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (6 samples, 0.04%)</title><rect x="393.4" y="531.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="396.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (6 samples, 0.04%)</title><rect x="393.4" y="515.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="396.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.04%)</title><rect x="393.4" y="499.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="396.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (6 samples, 0.04%)</title><rect x="393.4" y="483.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="396.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.04%)</title><rect x="393.4" y="467.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (4 samples, 0.03%)</title><rect x="393.4" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$142/558125001.apply (4 samples, 0.03%)</title><rect x="393.4" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="396.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (4 samples, 0.03%)</title><rect x="393.4" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="396.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (4 samples, 0.03%)</title><rect x="393.4" y="403.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="396.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (4 samples, 0.03%)</title><rect x="393.4" y="387.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="396.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (4 samples, 0.03%)</title><rect x="393.4" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="396.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.03%)</title><rect x="393.4" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$496/855121012.run (4 samples, 0.03%)</title><rect x="393.4" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="396.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (4 samples, 0.03%)</title><rect x="393.4" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="396.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (4 samples, 0.03%)</title><rect x="393.4" y="307.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="396.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.03%)</title><rect x="393.4" y="291.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="396.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.03%)</title><rect x="393.4" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="396.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.03%)</title><rect x="393.4" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="396.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4 samples, 0.03%)</title><rect x="393.4" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="396.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.03%)</title><rect x="393.4" y="227.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="396.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.run (4 samples, 0.03%)</title><rect x="393.4" y="211.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="396.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (4 samples, 0.03%)</title><rect x="393.4" y="195.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="396.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (4 samples, 0.03%)</title><rect x="393.4" y="179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="396.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (4 samples, 0.03%)</title><rect x="393.4" y="163.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="396.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (4 samples, 0.03%)</title><rect x="393.4" y="147.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="396.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$502/1814071412.run (4 samples, 0.03%)</title><rect x="393.4" y="131.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="396.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (4 samples, 0.03%)</title><rect x="393.4" y="115.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="396.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (4 samples, 0.03%)</title><rect x="393.4" y="99.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.4" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (4 samples, 0.03%)</title><rect x="393.4" y="83.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="396.4" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (4 samples, 0.03%)</title><rect x="393.4" y="67.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="396.4" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (4 samples, 0.03%)</title><rect x="393.4" y="51.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.4" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (4 samples, 0.03%)</title><rect x="393.4" y="35.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="396.4" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4,619 samples, 31.00%)</title><rect x="393.9" y="707.0" width="365.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="396.9" y="718.0">jdk/internal/net/http/common/SequentialScheduler$S..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4,619 samples, 31.00%)</title><rect x="393.9" y="691.0" width="365.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="396.9" y="702.0">jdk/internal/net/http/common/SequentialScheduler$C..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,224 samples, 14.92%)</title><rect x="393.9" y="675.0" width="176.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.9" y="686.0">jdk/internal/net/http/c..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.run (2,224 samples, 14.92%)</title><rect x="393.9" y="659.0" width="176.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="396.9" y="670.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,224 samples, 14.92%)</title><rect x="393.9" y="643.0" width="176.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="396.9" y="654.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1,781 samples, 11.95%)</title><rect x="393.9" y="627.0" width="141.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="396.9" y="638.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1,781 samples, 11.95%)</title><rect x="393.9" y="611.0" width="141.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="396.9" y="622.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1,781 samples, 11.95%)</title><rect x="393.9" y="595.0" width="141.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="396.9" y="606.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1,781 samples, 11.95%)</title><rect x="393.9" y="579.0" width="141.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="396.9" y="590.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1,781 samples, 11.95%)</title><rect x="393.9" y="563.0" width="141.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="396.9" y="574.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1,781 samples, 11.95%)</title><rect x="393.9" y="547.0" width="141.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.9" y="558.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1,775 samples, 11.91%)</title><rect x="393.9" y="531.0" width="140.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.9" y="542.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1,775 samples, 11.91%)</title><rect x="393.9" y="515.0" width="140.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.9" y="526.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,775 samples, 11.91%)</title><rect x="393.9" y="499.0" width="140.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="396.9" y="510.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,545 samples, 10.37%)</title><rect x="393.9" y="483.0" width="122.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="396.9" y="494.0">jdk.internal.ne..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (230 samples, 1.54%)</title><rect x="516.2" y="483.0" width="18.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.2" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (230 samples, 1.54%)</title><rect x="516.2" y="467.0" width="18.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="519.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (6 samples, 0.04%)</title><rect x="534.4" y="531.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="537.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (6 samples, 0.04%)</title><rect x="534.4" y="515.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="537.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (6 samples, 0.04%)</title><rect x="534.4" y="499.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="537.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (443 samples, 2.97%)</title><rect x="534.9" y="627.0" width="35.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="537.9" y="638.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (443 samples, 2.97%)</title><rect x="534.9" y="611.0" width="35.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="537.9" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (443 samples, 2.97%)</title><rect x="534.9" y="595.0" width="35.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="537.9" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (443 samples, 2.97%)</title><rect x="534.9" y="579.0" width="35.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="537.9" y="590.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (443 samples, 2.97%)</title><rect x="534.9" y="563.0" width="35.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.9" y="574.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (443 samples, 2.97%)</title><rect x="534.9" y="547.0" width="35.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="537.9" y="558.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (443 samples, 2.97%)</title><rect x="534.9" y="531.0" width="35.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.9" y="542.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (443 samples, 2.97%)</title><rect x="534.9" y="515.0" width="35.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.9" y="526.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (443 samples, 2.97%)</title><rect x="534.9" y="499.0" width="35.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="537.9" y="510.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (443 samples, 2.97%)</title><rect x="534.9" y="483.0" width="35.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="537.9" y="494.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (443 samples, 2.97%)</title><rect x="534.9" y="467.0" width="35.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="537.9" y="478.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (443 samples, 2.97%)</title><rect x="534.9" y="451.0" width="35.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="537.9" y="462.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (443 samples, 2.97%)</title><rect x="534.9" y="435.0" width="35.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.9" y="446.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (140 samples, 0.94%)</title><rect x="534.9" y="419.0" width="11.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="537.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$369/1508220952.apply (140 samples, 0.94%)</title><rect x="534.9" y="403.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="537.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (140 samples, 0.94%)</title><rect x="534.9" y="387.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (140 samples, 0.94%)</title><rect x="534.9" y="371.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="537.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (140 samples, 0.94%)</title><rect x="534.9" y="355.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="537.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (140 samples, 0.94%)</title><rect x="534.9" y="339.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="537.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Class (140 samples, 0.94%)</title><rect x="534.9" y="323.0" width="11.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="537.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (303 samples, 2.03%)</title><rect x="546.0" y="419.0" width="24.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="549.0" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (303 samples, 2.03%)</title><rect x="546.0" y="403.0" width="24.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.0" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$372/484910400.apply (303 samples, 2.03%)</title><rect x="546.0" y="387.0" width="24.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="549.0" y="398.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (303 samples, 2.03%)</title><rect x="546.0" y="371.0" width="24.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="549.0" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (303 samples, 2.03%)</title><rect x="546.0" y="355.0" width="24.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.0" y="366.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (303 samples, 2.03%)</title><rect x="546.0" y="339.0" width="24.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.0" y="350.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (303 samples, 2.03%)</title><rect x="546.0" y="323.0" width="24.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="549.0" y="334.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2,395 samples, 16.07%)</title><rect x="570.0" y="675.0" width="189.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.0" y="686.0">jdk/internal/net/http/com..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,395 samples, 16.07%)</title><rect x="570.0" y="659.0" width="189.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="573.0" y="670.0">jdk/internal/net/http/com..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,395 samples, 16.07%)</title><rect x="570.0" y="643.0" width="189.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.0" y="654.0">jdk/internal/net/http/com..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.run (2,395 samples, 16.07%)</title><rect x="570.0" y="627.0" width="189.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.0" y="638.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,395 samples, 16.07%)</title><rect x="570.0" y="611.0" width="189.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.0" y="622.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2,390 samples, 16.04%)</title><rect x="570.0" y="595.0" width="189.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.0" y="606.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (2,390 samples, 16.04%)</title><rect x="570.0" y="579.0" width="189.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.0" y="590.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (2,390 samples, 16.04%)</title><rect x="570.0" y="563.0" width="189.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.0" y="574.0">jdk/internal/net/http/Res..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$502/1814071412.run (2,390 samples, 16.04%)</title><rect x="570.0" y="547.0" width="189.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.0" y="558.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (2,390 samples, 16.04%)</title><rect x="570.0" y="531.0" width="189.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.0" y="542.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (2,390 samples, 16.04%)</title><rect x="570.0" y="515.0" width="189.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="573.0" y="526.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2,390 samples, 16.04%)</title><rect x="570.0" y="499.0" width="189.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.0" y="510.0">jdk/internal/net/http/Con..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2,390 samples, 16.04%)</title><rect x="570.0" y="483.0" width="189.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.0" y="494.0">jdk/internal/net/http/Con..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (149 samples, 1.00%)</title><rect x="570.0" y="467.0" width="11.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="573.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (2,241 samples, 15.04%)</title><rect x="581.8" y="467.0" width="177.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.8" y="478.0">jdk/internal/net/http/C..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2,241 samples, 15.04%)</title><rect x="581.8" y="451.0" width="177.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.8" y="462.0">jdk/internal/net/http/S..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (427 samples, 2.87%)</title><rect x="581.8" y="435.0" width="33.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.8" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (427 samples, 2.87%)</title><rect x="581.8" y="419.0" width="33.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.8" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (427 samples, 2.87%)</title><rect x="581.8" y="403.0" width="33.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="584.8" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (427 samples, 2.87%)</title><rect x="581.8" y="387.0" width="33.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="584.8" y="398.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (427 samples, 2.87%)</title><rect x="581.8" y="371.0" width="33.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="584.8" y="382.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (230 samples, 1.54%)</title><rect x="581.8" y="355.0" width="18.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="584.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (197 samples, 1.32%)</title><rect x="600.0" y="355.0" width="15.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object (197 samples, 1.32%)</title><rect x="600.0" y="339.0" width="15.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="603.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1,814 samples, 12.17%)</title><rect x="615.6" y="435.0" width="143.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="618.6" y="446.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1,814 samples, 12.17%)</title><rect x="615.6" y="419.0" width="143.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="618.6" y="430.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1,814 samples, 12.17%)</title><rect x="615.6" y="403.0" width="143.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="618.6" y="414.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1,814 samples, 12.17%)</title><rect x="615.6" y="387.0" width="143.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="618.6" y="398.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,814 samples, 12.17%)</title><rect x="615.6" y="371.0" width="143.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="618.6" y="382.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,604 samples, 10.76%)</title><rect x="615.6" y="355.0" width="127.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="618.6" y="366.0">jdk.internal.net..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (210 samples, 1.41%)</title><rect x="742.6" y="355.0" width="16.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object (210 samples, 1.41%)</title><rect x="742.6" y="339.0" width="16.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="745.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (5 samples, 0.03%)</title><rect x="759.2" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="762.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (5 samples, 0.03%)</title><rect x="759.2" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (5 samples, 0.03%)</title><rect x="759.2" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="762.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (5 samples, 0.03%)</title><rect x="759.2" y="547.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="762.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.03%)</title><rect x="759.2" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="762.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.03%)</title><rect x="759.2" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 0.03%)</title><rect x="759.2" y="499.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="762.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.03%)</title><rect x="759.2" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.03%)</title><rect x="759.2" y="467.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="762.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (5 samples, 0.03%)</title><rect x="759.2" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 0.03%)</title><rect x="759.2" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5 samples, 0.03%)</title><rect x="759.2" y="419.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.03%)</title><rect x="759.2" y="403.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="762.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (5,140 samples, 34.49%)</title><rect x="759.6" y="755.0" width="407.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="762.6" y="766.0">jdk/internal/net/http/HttpClientImpl$SelectorManager.run</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (3,625 samples, 24.33%)</title><rect x="759.7" y="739.0" width="287.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="762.7" y="750.0">jdk.internal.net.http.HttpClientImpl$Se..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (108 samples, 0.72%)</title><rect x="1046.8" y="739.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (108 samples, 0.72%)</title><rect x="1046.8" y="723.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1049.8" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (108 samples, 0.72%)</title><rect x="1046.8" y="707.0" width="8.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1049.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (995 samples, 6.68%)</title><rect x="1055.3" y="739.0" width="78.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1058.3" y="750.0">jdk/inter..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (995 samples, 6.68%)</title><rect x="1055.3" y="723.0" width="78.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1058.3" y="734.0">jdk.inter..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (404 samples, 2.71%)</title><rect x="1134.1" y="739.0" width="32.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1137.1" y="750.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (404 samples, 2.71%)</title><rect x="1134.1" y="723.0" width="32.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1137.1" y="734.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (404 samples, 2.71%)</title><rect x="1134.1" y="707.0" width="32.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1137.1" y="718.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (404 samples, 2.71%)</title><rect x="1134.1" y="691.0" width="32.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.1" y="702.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (404 samples, 2.71%)</title><rect x="1134.1" y="675.0" width="32.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1137.1" y="686.0">su..</text>
</g>
<g>
<title>java.lang.Object (404 samples, 2.71%)</title><rect x="1134.1" y="659.0" width="32.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1137.1" y="670.0">ja..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (7 samples, 0.05%)</title><rect x="1166.1" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1169.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (7 samples, 0.05%)</title><rect x="1166.1" y="723.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1169.1" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (7 samples, 0.05%)</title><rect x="1166.1" y="707.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1169.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (7 samples, 0.05%)</title><rect x="1166.1" y="691.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1169.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (7 samples, 0.05%)</title><rect x="1166.1" y="675.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1169.1" y="686.0"></text>
</g>
<g>
<title>java.lang.Object (7 samples, 0.05%)</title><rect x="1166.1" y="659.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1169.1" y="670.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (295 samples, 1.98%)</title><rect x="1166.6" y="755.0" width="23.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1169.6" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (295 samples, 1.98%)</title><rect x="1166.6" y="739.0" width="23.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1169.6" y="750.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (292 samples, 1.96%)</title><rect x="1166.9" y="723.0" width="23.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1169.9" y="734.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (292 samples, 1.96%)</title><rect x="1166.9" y="707.0" width="23.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1169.9" y="718.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (292 samples, 1.96%)</title><rect x="1166.9" y="691.0" width="23.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1169.9" y="702.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (292 samples, 1.96%)</title><rect x="1166.9" y="675.0" width="23.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1169.9" y="686.0">o..</text>
</g>
<g>
<title>RequestHandler1_handleEntityRequest.handleRequest (292 samples, 1.96%)</title><rect x="1166.9" y="659.0" width="23.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1169.9" y="670.0">R..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.handleEntityRequest (292 samples, 1.96%)</title><rect x="1166.9" y="643.0" width="23.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1169.9" y="654.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.processRequest (141 samples, 0.95%)</title><rect x="1166.9" y="627.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1169.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (141 samples, 0.95%)</title><rect x="1166.9" y="611.0" width="11.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1169.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (141 samples, 0.95%)</title><rect x="1166.9" y="595.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1169.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (141 samples, 0.95%)</title><rect x="1166.9" y="579.0" width="11.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1169.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (141 samples, 0.95%)</title><rect x="1166.9" y="563.0" width="11.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1169.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (141 samples, 0.95%)</title><rect x="1166.9" y="547.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1169.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (141 samples, 0.95%)</title><rect x="1166.9" y="531.0" width="11.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1169.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (141 samples, 0.95%)</title><rect x="1166.9" y="515.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1169.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (141 samples, 0.95%)</title><rect x="1166.9" y="499.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1169.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (141 samples, 0.95%)</title><rect x="1166.9" y="483.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1169.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (141 samples, 0.95%)</title><rect x="1166.9" y="467.0" width="11.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1169.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (141 samples, 0.95%)</title><rect x="1166.9" y="451.0" width="11.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1169.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.sendToReplicas (151 samples, 1.01%)</title><rect x="1178.0" y="627.0" width="12.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1181.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.processRequest (151 samples, 1.01%)</title><rect x="1178.0" y="611.0" width="12.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1181.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (151 samples, 1.01%)</title><rect x="1178.0" y="595.0" width="12.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1181.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (151 samples, 1.01%)</title><rect x="1178.0" y="579.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1181.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (151 samples, 1.01%)</title><rect x="1178.0" y="563.0" width="12.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1181.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (151 samples, 1.01%)</title><rect x="1178.0" y="547.0" width="12.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1181.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (151 samples, 1.01%)</title><rect x="1178.0" y="531.0" width="12.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1181.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (151 samples, 1.01%)</title><rect x="1178.0" y="515.0" width="12.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1181.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (151 samples, 1.01%)</title><rect x="1178.0" y="499.0" width="12.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1181.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (151 samples, 1.01%)</title><rect x="1178.0" y="483.0" width="12.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1181.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (151 samples, 1.01%)</title><rect x="1178.0" y="467.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1181.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (151 samples, 1.01%)</title><rect x="1178.0" y="451.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1181.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (151 samples, 1.01%)</title><rect x="1178.0" y="435.0" width="12.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1181.0" y="446.0"></text>
</g>
</g>
</svg>
