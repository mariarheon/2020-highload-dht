<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="310" onload="init(evt)" viewBox="0 0 1200 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="293"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="293"> </text>
<g id="frames">
<g>
<title>all (1,437 samples, 100.00%)</title><rect x="10.0" y="259.0" width="1180.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.0" y="270.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=240091] (85 samples, 5.92%)</title><rect x="10.0" y="243.0" width="69.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="13.0" y="254.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (85 samples, 5.92%)</title><rect x="10.0" y="227.0" width="69.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="238.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.process (85 samples, 5.92%)</title><rect x="10.0" y="211.0" width="69.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="222.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (85 samples, 5.92%)</title><rect x="10.0" y="195.0" width="69.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="206.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (85 samples, 5.92%)</title><rect x="10.0" y="179.0" width="69.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="190.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (24 samples, 1.67%)</title><rect x="10.0" y="163.0" width="19.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (24 samples, 1.67%)</title><rect x="10.0" y="147.0" width="19.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (8 samples, 0.56%)</title><rect x="10.0" y="131.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5 samples, 0.35%)</title><rect x="10.0" y="115.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.35%)</title><rect x="10.0" y="99.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.35%)</title><rect x="10.0" y="83.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.35%)</title><rect x="10.0" y="67.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.28%)</title><rect x="10.0" y="51.0" width="3.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="13.0" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="13.3" y="51.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.3" y="62.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.07%)</title><rect x="13.3" y="35.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="16.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (3 samples, 0.21%)</title><rect x="14.1" y="115.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.1" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.21%)</title><rect x="14.1" y="99.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.1" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.21%)</title><rect x="14.1" y="83.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.get$Lambda (3 samples, 0.21%)</title><rect x="14.1" y="67.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.1" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$74 (3 samples, 0.21%)</title><rect x="14.1" y="51.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="17.1" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (16 samples, 1.11%)</title><rect x="16.6" y="131.0" width="13.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 1.11%)</title><rect x="16.6" y="115.0" width="13.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 1.11%)</title><rect x="16.6" y="99.0" width="13.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.70%)</title><rect x="16.6" y="83.0" width="8.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="19.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.42%)</title><rect x="24.8" y="83.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.8" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.42%)</title><rect x="24.8" y="67.0" width="4.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="27.8" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (40 samples, 2.78%)</title><rect x="29.7" y="163.0" width="32.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.7" y="174.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (8 samples, 0.56%)</title><rect x="29.7" y="147.0" width="6.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="32.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (15 samples, 1.04%)</title><rect x="36.3" y="147.0" width="12.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.3" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 1.04%)</title><rect x="36.3" y="131.0" width="12.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="39.3" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 1.18%)</title><rect x="48.6" y="147.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.6" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 1.18%)</title><rect x="48.6" y="131.0" width="14.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.6" y="142.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.63%)</title><rect x="48.6" y="115.0" width="7.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="51.6" y="126.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.21%)</title><rect x="56.0" y="115.0" width="2.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="59.0" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.35%)</title><rect x="58.4" y="115.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.35%)</title><rect x="58.4" y="99.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.35%)</title><rect x="58.4" y="83.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="61.4" y="94.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.35%)</title><rect x="58.4" y="67.0" width="4.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="61.4" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 1.46%)</title><rect x="62.6" y="163.0" width="17.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="65.6" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 1.46%)</title><rect x="62.6" y="147.0" width="17.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.6" y="158.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.56%)</title><rect x="62.6" y="131.0" width="6.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="65.6" y="142.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.21%)</title><rect x="69.1" y="131.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="72.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.70%)</title><rect x="71.6" y="131.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.70%)</title><rect x="71.6" y="115.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.70%)</title><rect x="71.6" y="99.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.6" y="110.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.70%)</title><rect x="71.6" y="83.0" width="8.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="74.6" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=240092] (89 samples, 6.19%)</title><rect x="79.8" y="243.0" width="73.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="82.8" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (89 samples, 6.19%)</title><rect x="79.8" y="227.0" width="73.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.8" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (89 samples, 6.19%)</title><rect x="79.8" y="211.0" width="73.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.8" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (89 samples, 6.19%)</title><rect x="79.8" y="195.0" width="73.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.8" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (89 samples, 6.19%)</title><rect x="79.8" y="179.0" width="73.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.8" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (16 samples, 1.11%)</title><rect x="79.8" y="163.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (16 samples, 1.11%)</title><rect x="79.8" y="147.0" width="13.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.8" y="158.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (11 samples, 0.77%)</title><rect x="79.8" y="131.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="82.8" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (8 samples, 0.56%)</title><rect x="79.8" y="115.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.56%)</title><rect x="79.8" y="99.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.8" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.56%)</title><rect x="79.8" y="83.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.8" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.56%)</title><rect x="79.8" y="67.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.8" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.56%)</title><rect x="79.8" y="51.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.8" y="62.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.56%)</title><rect x="79.8" y="35.0" width="6.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="82.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (3 samples, 0.21%)</title><rect x="86.4" y="115.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="89.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.21%)</title><rect x="86.4" y="99.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.4" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.21%)</title><rect x="86.4" y="83.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.get$Lambda (3 samples, 0.21%)</title><rect x="86.4" y="67.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.4" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$74 (3 samples, 0.21%)</title><rect x="86.4" y="51.0" width="2.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="89.4" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.35%)</title><rect x="88.8" y="131.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="91.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.35%)</title><rect x="88.8" y="115.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.35%)</title><rect x="88.8" y="99.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.8" y="110.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.07%)</title><rect x="88.8" y="83.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="91.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.28%)</title><rect x="89.7" y="83.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.7" y="94.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="89.7" y="67.0" width="3.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="92.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (50 samples, 3.48%)</title><rect x="92.9" y="163.0" width="41.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.9" y="174.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (16 samples, 1.11%)</title><rect x="92.9" y="147.0" width="13.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="95.9" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (16 samples, 1.11%)</title><rect x="106.1" y="147.0" width="13.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.1" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (16 samples, 1.11%)</title><rect x="106.1" y="131.0" width="13.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="109.1" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 1.25%)</title><rect x="119.2" y="147.0" width="14.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="122.2" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 1.25%)</title><rect x="119.2" y="131.0" width="14.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="122.2" y="142.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.70%)</title><rect x="119.2" y="115.0" width="8.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="122.2" y="126.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.35%)</title><rect x="127.4" y="115.0" width="4.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="130.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.21%)</title><rect x="131.5" y="115.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.21%)</title><rect x="131.5" y="99.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.21%)</title><rect x="131.5" y="83.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.5" y="94.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.21%)</title><rect x="131.5" y="67.0" width="2.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="134.5" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 1.60%)</title><rect x="134.0" y="163.0" width="18.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.0" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 1.60%)</title><rect x="134.0" y="147.0" width="18.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.0" y="158.0"></text>
</g>
<g>
<title>char[] (6 samples, 0.42%)</title><rect x="134.0" y="131.0" width="4.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="137.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.21%)</title><rect x="138.9" y="131.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="141.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.97%)</title><rect x="141.4" y="131.0" width="11.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.97%)</title><rect x="141.4" y="115.0" width="11.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (14 samples, 0.97%)</title><rect x="141.4" y="99.0" width="11.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="144.4" y="110.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.97%)</title><rect x="141.4" y="83.0" width="11.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="144.4" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=240093] (90 samples, 6.26%)</title><rect x="152.9" y="243.0" width="73.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="155.9" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (90 samples, 6.26%)</title><rect x="152.9" y="227.0" width="73.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="155.9" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.35%)</title><rect x="152.9" y="211.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.9" y="222.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (5 samples, 0.35%)</title><rect x="152.9" y="195.0" width="4.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="155.9" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (85 samples, 5.92%)</title><rect x="157.0" y="211.0" width="69.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.0" y="222.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (85 samples, 5.92%)</title><rect x="157.0" y="195.0" width="69.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.0" y="206.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (85 samples, 5.92%)</title><rect x="157.0" y="179.0" width="69.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.0" y="190.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (21 samples, 1.46%)</title><rect x="157.0" y="163.0" width="17.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="160.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (21 samples, 1.46%)</title><rect x="157.0" y="147.0" width="17.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.0" y="158.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (14 samples, 0.97%)</title><rect x="157.0" y="131.0" width="11.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="160.0" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (10 samples, 0.70%)</title><rect x="157.0" y="115.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="160.0" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.70%)</title><rect x="157.0" y="99.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="160.0" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.70%)</title><rect x="157.0" y="83.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.0" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.70%)</title><rect x="157.0" y="67.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="160.0" y="78.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.28%)</title><rect x="157.0" y="51.0" width="3.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="160.0" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.42%)</title><rect x="160.3" y="51.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.3" y="62.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.42%)</title><rect x="160.3" y="35.0" width="4.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="163.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (4 samples, 0.28%)</title><rect x="165.2" y="115.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="168.2" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.28%)</title><rect x="165.2" y="99.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.2" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.28%)</title><rect x="165.2" y="83.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="168.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.get$Lambda (4 samples, 0.28%)</title><rect x="165.2" y="67.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="168.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$74 (4 samples, 0.28%)</title><rect x="165.2" y="51.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="168.2" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 0.49%)</title><rect x="168.5" y="131.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.49%)</title><rect x="168.5" y="115.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="171.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.49%)</title><rect x="168.5" y="99.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.21%)</title><rect x="168.5" y="83.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="171.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.28%)</title><rect x="170.9" y="83.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="173.9" y="94.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="170.9" y="67.0" width="3.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="173.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (43 samples, 2.99%)</title><rect x="174.2" y="163.0" width="35.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="177.2" y="174.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (5 samples, 0.35%)</title><rect x="174.2" y="147.0" width="4.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="177.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (19 samples, 1.32%)</title><rect x="178.3" y="147.0" width="15.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.3" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (19 samples, 1.32%)</title><rect x="178.3" y="131.0" width="15.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="181.3" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 1.32%)</title><rect x="193.9" y="147.0" width="15.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="196.9" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 1.32%)</title><rect x="193.9" y="131.0" width="15.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="196.9" y="142.0"></text>
</g>
<g>
<title>char[] (12 samples, 0.84%)</title><rect x="193.9" y="115.0" width="9.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="196.9" y="126.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.14%)</title><rect x="203.8" y="115.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="206.8" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.35%)</title><rect x="205.4" y="115.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.35%)</title><rect x="205.4" y="99.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.35%)</title><rect x="205.4" y="83.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.4" y="94.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.35%)</title><rect x="205.4" y="67.0" width="4.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="208.4" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 1.46%)</title><rect x="209.5" y="163.0" width="17.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="212.5" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 1.46%)</title><rect x="209.5" y="147.0" width="17.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.5" y="158.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.63%)</title><rect x="209.5" y="131.0" width="7.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="212.5" y="142.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.14%)</title><rect x="216.9" y="131.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="219.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.70%)</title><rect x="218.6" y="131.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="221.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.70%)</title><rect x="218.6" y="115.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="221.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.70%)</title><rect x="218.6" y="99.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.6" y="110.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.70%)</title><rect x="218.6" y="83.0" width="8.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="221.6" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=240094] (90 samples, 6.26%)</title><rect x="226.8" y="243.0" width="73.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="229.8" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (90 samples, 6.26%)</title><rect x="226.8" y="227.0" width="73.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="229.8" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 0.56%)</title><rect x="226.8" y="211.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="229.8" y="222.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (8 samples, 0.56%)</title><rect x="226.8" y="195.0" width="6.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="229.8" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (82 samples, 5.71%)</title><rect x="233.4" y="211.0" width="67.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.4" y="222.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (82 samples, 5.71%)</title><rect x="233.4" y="195.0" width="67.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="236.4" y="206.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (82 samples, 5.71%)</title><rect x="233.4" y="179.0" width="67.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="236.4" y="190.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (21 samples, 1.46%)</title><rect x="233.4" y="163.0" width="17.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="236.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (21 samples, 1.46%)</title><rect x="233.4" y="147.0" width="17.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="236.4" y="158.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (10 samples, 0.70%)</title><rect x="233.4" y="131.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="236.4" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 0.42%)</title><rect x="233.4" y="115.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="236.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.42%)</title><rect x="233.4" y="99.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.4" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.42%)</title><rect x="233.4" y="83.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="236.4" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.42%)</title><rect x="233.4" y="67.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.4" y="78.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.28%)</title><rect x="233.4" y="51.0" width="3.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="236.4" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.14%)</title><rect x="236.6" y="51.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.6" y="62.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.14%)</title><rect x="236.6" y="35.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="239.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (4 samples, 0.28%)</title><rect x="238.3" y="115.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.3" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.28%)</title><rect x="238.3" y="99.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="241.3" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.28%)</title><rect x="238.3" y="83.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.get$Lambda (4 samples, 0.28%)</title><rect x="238.3" y="67.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="241.3" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$74 (4 samples, 0.28%)</title><rect x="238.3" y="51.0" width="3.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="241.3" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (11 samples, 0.77%)</title><rect x="241.6" y="131.0" width="9.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="244.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.77%)</title><rect x="241.6" y="115.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="244.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.77%)</title><rect x="241.6" y="99.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="244.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.35%)</title><rect x="241.6" y="83.0" width="4.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="244.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.42%)</title><rect x="245.7" y="83.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="248.7" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.42%)</title><rect x="245.7" y="67.0" width="4.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="248.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (43 samples, 2.99%)</title><rect x="250.6" y="163.0" width="35.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="253.6" y="174.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (7 samples, 0.49%)</title><rect x="250.6" y="147.0" width="5.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="253.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7 samples, 0.49%)</title><rect x="256.3" y="147.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.3" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.49%)</title><rect x="256.3" y="131.0" width="5.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="259.3" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (29 samples, 2.02%)</title><rect x="262.1" y="147.0" width="23.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="265.1" y="158.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (29 samples, 2.02%)</title><rect x="262.1" y="131.0" width="23.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="265.1" y="142.0">o..</text>
</g>
<g>
<title>char[] (15 samples, 1.04%)</title><rect x="262.1" y="115.0" width="12.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="265.1" y="126.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.35%)</title><rect x="274.4" y="115.0" width="4.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="277.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.63%)</title><rect x="278.5" y="115.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="281.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.63%)</title><rect x="278.5" y="99.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.63%)</title><rect x="278.5" y="83.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="281.5" y="94.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.63%)</title><rect x="278.5" y="67.0" width="7.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="281.5" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 1.25%)</title><rect x="285.9" y="163.0" width="14.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="288.9" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 1.25%)</title><rect x="285.9" y="147.0" width="14.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="288.9" y="158.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.70%)</title><rect x="285.9" y="131.0" width="8.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="288.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.14%)</title><rect x="294.1" y="131.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="297.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.42%)</title><rect x="295.8" y="131.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.42%)</title><rect x="295.8" y="115.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.42%)</title><rect x="295.8" y="99.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.8" y="110.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.42%)</title><rect x="295.8" y="83.0" width="4.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="298.8" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=240095] (90 samples, 6.26%)</title><rect x="300.7" y="243.0" width="73.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="303.7" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (90 samples, 6.26%)</title><rect x="300.7" y="227.0" width="73.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="303.7" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (90 samples, 6.26%)</title><rect x="300.7" y="211.0" width="73.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="303.7" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (90 samples, 6.26%)</title><rect x="300.7" y="195.0" width="73.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="303.7" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (90 samples, 6.26%)</title><rect x="300.7" y="179.0" width="73.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="303.7" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (25 samples, 1.74%)</title><rect x="300.7" y="163.0" width="20.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="303.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (25 samples, 1.74%)</title><rect x="300.7" y="147.0" width="20.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="303.7" y="158.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (12 samples, 0.84%)</title><rect x="300.7" y="131.0" width="9.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="303.7" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (9 samples, 0.63%)</title><rect x="300.7" y="115.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="303.7" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.63%)</title><rect x="300.7" y="99.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="303.7" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.63%)</title><rect x="300.7" y="83.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="303.7" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.63%)</title><rect x="300.7" y="67.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.7" y="78.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.28%)</title><rect x="300.7" y="51.0" width="3.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="303.7" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.35%)</title><rect x="304.0" y="51.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="307.0" y="62.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.35%)</title><rect x="304.0" y="35.0" width="4.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="307.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (3 samples, 0.21%)</title><rect x="308.1" y="115.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="311.1" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.21%)</title><rect x="308.1" y="99.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.1" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.21%)</title><rect x="308.1" y="83.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.get$Lambda (3 samples, 0.21%)</title><rect x="308.1" y="67.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.1" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$74 (3 samples, 0.21%)</title><rect x="308.1" y="51.0" width="2.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="311.1" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (13 samples, 0.90%)</title><rect x="310.5" y="131.0" width="10.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="313.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.90%)</title><rect x="310.5" y="115.0" width="10.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="313.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.90%)</title><rect x="310.5" y="99.0" width="10.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.49%)</title><rect x="310.5" y="83.0" width="5.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="313.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.42%)</title><rect x="316.3" y="83.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="319.3" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.42%)</title><rect x="316.3" y="67.0" width="4.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="319.3" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (41 samples, 2.85%)</title><rect x="321.2" y="163.0" width="33.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.2" y="174.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (3 samples, 0.21%)</title><rect x="321.2" y="147.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="324.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (18 samples, 1.25%)</title><rect x="323.7" y="147.0" width="14.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="326.7" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (18 samples, 1.25%)</title><rect x="323.7" y="131.0" width="14.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="326.7" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 1.39%)</title><rect x="338.5" y="147.0" width="16.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="341.5" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 1.39%)</title><rect x="338.5" y="131.0" width="16.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.5" y="142.0"></text>
</g>
<g>
<title>char[] (13 samples, 0.90%)</title><rect x="338.5" y="115.0" width="10.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="341.5" y="126.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.21%)</title><rect x="349.1" y="115.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="352.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.28%)</title><rect x="351.6" y="115.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.6" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.28%)</title><rect x="351.6" y="99.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="354.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.28%)</title><rect x="351.6" y="83.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="354.6" y="94.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="351.6" y="67.0" width="3.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="354.6" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 1.67%)</title><rect x="354.9" y="163.0" width="19.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="357.9" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 1.67%)</title><rect x="354.9" y="147.0" width="19.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="357.9" y="158.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.77%)</title><rect x="354.9" y="131.0" width="9.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="357.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.35%)</title><rect x="363.9" y="131.0" width="4.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="366.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.56%)</title><rect x="368.0" y="131.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.56%)</title><rect x="368.0" y="115.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="371.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.56%)</title><rect x="368.0" y="99.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.0" y="110.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.56%)</title><rect x="368.0" y="83.0" width="6.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="371.0" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=240096] (88 samples, 6.12%)</title><rect x="374.6" y="243.0" width="72.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="377.6" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (88 samples, 6.12%)</title><rect x="374.6" y="227.0" width="72.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="377.6" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 0.63%)</title><rect x="374.6" y="211.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="377.6" y="222.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (9 samples, 0.63%)</title><rect x="374.6" y="195.0" width="7.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="377.6" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (79 samples, 5.50%)</title><rect x="382.0" y="211.0" width="64.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="385.0" y="222.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (79 samples, 5.50%)</title><rect x="382.0" y="195.0" width="64.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="385.0" y="206.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (79 samples, 5.50%)</title><rect x="382.0" y="179.0" width="64.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="385.0" y="190.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (19 samples, 1.32%)</title><rect x="382.0" y="163.0" width="15.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (19 samples, 1.32%)</title><rect x="382.0" y="147.0" width="15.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="385.0" y="158.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (10 samples, 0.70%)</title><rect x="382.0" y="131.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.0" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 0.42%)</title><rect x="382.0" y="115.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="385.0" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.42%)</title><rect x="382.0" y="99.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="385.0" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.42%)</title><rect x="382.0" y="83.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="385.0" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.42%)</title><rect x="382.0" y="67.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="385.0" y="78.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.28%)</title><rect x="382.0" y="51.0" width="3.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="385.0" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.14%)</title><rect x="385.3" y="51.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="388.3" y="62.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.14%)</title><rect x="385.3" y="35.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="388.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (4 samples, 0.28%)</title><rect x="386.9" y="115.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="389.9" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.28%)</title><rect x="386.9" y="99.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.9" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.28%)</title><rect x="386.9" y="83.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="389.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.get$Lambda (4 samples, 0.28%)</title><rect x="386.9" y="67.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="389.9" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$74 (4 samples, 0.28%)</title><rect x="386.9" y="51.0" width="3.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="389.9" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9 samples, 0.63%)</title><rect x="390.2" y="131.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="393.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.63%)</title><rect x="390.2" y="115.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="393.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.63%)</title><rect x="390.2" y="99.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="393.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.35%)</title><rect x="390.2" y="83.0" width="4.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="393.2" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.28%)</title><rect x="394.3" y="83.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="397.3" y="94.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="394.3" y="67.0" width="3.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="397.3" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (41 samples, 2.85%)</title><rect x="397.6" y="163.0" width="33.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.6" y="174.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (10 samples, 0.70%)</title><rect x="397.6" y="147.0" width="8.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="400.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (13 samples, 0.90%)</title><rect x="405.8" y="147.0" width="10.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="408.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (13 samples, 0.90%)</title><rect x="405.8" y="131.0" width="10.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="408.8" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 1.25%)</title><rect x="416.5" y="147.0" width="14.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="419.5" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 1.25%)</title><rect x="416.5" y="131.0" width="14.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.5" y="142.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.63%)</title><rect x="416.5" y="115.0" width="7.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="419.5" y="126.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.21%)</title><rect x="423.9" y="115.0" width="2.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="426.9" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.42%)</title><rect x="426.3" y="115.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="429.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.42%)</title><rect x="426.3" y="99.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.42%)</title><rect x="426.3" y="83.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="429.3" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.42%)</title><rect x="426.3" y="67.0" width="5.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="429.3" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 1.32%)</title><rect x="431.3" y="163.0" width="15.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="434.3" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 1.32%)</title><rect x="431.3" y="147.0" width="15.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="434.3" y="158.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.63%)</title><rect x="431.3" y="131.0" width="7.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="434.3" y="142.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.42%)</title><rect x="438.6" y="131.0" width="5.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="441.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.28%)</title><rect x="443.6" y="131.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="446.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.28%)</title><rect x="443.6" y="115.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="446.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.28%)</title><rect x="443.6" y="99.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="446.6" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="443.6" y="83.0" width="3.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="446.6" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=240097] (88 samples, 6.12%)</title><rect x="446.9" y="243.0" width="72.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="449.9" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (88 samples, 6.12%)</title><rect x="446.9" y="227.0" width="72.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.9" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (88 samples, 6.12%)</title><rect x="446.9" y="211.0" width="72.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="449.9" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (88 samples, 6.12%)</title><rect x="446.9" y="195.0" width="72.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="449.9" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (88 samples, 6.12%)</title><rect x="446.9" y="179.0" width="72.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="449.9" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (26 samples, 1.81%)</title><rect x="446.9" y="163.0" width="21.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.9" y="174.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (26 samples, 1.81%)</title><rect x="446.9" y="147.0" width="21.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="449.9" y="158.0">o..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (18 samples, 1.25%)</title><rect x="446.9" y="131.0" width="14.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.9" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (13 samples, 0.90%)</title><rect x="446.9" y="115.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.90%)</title><rect x="446.9" y="99.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="449.9" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.90%)</title><rect x="446.9" y="83.0" width="10.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="449.9" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.90%)</title><rect x="446.9" y="67.0" width="10.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="449.9" y="78.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.28%)</title><rect x="446.9" y="51.0" width="3.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="449.9" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.63%)</title><rect x="450.1" y="51.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.1" y="62.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.63%)</title><rect x="450.1" y="35.0" width="7.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="453.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (5 samples, 0.35%)</title><rect x="457.5" y="115.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="460.5" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.35%)</title><rect x="457.5" y="99.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="460.5" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.35%)</title><rect x="457.5" y="83.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.get$Lambda (5 samples, 0.35%)</title><rect x="457.5" y="67.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.5" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$74 (5 samples, 0.35%)</title><rect x="457.5" y="51.0" width="4.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="460.5" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.56%)</title><rect x="461.6" y="131.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="464.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.56%)</title><rect x="461.6" y="115.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="464.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.56%)</title><rect x="461.6" y="99.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.14%)</title><rect x="461.6" y="83.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="464.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.42%)</title><rect x="463.3" y="83.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="466.3" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.42%)</title><rect x="463.3" y="67.0" width="4.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="466.3" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (39 samples, 2.71%)</title><rect x="468.2" y="163.0" width="32.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.2" y="174.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (9 samples, 0.63%)</title><rect x="468.2" y="147.0" width="7.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="471.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (15 samples, 1.04%)</title><rect x="475.6" y="147.0" width="12.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="478.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 1.04%)</title><rect x="475.6" y="131.0" width="12.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="478.6" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 1.04%)</title><rect x="487.9" y="147.0" width="12.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.9" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 1.04%)</title><rect x="487.9" y="131.0" width="12.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.9" y="142.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.56%)</title><rect x="487.9" y="115.0" width="6.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="490.9" y="126.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.14%)</title><rect x="494.5" y="115.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="497.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.35%)</title><rect x="496.1" y="115.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="499.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.35%)</title><rect x="496.1" y="99.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.35%)</title><rect x="496.1" y="83.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.1" y="94.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.35%)</title><rect x="496.1" y="67.0" width="4.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="499.1" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 1.60%)</title><rect x="500.2" y="163.0" width="18.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="503.2" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 1.60%)</title><rect x="500.2" y="147.0" width="18.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="503.2" y="158.0"></text>
</g>
<g>
<title>char[] (12 samples, 0.84%)</title><rect x="500.2" y="131.0" width="9.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="503.2" y="142.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.42%)</title><rect x="510.1" y="131.0" width="4.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="513.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.35%)</title><rect x="515.0" y="131.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="518.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.35%)</title><rect x="515.0" y="115.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.35%)</title><rect x="515.0" y="99.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.0" y="110.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.35%)</title><rect x="515.0" y="83.0" width="4.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="518.0" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=240098] (93 samples, 6.47%)</title><rect x="519.1" y="243.0" width="76.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="522.1" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (93 samples, 6.47%)</title><rect x="519.1" y="227.0" width="76.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="522.1" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.14%)</title><rect x="519.1" y="211.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.1" y="222.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2 samples, 0.14%)</title><rect x="519.1" y="195.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="522.1" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (91 samples, 6.33%)</title><rect x="520.8" y="211.0" width="74.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="523.8" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (91 samples, 6.33%)</title><rect x="520.8" y="195.0" width="74.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="523.8" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (91 samples, 6.33%)</title><rect x="520.8" y="179.0" width="74.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="523.8" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (25 samples, 1.74%)</title><rect x="520.8" y="163.0" width="20.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="523.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (25 samples, 1.74%)</title><rect x="520.8" y="147.0" width="20.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="523.8" y="158.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (12 samples, 0.84%)</title><rect x="520.8" y="131.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="523.8" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 0.42%)</title><rect x="520.8" y="115.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="523.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.42%)</title><rect x="520.8" y="99.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="523.8" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.42%)</title><rect x="520.8" y="83.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="523.8" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.42%)</title><rect x="520.8" y="67.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="523.8" y="78.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.14%)</title><rect x="520.8" y="51.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="523.8" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.28%)</title><rect x="522.4" y="51.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="525.4" y="62.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="522.4" y="35.0" width="3.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="525.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (6 samples, 0.42%)</title><rect x="525.7" y="115.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="528.7" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.42%)</title><rect x="525.7" y="99.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="528.7" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.42%)</title><rect x="525.7" y="83.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.get$Lambda (6 samples, 0.42%)</title><rect x="525.7" y="67.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="528.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$74 (6 samples, 0.42%)</title><rect x="525.7" y="51.0" width="4.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="528.7" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (13 samples, 0.90%)</title><rect x="530.6" y="131.0" width="10.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="533.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.90%)</title><rect x="530.6" y="115.0" width="10.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.90%)</title><rect x="530.6" y="99.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="533.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.42%)</title><rect x="530.6" y="83.0" width="4.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="533.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.49%)</title><rect x="535.5" y="83.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.5" y="94.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.49%)</title><rect x="535.5" y="67.0" width="5.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="538.5" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (40 samples, 2.78%)</title><rect x="541.3" y="163.0" width="32.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="544.3" y="174.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 0.28%)</title><rect x="541.3" y="147.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="544.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (13 samples, 0.90%)</title><rect x="544.6" y="147.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="547.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (13 samples, 0.90%)</title><rect x="544.6" y="131.0" width="10.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="547.6" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 1.60%)</title><rect x="555.2" y="147.0" width="18.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.2" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 1.60%)</title><rect x="555.2" y="131.0" width="18.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="558.2" y="142.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.70%)</title><rect x="555.2" y="115.0" width="8.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="558.2" y="126.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.35%)</title><rect x="563.5" y="115.0" width="4.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="566.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.56%)</title><rect x="567.6" y="115.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="570.6" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.56%)</title><rect x="567.6" y="99.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="570.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.56%)</title><rect x="567.6" y="83.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.6" y="94.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.56%)</title><rect x="567.6" y="67.0" width="6.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="570.6" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 1.81%)</title><rect x="574.1" y="163.0" width="21.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.1" y="174.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 1.81%)</title><rect x="574.1" y="147.0" width="21.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.1" y="158.0">o..</text>
</g>
<g>
<title>char[] (13 samples, 0.90%)</title><rect x="574.1" y="131.0" width="10.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="577.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.28%)</title><rect x="584.8" y="131.0" width="3.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="587.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.63%)</title><rect x="588.1" y="131.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.63%)</title><rect x="588.1" y="115.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.63%)</title><rect x="588.1" y="99.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.1" y="110.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.63%)</title><rect x="588.1" y="83.0" width="7.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="591.1" y="94.0"></text>
</g>
<g>
<title>[async_workers-0 tid=240137] (95 samples, 6.61%)</title><rect x="595.5" y="243.0" width="78.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="598.5" y="254.0">[async_wo..</text>
</g>
<g>
<title>java/lang/Thread.run (95 samples, 6.61%)</title><rect x="595.5" y="227.0" width="78.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.5" y="238.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (95 samples, 6.61%)</title><rect x="595.5" y="211.0" width="78.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="598.5" y="222.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (95 samples, 6.61%)</title><rect x="595.5" y="195.0" width="78.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="598.5" y="206.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.56%)</title><rect x="595.5" y="179.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="598.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 0.56%)</title><rect x="595.5" y="163.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="598.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.56%)</title><rect x="595.5" y="147.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.56%)</title><rect x="595.5" y="131.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="598.5" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.56%)</title><rect x="595.5" y="115.0" width="6.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="598.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.run (87 samples, 6.05%)</title><rect x="602.1" y="179.0" width="71.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.1" y="190.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (87 samples, 6.05%)</title><rect x="602.1" y="163.0" width="71.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.1" y="174.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.getInternal (87 samples, 6.05%)</title><rect x="602.1" y="147.0" width="71.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.1" y="158.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.35%)</title><rect x="602.1" y="131.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="605.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 0.35%)</title><rect x="602.1" y="115.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (5 samples, 0.35%)</title><rect x="602.1" y="99.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="605.1" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.35%)</title><rect x="602.1" y="83.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="605.1" y="94.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.35%)</title><rect x="602.1" y="67.0" width="4.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="605.1" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (21 samples, 1.46%)</title><rect x="606.2" y="131.0" width="17.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="609.2" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (21 samples, 1.46%)</title><rect x="606.2" y="115.0" width="17.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="609.2" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.97%)</title><rect x="606.2" y="99.0" width="11.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.2" y="110.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (14 samples, 0.97%)</title><rect x="606.2" y="83.0" width="11.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.2" y="94.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.97%)</title><rect x="606.2" y="67.0" width="11.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="609.2" y="78.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.49%)</title><rect x="617.7" y="99.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="620.7" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.49%)</title><rect x="617.7" y="83.0" width="5.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="620.7" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (12 samples, 0.84%)</title><rect x="623.4" y="131.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="626.4" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.14%)</title><rect x="623.4" y="115.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="626.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (10 samples, 0.70%)</title><rect x="625.0" y="115.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.0" y="126.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="625.0" y="99.0" width="3.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="628.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.35%)</title><rect x="628.3" y="99.0" width="4.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="631.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.07%)</title><rect x="632.4" y="99.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="635.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (12 samples, 0.84%)</title><rect x="633.3" y="131.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.3" y="142.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.49%)</title><rect x="633.3" y="115.0" width="5.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="636.3" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.35%)</title><rect x="639.0" y="115.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.0" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.35%)</title><rect x="639.0" y="99.0" width="4.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="642.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (10 samples, 0.70%)</title><rect x="643.1" y="131.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.1" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.70%)</title><rect x="643.1" y="115.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.70%)</title><rect x="643.1" y="99.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="646.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.70%)</title><rect x="643.1" y="83.0" width="8.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="646.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (27 samples, 1.88%)</title><rect x="651.3" y="131.0" width="22.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.3" y="142.0">r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (4 samples, 0.28%)</title><rect x="651.3" y="115.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.3" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (4 samples, 0.28%)</title><rect x="651.3" y="99.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="654.3" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="651.3" y="83.0" width="3.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="654.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (16 samples, 1.11%)</title><rect x="654.6" y="115.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="657.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (16 samples, 1.11%)</title><rect x="654.6" y="99.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="657.6" y="110.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.35%)</title><rect x="654.6" y="83.0" width="4.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="657.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.77%)</title><rect x="658.7" y="83.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="661.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.77%)</title><rect x="658.7" y="67.0" width="9.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="661.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (7 samples, 0.49%)</title><rect x="667.7" y="115.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="670.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.49%)</title><rect x="667.7" y="99.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="670.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.49%)</title><rect x="667.7" y="83.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="670.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.49%)</title><rect x="667.7" y="67.0" width="5.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="670.7" y="78.0"></text>
</g>
<g>
<title>[async_workers-1 tid=240136] (89 samples, 6.19%)</title><rect x="673.5" y="243.0" width="73.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="676.5" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (89 samples, 6.19%)</title><rect x="673.5" y="227.0" width="73.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.5" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (89 samples, 6.19%)</title><rect x="673.5" y="211.0" width="73.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="676.5" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (89 samples, 6.19%)</title><rect x="673.5" y="195.0" width="73.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="676.5" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (7 samples, 0.49%)</title><rect x="673.5" y="179.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (7 samples, 0.49%)</title><rect x="673.5" y="163.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.42%)</title><rect x="673.5" y="147.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="676.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.42%)</title><rect x="673.5" y="131.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.5" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.42%)</title><rect x="673.5" y="115.0" width="4.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="676.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="678.4" y="147.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="678.4" y="131.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.07%)</title><rect x="678.4" y="115.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="681.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.07%)</title><rect x="678.4" y="99.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.4" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.07%)</title><rect x="678.4" y="83.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="681.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.run (82 samples, 5.71%)</title><rect x="679.2" y="179.0" width="67.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.2" y="190.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (82 samples, 5.71%)</title><rect x="679.2" y="163.0" width="67.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.2" y="174.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.getInternal (82 samples, 5.71%)</title><rect x="679.2" y="147.0" width="67.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="682.2" y="158.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.28%)</title><rect x="679.2" y="131.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="682.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.28%)</title><rect x="679.2" y="115.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.28%)</title><rect x="679.2" y="99.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.2" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.28%)</title><rect x="679.2" y="83.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.2" y="94.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="679.2" y="67.0" width="3.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="682.2" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (20 samples, 1.39%)</title><rect x="682.5" y="131.0" width="16.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="685.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (20 samples, 1.39%)</title><rect x="682.5" y="115.0" width="16.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.5" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.97%)</title><rect x="682.5" y="99.0" width="11.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.5" y="110.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (14 samples, 0.97%)</title><rect x="682.5" y="83.0" width="11.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.5" y="94.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.97%)</title><rect x="682.5" y="67.0" width="11.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="685.5" y="78.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.42%)</title><rect x="694.0" y="99.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.0" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.42%)</title><rect x="694.0" y="83.0" width="4.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="697.0" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (23 samples, 1.60%)</title><rect x="698.9" y="131.0" width="18.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.9" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.49%)</title><rect x="698.9" y="115.0" width="5.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="701.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (16 samples, 1.11%)</title><rect x="704.7" y="115.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.7" y="126.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.07%)</title><rect x="704.7" y="99.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="707.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.56%)</title><rect x="705.5" y="99.0" width="6.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="708.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.49%)</title><rect x="712.1" y="99.0" width="5.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="715.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (7 samples, 0.49%)</title><rect x="717.8" y="131.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="720.8" y="142.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="717.8" y="115.0" width="3.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="720.8" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.21%)</title><rect x="721.1" y="115.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="724.1" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.21%)</title><rect x="721.1" y="99.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="724.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (6 samples, 0.42%)</title><rect x="723.6" y="131.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="726.6" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.42%)</title><rect x="723.6" y="115.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="726.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.42%)</title><rect x="723.6" y="99.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="726.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.42%)</title><rect x="723.6" y="83.0" width="4.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="726.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (22 samples, 1.53%)</title><rect x="728.5" y="131.0" width="18.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.5" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (4 samples, 0.28%)</title><rect x="728.5" y="115.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="731.5" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (4 samples, 0.28%)</title><rect x="728.5" y="99.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.5" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="728.5" y="83.0" width="3.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="731.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (13 samples, 0.90%)</title><rect x="731.8" y="115.0" width="10.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (13 samples, 0.90%)</title><rect x="731.8" y="99.0" width="10.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="734.8" y="110.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.35%)</title><rect x="731.8" y="83.0" width="4.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="734.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.56%)</title><rect x="735.9" y="83.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="738.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.56%)</title><rect x="735.9" y="67.0" width="6.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="738.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (5 samples, 0.35%)</title><rect x="742.5" y="115.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.35%)</title><rect x="742.5" y="99.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.35%)</title><rect x="742.5" y="83.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="745.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.35%)</title><rect x="742.5" y="67.0" width="4.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="745.5" y="78.0"></text>
</g>
<g>
<title>[async_workers-2 tid=240142] (89 samples, 6.19%)</title><rect x="746.6" y="243.0" width="73.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="749.6" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (89 samples, 6.19%)</title><rect x="746.6" y="227.0" width="73.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.6" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (89 samples, 6.19%)</title><rect x="746.6" y="211.0" width="73.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="749.6" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (89 samples, 6.19%)</title><rect x="746.6" y="195.0" width="73.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="749.6" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.42%)</title><rect x="746.6" y="179.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="749.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.42%)</title><rect x="746.6" y="163.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.42%)</title><rect x="746.6" y="147.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="749.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.42%)</title><rect x="746.6" y="131.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.6" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.42%)</title><rect x="746.6" y="115.0" width="4.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="749.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.run (83 samples, 5.78%)</title><rect x="751.5" y="179.0" width="68.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.5" y="190.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (83 samples, 5.78%)</title><rect x="751.5" y="163.0" width="68.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.5" y="174.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.getInternal (83 samples, 5.78%)</title><rect x="751.5" y="147.0" width="68.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.5" y="158.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.56%)</title><rect x="751.5" y="131.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="754.5" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.56%)</title><rect x="751.5" y="115.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (8 samples, 0.56%)</title><rect x="751.5" y="99.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.5" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.56%)</title><rect x="751.5" y="83.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.5" y="94.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.56%)</title><rect x="751.5" y="67.0" width="6.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="754.5" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (19 samples, 1.32%)</title><rect x="758.1" y="131.0" width="15.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="761.1" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (19 samples, 1.32%)</title><rect x="758.1" y="115.0" width="15.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="761.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.90%)</title><rect x="758.1" y="99.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="761.1" y="110.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (13 samples, 0.90%)</title><rect x="758.1" y="83.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.1" y="94.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.90%)</title><rect x="758.1" y="67.0" width="10.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="761.1" y="78.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.42%)</title><rect x="768.7" y="99.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="771.7" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.42%)</title><rect x="768.7" y="83.0" width="5.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="771.7" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (21 samples, 1.46%)</title><rect x="773.7" y="131.0" width="17.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="776.7" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.21%)</title><rect x="773.7" y="115.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="776.7" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (18 samples, 1.25%)</title><rect x="776.1" y="115.0" width="14.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.1" y="126.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.56%)</title><rect x="776.1" y="99.0" width="6.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="779.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.42%)</title><rect x="782.7" y="99.0" width="4.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="785.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.28%)</title><rect x="787.6" y="99.0" width="3.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="790.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (8 samples, 0.56%)</title><rect x="790.9" y="131.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.9" y="142.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.49%)</title><rect x="790.9" y="115.0" width="5.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="793.9" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.07%)</title><rect x="796.7" y="115.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="799.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.07%)</title><rect x="796.7" y="99.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="799.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (7 samples, 0.49%)</title><rect x="797.5" y="131.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.49%)</title><rect x="797.5" y="115.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="800.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.49%)</title><rect x="797.5" y="99.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="800.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.49%)</title><rect x="797.5" y="83.0" width="5.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="800.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (20 samples, 1.39%)</title><rect x="803.2" y="131.0" width="16.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="806.2" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (6 samples, 0.42%)</title><rect x="803.2" y="115.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="806.2" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (6 samples, 0.42%)</title><rect x="803.2" y="99.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="806.2" y="110.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.42%)</title><rect x="803.2" y="83.0" width="5.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="806.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (10 samples, 0.70%)</title><rect x="808.2" y="115.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="811.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (10 samples, 0.70%)</title><rect x="808.2" y="99.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="811.2" y="110.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.42%)</title><rect x="808.2" y="83.0" width="4.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="811.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.28%)</title><rect x="813.1" y="83.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="816.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.28%)</title><rect x="813.1" y="67.0" width="3.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="816.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (4 samples, 0.28%)</title><rect x="816.4" y="115.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.28%)</title><rect x="816.4" y="99.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="819.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.28%)</title><rect x="816.4" y="83.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="819.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.28%)</title><rect x="816.4" y="67.0" width="3.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="819.4" y="78.0"></text>
</g>
<g>
<title>[async_workers-3 tid=240135] (85 samples, 5.92%)</title><rect x="819.7" y="243.0" width="69.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="822.7" y="254.0">[async_..</text>
</g>
<g>
<title>java/lang/Thread.run (85 samples, 5.92%)</title><rect x="819.7" y="227.0" width="69.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="822.7" y="238.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (85 samples, 5.92%)</title><rect x="819.7" y="211.0" width="69.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="822.7" y="222.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (85 samples, 5.92%)</title><rect x="819.7" y="195.0" width="69.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="822.7" y="206.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.07%)</title><rect x="819.7" y="179.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.07%)</title><rect x="819.7" y="163.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="822.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.07%)</title><rect x="819.7" y="147.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.07%)</title><rect x="819.7" y="131.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="822.7" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.07%)</title><rect x="819.7" y="115.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="822.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.run (84 samples, 5.85%)</title><rect x="820.5" y="179.0" width="69.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="823.5" y="190.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (84 samples, 5.85%)</title><rect x="820.5" y="163.0" width="69.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="823.5" y="174.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.getInternal (84 samples, 5.85%)</title><rect x="820.5" y="147.0" width="69.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.5" y="158.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.28%)</title><rect x="820.5" y="131.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="823.5" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.28%)</title><rect x="820.5" y="115.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="823.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.28%)</title><rect x="820.5" y="99.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.5" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.28%)</title><rect x="820.5" y="83.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.5" y="94.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="820.5" y="67.0" width="3.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="823.5" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (19 samples, 1.32%)</title><rect x="823.8" y="131.0" width="15.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="826.8" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (19 samples, 1.32%)</title><rect x="823.8" y="115.0" width="15.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="826.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.84%)</title><rect x="823.8" y="99.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="826.8" y="110.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (12 samples, 0.84%)</title><rect x="823.8" y="83.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="826.8" y="94.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.84%)</title><rect x="823.8" y="67.0" width="9.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="826.8" y="78.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.49%)</title><rect x="833.6" y="99.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="836.6" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.49%)</title><rect x="833.6" y="83.0" width="5.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="836.6" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (12 samples, 0.84%)</title><rect x="839.4" y="131.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.4" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.07%)</title><rect x="839.4" y="115.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="842.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11 samples, 0.77%)</title><rect x="840.2" y="115.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="843.2" y="126.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.07%)</title><rect x="840.2" y="99.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="843.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.28%)</title><rect x="841.0" y="99.0" width="3.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="844.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.42%)</title><rect x="844.3" y="99.0" width="4.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="847.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (10 samples, 0.70%)</title><rect x="849.2" y="131.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="852.2" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.14%)</title><rect x="849.2" y="115.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="852.2" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.56%)</title><rect x="850.9" y="115.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.9" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.56%)</title><rect x="850.9" y="99.0" width="6.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="853.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (7 samples, 0.49%)</title><rect x="857.4" y="131.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.4" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.49%)</title><rect x="857.4" y="115.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="860.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.49%)</title><rect x="857.4" y="99.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="860.4" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.49%)</title><rect x="857.4" y="83.0" width="5.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="860.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (32 samples, 2.23%)</title><rect x="863.2" y="131.0" width="26.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="866.2" y="142.0">r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (9 samples, 0.63%)</title><rect x="863.2" y="115.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="866.2" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (9 samples, 0.63%)</title><rect x="863.2" y="99.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="866.2" y="110.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.63%)</title><rect x="863.2" y="83.0" width="7.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="866.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (16 samples, 1.11%)</title><rect x="870.6" y="115.0" width="13.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (16 samples, 1.11%)</title><rect x="870.6" y="99.0" width="13.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="873.6" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="870.6" y="83.0" width="3.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="873.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.84%)</title><rect x="873.9" y="83.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="876.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.84%)</title><rect x="873.9" y="67.0" width="9.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="876.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (7 samples, 0.49%)</title><rect x="883.7" y="115.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="886.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.49%)</title><rect x="883.7" y="99.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="886.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.49%)</title><rect x="883.7" y="83.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="886.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.49%)</title><rect x="883.7" y="67.0" width="5.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="886.7" y="78.0"></text>
</g>
<g>
<title>[async_workers-4 tid=240138] (90 samples, 6.26%)</title><rect x="889.5" y="243.0" width="73.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="892.5" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (90 samples, 6.26%)</title><rect x="889.5" y="227.0" width="73.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="892.5" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (90 samples, 6.26%)</title><rect x="889.5" y="211.0" width="73.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="892.5" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (90 samples, 6.26%)</title><rect x="889.5" y="195.0" width="73.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="892.5" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.14%)</title><rect x="889.5" y="179.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="892.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.14%)</title><rect x="889.5" y="163.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="892.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.14%)</title><rect x="889.5" y="147.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="892.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.14%)</title><rect x="889.5" y="131.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="892.5" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.14%)</title><rect x="889.5" y="115.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="892.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.run (88 samples, 6.12%)</title><rect x="891.1" y="179.0" width="72.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="894.1" y="190.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (88 samples, 6.12%)</title><rect x="891.1" y="163.0" width="72.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="894.1" y="174.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.getInternal (88 samples, 6.12%)</title><rect x="891.1" y="147.0" width="72.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="894.1" y="158.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.63%)</title><rect x="891.1" y="131.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="894.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 0.63%)</title><rect x="891.1" y="115.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="894.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (9 samples, 0.63%)</title><rect x="891.1" y="99.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="894.1" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.63%)</title><rect x="891.1" y="83.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="894.1" y="94.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.63%)</title><rect x="891.1" y="67.0" width="7.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="894.1" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (20 samples, 1.39%)</title><rect x="898.5" y="131.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="901.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (20 samples, 1.39%)</title><rect x="898.5" y="115.0" width="16.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="901.5" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.90%)</title><rect x="898.5" y="99.0" width="10.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.5" y="110.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (13 samples, 0.90%)</title><rect x="898.5" y="83.0" width="10.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.5" y="94.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.90%)</title><rect x="898.5" y="67.0" width="10.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="901.5" y="78.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.49%)</title><rect x="909.2" y="99.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="912.2" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.49%)</title><rect x="909.2" y="83.0" width="5.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="912.2" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (19 samples, 1.32%)</title><rect x="914.9" y="131.0" width="15.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="917.9" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.14%)</title><rect x="914.9" y="115.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="917.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (17 samples, 1.18%)</title><rect x="916.6" y="115.0" width="13.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="919.6" y="126.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.77%)</title><rect x="916.6" y="99.0" width="9.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="919.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.28%)</title><rect x="925.6" y="99.0" width="3.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="928.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.14%)</title><rect x="928.9" y="99.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="931.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (11 samples, 0.77%)</title><rect x="930.5" y="131.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="933.5" y="142.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="930.5" y="115.0" width="3.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="933.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.49%)</title><rect x="933.8" y="115.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="936.8" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.49%)</title><rect x="933.8" y="99.0" width="5.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="936.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (4 samples, 0.28%)</title><rect x="939.5" y="131.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="942.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.28%)</title><rect x="939.5" y="115.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="942.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.28%)</title><rect x="939.5" y="99.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="942.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.28%)</title><rect x="939.5" y="83.0" width="3.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="942.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (25 samples, 1.74%)</title><rect x="942.8" y="131.0" width="20.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="945.8" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (6 samples, 0.42%)</title><rect x="942.8" y="115.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="945.8" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (6 samples, 0.42%)</title><rect x="942.8" y="99.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="945.8" y="110.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.42%)</title><rect x="942.8" y="83.0" width="5.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="945.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (11 samples, 0.77%)</title><rect x="947.8" y="115.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="950.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (11 samples, 0.77%)</title><rect x="947.8" y="99.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="950.8" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="947.8" y="83.0" width="3.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="950.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.49%)</title><rect x="951.0" y="83.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="954.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.49%)</title><rect x="951.0" y="67.0" width="5.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="954.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (8 samples, 0.56%)</title><rect x="956.8" y="115.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="959.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.56%)</title><rect x="956.8" y="99.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="959.8" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.56%)</title><rect x="956.8" y="83.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="959.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.56%)</title><rect x="956.8" y="67.0" width="6.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="959.8" y="78.0"></text>
</g>
<g>
<title>[async_workers-5 tid=240139] (91 samples, 6.33%)</title><rect x="963.4" y="243.0" width="74.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="966.4" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (91 samples, 6.33%)</title><rect x="963.4" y="227.0" width="74.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="966.4" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (91 samples, 6.33%)</title><rect x="963.4" y="211.0" width="74.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="966.4" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (91 samples, 6.33%)</title><rect x="963.4" y="195.0" width="74.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="966.4" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.28%)</title><rect x="963.4" y="179.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4 samples, 0.28%)</title><rect x="963.4" y="163.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="966.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 0.28%)</title><rect x="963.4" y="147.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="966.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.28%)</title><rect x="963.4" y="131.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="966.4" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4 samples, 0.28%)</title><rect x="963.4" y="115.0" width="3.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="966.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.run (87 samples, 6.05%)</title><rect x="966.6" y="179.0" width="71.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="969.6" y="190.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (87 samples, 6.05%)</title><rect x="966.6" y="163.0" width="71.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="969.6" y="174.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.getInternal (87 samples, 6.05%)</title><rect x="966.6" y="147.0" width="71.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="969.6" y="158.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.28%)</title><rect x="966.6" y="131.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="969.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.28%)</title><rect x="966.6" y="115.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="969.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.28%)</title><rect x="966.6" y="99.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.28%)</title><rect x="966.6" y="83.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="969.6" y="94.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="966.6" y="67.0" width="3.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="969.6" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (18 samples, 1.25%)</title><rect x="969.9" y="131.0" width="14.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="972.9" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (18 samples, 1.25%)</title><rect x="969.9" y="115.0" width="14.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="972.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.84%)</title><rect x="969.9" y="99.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="972.9" y="110.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (12 samples, 0.84%)</title><rect x="969.9" y="83.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="972.9" y="94.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.84%)</title><rect x="969.9" y="67.0" width="9.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="972.9" y="78.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.42%)</title><rect x="979.8" y="99.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="982.8" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.42%)</title><rect x="979.8" y="83.0" width="4.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="982.8" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (17 samples, 1.18%)</title><rect x="984.7" y="131.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="987.7" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.14%)</title><rect x="984.7" y="115.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="987.7" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (15 samples, 1.04%)</title><rect x="986.4" y="115.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="989.4" y="126.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="986.4" y="99.0" width="3.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="989.4" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.35%)</title><rect x="989.6" y="99.0" width="4.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="992.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.42%)</title><rect x="993.7" y="99.0" width="5.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="996.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (7 samples, 0.49%)</title><rect x="998.7" y="131.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1001.7" y="142.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.21%)</title><rect x="998.7" y="115.0" width="2.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1001.7" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.28%)</title><rect x="1001.1" y="115.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1004.1" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.28%)</title><rect x="1001.1" y="99.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1004.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (8 samples, 0.56%)</title><rect x="1004.4" y="131.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1007.4" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.56%)</title><rect x="1004.4" y="115.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1007.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.56%)</title><rect x="1004.4" y="99.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1007.4" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.56%)</title><rect x="1004.4" y="83.0" width="6.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1007.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (33 samples, 2.30%)</title><rect x="1011.0" y="131.0" width="27.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1014.0" y="142.0">r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (4 samples, 0.28%)</title><rect x="1011.0" y="115.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.0" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (4 samples, 0.28%)</title><rect x="1011.0" y="99.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1014.0" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="1011.0" y="83.0" width="3.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1014.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (16 samples, 1.11%)</title><rect x="1014.3" y="115.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1017.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (16 samples, 1.11%)</title><rect x="1014.3" y="99.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1017.3" y="110.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.35%)</title><rect x="1014.3" y="83.0" width="4.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1017.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.77%)</title><rect x="1018.4" y="83.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1021.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.77%)</title><rect x="1018.4" y="67.0" width="9.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1021.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (13 samples, 0.90%)</title><rect x="1027.4" y="115.0" width="10.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1030.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.90%)</title><rect x="1027.4" y="99.0" width="10.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1030.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.90%)</title><rect x="1027.4" y="83.0" width="10.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1030.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.90%)</title><rect x="1027.4" y="67.0" width="10.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1030.4" y="78.0"></text>
</g>
<g>
<title>[async_workers-6 tid=240141] (92 samples, 6.40%)</title><rect x="1038.1" y="243.0" width="75.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1041.1" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (92 samples, 6.40%)</title><rect x="1038.1" y="227.0" width="75.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1041.1" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (92 samples, 6.40%)</title><rect x="1038.1" y="211.0" width="75.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1041.1" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (92 samples, 6.40%)</title><rect x="1038.1" y="195.0" width="75.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1041.1" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.14%)</title><rect x="1038.1" y="179.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1041.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.14%)</title><rect x="1038.1" y="163.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1041.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.07%)</title><rect x="1038.1" y="147.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1041.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.07%)</title><rect x="1038.1" y="131.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1041.1" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.07%)</title><rect x="1038.1" y="115.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1041.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="1038.9" y="147.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1041.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="1038.9" y="131.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.07%)</title><rect x="1038.9" y="115.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1041.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.07%)</title><rect x="1038.9" y="99.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1041.9" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.07%)</title><rect x="1038.9" y="83.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1041.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.run (90 samples, 6.26%)</title><rect x="1039.7" y="179.0" width="73.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1042.7" y="190.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (90 samples, 6.26%)</title><rect x="1039.7" y="163.0" width="73.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1042.7" y="174.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.getInternal (90 samples, 6.26%)</title><rect x="1039.7" y="147.0" width="73.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1042.7" y="158.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.21%)</title><rect x="1039.7" y="131.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1042.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.21%)</title><rect x="1039.7" y="115.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1042.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.21%)</title><rect x="1039.7" y="99.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1042.7" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.21%)</title><rect x="1039.7" y="83.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1042.7" y="94.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.21%)</title><rect x="1039.7" y="67.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1042.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (18 samples, 1.25%)</title><rect x="1042.2" y="131.0" width="14.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1045.2" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (18 samples, 1.25%)</title><rect x="1042.2" y="115.0" width="14.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1045.2" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.90%)</title><rect x="1042.2" y="99.0" width="10.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1045.2" y="110.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (13 samples, 0.90%)</title><rect x="1042.2" y="83.0" width="10.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1045.2" y="94.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.90%)</title><rect x="1042.2" y="67.0" width="10.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1045.2" y="78.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.35%)</title><rect x="1052.9" y="99.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1055.9" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.35%)</title><rect x="1052.9" y="83.0" width="4.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1055.9" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (24 samples, 1.67%)</title><rect x="1057.0" y="131.0" width="19.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1060.0" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.21%)</title><rect x="1057.0" y="115.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1060.0" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (21 samples, 1.46%)</title><rect x="1059.4" y="115.0" width="17.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1062.4" y="126.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.49%)</title><rect x="1059.4" y="99.0" width="5.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1062.4" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.56%)</title><rect x="1065.2" y="99.0" width="6.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1068.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.42%)</title><rect x="1071.8" y="99.0" width="4.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1074.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (11 samples, 0.77%)</title><rect x="1076.7" y="131.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1079.7" y="142.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.07%)</title><rect x="1076.7" y="115.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1079.7" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.70%)</title><rect x="1077.5" y="115.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1080.5" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.70%)</title><rect x="1077.5" y="99.0" width="8.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1080.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (6 samples, 0.42%)</title><rect x="1085.7" y="131.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1088.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.42%)</title><rect x="1085.7" y="115.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1088.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.42%)</title><rect x="1085.7" y="99.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1088.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.42%)</title><rect x="1085.7" y="83.0" width="4.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1088.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (28 samples, 1.95%)</title><rect x="1090.6" y="131.0" width="23.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.6" y="142.0">r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (4 samples, 0.28%)</title><rect x="1090.6" y="115.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1093.6" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (4 samples, 0.28%)</title><rect x="1090.6" y="99.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1093.6" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="1090.6" y="83.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1093.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (14 samples, 0.97%)</title><rect x="1093.9" y="115.0" width="11.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1096.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (14 samples, 0.97%)</title><rect x="1093.9" y="99.0" width="11.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1096.9" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="1093.9" y="83.0" width="3.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1096.9" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.70%)</title><rect x="1097.2" y="83.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1100.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.70%)</title><rect x="1097.2" y="67.0" width="8.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1100.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (10 samples, 0.70%)</title><rect x="1105.4" y="115.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1108.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.70%)</title><rect x="1105.4" y="99.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1108.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.70%)</title><rect x="1105.4" y="83.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1108.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.70%)</title><rect x="1105.4" y="67.0" width="8.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1108.4" y="78.0"></text>
</g>
<g>
<title>[async_workers-7 tid=240140] (93 samples, 6.47%)</title><rect x="1113.6" y="243.0" width="76.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1116.6" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (93 samples, 6.47%)</title><rect x="1113.6" y="227.0" width="76.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1116.6" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (93 samples, 6.47%)</title><rect x="1113.6" y="211.0" width="76.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1116.6" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (93 samples, 6.47%)</title><rect x="1113.6" y="195.0" width="76.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1116.6" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.28%)</title><rect x="1113.6" y="179.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1116.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4 samples, 0.28%)</title><rect x="1113.6" y="163.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1116.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.21%)</title><rect x="1113.6" y="147.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1116.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.21%)</title><rect x="1113.6" y="131.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1116.6" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.21%)</title><rect x="1113.6" y="115.0" width="2.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1116.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="1116.1" y="147.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1119.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="1116.1" y="131.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1119.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.07%)</title><rect x="1116.1" y="115.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1119.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.07%)</title><rect x="1116.1" y="99.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1119.1" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.07%)</title><rect x="1116.1" y="83.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1119.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.run (89 samples, 6.19%)</title><rect x="1116.9" y="179.0" width="73.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1119.9" y="190.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (89 samples, 6.19%)</title><rect x="1116.9" y="163.0" width="73.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1119.9" y="174.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.getInternal (89 samples, 6.19%)</title><rect x="1116.9" y="147.0" width="73.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1119.9" y="158.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.42%)</title><rect x="1116.9" y="131.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1119.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.42%)</title><rect x="1116.9" y="115.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1119.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.42%)</title><rect x="1116.9" y="99.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1119.9" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.42%)</title><rect x="1116.9" y="83.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1119.9" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.42%)</title><rect x="1116.9" y="67.0" width="4.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1119.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (21 samples, 1.46%)</title><rect x="1121.8" y="131.0" width="17.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1124.8" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (21 samples, 1.46%)</title><rect x="1121.8" y="115.0" width="17.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1124.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (16 samples, 1.11%)</title><rect x="1121.8" y="99.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.8" y="110.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (16 samples, 1.11%)</title><rect x="1121.8" y="83.0" width="13.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1124.8" y="94.0"></text>
</g>
<g>
<title>byte[] (16 samples, 1.11%)</title><rect x="1121.8" y="67.0" width="13.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1124.8" y="78.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.35%)</title><rect x="1135.0" y="99.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1138.0" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.35%)</title><rect x="1135.0" y="83.0" width="4.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1138.0" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (20 samples, 1.39%)</title><rect x="1139.1" y="131.0" width="16.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1142.1" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (8 samples, 0.56%)</title><rect x="1139.1" y="115.0" width="6.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1142.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (12 samples, 0.84%)</title><rect x="1145.7" y="115.0" width="9.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1148.7" y="126.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="1145.7" y="99.0" width="3.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1148.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.35%)</title><rect x="1148.9" y="99.0" width="4.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1151.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.21%)</title><rect x="1153.0" y="99.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1156.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (12 samples, 0.84%)</title><rect x="1155.5" y="131.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1158.5" y="142.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.35%)</title><rect x="1155.5" y="115.0" width="4.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1158.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.49%)</title><rect x="1159.6" y="115.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1162.6" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.49%)</title><rect x="1159.6" y="99.0" width="5.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1162.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (4 samples, 0.28%)</title><rect x="1165.4" y="131.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1168.4" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.28%)</title><rect x="1165.4" y="115.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1168.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.28%)</title><rect x="1165.4" y="99.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1168.4" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.28%)</title><rect x="1165.4" y="83.0" width="3.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1168.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (26 samples, 1.81%)</title><rect x="1168.6" y="131.0" width="21.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1171.6" y="142.0">r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (4 samples, 0.28%)</title><rect x="1168.6" y="115.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1171.6" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (4 samples, 0.28%)</title><rect x="1168.6" y="99.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1171.6" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.28%)</title><rect x="1168.6" y="83.0" width="3.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1171.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (14 samples, 0.97%)</title><rect x="1171.9" y="115.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1174.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (14 samples, 0.97%)</title><rect x="1171.9" y="99.0" width="11.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1174.9" y="110.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.49%)</title><rect x="1171.9" y="83.0" width="5.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1174.9" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.49%)</title><rect x="1177.7" y="83.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1180.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.49%)</title><rect x="1177.7" y="67.0" width="5.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1180.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (8 samples, 0.56%)</title><rect x="1183.4" y="115.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1186.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.56%)</title><rect x="1183.4" y="99.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1186.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.56%)</title><rect x="1183.4" y="83.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1186.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.56%)</title><rect x="1183.4" y="67.0" width="6.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1186.4" y="78.0"></text>
</g>
</g>
</svg>
