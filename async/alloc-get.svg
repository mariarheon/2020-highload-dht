<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (25,516 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (17,041 samples, 66.79%)</title><rect x="10.0" y="691.0" width="788.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17,041 samples, 66.79%)</title><rect x="10.0" y="675.0" width="788.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17,041 samples, 66.79%)</title><rect x="10.0" y="659.0" width="788.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (12,353 samples, 48.41%)</title><rect x="10.0" y="643.0" width="571.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6,021 samples, 23.60%)</title><rect x="10.0" y="627.0" width="278.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (6,021 samples, 23.60%)</title><rect x="10.0" y="611.0" width="278.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (28 samples, 0.11%)</title><rect x="10.0" y="595.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$135/69462153.apply (5,992 samples, 23.48%)</title><rect x="11.3" y="595.0" width="277.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.3" y="606.0">jdk/internal/net/http/MultiExchange$$..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (5,992 samples, 23.48%)</title><rect x="11.3" y="579.0" width="277.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.3" y="590.0">jdk/internal/net/http/MultiExchange.l..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (5,992 samples, 23.48%)</title><rect x="11.3" y="563.0" width="277.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.3" y="574.0">jdk/internal/net/http/MultiExchange.r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.19%)</title><rect x="11.3" y="547.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.19%)</title><rect x="11.3" y="531.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$369/1508220952.get$Lambda (32 samples, 0.13%)</title><rect x="11.3" y="515.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$369 (32 samples, 0.13%)</title><rect x="11.3" y="499.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="14.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$372/484910400.get$Lambda (16 samples, 0.06%)</title><rect x="12.8" y="515.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$372 (16 samples, 0.06%)</title><rect x="12.8" y="499.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="15.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (57 samples, 0.22%)</title><rect x="13.5" y="547.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (57 samples, 0.22%)</title><rect x="13.5" y="531.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (27 samples, 0.11%)</title><rect x="13.5" y="515.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="16.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.12%)</title><rect x="14.8" y="515.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.12%)</title><rect x="14.8" y="499.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.12%)</title><rect x="14.8" y="483.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="17.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (119 samples, 0.47%)</title><rect x="16.2" y="547.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (119 samples, 0.47%)</title><rect x="16.2" y="531.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (63 samples, 0.25%)</title><rect x="16.2" y="515.0" width="2.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="19.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.22%)</title><rect x="19.1" y="515.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.22%)</title><rect x="19.1" y="499.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.22%)</title><rect x="19.1" y="483.0" width="2.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="22.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (5,601 samples, 21.95%)</title><rect x="21.7" y="547.0" width="259.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.7" y="558.0">jdk/internal/net/http/Exchange.resp..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (5,601 samples, 21.95%)</title><rect x="21.7" y="531.0" width="259.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.7" y="542.0">jdk/internal/net/http/Exchange.resp..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (5,601 samples, 21.95%)</title><rect x="21.7" y="515.0" width="259.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="24.7" y="526.0">jdk/internal/net/http/Exchange.resp..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (66 samples, 0.26%)</title><rect x="21.7" y="499.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (66 samples, 0.26%)</title><rect x="21.7" y="483.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="24.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$161/2060274688.get$Lambda (17 samples, 0.07%)</title><rect x="21.7" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="24.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$161 (17 samples, 0.07%)</title><rect x="21.7" y="451.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="24.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$164/1669924159.get$Lambda (25 samples, 0.10%)</title><rect x="22.4" y="467.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$164 (25 samples, 0.10%)</title><rect x="22.4" y="451.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="25.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$254/927503844.get$Lambda (24 samples, 0.09%)</title><rect x="23.6" y="467.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$254 (24 samples, 0.09%)</title><rect x="23.6" y="451.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="26.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3,551 samples, 13.92%)</title><rect x="24.7" y="499.0" width="164.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="27.7" y="510.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3,551 samples, 13.92%)</title><rect x="24.7" y="483.0" width="164.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.7" y="494.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3,516 samples, 13.78%)</title><rect x="24.7" y="467.0" width="162.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.7" y="478.0">java/util/concurrent/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$254/927503844.apply (3,516 samples, 13.78%)</title><rect x="24.7" y="451.0" width="162.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.7" y="462.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (3,516 samples, 13.78%)</title><rect x="24.7" y="435.0" width="162.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="27.7" y="446.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3,516 samples, 13.78%)</title><rect x="24.7" y="419.0" width="162.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.7" y="430.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$164/1669924159.apply (3,516 samples, 13.78%)</title><rect x="24.7" y="403.0" width="162.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.7" y="414.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (3,516 samples, 13.78%)</title><rect x="24.7" y="387.0" width="162.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.7" y="398.0">jdk/internal/net/http..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.09%)</title><rect x="24.7" y="371.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.09%)</title><rect x="24.7" y="355.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$364/22668537.get$Lambda (22 samples, 0.09%)</title><rect x="24.7" y="339.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$364 (22 samples, 0.09%)</title><rect x="24.7" y="323.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="27.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (79 samples, 0.31%)</title><rect x="25.7" y="371.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="28.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (79 samples, 0.31%)</title><rect x="25.7" y="355.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="28.7" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (39 samples, 0.15%)</title><rect x="25.7" y="339.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="28.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7 samples, 0.03%)</title><rect x="27.5" y="339.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="30.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$364/22668537.apply (7 samples, 0.03%)</title><rect x="27.5" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (7 samples, 0.03%)</title><rect x="27.5" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="30.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (7 samples, 0.03%)</title><rect x="27.5" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$161/2060274688.apply (7 samples, 0.03%)</title><rect x="27.5" y="275.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (7 samples, 0.03%)</title><rect x="27.5" y="259.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.13%)</title><rect x="27.9" y="339.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.13%)</title><rect x="27.9" y="323.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="30.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.13%)</title><rect x="27.9" y="307.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="30.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (62 samples, 0.24%)</title><rect x="29.4" y="371.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (62 samples, 0.24%)</title><rect x="29.4" y="355.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (31 samples, 0.12%)</title><rect x="29.4" y="339.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="32.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.12%)</title><rect x="30.8" y="339.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.12%)</title><rect x="30.8" y="323.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="33.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (31 samples, 0.12%)</title><rect x="30.8" y="307.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="33.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (3,353 samples, 13.14%)</title><rect x="32.2" y="371.0" width="155.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="35.2" y="382.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.11%)</title><rect x="32.2" y="355.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.11%)</title><rect x="32.2" y="339.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$359/49379817.get$Lambda (14 samples, 0.05%)</title><rect x="32.2" y="323.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$359 (14 samples, 0.05%)</title><rect x="32.2" y="307.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="35.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$362/262015866.get$Lambda (15 samples, 0.06%)</title><rect x="32.9" y="323.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="35.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$362 (15 samples, 0.06%)</title><rect x="32.9" y="307.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="35.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,868 samples, 11.24%)</title><rect x="33.6" y="355.0" width="132.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="36.6" y="366.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,868 samples, 11.24%)</title><rect x="33.6" y="339.0" width="132.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.6" y="350.0">java/util/concur..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (27 samples, 0.11%)</title><rect x="33.6" y="323.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="36.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$359/49379817.apply (2,799 samples, 10.97%)</title><rect x="34.8" y="323.0" width="129.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="37.8" y="334.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (2,799 samples, 10.97%)</title><rect x="34.8" y="307.0" width="129.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.8" y="318.0">jdk/internal/net..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="34.8" y="291.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="34.8" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$381/2096716423.get$Lambda (12 samples, 0.05%)</title><rect x="34.8" y="259.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$381 (12 samples, 0.05%)</title><rect x="34.8" y="243.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="37.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (59 samples, 0.23%)</title><rect x="35.4" y="291.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (59 samples, 0.23%)</title><rect x="35.4" y="275.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="38.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (39 samples, 0.15%)</title><rect x="35.4" y="259.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="38.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.08%)</title><rect x="37.2" y="259.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.08%)</title><rect x="37.2" y="243.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="40.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.08%)</title><rect x="37.2" y="227.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="40.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (32 samples, 0.13%)</title><rect x="38.1" y="291.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="41.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (48 samples, 0.19%)</title><rect x="39.6" y="291.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (22 samples, 0.09%)</title><rect x="39.6" y="275.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="42.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (26 samples, 0.10%)</title><rect x="40.6" y="275.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (25 samples, 0.10%)</title><rect x="40.6" y="259.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="43.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (25 samples, 0.10%)</title><rect x="40.6" y="243.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (25 samples, 0.10%)</title><rect x="40.6" y="227.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (25 samples, 0.10%)</title><rect x="40.6" y="211.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.6" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (25 samples, 0.10%)</title><rect x="40.6" y="195.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="43.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (81 samples, 0.32%)</title><rect x="41.8" y="291.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (81 samples, 0.32%)</title><rect x="41.8" y="275.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (13 samples, 0.05%)</title><rect x="41.8" y="259.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (13 samples, 0.05%)</title><rect x="41.8" y="243.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="44.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (13 samples, 0.05%)</title><rect x="41.8" y="227.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (13 samples, 0.05%)</title><rect x="41.8" y="211.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="44.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (68 samples, 0.27%)</title><rect x="42.4" y="259.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (68 samples, 0.27%)</title><rect x="42.4" y="243.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (52 samples, 0.20%)</title><rect x="42.4" y="227.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="45.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (16 samples, 0.06%)</title><rect x="44.8" y="227.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.8" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (16 samples, 0.06%)</title><rect x="44.8" y="211.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="47.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (2,567 samples, 10.06%)</title><rect x="45.6" y="291.0" width="118.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.6" y="302.0">jdk/internal/n..</text>
</g>
<g>
<title>java.lang.StringBuilder (26 samples, 0.10%)</title><rect x="45.6" y="275.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="48.6" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (219 samples, 0.86%)</title><rect x="46.8" y="275.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (219 samples, 0.86%)</title><rect x="46.8" y="259.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (219 samples, 0.86%)</title><rect x="46.8" y="243.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.8" y="254.0"></text>
</g>
<g>
<title>byte[] (218 samples, 0.85%)</title><rect x="46.8" y="227.0" width="10.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="49.8" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (65 samples, 0.25%)</title><rect x="56.9" y="275.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.9" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (65 samples, 0.25%)</title><rect x="56.9" y="259.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.9" y="270.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.25%)</title><rect x="56.9" y="243.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="59.9" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (233 samples, 0.91%)</title><rect x="59.9" y="275.0" width="10.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (233 samples, 0.91%)</title><rect x="59.9" y="259.0" width="10.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.9" y="270.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.08%)</title><rect x="59.9" y="243.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="62.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (212 samples, 0.83%)</title><rect x="60.9" y="243.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.9" y="254.0"></text>
</g>
<g>
<title>byte[] (211 samples, 0.83%)</title><rect x="60.9" y="227.0" width="9.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="63.9" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (36 samples, 0.14%)</title><rect x="70.7" y="275.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (36 samples, 0.14%)</title><rect x="70.7" y="259.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="73.7" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.14%)</title><rect x="70.7" y="243.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="73.7" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (23 samples, 0.09%)</title><rect x="72.3" y="275.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="75.3" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (23 samples, 0.09%)</title><rect x="72.3" y="259.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="75.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1,666 samples, 6.53%)</title><rect x="73.4" y="275.0" width="77.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.4" y="286.0">jdk/inter..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (24 samples, 0.09%)</title><rect x="73.4" y="259.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="76.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.09%)</title><rect x="73.4" y="243.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="76.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.09%)</title><rect x="73.4" y="227.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.4" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$386/1190358281.get$Lambda (24 samples, 0.09%)</title><rect x="73.4" y="211.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.4" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$386 (24 samples, 0.09%)</title><rect x="73.4" y="195.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="76.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (754 samples, 2.96%)</title><rect x="74.5" y="259.0" width="34.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.5" y="270.0">jd..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (423 samples, 1.66%)</title><rect x="74.5" y="243.0" width="19.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.5" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (423 samples, 1.66%)</title><rect x="74.5" y="227.0" width="19.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.5" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (423 samples, 1.66%)</title><rect x="74.5" y="211.0" width="19.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.5" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (423 samples, 1.66%)</title><rect x="74.5" y="195.0" width="19.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.5" y="206.0"></text>
</g>
<g>
<title>byte[] (423 samples, 1.66%)</title><rect x="74.5" y="179.0" width="19.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="77.5" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (63 samples, 0.25%)</title><rect x="94.1" y="243.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.1" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 (32 samples, 0.13%)</title><rect x="94.1" y="227.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="97.1" y="238.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (31 samples, 0.12%)</title><rect x="95.6" y="227.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="98.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (31 samples, 0.12%)</title><rect x="95.6" y="211.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="98.6" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (31 samples, 0.12%)</title><rect x="95.6" y="195.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="98.6" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (28 samples, 0.11%)</title><rect x="97.0" y="243.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.0" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (11 samples, 0.04%)</title><rect x="97.0" y="227.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="100.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (17 samples, 0.07%)</title><rect x="97.5" y="227.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.5" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (17 samples, 0.07%)</title><rect x="97.5" y="211.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="100.5" y="222.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN$1.iterator (15 samples, 0.06%)</title><rect x="98.3" y="243.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.3" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$MapN$MapNIterator (15 samples, 0.06%)</title><rect x="98.3" y="227.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="101.3" y="238.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN.entrySet (11 samples, 0.04%)</title><rect x="99.0" y="243.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.0" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$MapN$1 (11 samples, 0.04%)</title><rect x="99.0" y="227.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="102.0" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$386/1190358281.test (214 samples, 0.84%)</title><rect x="99.5" y="243.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.5" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (214 samples, 0.84%)</title><rect x="99.5" y="227.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="102.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$38/90205195.test (214 samples, 0.84%)</title><rect x="99.5" y="211.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (214 samples, 0.84%)</title><rect x="99.5" y="195.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.5" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$27/24606376.test (214 samples, 0.84%)</title><rect x="99.5" y="179.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.5" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (214 samples, 0.84%)</title><rect x="99.5" y="163.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$26/688766789.test (214 samples, 0.84%)</title><rect x="99.5" y="147.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (214 samples, 0.84%)</title><rect x="99.5" y="131.0" width="9.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (214 samples, 0.84%)</title><rect x="99.5" y="115.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (214 samples, 0.84%)</title><rect x="99.5" y="99.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (102 samples, 0.40%)</title><rect x="99.5" y="83.0" width="4.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="102.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (112 samples, 0.44%)</title><rect x="104.2" y="83.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="107.2" y="94.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.44%)</title><rect x="104.2" y="67.0" width="5.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="107.2" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (888 samples, 3.48%)</title><rect x="109.4" y="259.0" width="41.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.4" y="270.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (888 samples, 3.48%)</title><rect x="109.4" y="243.0" width="41.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.4" y="254.0">jav..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (888 samples, 3.48%)</title><rect x="109.4" y="227.0" width="41.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="112.4" y="238.0">jav..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (18 samples, 0.07%)</title><rect x="109.4" y="211.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="112.4" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (15 samples, 0.06%)</title><rect x="110.2" y="211.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="113.2" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (34 samples, 0.13%)</title><rect x="110.9" y="211.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="113.9" y="222.0"></text>
</g>
<g>
<title>java.util.TreeSet (16 samples, 0.06%)</title><rect x="112.5" y="211.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="115.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.12%)</title><rect x="113.2" y="211.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.12%)</title><rect x="113.2" y="195.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="116.2" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/1260444598.get$Lambda (30 samples, 0.12%)</title><rect x="113.2" y="179.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="116.2" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$113 (30 samples, 0.12%)</title><rect x="113.2" y="163.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="116.2" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (34 samples, 0.13%)</title><rect x="114.6" y="211.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.6" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (34 samples, 0.13%)</title><rect x="114.6" y="195.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="117.6" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (700 samples, 2.74%)</title><rect x="116.2" y="211.0" width="32.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.2" y="222.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/1260444598.accept (700 samples, 2.74%)</title><rect x="116.2" y="195.0" width="32.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="119.2" y="206.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (700 samples, 2.74%)</title><rect x="116.2" y="179.0" width="32.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.2" y="190.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (155 samples, 0.61%)</title><rect x="116.2" y="163.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="119.2" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (155 samples, 0.61%)</title><rect x="116.2" y="147.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="119.2" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$394/1894267442.get$Lambda (155 samples, 0.61%)</title><rect x="116.2" y="131.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.2" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$394 (155 samples, 0.61%)</title><rect x="116.2" y="115.0" width="7.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="119.2" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (59 samples, 0.23%)</title><rect x="123.3" y="163.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.3" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$394/1894267442.accept (59 samples, 0.23%)</title><rect x="123.3" y="147.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.3" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (59 samples, 0.23%)</title><rect x="123.3" y="131.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.3" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (59 samples, 0.23%)</title><rect x="123.3" y="115.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.3" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (59 samples, 0.23%)</title><rect x="123.3" y="99.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="126.3" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (59 samples, 0.23%)</title><rect x="123.3" y="83.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.3" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (59 samples, 0.23%)</title><rect x="123.3" y="67.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.3" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (59 samples, 0.23%)</title><rect x="123.3" y="51.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="126.3" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (59 samples, 0.23%)</title><rect x="123.3" y="35.0" width="2.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="126.3" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (291 samples, 1.14%)</title><rect x="126.1" y="163.0" width="13.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.1" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (291 samples, 1.14%)</title><rect x="126.1" y="147.0" width="13.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="129.1" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (141 samples, 0.55%)</title><rect x="126.1" y="131.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="129.1" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (141 samples, 0.55%)</title><rect x="126.1" y="115.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="129.1" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (141 samples, 0.55%)</title><rect x="126.1" y="99.0" width="6.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="129.1" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (150 samples, 0.59%)</title><rect x="132.6" y="131.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.6" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (150 samples, 0.59%)</title><rect x="132.6" y="115.0" width="6.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="135.6" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (195 samples, 0.76%)</title><rect x="139.5" y="163.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.5" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (195 samples, 0.76%)</title><rect x="139.5" y="147.0" width="9.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="142.5" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (41 samples, 0.16%)</title><rect x="148.6" y="211.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.6" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (41 samples, 0.16%)</title><rect x="148.6" y="195.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="151.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (70 samples, 0.27%)</title><rect x="150.4" y="275.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.4" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (22 samples, 0.09%)</title><rect x="150.4" y="259.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.4" y="270.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.09%)</title><rect x="150.4" y="243.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="153.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.19%)</title><rect x="151.5" y="259.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="154.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (48 samples, 0.19%)</title><rect x="151.5" y="243.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="154.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/726181440.invoke (48 samples, 0.19%)</title><rect x="151.5" y="227.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.19%)</title><rect x="151.5" y="211.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.5" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (21 samples, 0.08%)</title><rect x="151.5" y="195.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="154.5" y="206.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.08%)</title><rect x="151.5" y="179.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="154.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (27 samples, 0.11%)</title><rect x="152.4" y="195.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (27 samples, 0.11%)</title><rect x="152.4" y="179.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.4" y="190.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.11%)</title><rect x="152.4" y="163.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="155.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (75 samples, 0.29%)</title><rect x="153.7" y="275.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (75 samples, 0.29%)</title><rect x="153.7" y="259.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="156.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (75 samples, 0.29%)</title><rect x="153.7" y="243.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (75 samples, 0.29%)</title><rect x="153.7" y="227.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/726181440.invoke (75 samples, 0.29%)</title><rect x="153.7" y="211.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (75 samples, 0.29%)</title><rect x="153.7" y="195.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (23 samples, 0.09%)</title><rect x="153.7" y="179.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.09%)</title><rect x="153.7" y="163.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="156.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (52 samples, 0.20%)</title><rect x="154.7" y="179.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (52 samples, 0.20%)</title><rect x="154.7" y="163.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="157.7" y="174.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.20%)</title><rect x="154.7" y="147.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="157.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (154 samples, 0.60%)</title><rect x="157.2" y="275.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.2" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (43 samples, 0.17%)</title><rect x="157.2" y="259.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="160.2" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (43 samples, 0.17%)</title><rect x="159.1" y="259.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="162.1" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (43 samples, 0.17%)</title><rect x="159.1" y="243.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="162.1" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (68 samples, 0.27%)</title><rect x="161.1" y="259.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="164.1" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (68 samples, 0.27%)</title><rect x="161.1" y="243.0" width="3.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="164.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.16%)</title><rect x="164.3" y="323.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.16%)</title><rect x="164.3" y="307.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="167.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.16%)</title><rect x="164.3" y="291.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="167.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (83 samples, 0.33%)</title><rect x="166.2" y="355.0" width="3.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="169.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (35 samples, 0.14%)</title><rect x="170.1" y="355.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="173.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (338 samples, 1.32%)</title><rect x="171.7" y="355.0" width="15.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.15%)</title><rect x="171.7" y="339.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.15%)</title><rect x="171.7" y="323.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$264/884570996.get$Lambda (16 samples, 0.06%)</title><rect x="171.7" y="307.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="174.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$264 (16 samples, 0.06%)</title><rect x="171.7" y="291.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="174.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$265/1675404960.get$Lambda (21 samples, 0.08%)</title><rect x="172.4" y="307.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$265 (21 samples, 0.08%)</title><rect x="172.4" y="291.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="175.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (38 samples, 0.15%)</title><rect x="173.4" y="339.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="176.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (34 samples, 0.13%)</title><rect x="175.1" y="339.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="178.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (40 samples, 0.16%)</title><rect x="176.7" y="339.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="179.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (92 samples, 0.36%)</title><rect x="178.6" y="339.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="181.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (92 samples, 0.36%)</title><rect x="178.6" y="323.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="181.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (92 samples, 0.36%)</title><rect x="178.6" y="307.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="181.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (92 samples, 0.36%)</title><rect x="178.6" y="291.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="181.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (92 samples, 0.36%)</title><rect x="178.6" y="275.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="181.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (92 samples, 0.36%)</title><rect x="178.6" y="259.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.run (92 samples, 0.36%)</title><rect x="178.6" y="243.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="181.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (92 samples, 0.36%)</title><rect x="178.6" y="227.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="181.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (92 samples, 0.36%)</title><rect x="178.6" y="211.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.13%)</title><rect x="178.6" y="195.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.13%)</title><rect x="178.6" y="179.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$276/1663239432.get$Lambda (14 samples, 0.05%)</title><rect x="178.6" y="163.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="181.6" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$276 (14 samples, 0.05%)</title><rect x="178.6" y="147.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="181.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$345/806691753.get$Lambda (20 samples, 0.08%)</title><rect x="179.2" y="163.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.2" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$345 (20 samples, 0.08%)</title><rect x="179.2" y="147.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="182.2" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (22 samples, 0.09%)</title><rect x="180.1" y="195.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="183.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (36 samples, 0.14%)</title><rect x="181.2" y="195.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="184.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (36 samples, 0.14%)</title><rect x="181.2" y="179.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="184.2" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (14 samples, 0.05%)</title><rect x="181.2" y="163.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="184.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (22 samples, 0.09%)</title><rect x="181.8" y="163.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="184.8" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (22 samples, 0.09%)</title><rect x="181.8" y="147.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="184.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (74 samples, 0.29%)</title><rect x="182.8" y="339.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.8" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (21 samples, 0.08%)</title><rect x="182.8" y="323.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="185.8" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (27 samples, 0.11%)</title><rect x="183.8" y="323.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="186.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (26 samples, 0.10%)</title><rect x="185.0" y="323.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="188.0" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (26 samples, 0.10%)</title><rect x="185.0" y="307.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="188.0" y="318.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.10%)</title><rect x="185.0" y="291.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="188.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (23 samples, 0.09%)</title><rect x="186.2" y="339.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="189.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.09%)</title><rect x="186.2" y="323.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="189.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.14%)</title><rect x="187.3" y="467.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.14%)</title><rect x="187.3" y="451.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="190.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (35 samples, 0.14%)</title><rect x="187.3" y="435.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="190.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (47 samples, 0.18%)</title><rect x="188.9" y="499.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (47 samples, 0.18%)</title><rect x="188.9" y="483.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (24 samples, 0.09%)</title><rect x="188.9" y="467.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="191.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.09%)</title><rect x="190.0" y="467.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.09%)</title><rect x="190.0" y="451.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.09%)</title><rect x="190.0" y="435.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="193.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,937 samples, 7.59%)</title><rect x="191.1" y="499.0" width="89.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="194.1" y="510.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.15%)</title><rect x="191.1" y="483.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="194.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.15%)</title><rect x="191.1" y="467.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="194.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$248/76633096.get$Lambda (19 samples, 0.07%)</title><rect x="191.1" y="451.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="194.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$248 (19 samples, 0.07%)</title><rect x="191.1" y="435.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="194.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$251/863438674.get$Lambda (18 samples, 0.07%)</title><rect x="192.0" y="451.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$251 (18 samples, 0.07%)</title><rect x="192.0" y="435.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="195.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (72 samples, 0.28%)</title><rect x="192.8" y="483.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (72 samples, 0.28%)</title><rect x="192.8" y="467.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$251/863438674.apply (32 samples, 0.13%)</title><rect x="192.8" y="451.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="195.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (32 samples, 0.13%)</title><rect x="192.8" y="435.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="195.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (32 samples, 0.13%)</title><rect x="192.8" y="419.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="195.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (32 samples, 0.13%)</title><rect x="192.8" y="403.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="195.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (40 samples, 0.16%)</title><rect x="194.3" y="451.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (40 samples, 0.16%)</title><rect x="194.3" y="435.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="197.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.16%)</title><rect x="194.3" y="419.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="197.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (26 samples, 0.10%)</title><rect x="196.1" y="483.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="199.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (26 samples, 0.10%)</title><rect x="196.1" y="467.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.10%)</title><rect x="196.1" y="451.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="199.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.10%)</title><rect x="196.1" y="435.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="199.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.10%)</title><rect x="196.1" y="419.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="199.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,802 samples, 7.06%)</title><rect x="197.3" y="483.0" width="83.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.3" y="494.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.08%)</title><rect x="197.3" y="467.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="200.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.08%)</title><rect x="197.3" y="451.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="200.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$171/1166121287.get$Lambda (21 samples, 0.08%)</title><rect x="197.3" y="435.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="200.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$171 (21 samples, 0.08%)</title><rect x="197.3" y="419.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="200.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,695 samples, 6.64%)</title><rect x="198.3" y="467.0" width="78.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.3" y="478.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,695 samples, 6.64%)</title><rect x="198.3" y="451.0" width="78.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="201.3" y="462.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,667 samples, 6.53%)</title><rect x="198.3" y="435.0" width="77.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="201.3" y="446.0">java/util..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$171/1166121287.apply (1,667 samples, 6.53%)</title><rect x="198.3" y="419.0" width="77.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.3" y="430.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (1,667 samples, 6.53%)</title><rect x="198.3" y="403.0" width="77.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="201.3" y="414.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (1,667 samples, 6.53%)</title><rect x="198.3" y="387.0" width="77.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="201.3" y="398.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.09%)</title><rect x="198.3" y="371.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="201.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.09%)</title><rect x="198.3" y="355.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$239/1117950874.get$Lambda (23 samples, 0.09%)</title><rect x="198.3" y="339.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="201.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$239 (23 samples, 0.09%)</title><rect x="198.3" y="323.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="201.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (681 samples, 2.67%)</title><rect x="199.4" y="371.0" width="31.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.4" y="382.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (681 samples, 2.67%)</title><rect x="199.4" y="355.0" width="31.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="202.4" y="366.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (681 samples, 2.67%)</title><rect x="199.4" y="339.0" width="31.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.4" y="350.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$239/1117950874.apply (656 samples, 2.57%)</title><rect x="199.4" y="323.0" width="30.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="202.4" y="334.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (656 samples, 2.57%)</title><rect x="199.4" y="307.0" width="30.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="202.4" y="318.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (656 samples, 2.57%)</title><rect x="199.4" y="291.0" width="30.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="202.4" y="302.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (656 samples, 2.57%)</title><rect x="199.4" y="275.0" width="30.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="202.4" y="286.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (398 samples, 1.56%)</title><rect x="199.4" y="259.0" width="18.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="202.4" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (101 samples, 0.40%)</title><rect x="199.4" y="243.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="202.4" y="254.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.09%)</title><rect x="199.4" y="227.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="202.4" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.15%)</title><rect x="200.4" y="227.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="203.4" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (38 samples, 0.15%)</title><rect x="200.4" y="211.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.4" y="222.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.15%)</title><rect x="200.4" y="195.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="203.4" y="206.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (41 samples, 0.16%)</title><rect x="202.2" y="227.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="205.2" y="238.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.16%)</title><rect x="202.2" y="211.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="205.2" y="222.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (26 samples, 0.10%)</title><rect x="204.0" y="243.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="207.0" y="254.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (26 samples, 0.10%)</title><rect x="204.0" y="227.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="207.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (190 samples, 0.74%)</title><rect x="205.2" y="243.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (23 samples, 0.09%)</title><rect x="205.2" y="227.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="208.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (137 samples, 0.54%)</title><rect x="206.3" y="227.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="209.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (137 samples, 0.54%)</title><rect x="206.3" y="211.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2007331442.linkToTargetMethod (101 samples, 0.40%)</title><rect x="206.3" y="195.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="209.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (101 samples, 0.40%)</title><rect x="206.3" y="179.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="209.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$22/1176735295.get$Lambda (101 samples, 0.40%)</title><rect x="206.3" y="163.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.3" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$22 (101 samples, 0.40%)</title><rect x="206.3" y="147.0" width="4.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="209.3" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (36 samples, 0.14%)</title><rect x="211.0" y="195.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$22/1176735295.run (36 samples, 0.14%)</title><rect x="211.0" y="179.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (36 samples, 0.14%)</title><rect x="211.0" y="163.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="214.0" y="174.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (36 samples, 0.14%)</title><rect x="211.0" y="147.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.0" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (36 samples, 0.14%)</title><rect x="211.0" y="131.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.0" y="142.0"></text>
</g>
<g>
<title>java.lang.Integer (36 samples, 0.14%)</title><rect x="211.0" y="115.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="214.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (30 samples, 0.12%)</title><rect x="212.6" y="227.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="215.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (30 samples, 0.12%)</title><rect x="212.6" y="211.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.6" y="222.0"></text>
</g>
<g>
<title>int[] (30 samples, 0.12%)</title><rect x="212.6" y="195.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="215.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (81 samples, 0.32%)</title><rect x="214.0" y="243.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="217.0" y="254.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.13%)</title><rect x="214.0" y="227.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="217.0" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (47 samples, 0.18%)</title><rect x="215.6" y="227.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (47 samples, 0.18%)</title><rect x="215.6" y="211.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.6" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (47 samples, 0.18%)</title><rect x="215.6" y="195.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="218.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (258 samples, 1.01%)</title><rect x="217.8" y="259.0" width="11.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="220.8" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (71 samples, 0.28%)</title><rect x="217.8" y="243.0" width="3.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="220.8" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (75 samples, 0.29%)</title><rect x="221.1" y="243.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="224.1" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (75 samples, 0.29%)</title><rect x="221.1" y="227.0" width="3.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="224.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (112 samples, 0.44%)</title><rect x="224.5" y="243.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.5" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (112 samples, 0.44%)</title><rect x="224.5" y="227.0" width="5.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="227.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.10%)</title><rect x="229.7" y="323.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="232.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.10%)</title><rect x="229.7" y="307.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="232.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.10%)</title><rect x="229.7" y="291.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="232.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (963 samples, 3.77%)</title><rect x="230.9" y="371.0" width="44.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="233.9" y="382.0">jdk/..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (79 samples, 0.31%)</title><rect x="230.9" y="355.0" width="3.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="233.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (854 samples, 3.35%)</title><rect x="234.5" y="355.0" width="39.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.5" y="366.0">jdk..</text>
</g>
<g>
<title>java.lang.Object (14 samples, 0.05%)</title><rect x="234.5" y="339.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="237.5" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList (26 samples, 0.10%)</title><rect x="235.2" y="339.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="238.2" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (21 samples, 0.08%)</title><rect x="236.4" y="339.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="239.4" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (38 samples, 0.15%)</title><rect x="237.3" y="339.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="240.3" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (38 samples, 0.15%)</title><rect x="237.3" y="323.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.3" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (38 samples, 0.15%)</title><rect x="237.3" y="307.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="240.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (21 samples, 0.08%)</title><rect x="239.1" y="339.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="242.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (21 samples, 0.08%)</title><rect x="239.1" y="323.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="242.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (73 samples, 0.29%)</title><rect x="240.1" y="339.0" width="3.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="243.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (53 samples, 0.21%)</title><rect x="243.4" y="339.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="246.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (36 samples, 0.14%)</title><rect x="245.9" y="339.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="248.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (55 samples, 0.22%)</title><rect x="247.6" y="339.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="250.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (254 samples, 1.00%)</title><rect x="250.1" y="339.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="253.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (17 samples, 0.07%)</title><rect x="250.1" y="323.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="253.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (21 samples, 0.08%)</title><rect x="250.9" y="323.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="253.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (15 samples, 0.06%)</title><rect x="251.9" y="323.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="254.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (12 samples, 0.05%)</title><rect x="252.6" y="323.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="255.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.04%)</title><rect x="253.1" y="323.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.04%)</title><rect x="253.1" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="256.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.get$Lambda (9 samples, 0.04%)</title><rect x="253.1" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$235 (9 samples, 0.04%)</title><rect x="253.1" y="275.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="256.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (33 samples, 0.13%)</title><rect x="253.5" y="323.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="256.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (33 samples, 0.13%)</title><rect x="253.5" y="307.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="256.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (22 samples, 0.09%)</title><rect x="255.1" y="323.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="258.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.10%)</title><rect x="256.1" y="323.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="259.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (100 samples, 0.39%)</title><rect x="257.2" y="323.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (22 samples, 0.09%)</title><rect x="257.2" y="307.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="260.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (31 samples, 0.12%)</title><rect x="258.2" y="307.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="261.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (17 samples, 0.07%)</title><rect x="259.7" y="307.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="262.7" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (17 samples, 0.07%)</title><rect x="259.7" y="291.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="262.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (30 samples, 0.12%)</title><rect x="260.5" y="307.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="263.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (7 samples, 0.03%)</title><rect x="260.5" y="291.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="263.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (16 samples, 0.06%)</title><rect x="260.8" y="291.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="263.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (7 samples, 0.03%)</title><rect x="261.5" y="291.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="264.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (175 samples, 0.69%)</title><rect x="261.9" y="339.0" width="8.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="264.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (13 samples, 0.05%)</title><rect x="261.9" y="323.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="264.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (16 samples, 0.06%)</title><rect x="262.5" y="323.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="265.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (17 samples, 0.07%)</title><rect x="263.2" y="323.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="266.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (21 samples, 0.08%)</title><rect x="264.0" y="323.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (21 samples, 0.08%)</title><rect x="264.0" y="307.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="267.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (108 samples, 0.42%)</title><rect x="265.0" y="323.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="268.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (23 samples, 0.09%)</title><rect x="265.0" y="307.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="268.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (30 samples, 0.12%)</title><rect x="266.0" y="307.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="269.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (19 samples, 0.07%)</title><rect x="267.4" y="307.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (19 samples, 0.07%)</title><rect x="267.4" y="291.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="270.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (36 samples, 0.14%)</title><rect x="268.3" y="307.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="271.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (10 samples, 0.04%)</title><rect x="268.3" y="291.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="271.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (14 samples, 0.05%)</title><rect x="268.7" y="291.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="271.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (12 samples, 0.05%)</title><rect x="269.4" y="291.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="272.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (24 samples, 0.09%)</title><rect x="269.9" y="339.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (24 samples, 0.09%)</title><rect x="269.9" y="323.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="272.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (24 samples, 0.09%)</title><rect x="269.9" y="307.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="272.9" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (24 samples, 0.09%)</title><rect x="269.9" y="291.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="272.9" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (24 samples, 0.09%)</title><rect x="269.9" y="275.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (24 samples, 0.09%)</title><rect x="269.9" y="259.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="272.9" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (24 samples, 0.09%)</title><rect x="269.9" y="243.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="272.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (64 samples, 0.25%)</title><rect x="271.1" y="339.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="274.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2007331442.linkToTargetMethod (21 samples, 0.08%)</title><rect x="271.1" y="323.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.08%)</title><rect x="271.1" y="307.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$177/1022977529.get$Lambda (21 samples, 0.08%)</title><rect x="271.1" y="291.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$177 (21 samples, 0.08%)</title><rect x="271.1" y="275.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="274.1" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (43 samples, 0.17%)</title><rect x="272.0" y="323.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="275.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$177/1022977529.run (43 samples, 0.17%)</title><rect x="272.0" y="307.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="275.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (43 samples, 0.17%)</title><rect x="272.0" y="291.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="275.0" y="302.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (12 samples, 0.05%)</title><rect x="272.0" y="275.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="275.0" y="286.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (31 samples, 0.12%)</title><rect x="272.6" y="275.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="275.6" y="286.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (15 samples, 0.06%)</title><rect x="272.6" y="259.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="275.6" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (16 samples, 0.06%)</title><rect x="273.3" y="259.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="276.3" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (16 samples, 0.06%)</title><rect x="273.3" y="243.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="276.3" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (16 samples, 0.06%)</title><rect x="273.3" y="227.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="276.3" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (16 samples, 0.06%)</title><rect x="273.3" y="211.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.3" y="222.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (16 samples, 0.06%)</title><rect x="273.3" y="195.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="276.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (30 samples, 0.12%)</title><rect x="274.0" y="355.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="277.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.12%)</title><rect x="274.0" y="339.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="277.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.11%)</title><rect x="275.4" y="435.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.11%)</title><rect x="275.4" y="419.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.11%)</title><rect x="275.4" y="403.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="278.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (33 samples, 0.13%)</title><rect x="276.7" y="467.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (33 samples, 0.13%)</title><rect x="276.7" y="451.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.13%)</title><rect x="276.7" y="435.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="279.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.13%)</title><rect x="276.7" y="419.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="279.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.13%)</title><rect x="276.7" y="403.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="279.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (53 samples, 0.21%)</title><rect x="278.2" y="467.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (29 samples, 0.11%)</title><rect x="278.2" y="451.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (29 samples, 0.11%)</title><rect x="278.2" y="435.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1026084144.linkToTargetMethod (29 samples, 0.11%)</title><rect x="278.2" y="419.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1999192409.invoke (29 samples, 0.11%)</title><rect x="278.2" y="403.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1032641801.invoke (29 samples, 0.11%)</title><rect x="278.2" y="387.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.11%)</title><rect x="278.2" y="371.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="281.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (29 samples, 0.11%)</title><rect x="278.2" y="355.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="281.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (29 samples, 0.11%)</title><rect x="278.2" y="339.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="281.2" y="350.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.11%)</title><rect x="278.2" y="323.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="281.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (24 samples, 0.09%)</title><rect x="279.6" y="451.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.09%)</title><rect x="279.6" y="435.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="282.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (31 samples, 0.12%)</title><rect x="280.7" y="547.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.7" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (31 samples, 0.12%)</title><rect x="280.7" y="531.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="283.7" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (31 samples, 0.12%)</title><rect x="280.7" y="515.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.7" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (31 samples, 0.12%)</title><rect x="280.7" y="499.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="283.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (136 samples, 0.53%)</title><rect x="282.1" y="547.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="285.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (96 samples, 0.38%)</title><rect x="282.1" y="531.0" width="4.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="285.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (40 samples, 0.16%)</title><rect x="286.5" y="531.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="289.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (40 samples, 0.16%)</title><rect x="286.5" y="515.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.5" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.now (16 samples, 0.06%)</title><rect x="286.5" y="499.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.5" y="510.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (16 samples, 0.06%)</title><rect x="286.5" y="483.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.5" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (16 samples, 0.06%)</title><rect x="286.5" y="467.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.5" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.create (16 samples, 0.06%)</title><rect x="286.5" y="451.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.5" y="462.0"></text>
</g>
<g>
<title>java.time.Instant (16 samples, 0.06%)</title><rect x="286.5" y="435.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="289.5" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (24 samples, 0.09%)</title><rect x="287.3" y="499.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="290.3" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (24 samples, 0.09%)</title><rect x="287.3" y="483.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.3" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (24 samples, 0.09%)</title><rect x="287.3" y="467.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="290.3" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (24 samples, 0.09%)</title><rect x="287.3" y="451.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="290.3" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (24 samples, 0.09%)</title><rect x="287.3" y="435.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.3" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (24 samples, 0.09%)</title><rect x="287.3" y="419.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="290.3" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (24 samples, 0.09%)</title><rect x="287.3" y="403.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.3" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (24 samples, 0.09%)</title><rect x="287.3" y="387.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.3" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (24 samples, 0.09%)</title><rect x="287.3" y="371.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="290.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$160/1885655202.get (6,332 samples, 24.82%)</title><rect x="288.4" y="627.0" width="292.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="291.4" y="638.0">ru/mail/polis/service/mariarheon/AsyncS..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$processRequest$2 (6,332 samples, 24.82%)</title><rect x="288.4" y="611.0" width="292.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="291.4" y="622.0">ru/mail/polis/service/mariarheon/AsyncS..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (6,332 samples, 24.82%)</title><rect x="288.4" y="595.0" width="292.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="291.4" y="606.0">ru/mail/polis/service/mariarheon/AsyncS..</text>
</g>
<g>
<title>java/lang/String.getBytes (1,430 samples, 5.60%)</title><rect x="288.4" y="579.0" width="66.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="291.4" y="590.0">java/la..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,430 samples, 5.60%)</title><rect x="288.4" y="563.0" width="66.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.4" y="574.0">java/la..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,430 samples, 5.60%)</title><rect x="288.4" y="547.0" width="66.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.4" y="558.0">java/la..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,430 samples, 5.60%)</title><rect x="288.4" y="531.0" width="66.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="291.4" y="542.0">java/ut..</text>
</g>
<g>
<title>byte[] (1,430 samples, 5.60%)</title><rect x="288.4" y="515.0" width="66.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="291.4" y="526.0">byte[]</text>
</g>
<g>
<title>one/nio/http/Response.ok (2,032 samples, 7.96%)</title><rect x="354.6" y="579.0" width="93.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="357.6" y="590.0">one/nio/htt..</text>
</g>
<g>
<title>one.nio.http.Response (372 samples, 1.46%)</title><rect x="354.6" y="563.0" width="17.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="357.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,660 samples, 6.51%)</title><rect x="371.8" y="563.0" width="76.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="374.8" y="574.0">one/nio/..</text>
</g>
<g>
<title>byte[] (713 samples, 2.79%)</title><rect x="371.8" y="547.0" width="33.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="374.8" y="558.0">by..</text>
</g>
<g>
<title>java.lang.String[] (536 samples, 2.10%)</title><rect x="404.8" y="547.0" width="24.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="407.8" y="558.0">j..</text>
</g>
<g>
<title>java.lang.String (411 samples, 1.61%)</title><rect x="429.5" y="547.0" width="19.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="432.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (426 samples, 1.67%)</title><rect x="448.5" y="579.0" width="19.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.5" y="590.0"></text>
</g>
<g>
<title>byte[] (426 samples, 1.67%)</title><rect x="448.5" y="563.0" width="19.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="451.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (840 samples, 3.29%)</title><rect x="468.2" y="579.0" width="38.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.2" y="590.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (840 samples, 3.29%)</title><rect x="468.2" y="563.0" width="38.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.2" y="574.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (840 samples, 3.29%)</title><rect x="468.2" y="547.0" width="38.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="471.2" y="558.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (840 samples, 3.29%)</title><rect x="468.2" y="531.0" width="38.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="471.2" y="542.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (1,604 samples, 6.29%)</title><rect x="507.1" y="579.0" width="74.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="510.1" y="590.0">ru/mail/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (407 samples, 1.60%)</title><rect x="507.1" y="563.0" width="18.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="510.1" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (407 samples, 1.60%)</title><rect x="507.1" y="547.0" width="18.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="510.1" y="558.0"></text>
</g>
<g>
<title>byte[] (407 samples, 1.60%)</title><rect x="507.1" y="531.0" width="18.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="510.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (392 samples, 1.54%)</title><rect x="525.9" y="563.0" width="18.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="528.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (392 samples, 1.54%)</title><rect x="525.9" y="547.0" width="18.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="528.9" y="558.0"></text>
</g>
<g>
<title>byte[] (392 samples, 1.54%)</title><rect x="525.9" y="531.0" width="18.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="528.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (805 samples, 3.15%)</title><rect x="544.0" y="563.0" width="37.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="547.0" y="574.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (805 samples, 3.15%)</title><rect x="544.0" y="547.0" width="37.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="547.0" y="558.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (805 samples, 3.15%)</title><rect x="544.0" y="531.0" width="37.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.0" y="542.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (805 samples, 3.15%)</title><rect x="544.0" y="515.0" width="37.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="547.0" y="526.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (681 samples, 2.67%)</title><rect x="581.3" y="643.0" width="31.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.3" y="654.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (545 samples, 2.14%)</title><rect x="581.3" y="627.0" width="25.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="584.3" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (539 samples, 2.11%)</title><rect x="581.3" y="611.0" width="24.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.3" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (539 samples, 2.11%)</title><rect x="581.3" y="595.0" width="24.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="584.3" y="606.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (539 samples, 2.11%)</title><rect x="581.3" y="579.0" width="24.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="584.3" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (6 samples, 0.02%)</title><rect x="606.2" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="609.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (6 samples, 0.02%)</title><rect x="606.2" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (6 samples, 0.02%)</title><rect x="606.2" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="609.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (6 samples, 0.02%)</title><rect x="606.2" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="609.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.02%)</title><rect x="606.2" y="547.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="609.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (136 samples, 0.53%)</title><rect x="606.5" y="627.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="609.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (136 samples, 0.53%)</title><rect x="606.5" y="611.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (136 samples, 0.53%)</title><rect x="606.5" y="595.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (136 samples, 0.53%)</title><rect x="606.5" y="579.0" width="6.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="609.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$399/1148631027.run (536 samples, 2.10%)</title><rect x="612.8" y="643.0" width="24.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.8" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (536 samples, 2.10%)</title><rect x="612.8" y="627.0" width="24.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="615.8" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (536 samples, 2.10%)</title><rect x="612.8" y="611.0" width="24.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="615.8" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (536 samples, 2.10%)</title><rect x="612.8" y="595.0" width="24.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.8" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (536 samples, 2.10%)</title><rect x="612.8" y="579.0" width="24.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="615.8" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (536 samples, 2.10%)</title><rect x="612.8" y="563.0" width="24.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="615.8" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (536 samples, 2.10%)</title><rect x="612.8" y="547.0" width="24.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="615.8" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (536 samples, 2.10%)</title><rect x="612.8" y="531.0" width="24.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="615.8" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (536 samples, 2.10%)</title><rect x="612.8" y="515.0" width="24.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="615.8" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (536 samples, 2.10%)</title><rect x="612.8" y="499.0" width="24.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.8" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (536 samples, 2.10%)</title><rect x="612.8" y="483.0" width="24.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="615.8" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (488 samples, 1.91%)</title><rect x="612.8" y="467.0" width="22.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="615.8" y="478.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (70 samples, 0.27%)</title><rect x="612.8" y="451.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="615.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (70 samples, 0.27%)</title><rect x="612.8" y="435.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$401/671449820.get$Lambda (52 samples, 0.20%)</title><rect x="612.8" y="419.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="615.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$401 (52 samples, 0.20%)</title><rect x="612.8" y="403.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="615.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$419/1903244934.get$Lambda (18 samples, 0.07%)</title><rect x="615.2" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="618.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$419 (18 samples, 0.07%)</title><rect x="615.2" y="403.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="618.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (418 samples, 1.64%)</title><rect x="616.0" y="451.0" width="19.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (34 samples, 0.13%)</title><rect x="616.0" y="435.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="619.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (384 samples, 1.50%)</title><rect x="617.6" y="435.0" width="17.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (384 samples, 1.50%)</title><rect x="617.6" y="419.0" width="17.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (384 samples, 1.50%)</title><rect x="617.6" y="403.0" width="17.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="620.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (162 samples, 0.63%)</title><rect x="617.6" y="387.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="620.6" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (58 samples, 0.23%)</title><rect x="617.6" y="371.0" width="2.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="620.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$411/2132316026.apply (103 samples, 0.40%)</title><rect x="620.3" y="371.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (103 samples, 0.40%)</title><rect x="620.3" y="355.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="623.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (103 samples, 0.40%)</title><rect x="620.3" y="339.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.3" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (20 samples, 0.08%)</title><rect x="620.3" y="323.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="623.3" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (20 samples, 0.08%)</title><rect x="620.3" y="307.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.3" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (20 samples, 0.08%)</title><rect x="620.3" y="291.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="623.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (83 samples, 0.33%)</title><rect x="621.2" y="323.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="624.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.07%)</title><rect x="621.2" y="307.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="624.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.07%)</title><rect x="621.2" y="291.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$420/992012201.get$Lambda (19 samples, 0.07%)</title><rect x="621.2" y="275.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$420 (19 samples, 0.07%)</title><rect x="621.2" y="259.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="624.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (64 samples, 0.25%)</title><rect x="622.1" y="307.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (64 samples, 0.25%)</title><rect x="622.1" y="291.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (34 samples, 0.13%)</title><rect x="622.1" y="275.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="625.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.12%)</title><rect x="623.6" y="275.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="626.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.12%)</title><rect x="623.6" y="259.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.12%)</title><rect x="623.6" y="243.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="626.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (222 samples, 0.87%)</title><rect x="625.1" y="387.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (222 samples, 0.87%)</title><rect x="625.1" y="371.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="628.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$364/22668537.apply (222 samples, 0.87%)</title><rect x="625.1" y="355.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (222 samples, 0.87%)</title><rect x="625.1" y="339.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="628.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (222 samples, 0.87%)</title><rect x="625.1" y="323.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$161/2060274688.apply (222 samples, 0.87%)</title><rect x="625.1" y="307.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (222 samples, 0.87%)</title><rect x="625.1" y="291.0" width="10.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="625.1" y="275.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="625.1" y="259.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$411/2132316026.get$Lambda (10 samples, 0.04%)</title><rect x="625.1" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="628.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$411 (10 samples, 0.04%)</title><rect x="625.1" y="227.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="628.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (65 samples, 0.25%)</title><rect x="625.5" y="275.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (65 samples, 0.25%)</title><rect x="625.5" y="259.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (38 samples, 0.15%)</title><rect x="625.5" y="243.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="628.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.11%)</title><rect x="627.3" y="243.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.11%)</title><rect x="627.3" y="227.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.11%)</title><rect x="627.3" y="211.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="630.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (69 samples, 0.27%)</title><rect x="628.5" y="275.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.06%)</title><rect x="628.5" y="259.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="631.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.06%)</title><rect x="628.5" y="243.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="631.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$414/1488698859.get$Lambda (16 samples, 0.06%)</title><rect x="628.5" y="227.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$414 (16 samples, 0.06%)</title><rect x="628.5" y="211.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="631.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (53 samples, 0.21%)</title><rect x="629.3" y="259.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="632.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (53 samples, 0.21%)</title><rect x="629.3" y="243.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.3" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (31 samples, 0.12%)</title><rect x="629.3" y="227.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="632.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="630.7" y="227.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="630.7" y="211.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="633.7" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.09%)</title><rect x="630.7" y="195.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="633.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (78 samples, 0.31%)</title><rect x="631.7" y="275.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="634.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (43 samples, 0.17%)</title><rect x="631.7" y="259.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (21 samples, 0.08%)</title><rect x="631.7" y="243.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="634.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (22 samples, 0.09%)</title><rect x="632.7" y="243.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="635.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (22 samples, 0.09%)</title><rect x="632.7" y="227.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.09%)</title><rect x="632.7" y="211.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="635.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (35 samples, 0.14%)</title><rect x="633.7" y="259.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (20 samples, 0.08%)</title><rect x="633.7" y="243.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="636.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (15 samples, 0.06%)</title><rect x="634.6" y="243.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (15 samples, 0.06%)</title><rect x="634.6" y="227.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="637.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (15 samples, 0.06%)</title><rect x="634.6" y="211.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (15 samples, 0.06%)</title><rect x="634.6" y="195.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="637.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (15 samples, 0.06%)</title><rect x="634.6" y="179.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.6" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (15 samples, 0.06%)</title><rect x="634.6" y="163.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="637.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (48 samples, 0.19%)</title><rect x="635.3" y="467.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (48 samples, 0.19%)</title><rect x="635.3" y="451.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (48 samples, 0.19%)</title><rect x="635.3" y="435.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="638.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (48 samples, 0.19%)</title><rect x="635.3" y="419.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="638.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (48 samples, 0.19%)</title><rect x="635.3" y="403.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="638.3" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (48 samples, 0.19%)</title><rect x="635.3" y="387.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.3" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (19 samples, 0.07%)</title><rect x="635.3" y="371.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="638.3" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (19 samples, 0.07%)</title><rect x="635.3" y="355.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="638.3" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (29 samples, 0.11%)</title><rect x="636.2" y="371.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.2" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (29 samples, 0.11%)</title><rect x="636.2" y="355.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="639.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3,471 samples, 13.60%)</title><rect x="637.6" y="643.0" width="160.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.6" y="654.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3,471 samples, 13.60%)</title><rect x="637.6" y="627.0" width="160.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.6" y="638.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,861 samples, 11.21%)</title><rect x="637.6" y="611.0" width="132.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="640.6" y="622.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.run (2,861 samples, 11.21%)</title><rect x="637.6" y="595.0" width="132.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.6" y="606.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,861 samples, 11.21%)</title><rect x="637.6" y="579.0" width="132.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.6" y="590.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (62 samples, 0.24%)</title><rect x="637.6" y="563.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (62 samples, 0.24%)</title><rect x="637.6" y="547.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (62 samples, 0.24%)</title><rect x="637.6" y="531.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="640.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (62 samples, 0.24%)</title><rect x="637.6" y="515.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="640.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1059063940.linkToTargetMethod (31 samples, 0.12%)</title><rect x="637.6" y="499.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="640.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1641313620.invoke (31 samples, 0.12%)</title><rect x="637.6" y="483.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.12%)</title><rect x="637.6" y="467.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (31 samples, 0.12%)</title><rect x="637.6" y="451.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (31 samples, 0.12%)</title><rect x="637.6" y="435.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="640.6" y="446.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.12%)</title><rect x="637.6" y="419.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="640.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (31 samples, 0.12%)</title><rect x="639.0" y="499.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.12%)</title><rect x="639.0" y="483.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="642.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.12%)</title><rect x="639.0" y="467.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$400/53598621.get$Lambda (31 samples, 0.12%)</title><rect x="639.0" y="451.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$400 (31 samples, 0.12%)</title><rect x="639.0" y="435.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="642.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2,799 samples, 10.97%)</title><rect x="640.4" y="563.0" width="129.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.4" y="574.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,799 samples, 10.97%)</title><rect x="640.4" y="547.0" width="129.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="643.4" y="558.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,799 samples, 10.97%)</title><rect x="640.4" y="531.0" width="129.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.4" y="542.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,799 samples, 10.97%)</title><rect x="640.4" y="515.0" width="129.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="643.4" y="526.0">jdk/internal/net..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,342 samples, 5.26%)</title><rect x="640.4" y="499.0" width="62.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.4" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,342 samples, 5.26%)</title><rect x="640.4" y="483.0" width="62.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.4" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,342 samples, 5.26%)</title><rect x="640.4" y="467.0" width="62.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.4" y="478.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,342 samples, 5.26%)</title><rect x="640.4" y="451.0" width="62.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.4" y="462.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,342 samples, 5.26%)</title><rect x="640.4" y="435.0" width="62.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="643.4" y="446.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,342 samples, 5.26%)</title><rect x="640.4" y="419.0" width="62.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="643.4" y="430.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,342 samples, 5.26%)</title><rect x="640.4" y="403.0" width="62.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.4" y="414.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,299 samples, 5.09%)</title><rect x="640.4" y="387.0" width="60.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.4" y="398.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,299 samples, 5.09%)</title><rect x="640.4" y="371.0" width="60.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.4" y="382.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,268 samples, 4.97%)</title><rect x="640.4" y="355.0" width="58.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.4" y="366.0">java/u..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (28 samples, 0.11%)</title><rect x="640.4" y="339.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="643.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$414/1488698859.apply (25 samples, 0.10%)</title><rect x="641.7" y="339.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="644.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (25 samples, 0.10%)</title><rect x="641.7" y="323.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (25 samples, 0.10%)</title><rect x="641.7" y="307.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (25 samples, 0.10%)</title><rect x="641.7" y="291.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="644.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.10%)</title><rect x="641.7" y="275.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="644.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$142/558125001.apply (1,170 samples, 4.59%)</title><rect x="642.9" y="339.0" width="54.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.9" y="350.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1,170 samples, 4.59%)</title><rect x="642.9" y="323.0" width="54.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.9" y="334.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.08%)</title><rect x="642.9" y="307.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.08%)</title><rect x="642.9" y="291.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="645.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$574/1641231001.get$Lambda (21 samples, 0.08%)</title><rect x="642.9" y="275.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$574 (21 samples, 0.08%)</title><rect x="642.9" y="259.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="645.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (53 samples, 0.21%)</title><rect x="643.8" y="307.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (53 samples, 0.21%)</title><rect x="643.8" y="291.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (24 samples, 0.09%)</title><rect x="643.8" y="275.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="646.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.11%)</title><rect x="645.0" y="275.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.11%)</title><rect x="645.0" y="259.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="648.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.11%)</title><rect x="645.0" y="243.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="648.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1,096 samples, 4.30%)</title><rect x="646.3" y="307.0" width="50.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.3" y="318.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.05%)</title><rect x="646.3" y="291.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="649.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.05%)</title><rect x="646.3" y="275.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="649.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$567/756387025.get$Lambda (14 samples, 0.05%)</title><rect x="646.3" y="259.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="649.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$567 (14 samples, 0.05%)</title><rect x="646.3" y="243.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="649.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (61 samples, 0.24%)</title><rect x="646.9" y="291.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (61 samples, 0.24%)</title><rect x="646.9" y="275.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="649.9" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (34 samples, 0.13%)</title><rect x="646.9" y="259.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="649.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.11%)</title><rect x="648.5" y="259.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="651.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.11%)</title><rect x="648.5" y="243.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="651.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.11%)</title><rect x="648.5" y="227.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="651.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1,021 samples, 4.00%)</title><rect x="649.8" y="291.0" width="47.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.8" y="302.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$120/169726349.apply (79 samples, 0.31%)</title><rect x="649.8" y="275.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.8" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (79 samples, 0.31%)</title><rect x="649.8" y="259.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="652.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (79 samples, 0.31%)</title><rect x="649.8" y="243.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="652.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (38 samples, 0.15%)</title><rect x="649.8" y="227.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="652.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (41 samples, 0.16%)</title><rect x="651.5" y="227.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.5" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (19 samples, 0.07%)</title><rect x="651.5" y="211.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="654.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.09%)</title><rect x="652.4" y="211.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="655.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (942 samples, 3.69%)</title><rect x="653.4" y="275.0" width="43.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.4" y="286.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.10%)</title><rect x="653.4" y="259.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.10%)</title><rect x="653.4" y="243.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="656.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$553/735033109.get$Lambda (16 samples, 0.06%)</title><rect x="653.4" y="227.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="656.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$553 (16 samples, 0.06%)</title><rect x="653.4" y="211.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="656.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$559/1437695714.get$Lambda (9 samples, 0.04%)</title><rect x="654.2" y="227.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$559 (9 samples, 0.04%)</title><rect x="654.2" y="211.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="657.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1662920402.linkToTargetMethod (25 samples, 0.10%)</title><rect x="654.6" y="259.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="657.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/372384247.invokeStatic (25 samples, 0.10%)</title><rect x="654.6" y="243.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$496/855121012.get$Lambda (25 samples, 0.10%)</title><rect x="654.6" y="227.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$496 (25 samples, 0.10%)</title><rect x="654.6" y="211.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="657.6" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (191 samples, 0.75%)</title><rect x="655.7" y="259.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.7" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (76 samples, 0.30%)</title><rect x="655.7" y="243.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.7" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (21 samples, 0.08%)</title><rect x="655.7" y="227.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.7" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (21 samples, 0.08%)</title><rect x="655.7" y="211.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="658.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (55 samples, 0.22%)</title><rect x="656.7" y="227.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.7" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (55 samples, 0.22%)</title><rect x="656.7" y="211.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="659.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (62 samples, 0.24%)</title><rect x="659.2" y="243.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="662.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (62 samples, 0.24%)</title><rect x="659.2" y="227.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (62 samples, 0.24%)</title><rect x="659.2" y="211.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="662.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (24 samples, 0.09%)</title><rect x="659.2" y="195.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="662.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (24 samples, 0.09%)</title><rect x="659.2" y="179.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (24 samples, 0.09%)</title><rect x="659.2" y="163.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="662.2" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (24 samples, 0.09%)</title><rect x="659.2" y="147.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="662.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$477/1139294474.get (23 samples, 0.09%)</title><rect x="660.4" y="195.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="663.4" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (23 samples, 0.09%)</title><rect x="660.4" y="179.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="663.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (15 samples, 0.06%)</title><rect x="661.4" y="195.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="664.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (15 samples, 0.06%)</title><rect x="661.4" y="179.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="664.4" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (15 samples, 0.06%)</title><rect x="661.4" y="163.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="664.4" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (15 samples, 0.06%)</title><rect x="661.4" y="147.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="664.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (53 samples, 0.21%)</title><rect x="662.1" y="243.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="665.1" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (53 samples, 0.21%)</title><rect x="662.1" y="227.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="665.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (132 samples, 0.52%)</title><rect x="664.6" y="259.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="667.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (60 samples, 0.24%)</title><rect x="664.6" y="243.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="667.6" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (31 samples, 0.12%)</title><rect x="664.6" y="227.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="667.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.11%)</title><rect x="666.0" y="227.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.11%)</title><rect x="666.0" y="211.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.11%)</title><rect x="666.0" y="195.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="669.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (72 samples, 0.28%)</title><rect x="667.3" y="243.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="670.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (72 samples, 0.28%)</title><rect x="667.3" y="227.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="670.3" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (42 samples, 0.16%)</title><rect x="667.3" y="211.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="670.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.12%)</title><rect x="669.3" y="211.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="672.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.12%)</title><rect x="669.3" y="195.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.3" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.12%)</title><rect x="669.3" y="179.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="672.3" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (22 samples, 0.09%)</title><rect x="670.7" y="259.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="673.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (23 samples, 0.09%)</title><rect x="671.7" y="259.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="674.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.13%)</title><rect x="672.7" y="259.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="675.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (10 samples, 0.04%)</title><rect x="674.3" y="259.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="677.3" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (10 samples, 0.04%)</title><rect x="674.3" y="243.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="677.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (481 samples, 1.89%)</title><rect x="674.7" y="259.0" width="22.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="677.7" y="270.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$496/855121012.run (481 samples, 1.89%)</title><rect x="674.7" y="243.0" width="22.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.7" y="254.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (481 samples, 1.89%)</title><rect x="674.7" y="227.0" width="22.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="677.7" y="238.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (63 samples, 0.25%)</title><rect x="674.7" y="211.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.25%)</title><rect x="674.7" y="195.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="677.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$502/1814071412.get$Lambda (9 samples, 0.04%)</title><rect x="674.7" y="179.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="677.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$502 (9 samples, 0.04%)</title><rect x="674.7" y="163.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="677.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$530/1618478091.get$Lambda (26 samples, 0.10%)</title><rect x="675.1" y="179.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.1" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$530 (26 samples, 0.10%)</title><rect x="675.1" y="163.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="678.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$541/52399997.get$Lambda (28 samples, 0.11%)</title><rect x="676.4" y="179.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.4" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$541 (28 samples, 0.11%)</title><rect x="676.4" y="163.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="679.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (54 samples, 0.21%)</title><rect x="677.6" y="211.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (54 samples, 0.21%)</title><rect x="677.6" y="195.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.6" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (30 samples, 0.12%)</title><rect x="677.6" y="179.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="680.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.09%)</title><rect x="679.0" y="179.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="682.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.09%)</title><rect x="679.0" y="163.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="682.0" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.09%)</title><rect x="679.0" y="147.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="682.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (30 samples, 0.12%)</title><rect x="680.1" y="211.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="683.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (24 samples, 0.09%)</title><rect x="681.5" y="211.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="684.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.09%)</title><rect x="681.5" y="195.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="684.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (75 samples, 0.29%)</title><rect x="682.6" y="211.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (75 samples, 0.29%)</title><rect x="682.6" y="195.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.04%)</title><rect x="682.6" y="179.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="685.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.04%)</title><rect x="682.6" y="163.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$547/987248172.get$Lambda (11 samples, 0.04%)</title><rect x="682.6" y="147.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="685.6" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$547 (11 samples, 0.04%)</title><rect x="682.6" y="131.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="685.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (64 samples, 0.25%)</title><rect x="683.1" y="179.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="686.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (64 samples, 0.25%)</title><rect x="683.1" y="163.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="686.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (64 samples, 0.25%)</title><rect x="683.1" y="147.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.1" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (40 samples, 0.16%)</title><rect x="683.1" y="131.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="686.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.09%)</title><rect x="685.0" y="131.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="688.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.09%)</title><rect x="685.0" y="115.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.0" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.09%)</title><rect x="685.0" y="99.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="688.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (90 samples, 0.35%)</title><rect x="686.1" y="211.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="689.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (90 samples, 0.35%)</title><rect x="686.1" y="195.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="689.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/687059528.invoke (90 samples, 0.35%)</title><rect x="686.1" y="179.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (90 samples, 0.35%)</title><rect x="686.1" y="163.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.1" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (17 samples, 0.07%)</title><rect x="686.1" y="147.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="689.1" y="158.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.07%)</title><rect x="686.1" y="131.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="689.1" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (73 samples, 0.29%)</title><rect x="686.9" y="147.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (73 samples, 0.29%)</title><rect x="686.9" y="131.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.9" y="142.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.29%)</title><rect x="686.9" y="115.0" width="3.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="689.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (145 samples, 0.57%)</title><rect x="690.3" y="211.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (49 samples, 0.19%)</title><rect x="690.3" y="195.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="693.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (96 samples, 0.38%)</title><rect x="692.5" y="195.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (96 samples, 0.38%)</title><rect x="692.5" y="179.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/687059528.invoke (96 samples, 0.38%)</title><rect x="692.5" y="163.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.5" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (96 samples, 0.38%)</title><rect x="692.5" y="147.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.5" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (19 samples, 0.07%)</title><rect x="692.5" y="131.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.5" y="142.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.07%)</title><rect x="692.5" y="115.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="695.5" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (77 samples, 0.30%)</title><rect x="693.4" y="131.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="696.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (77 samples, 0.30%)</title><rect x="693.4" y="115.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.4" y="126.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.30%)</title><rect x="693.4" y="99.0" width="3.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="696.4" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$369/1508220952.apply (45 samples, 0.18%)</title><rect x="697.0" y="339.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="700.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (45 samples, 0.18%)</title><rect x="697.0" y="323.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (21 samples, 0.08%)</title><rect x="697.0" y="307.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="700.0" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (21 samples, 0.08%)</title><rect x="697.0" y="291.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.0" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (21 samples, 0.08%)</title><rect x="697.0" y="275.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.0" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (21 samples, 0.08%)</title><rect x="697.0" y="259.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="700.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (24 samples, 0.09%)</title><rect x="697.9" y="307.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.09%)</title><rect x="697.9" y="291.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="700.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (31 samples, 0.12%)</title><rect x="699.1" y="355.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (31 samples, 0.12%)</title><rect x="699.1" y="339.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$372/484910400.apply (31 samples, 0.12%)</title><rect x="699.1" y="323.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (31 samples, 0.12%)</title><rect x="699.1" y="307.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (31 samples, 0.12%)</title><rect x="699.1" y="291.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (31 samples, 0.12%)</title><rect x="699.1" y="275.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="702.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$420/992012201.apply (43 samples, 0.17%)</title><rect x="700.5" y="387.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="703.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (43 samples, 0.17%)</title><rect x="700.5" y="371.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="703.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (43 samples, 0.17%)</title><rect x="700.5" y="355.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="703.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1,457 samples, 5.71%)</title><rect x="702.5" y="499.0" width="67.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="705.5" y="510.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (81 samples, 0.32%)</title><rect x="702.5" y="483.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="705.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (81 samples, 0.32%)</title><rect x="702.5" y="467.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="705.5" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (81 samples, 0.32%)</title><rect x="702.5" y="451.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.5" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (81 samples, 0.32%)</title><rect x="702.5" y="435.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (81 samples, 0.32%)</title><rect x="702.5" y="419.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.5" y="430.0"></text>
</g>
<g>
<title>byte[] (81 samples, 0.32%)</title><rect x="702.5" y="403.0" width="3.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="705.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (124 samples, 0.49%)</title><rect x="706.2" y="483.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.2" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (24 samples, 0.09%)</title><rect x="706.2" y="467.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="709.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.07%)</title><rect x="707.3" y="467.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.07%)</title><rect x="707.3" y="451.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="710.3" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.07%)</title><rect x="707.3" y="435.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.3" y="446.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.07%)</title><rect x="707.3" y="419.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="710.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (28 samples, 0.11%)</title><rect x="708.2" y="467.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="711.2" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (28 samples, 0.11%)</title><rect x="708.2" y="451.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="711.2" y="462.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.11%)</title><rect x="708.2" y="435.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="711.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (53 samples, 0.21%)</title><rect x="709.5" y="467.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="712.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (53 samples, 0.21%)</title><rect x="709.5" y="451.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="712.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.11%)</title><rect x="709.5" y="435.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="712.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.10%)</title><rect x="710.8" y="435.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="713.8" y="446.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.10%)</title><rect x="710.8" y="419.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="713.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (399 samples, 1.56%)</title><rect x="712.0" y="483.0" width="18.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (399 samples, 1.56%)</title><rect x="712.0" y="467.0" width="18.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="715.0" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (399 samples, 1.56%)</title><rect x="712.0" y="451.0" width="18.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.0" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (9 samples, 0.04%)</title><rect x="712.0" y="435.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="715.0" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (15 samples, 0.06%)</title><rect x="712.4" y="435.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="715.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (32 samples, 0.13%)</title><rect x="713.1" y="435.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="716.1" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (12 samples, 0.05%)</title><rect x="714.6" y="435.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="717.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.10%)</title><rect x="715.1" y="435.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.10%)</title><rect x="715.1" y="419.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="718.1" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/1260444598.get$Lambda (25 samples, 0.10%)</title><rect x="715.1" y="403.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.1" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$113 (25 samples, 0.10%)</title><rect x="715.1" y="387.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="718.1" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (25 samples, 0.10%)</title><rect x="716.3" y="435.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.3" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (25 samples, 0.10%)</title><rect x="716.3" y="419.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="719.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (237 samples, 0.93%)</title><rect x="717.4" y="435.0" width="11.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/1260444598.accept (237 samples, 0.93%)</title><rect x="717.4" y="419.0" width="11.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="720.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (237 samples, 0.93%)</title><rect x="717.4" y="403.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.15%)</title><rect x="717.4" y="387.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.15%)</title><rect x="717.4" y="371.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$394/1894267442.get$Lambda (37 samples, 0.15%)</title><rect x="717.4" y="355.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.4" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$394 (37 samples, 0.15%)</title><rect x="717.4" y="339.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="720.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (36 samples, 0.14%)</title><rect x="719.1" y="387.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$394/1894267442.accept (36 samples, 0.14%)</title><rect x="719.1" y="371.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (36 samples, 0.14%)</title><rect x="719.1" y="355.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.1" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (36 samples, 0.14%)</title><rect x="719.1" y="339.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (36 samples, 0.14%)</title><rect x="719.1" y="323.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (36 samples, 0.14%)</title><rect x="719.1" y="307.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="722.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (36 samples, 0.14%)</title><rect x="719.1" y="291.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (36 samples, 0.14%)</title><rect x="719.1" y="275.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (36 samples, 0.14%)</title><rect x="719.1" y="259.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="722.1" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (92 samples, 0.36%)</title><rect x="720.8" y="387.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="723.8" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (92 samples, 0.36%)</title><rect x="720.8" y="371.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="723.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (48 samples, 0.19%)</title><rect x="720.8" y="355.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (48 samples, 0.19%)</title><rect x="720.8" y="339.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="723.8" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (48 samples, 0.19%)</title><rect x="720.8" y="323.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="723.8" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (44 samples, 0.17%)</title><rect x="723.0" y="355.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="726.0" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (44 samples, 0.17%)</title><rect x="723.0" y="339.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="726.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (72 samples, 0.28%)</title><rect x="725.0" y="387.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.0" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (72 samples, 0.28%)</title><rect x="725.0" y="371.0" width="3.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="728.0" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (44 samples, 0.17%)</title><rect x="728.4" y="435.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="731.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (44 samples, 0.17%)</title><rect x="728.4" y="419.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="731.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (853 samples, 3.34%)</title><rect x="730.4" y="483.0" width="39.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.4" y="494.0">jdk..</text>
</g>
<g>
<title>java.lang.StringBuilder (48 samples, 0.19%)</title><rect x="730.4" y="467.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="733.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (48 samples, 0.19%)</title><rect x="732.6" y="467.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="735.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (48 samples, 0.19%)</title><rect x="732.6" y="451.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.6" y="462.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.19%)</title><rect x="732.6" y="435.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="735.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (121 samples, 0.47%)</title><rect x="734.9" y="467.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="737.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (121 samples, 0.47%)</title><rect x="734.9" y="451.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.19%)</title><rect x="734.9" y="435.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="737.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (73 samples, 0.29%)</title><rect x="737.1" y="435.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.1" y="446.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.29%)</title><rect x="737.1" y="419.0" width="3.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="740.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (636 samples, 2.49%)</title><rect x="740.4" y="467.0" width="29.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.4" y="478.0">jd..</text>
</g>
<g>
<title>java/lang/String.substring (187 samples, 0.73%)</title><rect x="740.4" y="451.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (187 samples, 0.73%)</title><rect x="740.4" y="435.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="743.4" y="446.0"></text>
</g>
<g>
<title>java.lang.String (78 samples, 0.31%)</title><rect x="740.4" y="419.0" width="3.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="743.4" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (109 samples, 0.43%)</title><rect x="744.1" y="419.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.1" y="430.0"></text>
</g>
<g>
<title>byte[] (109 samples, 0.43%)</title><rect x="744.1" y="403.0" width="5.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="747.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (105 samples, 0.41%)</title><rect x="749.1" y="451.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (105 samples, 0.41%)</title><rect x="749.1" y="435.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="752.1" y="446.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.25%)</title><rect x="749.1" y="419.0" width="2.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="752.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (42 samples, 0.16%)</title><rect x="752.0" y="419.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="755.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (95 samples, 0.37%)</title><rect x="754.0" y="451.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="757.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (95 samples, 0.37%)</title><rect x="754.0" y="435.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (95 samples, 0.37%)</title><rect x="754.0" y="419.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.16%)</title><rect x="754.0" y="403.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="757.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (55 samples, 0.22%)</title><rect x="755.8" y="403.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="758.8" y="414.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.22%)</title><rect x="755.8" y="387.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="758.8" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (92 samples, 0.36%)</title><rect x="758.3" y="451.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="761.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (92 samples, 0.36%)</title><rect x="758.3" y="435.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="761.3" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (92 samples, 0.36%)</title><rect x="758.3" y="419.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="761.3" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (92 samples, 0.36%)</title><rect x="758.3" y="403.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (92 samples, 0.36%)</title><rect x="758.3" y="387.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (92 samples, 0.36%)</title><rect x="758.3" y="371.0" width="4.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="761.3" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (157 samples, 0.62%)</title><rect x="762.6" y="451.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="765.6" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (39 samples, 0.15%)</title><rect x="762.6" y="435.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="765.6" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (39 samples, 0.15%)</title><rect x="762.6" y="419.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="765.6" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (77 samples, 0.30%)</title><rect x="764.4" y="435.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="767.4" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (77 samples, 0.30%)</title><rect x="764.4" y="419.0" width="3.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="767.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$443/1513688448.apply (41 samples, 0.16%)</title><rect x="768.0" y="435.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (41 samples, 0.16%)</title><rect x="768.0" y="419.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="771.0" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (41 samples, 0.16%)</title><rect x="768.0" y="403.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="771.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (610 samples, 2.39%)</title><rect x="769.9" y="611.0" width="28.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="772.9" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (610 samples, 2.39%)</title><rect x="769.9" y="595.0" width="28.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.9" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (610 samples, 2.39%)</title><rect x="769.9" y="579.0" width="28.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.9" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.run (610 samples, 2.39%)</title><rect x="769.9" y="563.0" width="28.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.9" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (610 samples, 2.39%)</title><rect x="769.9" y="547.0" width="28.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="772.9" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (77 samples, 0.30%)</title><rect x="769.9" y="531.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="772.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.07%)</title><rect x="769.9" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.07%)</title><rect x="769.9" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="772.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$345/806691753.get$Lambda (13 samples, 0.05%)</title><rect x="770.0" y="483.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="773.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$345 (13 samples, 0.05%)</title><rect x="770.0" y="467.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="773.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (28 samples, 0.11%)</title><rect x="770.6" y="515.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="773.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (32 samples, 0.13%)</title><rect x="771.9" y="515.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="774.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (32 samples, 0.13%)</title><rect x="771.9" y="499.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="774.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (14 samples, 0.05%)</title><rect x="771.9" y="483.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="774.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (18 samples, 0.07%)</title><rect x="772.6" y="483.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="775.6" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (18 samples, 0.07%)</title><rect x="772.6" y="467.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="775.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (531 samples, 2.08%)</title><rect x="773.4" y="531.0" width="24.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.4" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (531 samples, 2.08%)</title><rect x="773.4" y="515.0" width="24.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="776.4" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (531 samples, 2.08%)</title><rect x="773.4" y="499.0" width="24.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.4" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (531 samples, 2.08%)</title><rect x="773.4" y="483.0" width="24.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.4" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (531 samples, 2.08%)</title><rect x="773.4" y="467.0" width="24.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.4" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (531 samples, 2.08%)</title><rect x="773.4" y="451.0" width="24.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="776.4" y="462.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (28 samples, 0.11%)</title><rect x="773.4" y="435.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.4" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (28 samples, 0.11%)</title><rect x="773.4" y="419.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="776.4" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (28 samples, 0.11%)</title><rect x="773.4" y="403.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="776.4" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (12 samples, 0.05%)</title><rect x="774.7" y="435.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.7" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (12 samples, 0.05%)</title><rect x="774.7" y="419.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="777.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$502/1814071412.run (338 samples, 1.32%)</title><rect x="775.3" y="435.0" width="15.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (338 samples, 1.32%)</title><rect x="775.3" y="419.0" width="15.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="778.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (338 samples, 1.32%)</title><rect x="775.3" y="403.0" width="15.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.3" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (109 samples, 0.43%)</title><rect x="775.3" y="387.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.3" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (86 samples, 0.34%)</title><rect x="775.3" y="371.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.3" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (28 samples, 0.11%)</title><rect x="775.3" y="355.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.3" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (28 samples, 0.11%)</title><rect x="775.3" y="339.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="778.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (58 samples, 0.23%)</title><rect x="776.6" y="355.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="779.6" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (58 samples, 0.23%)</title><rect x="776.6" y="339.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="779.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (23 samples, 0.09%)</title><rect x="779.2" y="371.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="782.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (23 samples, 0.09%)</title><rect x="779.2" y="355.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="782.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (23 samples, 0.09%)</title><rect x="779.2" y="339.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="782.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$102/1947896119.get (10 samples, 0.04%)</title><rect x="779.2" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.2" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (10 samples, 0.04%)</title><rect x="779.2" y="307.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="782.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (13 samples, 0.05%)</title><rect x="779.7" y="323.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (13 samples, 0.05%)</title><rect x="779.7" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.7" y="318.0"></text>
</g>
<g>
<title>java/util/Optional.of (13 samples, 0.05%)</title><rect x="779.7" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="782.7" y="302.0"></text>
</g>
<g>
<title>java.util.Optional (13 samples, 0.05%)</title><rect x="779.7" y="275.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="782.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (229 samples, 0.90%)</title><rect x="780.3" y="387.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="783.3" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (18 samples, 0.07%)</title><rect x="780.3" y="371.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.3" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (18 samples, 0.07%)</title><rect x="780.3" y="355.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.3" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (18 samples, 0.07%)</title><rect x="780.3" y="339.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.3" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (18 samples, 0.07%)</title><rect x="780.3" y="323.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="783.3" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (18 samples, 0.07%)</title><rect x="780.3" y="307.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="783.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (211 samples, 0.83%)</title><rect x="781.1" y="371.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="784.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (63 samples, 0.25%)</title><rect x="781.1" y="355.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="784.1" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (13 samples, 0.05%)</title><rect x="781.1" y="339.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.1" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (13 samples, 0.05%)</title><rect x="781.1" y="323.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="784.1" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (13 samples, 0.05%)</title><rect x="781.1" y="307.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.1" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (13 samples, 0.05%)</title><rect x="781.1" y="291.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="784.1" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (13 samples, 0.05%)</title><rect x="781.1" y="275.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.1" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (13 samples, 0.05%)</title><rect x="781.1" y="259.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="784.1" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (18 samples, 0.07%)</title><rect x="781.7" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.7" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (18 samples, 0.07%)</title><rect x="781.7" y="323.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="784.7" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (18 samples, 0.07%)</title><rect x="781.7" y="307.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="784.7" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (18 samples, 0.07%)</title><rect x="781.7" y="291.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="784.7" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (18 samples, 0.07%)</title><rect x="781.7" y="275.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="784.7" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (18 samples, 0.07%)</title><rect x="781.7" y="259.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="784.7" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (15 samples, 0.06%)</title><rect x="782.6" y="339.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="785.6" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (15 samples, 0.06%)</title><rect x="782.6" y="323.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.6" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (15 samples, 0.06%)</title><rect x="782.6" y="307.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="785.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (16 samples, 0.06%)</title><rect x="783.3" y="339.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="786.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (49 samples, 0.19%)</title><rect x="784.1" y="355.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="787.1" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (18 samples, 0.07%)</title><rect x="784.1" y="339.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="787.1" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (18 samples, 0.07%)</title><rect x="784.1" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="787.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (18 samples, 0.07%)</title><rect x="784.1" y="307.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="787.1" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.07%)</title><rect x="784.1" y="291.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="787.1" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (22 samples, 0.09%)</title><rect x="784.9" y="339.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="787.9" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (22 samples, 0.09%)</title><rect x="784.9" y="323.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="787.9" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (22 samples, 0.09%)</title><rect x="784.9" y="307.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="787.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (9 samples, 0.04%)</title><rect x="785.9" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="788.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (9 samples, 0.04%)</title><rect x="785.9" y="323.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="788.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (99 samples, 0.39%)</title><rect x="786.3" y="355.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (25 samples, 0.10%)</title><rect x="786.3" y="339.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="789.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (74 samples, 0.29%)</title><rect x="787.5" y="339.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="790.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (19 samples, 0.07%)</title><rect x="787.5" y="323.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (19 samples, 0.07%)</title><rect x="787.5" y="307.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="790.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (19 samples, 0.07%)</title><rect x="787.5" y="291.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="790.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (19 samples, 0.07%)</title><rect x="787.5" y="275.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="790.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (55 samples, 0.22%)</title><rect x="788.4" y="323.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="791.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (55 samples, 0.22%)</title><rect x="788.4" y="307.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="791.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (40 samples, 0.16%)</title><rect x="788.4" y="291.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="791.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (15 samples, 0.06%)</title><rect x="790.2" y="291.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (15 samples, 0.06%)</title><rect x="790.2" y="275.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="793.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (74 samples, 0.29%)</title><rect x="790.9" y="435.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="793.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (74 samples, 0.29%)</title><rect x="790.9" y="419.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="793.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (74 samples, 0.29%)</title><rect x="790.9" y="403.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="793.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (60 samples, 0.24%)</title><rect x="790.9" y="387.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (60 samples, 0.24%)</title><rect x="790.9" y="371.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="793.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (60 samples, 0.24%)</title><rect x="790.9" y="355.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="793.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (60 samples, 0.24%)</title><rect x="790.9" y="339.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="793.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$553/735033109.accept (60 samples, 0.24%)</title><rect x="790.9" y="323.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (60 samples, 0.24%)</title><rect x="790.9" y="307.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="793.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (60 samples, 0.24%)</title><rect x="790.9" y="291.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (60 samples, 0.24%)</title><rect x="790.9" y="275.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (60 samples, 0.24%)</title><rect x="790.9" y="259.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="793.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$574/1641231001.apply (60 samples, 0.24%)</title><rect x="790.9" y="243.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (60 samples, 0.24%)</title><rect x="790.9" y="227.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="793.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (60 samples, 0.24%)</title><rect x="790.9" y="211.0" width="2.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="793.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (14 samples, 0.05%)</title><rect x="793.7" y="387.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.7" y="398.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.05%)</title><rect x="793.7" y="371.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="796.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (79 samples, 0.31%)</title><rect x="794.3" y="435.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="797.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (79 samples, 0.31%)</title><rect x="794.3" y="419.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="797.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (79 samples, 0.31%)</title><rect x="794.3" y="403.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (79 samples, 0.31%)</title><rect x="794.3" y="387.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="797.3" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (79 samples, 0.31%)</title><rect x="794.3" y="371.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.3" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (21 samples, 0.08%)</title><rect x="794.3" y="355.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="797.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (21 samples, 0.08%)</title><rect x="794.3" y="339.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="797.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (58 samples, 0.23%)</title><rect x="795.3" y="355.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="798.3" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (58 samples, 0.23%)</title><rect x="795.3" y="339.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.3" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (58 samples, 0.23%)</title><rect x="795.3" y="323.0" width="2.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="798.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,940 samples, 7.60%)</title><rect x="798.1" y="691.0" width="89.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="801.1" y="702.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,940 samples, 7.60%)</title><rect x="798.1" y="675.0" width="89.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="801.1" y="686.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1,940 samples, 7.60%)</title><rect x="798.1" y="659.0" width="89.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="801.1" y="670.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (1,940 samples, 7.60%)</title><rect x="798.1" y="643.0" width="89.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="801.1" y="654.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (1,940 samples, 7.60%)</title><rect x="798.1" y="627.0" width="89.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="801.1" y="638.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (1,940 samples, 7.60%)</title><rect x="798.1" y="611.0" width="89.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="801.1" y="622.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,940 samples, 7.60%)</title><rect x="798.1" y="595.0" width="89.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="801.1" y="606.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,940 samples, 7.60%)</title><rect x="798.1" y="579.0" width="89.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.1" y="590.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,940 samples, 7.60%)</title><rect x="798.1" y="563.0" width="89.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="801.1" y="574.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (566 samples, 2.22%)</title><rect x="798.1" y="547.0" width="26.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="801.1" y="558.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$168/198651204.accept (566 samples, 2.22%)</title><rect x="798.1" y="531.0" width="26.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="801.1" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$sendToReplicas$0 (566 samples, 2.22%)</title><rect x="798.1" y="515.0" width="26.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="801.1" y="526.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.trySendResponse (566 samples, 2.22%)</title><rect x="798.1" y="499.0" width="26.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.1" y="510.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (566 samples, 2.22%)</title><rect x="798.1" y="483.0" width="26.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="801.1" y="494.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (566 samples, 2.22%)</title><rect x="798.1" y="467.0" width="26.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="801.1" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (408 samples, 1.60%)</title><rect x="798.1" y="451.0" width="18.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="801.1" y="462.0"></text>
</g>
<g>
<title>one.nio.util.ByteArrayBuilder (85 samples, 0.33%)</title><rect x="798.1" y="435.0" width="3.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="801.1" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (323 samples, 1.27%)</title><rect x="802.0" y="435.0" width="14.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="805.0" y="446.0"></text>
</g>
<g>
<title>byte[] (303 samples, 1.19%)</title><rect x="802.0" y="419.0" width="14.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="805.0" y="430.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.08%)</title><rect x="816.0" y="419.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="819.0" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (158 samples, 0.62%)</title><rect x="816.9" y="451.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.9" y="462.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (158 samples, 0.62%)</title><rect x="816.9" y="435.0" width="7.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="819.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,374 samples, 5.38%)</title><rect x="824.2" y="547.0" width="63.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="827.2" y="558.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding$$Lambda$156/636945562.apply (1,374 samples, 5.38%)</title><rect x="824.2" y="531.0" width="63.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="827.2" y="542.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ResponseConverter.convert (1,374 samples, 5.38%)</title><rect x="824.2" y="515.0" width="63.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="827.2" y="526.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.valueOf (424 samples, 1.66%)</title><rect x="824.2" y="499.0" width="19.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="827.2" y="510.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (424 samples, 1.66%)</title><rect x="824.2" y="483.0" width="19.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="827.2" y="494.0"></text>
</g>
<g>
<title>byte[] (222 samples, 0.87%)</title><rect x="824.2" y="467.0" width="10.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="827.2" y="478.0"></text>
</g>
<g>
<title>java.lang.String (202 samples, 0.79%)</title><rect x="834.5" y="467.0" width="9.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="837.5" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Response (165 samples, 0.65%)</title><rect x="843.9" y="499.0" width="7.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="846.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (785 samples, 3.08%)</title><rect x="851.5" y="499.0" width="36.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="854.5" y="510.0">one..</text>
</g>
<g>
<title>byte[] (351 samples, 1.38%)</title><rect x="851.5" y="483.0" width="16.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="854.5" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (241 samples, 0.94%)</title><rect x="867.7" y="483.0" width="11.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="870.7" y="494.0"></text>
</g>
<g>
<title>java.lang.String (193 samples, 0.76%)</title><rect x="878.9" y="483.0" width="8.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="881.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (539 samples, 2.11%)</title><rect x="887.8" y="691.0" width="24.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.8" y="702.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.02%)</title><rect x="887.8" y="675.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="890.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.02%)</title><rect x="887.8" y="659.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2007331442.linkToTargetMethod (10 samples, 0.04%)</title><rect x="888.1" y="675.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="891.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="888.1" y="659.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="891.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$377/1536444579.get$Lambda (10 samples, 0.04%)</title><rect x="888.1" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="891.1" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$377 (10 samples, 0.04%)</title><rect x="888.1" y="627.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="891.1" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (93 samples, 0.36%)</title><rect x="888.5" y="675.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="891.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$378/72598837.accept (69 samples, 0.27%)</title><rect x="888.5" y="659.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="891.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (69 samples, 0.27%)</title><rect x="888.5" y="643.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="891.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (69 samples, 0.27%)</title><rect x="888.5" y="627.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="891.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (69 samples, 0.27%)</title><rect x="888.5" y="611.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="891.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (69 samples, 0.27%)</title><rect x="888.5" y="595.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="891.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (69 samples, 0.27%)</title><rect x="888.5" y="579.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="891.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (69 samples, 0.27%)</title><rect x="888.5" y="563.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="891.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (69 samples, 0.27%)</title><rect x="888.5" y="547.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="891.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (69 samples, 0.27%)</title><rect x="888.5" y="531.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="891.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (69 samples, 0.27%)</title><rect x="888.5" y="515.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="891.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206/227894635.run (69 samples, 0.27%)</title><rect x="888.5" y="499.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="891.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (69 samples, 0.27%)</title><rect x="888.5" y="483.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="891.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (13 samples, 0.05%)</title><rect x="888.5" y="467.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="891.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (13 samples, 0.05%)</title><rect x="888.5" y="451.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="891.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (13 samples, 0.05%)</title><rect x="888.5" y="435.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="891.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.04%)</title><rect x="888.7" y="419.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="891.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.04%)</title><rect x="888.7" y="403.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="891.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.04%)</title><rect x="888.7" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="891.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.04%)</title><rect x="888.7" y="371.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="891.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (10 samples, 0.04%)</title><rect x="888.7" y="355.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="891.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (10 samples, 0.04%)</title><rect x="888.7" y="339.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="891.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (10 samples, 0.04%)</title><rect x="888.7" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="891.7" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (10 samples, 0.04%)</title><rect x="888.7" y="307.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="891.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (6 samples, 0.02%)</title><rect x="889.2" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="892.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.02%)</title><rect x="889.2" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="892.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.02%)</title><rect x="889.2" y="435.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="892.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$400/53598621.get$Lambda (6 samples, 0.02%)</title><rect x="889.2" y="419.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="892.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$400 (6 samples, 0.02%)</title><rect x="889.2" y="403.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="892.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (49 samples, 0.19%)</title><rect x="889.5" y="467.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="892.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (22 samples, 0.09%)</title><rect x="889.5" y="451.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="892.5" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.03%)</title><rect x="889.5" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="892.5" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.03%)</title><rect x="889.5" y="419.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="892.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (14 samples, 0.05%)</title><rect x="889.8" y="435.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="892.8" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (14 samples, 0.05%)</title><rect x="889.8" y="419.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="892.8" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (14 samples, 0.05%)</title><rect x="889.8" y="403.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="892.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (27 samples, 0.11%)</title><rect x="890.5" y="451.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="893.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$196/2112893675.get (27 samples, 0.11%)</title><rect x="890.5" y="435.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="893.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (27 samples, 0.11%)</title><rect x="890.5" y="419.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="893.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (27 samples, 0.11%)</title><rect x="890.5" y="403.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="893.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (27 samples, 0.11%)</title><rect x="890.5" y="387.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="893.5" y="398.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.09%)</title><rect x="890.7" y="371.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="893.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$391/1444661256.accept (24 samples, 0.09%)</title><rect x="891.7" y="659.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (24 samples, 0.09%)</title><rect x="891.7" y="643.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$377/1536444579.run (24 samples, 0.09%)</title><rect x="891.7" y="627.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="894.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (24 samples, 0.09%)</title><rect x="891.7" y="611.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="894.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (24 samples, 0.09%)</title><rect x="891.7" y="595.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="894.7" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (24 samples, 0.09%)</title><rect x="891.7" y="579.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="894.7" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (24 samples, 0.09%)</title><rect x="891.7" y="563.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="894.7" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (24 samples, 0.09%)</title><rect x="891.7" y="547.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="894.7" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (60 samples, 0.24%)</title><rect x="892.8" y="675.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="895.8" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (60 samples, 0.24%)</title><rect x="892.8" y="659.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="895.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (14 samples, 0.05%)</title><rect x="895.6" y="675.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="898.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.03%)</title><rect x="895.6" y="659.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="898.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (7 samples, 0.03%)</title><rect x="895.6" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (7 samples, 0.03%)</title><rect x="895.6" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="898.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.03%)</title><rect x="895.6" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="898.6" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (7 samples, 0.03%)</title><rect x="895.6" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (7 samples, 0.03%)</title><rect x="895.6" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.6" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (7 samples, 0.03%)</title><rect x="895.6" y="563.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="898.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (7 samples, 0.03%)</title><rect x="895.9" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="898.9" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (7 samples, 0.03%)</title><rect x="895.9" y="643.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="898.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (88 samples, 0.34%)</title><rect x="896.2" y="675.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="899.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$215/107337296.run (39 samples, 0.15%)</title><rect x="896.2" y="659.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (39 samples, 0.15%)</title><rect x="896.2" y="643.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="899.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (39 samples, 0.15%)</title><rect x="896.2" y="627.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="899.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (39 samples, 0.15%)</title><rect x="896.2" y="611.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="899.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (39 samples, 0.15%)</title><rect x="896.2" y="595.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (39 samples, 0.15%)</title><rect x="896.2" y="579.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206/227894635.run (39 samples, 0.15%)</title><rect x="896.2" y="563.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="899.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (39 samples, 0.15%)</title><rect x="896.2" y="547.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="899.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (39 samples, 0.15%)</title><rect x="896.2" y="531.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (39 samples, 0.15%)</title><rect x="896.2" y="515.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="899.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (29 samples, 0.11%)</title><rect x="896.2" y="499.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="899.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (29 samples, 0.11%)</title><rect x="896.2" y="483.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (29 samples, 0.11%)</title><rect x="896.2" y="467.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="899.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1059063940.linkToTargetMethod (18 samples, 0.07%)</title><rect x="896.2" y="451.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="899.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1641313620.invoke (18 samples, 0.07%)</title><rect x="896.2" y="435.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="899.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.07%)</title><rect x="896.2" y="419.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="899.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (18 samples, 0.07%)</title><rect x="896.2" y="403.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="899.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (18 samples, 0.07%)</title><rect x="896.2" y="387.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.2" y="398.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.07%)</title><rect x="896.2" y="371.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="899.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (11 samples, 0.04%)</title><rect x="897.1" y="451.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="900.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.04%)</title><rect x="897.1" y="435.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.04%)</title><rect x="897.1" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$400/53598621.get$Lambda (11 samples, 0.04%)</title><rect x="897.1" y="403.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="900.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$400 (11 samples, 0.04%)</title><rect x="897.1" y="387.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="900.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (10 samples, 0.04%)</title><rect x="897.6" y="499.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="900.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.04%)</title><rect x="897.6" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="900.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.04%)</title><rect x="897.6" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.04%)</title><rect x="897.6" y="451.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="900.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.04%)</title><rect x="897.6" y="435.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="900.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (10 samples, 0.04%)</title><rect x="897.6" y="419.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="900.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (10 samples, 0.04%)</title><rect x="897.6" y="403.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="900.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (10 samples, 0.04%)</title><rect x="897.6" y="387.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.6" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (10 samples, 0.04%)</title><rect x="897.6" y="371.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="900.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$224/1342060978.run (49 samples, 0.19%)</title><rect x="898.1" y="659.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="901.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (49 samples, 0.19%)</title><rect x="898.1" y="643.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.05%)</title><rect x="898.1" y="627.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.05%)</title><rect x="898.1" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="901.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$399/1148631027.get$Lambda (13 samples, 0.05%)</title><rect x="898.1" y="595.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$399 (13 samples, 0.05%)</title><rect x="898.1" y="579.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="901.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (36 samples, 0.14%)</title><rect x="898.7" y="627.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (36 samples, 0.14%)</title><rect x="898.7" y="611.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="901.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (36 samples, 0.14%)</title><rect x="898.7" y="595.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="901.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (36 samples, 0.14%)</title><rect x="898.7" y="579.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (36 samples, 0.14%)</title><rect x="898.7" y="563.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="901.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (36 samples, 0.14%)</title><rect x="898.7" y="547.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="901.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (166 samples, 0.65%)</title><rect x="900.3" y="675.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="903.3" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (22 samples, 0.09%)</title><rect x="900.3" y="659.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="903.3" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (22 samples, 0.09%)</title><rect x="900.3" y="643.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="903.3" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (22 samples, 0.09%)</title><rect x="900.3" y="627.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="903.3" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (22 samples, 0.09%)</title><rect x="900.3" y="611.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="903.3" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (22 samples, 0.09%)</title><rect x="900.3" y="595.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="903.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (144 samples, 0.56%)</title><rect x="901.3" y="659.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="904.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.10%)</title><rect x="901.3" y="643.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="904.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.10%)</title><rect x="901.3" y="627.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="904.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$587/1971024820.get$Lambda (25 samples, 0.10%)</title><rect x="901.3" y="611.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="904.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$587 (25 samples, 0.10%)</title><rect x="901.3" y="595.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="904.3" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (46 samples, 0.18%)</title><rect x="902.5" y="643.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.5" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (46 samples, 0.18%)</title><rect x="902.5" y="627.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="905.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (15 samples, 0.06%)</title><rect x="904.6" y="643.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="907.6" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (15 samples, 0.06%)</title><rect x="904.6" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="907.6" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (15 samples, 0.06%)</title><rect x="904.6" y="611.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="907.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (58 samples, 0.23%)</title><rect x="905.3" y="643.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.3" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (19 samples, 0.07%)</title><rect x="905.3" y="627.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="908.3" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (39 samples, 0.15%)</title><rect x="906.2" y="627.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="909.2" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (39 samples, 0.15%)</title><rect x="906.2" y="611.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="909.2" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (39 samples, 0.15%)</title><rect x="906.2" y="595.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="909.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (60 samples, 0.24%)</title><rect x="908.0" y="675.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="911.0" y="686.0"></text>
</g>
<g>
<title>java/util/Collection.stream (34 samples, 0.13%)</title><rect x="908.2" y="659.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="911.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (7 samples, 0.03%)</title><rect x="908.2" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="911.2" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (7 samples, 0.03%)</title><rect x="908.2" y="627.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="911.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (27 samples, 0.11%)</title><rect x="908.5" y="643.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="911.5" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (27 samples, 0.11%)</title><rect x="908.5" y="627.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="911.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (21 samples, 0.08%)</title><rect x="909.8" y="659.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="912.8" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (21 samples, 0.08%)</title><rect x="909.8" y="643.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="912.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (23 samples, 0.09%)</title><rect x="910.8" y="675.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="913.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (23 samples, 0.09%)</title><rect x="910.8" y="659.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (23 samples, 0.09%)</title><rect x="910.8" y="643.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (23 samples, 0.09%)</title><rect x="910.8" y="627.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="913.8" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (8 samples, 0.03%)</title><rect x="910.8" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.8" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (8 samples, 0.03%)</title><rect x="910.8" y="595.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="913.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (15 samples, 0.06%)</title><rect x="911.1" y="611.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (15 samples, 0.06%)</title><rect x="911.1" y="595.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="914.1" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (15 samples, 0.06%)</title><rect x="911.1" y="579.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="914.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (15 samples, 0.06%)</title><rect x="911.1" y="563.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.1" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (15 samples, 0.06%)</title><rect x="911.1" y="547.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="914.1" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (15 samples, 0.06%)</title><rect x="911.1" y="531.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="914.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (6 samples, 0.02%)</title><rect x="911.8" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="914.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (6 samples, 0.02%)</title><rect x="911.8" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (6 samples, 0.02%)</title><rect x="911.8" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="914.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (6 samples, 0.02%)</title><rect x="911.8" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.8" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (6 samples, 0.02%)</title><rect x="911.8" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.8" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (6 samples, 0.02%)</title><rect x="911.8" y="595.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="914.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (13 samples, 0.05%)</title><rect x="912.1" y="675.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.1" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (13 samples, 0.05%)</title><rect x="912.1" y="659.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="915.1" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (13 samples, 0.05%)</title><rect x="912.1" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="915.1" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (13 samples, 0.05%)</title><rect x="912.1" y="627.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="915.1" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,996 samples, 23.50%)</title><rect x="912.7" y="691.0" width="277.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="915.7" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (65 samples, 0.25%)</title><rect x="912.7" y="675.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="915.7" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (65 samples, 0.25%)</title><rect x="912.7" y="659.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="915.7" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5,931 samples, 23.24%)</title><rect x="915.7" y="675.0" width="274.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.7" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,931 samples, 23.24%)</title><rect x="915.7" y="659.0" width="274.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="918.7" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,931 samples, 23.24%)</title><rect x="915.7" y="643.0" width="274.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="918.7" y="654.0">one/nio/http/HttpSession.processHttpB..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,893 samples, 11.34%)</title><rect x="915.7" y="627.0" width="133.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="918.7" y="638.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,893 samples, 11.34%)</title><rect x="915.7" y="611.0" width="133.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="918.7" y="622.0">one/nio/http/Http..</text>
</g>
<g>
<title>RequestHandler1_handleEntityRequest.handleRequest (2,785 samples, 10.91%)</title><rect x="915.7" y="595.0" width="128.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="918.7" y="606.0">RequestHandler1_..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (116 samples, 0.45%)</title><rect x="915.7" y="579.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="918.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (116 samples, 0.45%)</title><rect x="915.7" y="563.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (116 samples, 0.45%)</title><rect x="915.7" y="547.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="918.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String (72 samples, 0.28%)</title><rect x="915.7" y="531.0" width="3.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="918.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (44 samples, 0.17%)</title><rect x="919.0" y="531.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="922.0" y="542.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.17%)</title><rect x="919.0" y="515.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="922.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (149 samples, 0.58%)</title><rect x="921.1" y="579.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="924.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (149 samples, 0.58%)</title><rect x="921.1" y="563.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="924.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (149 samples, 0.58%)</title><rect x="921.1" y="547.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="924.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (149 samples, 0.58%)</title><rect x="921.1" y="531.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="924.1" y="542.0"></text>
</g>
<g>
<title>java.lang.String (88 samples, 0.34%)</title><rect x="921.1" y="515.0" width="4.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="924.1" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (61 samples, 0.24%)</title><rect x="925.2" y="515.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="928.2" y="526.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.24%)</title><rect x="925.2" y="499.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="928.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.handleEntityRequest (2,520 samples, 9.88%)</title><rect x="928.0" y="579.0" width="116.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="931.0" y="590.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (102 samples, 0.40%)</title><rect x="928.0" y="563.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="931.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (102 samples, 0.40%)</title><rect x="928.0" y="547.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="931.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (102 samples, 0.40%)</title><rect x="928.0" y="531.0" width="4.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="931.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.processRequest (177 samples, 0.69%)</title><rect x="932.8" y="563.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="935.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (72 samples, 0.28%)</title><rect x="932.8" y="547.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="935.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (72 samples, 0.28%)</title><rect x="932.8" y="531.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="935.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$160/1885655202.get$Lambda (72 samples, 0.28%)</title><rect x="932.8" y="515.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="935.8" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$160 (72 samples, 0.28%)</title><rect x="932.8" y="499.0" width="3.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="935.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (105 samples, 0.41%)</title><rect x="936.2" y="547.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="939.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (105 samples, 0.41%)</title><rect x="936.2" y="531.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="939.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (57 samples, 0.22%)</title><rect x="936.2" y="515.0" width="2.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="939.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (48 samples, 0.19%)</title><rect x="938.8" y="515.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="941.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.sendToReplicas (1,781 samples, 6.98%)</title><rect x="941.0" y="563.0" width="82.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="944.0" y="574.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.08%)</title><rect x="941.2" y="547.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="944.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.08%)</title><rect x="941.2" y="531.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="944.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$168/198651204.get$Lambda (12 samples, 0.05%)</title><rect x="941.2" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="944.2" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$168 (12 samples, 0.05%)</title><rect x="941.2" y="499.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="944.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$169/607934019.get$Lambda (9 samples, 0.04%)</title><rect x="941.8" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="944.8" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$169 (9 samples, 0.04%)</title><rect x="941.8" y="499.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="944.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (6 samples, 0.02%)</title><rect x="942.2" y="547.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="945.2" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (6 samples, 0.02%)</title><rect x="942.2" y="531.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="945.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.allOf (45 samples, 0.18%)</title><rect x="942.4" y="547.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="945.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (45 samples, 0.18%)</title><rect x="942.4" y="531.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="945.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (9 samples, 0.04%)</title><rect x="942.4" y="515.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="945.4" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (8 samples, 0.03%)</title><rect x="942.9" y="515.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="945.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (21 samples, 0.08%)</title><rect x="943.2" y="515.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="946.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (7 samples, 0.03%)</title><rect x="943.2" y="499.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="946.2" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (7 samples, 0.03%)</title><rect x="943.6" y="499.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="946.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.bipush (7 samples, 0.03%)</title><rect x="943.9" y="499.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="946.9" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$CoCompletion (7 samples, 0.03%)</title><rect x="943.9" y="483.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="946.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.bipush (7 samples, 0.03%)</title><rect x="944.2" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="947.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$CoCompletion (7 samples, 0.03%)</title><rect x="944.2" y="499.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="947.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (27 samples, 0.11%)</title><rect x="944.5" y="547.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (27 samples, 0.11%)</title><rect x="944.5" y="531.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (15 samples, 0.06%)</title><rect x="944.5" y="515.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="947.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="945.2" y="515.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="948.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (12 samples, 0.05%)</title><rect x="945.2" y="499.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="948.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (22 samples, 0.09%)</title><rect x="945.8" y="547.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="948.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (22 samples, 0.09%)</title><rect x="945.8" y="531.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="948.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (16 samples, 0.06%)</title><rect x="945.8" y="515.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="948.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (6 samples, 0.02%)</title><rect x="946.5" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="949.5" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (6 samples, 0.02%)</title><rect x="946.5" y="499.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="949.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.addMyselfParamToRequest (90 samples, 0.35%)</title><rect x="946.8" y="547.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="949.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.13%)</title><rect x="946.8" y="531.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="949.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/687059528.invoke (34 samples, 0.13%)</title><rect x="946.8" y="515.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="949.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.13%)</title><rect x="946.8" y="499.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="949.8" y="510.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (14 samples, 0.05%)</title><rect x="946.8" y="483.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="949.8" y="494.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.05%)</title><rect x="946.8" y="467.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="949.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (20 samples, 0.08%)</title><rect x="947.4" y="483.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="950.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (20 samples, 0.08%)</title><rect x="947.4" y="467.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="950.4" y="478.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.08%)</title><rect x="947.4" y="451.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="950.4" y="462.0"></text>
</g>
<g>
<title>one.nio.http.Request (18 samples, 0.07%)</title><rect x="948.4" y="531.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="951.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (38 samples, 0.15%)</title><rect x="949.2" y="531.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="952.2" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (38 samples, 0.15%)</title><rect x="949.2" y="515.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="952.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.processRequest (20 samples, 0.08%)</title><rect x="951.0" y="547.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="954.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.02%)</title><rect x="951.0" y="531.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="954.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.02%)</title><rect x="951.0" y="515.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="954.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$160/1885655202.get$Lambda (6 samples, 0.02%)</title><rect x="951.0" y="499.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="954.0" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$160 (6 samples, 0.02%)</title><rect x="951.0" y="483.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="954.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (14 samples, 0.05%)</title><rect x="951.2" y="531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="954.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (14 samples, 0.05%)</title><rect x="951.2" y="515.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="954.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (11 samples, 0.04%)</title><rect x="951.4" y="499.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="954.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding.getResponsibleNodes (39 samples, 0.15%)</title><rect x="951.9" y="547.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="954.9" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.03%)</title><rect x="951.9" y="531.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="954.9" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.05%)</title><rect x="952.2" y="531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="955.2" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.05%)</title><rect x="952.2" y="515.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="955.2" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.05%)</title><rect x="952.2" y="499.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="955.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.05%)</title><rect x="952.2" y="483.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="955.2" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.05%)</title><rect x="952.2" y="467.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="955.2" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.05%)</title><rect x="952.2" y="451.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="955.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding.getResponsibleNodeIndex (18 samples, 0.07%)</title><rect x="952.9" y="531.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="955.9" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.07%)</title><rect x="952.9" y="515.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="955.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding.passOn (1,507 samples, 5.91%)</title><rect x="953.7" y="547.0" width="69.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="956.7" y="558.0">ru/mail..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (32 samples, 0.13%)</title><rect x="953.7" y="531.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="956.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (32 samples, 0.13%)</title><rect x="953.7" y="515.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="956.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (16 samples, 0.06%)</title><rect x="953.7" y="499.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="956.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.06%)</title><rect x="954.4" y="499.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="957.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.06%)</title><rect x="954.4" y="483.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="957.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.06%)</title><rect x="954.4" y="467.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="957.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (52 samples, 0.20%)</title><rect x="955.2" y="531.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="958.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (52 samples, 0.20%)</title><rect x="955.2" y="515.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="958.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (31 samples, 0.12%)</title><rect x="955.2" y="499.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="958.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.08%)</title><rect x="956.6" y="499.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="959.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.08%)</title><rect x="956.6" y="483.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="959.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.08%)</title><rect x="956.6" y="467.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="959.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (959 samples, 3.76%)</title><rect x="957.6" y="531.0" width="44.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="960.6" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (959 samples, 3.76%)</title><rect x="957.6" y="515.0" width="44.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="960.6" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (959 samples, 3.76%)</title><rect x="957.6" y="499.0" width="44.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="960.6" y="510.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (959 samples, 3.76%)</title><rect x="957.6" y="483.0" width="44.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="960.6" y="494.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.04%)</title><rect x="957.6" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="960.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.04%)</title><rect x="957.6" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="960.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$151/105436391.get$Lambda (9 samples, 0.04%)</title><rect x="957.6" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="960.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$151 (9 samples, 0.04%)</title><rect x="957.6" y="419.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="960.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (36 samples, 0.14%)</title><rect x="958.0" y="467.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (36 samples, 0.14%)</title><rect x="958.0" y="451.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="961.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (24 samples, 0.09%)</title><rect x="958.0" y="435.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="961.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="959.1" y="435.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="962.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="959.1" y="419.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="962.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.05%)</title><rect x="959.1" y="403.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="962.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (38 samples, 0.15%)</title><rect x="959.7" y="467.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="962.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (38 samples, 0.15%)</title><rect x="959.7" y="451.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="962.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (24 samples, 0.09%)</title><rect x="959.7" y="435.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="962.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.05%)</title><rect x="960.8" y="435.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="963.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.05%)</title><rect x="960.8" y="419.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="963.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.05%)</title><rect x="960.8" y="403.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="963.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (30 samples, 0.12%)</title><rect x="961.4" y="467.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="964.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (46 samples, 0.18%)</title><rect x="962.8" y="467.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="965.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (366 samples, 1.43%)</title><rect x="964.9" y="467.0" width="16.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="967.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (45 samples, 0.18%)</title><rect x="964.9" y="451.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="967.9" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (37 samples, 0.15%)</title><rect x="964.9" y="435.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.9" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (14 samples, 0.05%)</title><rect x="964.9" y="419.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="967.9" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (14 samples, 0.05%)</title><rect x="964.9" y="403.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="967.9" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (23 samples, 0.09%)</title><rect x="965.6" y="419.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="968.6" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (23 samples, 0.09%)</title><rect x="965.6" y="403.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="968.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (8 samples, 0.03%)</title><rect x="966.6" y="435.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="969.6" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.03%)</title><rect x="966.6" y="419.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="969.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (8 samples, 0.03%)</title><rect x="966.6" y="403.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="969.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$102/1947896119.get (8 samples, 0.03%)</title><rect x="966.6" y="387.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="969.6" y="398.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (8 samples, 0.03%)</title><rect x="966.6" y="371.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="969.6" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (87 samples, 0.34%)</title><rect x="967.0" y="451.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="970.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (87 samples, 0.34%)</title><rect x="967.0" y="435.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="970.0" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (14 samples, 0.05%)</title><rect x="967.0" y="419.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="970.0" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (26 samples, 0.10%)</title><rect x="967.7" y="419.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="970.7" y="430.0"></text>
</g>
<g>
<title>java.util.TreeSet (6 samples, 0.02%)</title><rect x="968.9" y="419.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="971.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.05%)</title><rect x="969.1" y="419.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.05%)</title><rect x="969.1" y="403.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="972.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/1260444598.get$Lambda (14 samples, 0.05%)</title><rect x="969.1" y="387.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="972.1" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$113 (14 samples, 0.05%)</title><rect x="969.1" y="371.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="972.1" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (27 samples, 0.11%)</title><rect x="969.8" y="419.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="972.8" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (27 samples, 0.11%)</title><rect x="969.8" y="403.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="972.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (7 samples, 0.03%)</title><rect x="971.0" y="451.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="974.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (154 samples, 0.60%)</title><rect x="971.4" y="451.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="974.4" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (154 samples, 0.60%)</title><rect x="971.4" y="435.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="974.4" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (142 samples, 0.56%)</title><rect x="971.4" y="419.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="974.4" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (142 samples, 0.56%)</title><rect x="971.4" y="403.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="974.4" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (142 samples, 0.56%)</title><rect x="971.4" y="387.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="974.4" y="398.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (28 samples, 0.11%)</title><rect x="971.4" y="371.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="974.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (46 samples, 0.18%)</title><rect x="972.6" y="371.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="975.6" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (46 samples, 0.18%)</title><rect x="972.6" y="355.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="975.6" y="366.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.18%)</title><rect x="972.6" y="339.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="975.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (68 samples, 0.27%)</title><rect x="974.8" y="371.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="977.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (68 samples, 0.27%)</title><rect x="974.8" y="355.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="977.8" y="366.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.10%)</title><rect x="974.8" y="339.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="977.8" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.16%)</title><rect x="976.0" y="339.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="979.0" y="350.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.16%)</title><rect x="976.0" y="323.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="979.0" y="334.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (12 samples, 0.05%)</title><rect x="977.9" y="419.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="980.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (29 samples, 0.11%)</title><rect x="978.5" y="451.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="981.5" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (29 samples, 0.11%)</title><rect x="978.5" y="435.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="981.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (44 samples, 0.17%)</title><rect x="979.8" y="451.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="982.8" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.03%)</title><rect x="979.8" y="435.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="982.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (18 samples, 0.07%)</title><rect x="980.2" y="435.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="983.2" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.07%)</title><rect x="980.2" y="419.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="983.2" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (18 samples, 0.07%)</title><rect x="981.0" y="435.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="984.0" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (18 samples, 0.07%)</title><rect x="981.0" y="419.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="984.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (261 samples, 1.02%)</title><rect x="981.8" y="467.0" width="12.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="984.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (6 samples, 0.02%)</title><rect x="981.8" y="451.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="984.8" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.map (24 samples, 0.09%)</title><rect x="982.1" y="451.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="985.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/2108427967.apply (24 samples, 0.09%)</title><rect x="982.1" y="435.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="985.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (11 samples, 0.04%)</title><rect x="982.1" y="419.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="985.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (13 samples, 0.05%)</title><rect x="982.6" y="419.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="985.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (13 samples, 0.05%)</title><rect x="982.6" y="403.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="985.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (44 samples, 0.17%)</title><rect x="983.2" y="451.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="986.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (10 samples, 0.04%)</title><rect x="985.3" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (10 samples, 0.04%)</title><rect x="985.3" y="435.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="988.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (7 samples, 0.03%)</title><rect x="985.7" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="988.7" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (7 samples, 0.03%)</title><rect x="985.7" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="988.7" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.of (7 samples, 0.03%)</title><rect x="985.7" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="988.7" y="430.0"></text>
</g>
<g>
<title>java.util.Optional (7 samples, 0.03%)</title><rect x="985.7" y="403.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="988.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (170 samples, 0.67%)</title><rect x="986.1" y="451.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="989.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (170 samples, 0.67%)</title><rect x="986.1" y="435.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="989.1" y="446.0"></text>
</g>
<g>
<title>java.lang.Class[] (16 samples, 0.06%)</title><rect x="986.1" y="419.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="989.1" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.05%)</title><rect x="986.8" y="419.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="989.8" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList (16 samples, 0.06%)</title><rect x="987.4" y="419.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="990.4" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (75 samples, 0.29%)</title><rect x="988.1" y="419.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="991.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (75 samples, 0.29%)</title><rect x="988.1" y="403.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="991.1" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (75 samples, 0.29%)</title><rect x="988.1" y="387.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="991.1" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (75 samples, 0.29%)</title><rect x="988.1" y="371.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="991.1" y="382.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (75 samples, 0.29%)</title><rect x="988.1" y="355.0" width="3.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="991.1" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (25 samples, 0.10%)</title><rect x="991.6" y="419.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="994.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (25 samples, 0.10%)</title><rect x="991.6" y="403.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="994.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor11.newInstance (17 samples, 0.07%)</title><rect x="991.6" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="994.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (17 samples, 0.07%)</title><rect x="991.6" y="371.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="994.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (8 samples, 0.03%)</title><rect x="992.4" y="387.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="995.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (8 samples, 0.03%)</title><rect x="992.4" y="371.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="995.4" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (25 samples, 0.10%)</title><rect x="992.8" y="419.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="995.8" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (25 samples, 0.10%)</title><rect x="992.8" y="403.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="995.8" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (25 samples, 0.10%)</title><rect x="992.8" y="387.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="995.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (173 samples, 0.68%)</title><rect x="993.9" y="467.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="996.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (26 samples, 0.10%)</title><rect x="993.9" y="451.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="996.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (13 samples, 0.05%)</title><rect x="993.9" y="435.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="996.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.05%)</title><rect x="994.5" y="435.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="997.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (13 samples, 0.05%)</title><rect x="994.5" y="419.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="997.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (13 samples, 0.05%)</title><rect x="994.5" y="403.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="997.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (13 samples, 0.05%)</title><rect x="994.5" y="387.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="997.5" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (13 samples, 0.05%)</title><rect x="994.5" y="371.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="997.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.05%)</title><rect x="995.1" y="451.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="998.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (134 samples, 0.53%)</title><rect x="995.7" y="451.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="998.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.09%)</title><rect x="995.7" y="435.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.09%)</title><rect x="995.7" y="419.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="998.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$135/69462153.get$Lambda (14 samples, 0.05%)</title><rect x="995.7" y="403.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$135 (14 samples, 0.05%)</title><rect x="995.7" y="387.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="998.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$142/558125001.get$Lambda (9 samples, 0.04%)</title><rect x="996.4" y="403.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="999.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$142 (9 samples, 0.04%)</title><rect x="996.4" y="387.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="999.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (111 samples, 0.44%)</title><rect x="996.8" y="435.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="999.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (111 samples, 0.44%)</title><rect x="996.8" y="419.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="999.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (72 samples, 0.28%)</title><rect x="996.8" y="403.0" width="3.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="999.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.15%)</title><rect x="1000.1" y="403.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1003.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.15%)</title><rect x="1000.1" y="387.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1003.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (39 samples, 0.15%)</title><rect x="1000.1" y="371.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1003.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RequestConverter.convert (464 samples, 1.82%)</title><rect x="1001.9" y="531.0" width="21.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1004.9" y="542.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.22%)</title><rect x="1001.9" y="515.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1004.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1402433372.invoke (55 samples, 0.22%)</title><rect x="1001.9" y="499.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1004.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.22%)</title><rect x="1001.9" y="483.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1004.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (12 samples, 0.05%)</title><rect x="1001.9" y="467.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1004.9" y="478.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.05%)</title><rect x="1001.9" y="451.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1004.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (43 samples, 0.17%)</title><rect x="1002.5" y="467.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1005.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (43 samples, 0.17%)</title><rect x="1002.5" y="451.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1005.5" y="462.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.17%)</title><rect x="1002.5" y="435.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1005.5" y="446.0"></text>
</g>
<g>
<title>java/net/URI.create (235 samples, 0.92%)</title><rect x="1004.5" y="515.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1007.5" y="526.0"></text>
</g>
<g>
<title>java.net.URI (75 samples, 0.29%)</title><rect x="1004.5" y="499.0" width="3.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1007.5" y="510.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (160 samples, 0.63%)</title><rect x="1007.9" y="499.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1010.9" y="510.0"></text>
</g>
<g>
<title>java.net.URI$Parser (11 samples, 0.04%)</title><rect x="1007.9" y="483.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1010.9" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (149 samples, 0.58%)</title><rect x="1008.4" y="483.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1011.4" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.09%)</title><rect x="1008.4" y="467.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1011.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.09%)</title><rect x="1008.4" y="451.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1011.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.04%)</title><rect x="1008.4" y="435.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1011.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.05%)</title><rect x="1008.9" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1011.9" y="446.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.05%)</title><rect x="1008.9" y="419.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1011.9" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (126 samples, 0.49%)</title><rect x="1009.5" y="467.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1012.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (69 samples, 0.27%)</title><rect x="1009.5" y="451.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1012.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (69 samples, 0.27%)</title><rect x="1009.5" y="435.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1012.5" y="446.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.14%)</title><rect x="1009.5" y="419.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1012.5" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (34 samples, 0.13%)</title><rect x="1011.1" y="419.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1014.1" y="430.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.13%)</title><rect x="1011.1" y="403.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1014.1" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (57 samples, 0.22%)</title><rect x="1012.7" y="451.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1015.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (31 samples, 0.12%)</title><rect x="1012.7" y="435.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1015.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.12%)</title><rect x="1012.7" y="419.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1015.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.07%)</title><rect x="1012.7" y="403.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1015.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.05%)</title><rect x="1013.5" y="403.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1016.5" y="414.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.05%)</title><rect x="1013.5" y="387.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1016.5" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (26 samples, 0.10%)</title><rect x="1014.1" y="435.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1017.1" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (26 samples, 0.10%)</title><rect x="1014.1" y="419.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1017.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 0.10%)</title><rect x="1014.1" y="403.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1017.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.10%)</title><rect x="1014.1" y="387.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1017.1" y="398.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.05%)</title><rect x="1014.1" y="371.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1017.1" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.05%)</title><rect x="1014.7" y="371.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1017.7" y="382.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.05%)</title><rect x="1014.7" y="355.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1017.7" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (75 samples, 0.29%)</title><rect x="1015.3" y="515.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1018.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (35 samples, 0.14%)</title><rect x="1015.3" y="499.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1018.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (40 samples, 0.16%)</title><rect x="1016.9" y="499.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1019.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (9 samples, 0.04%)</title><rect x="1016.9" y="483.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1019.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (31 samples, 0.12%)</title><rect x="1017.4" y="483.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1020.4" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (31 samples, 0.12%)</title><rect x="1017.4" y="467.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1020.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (99 samples, 0.39%)</title><rect x="1018.8" y="515.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1021.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (20 samples, 0.08%)</title><rect x="1018.8" y="499.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1021.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (79 samples, 0.31%)</title><rect x="1019.7" y="499.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1022.7" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (72 samples, 0.28%)</title><rect x="1019.7" y="483.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1022.7" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (72 samples, 0.28%)</title><rect x="1019.7" y="467.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1022.7" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (14 samples, 0.05%)</title><rect x="1019.7" y="451.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1022.7" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (23 samples, 0.09%)</title><rect x="1020.4" y="451.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1023.4" y="462.0"></text>
</g>
<g>
<title>java.util.TreeSet (6 samples, 0.02%)</title><rect x="1021.4" y="451.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1024.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="1021.7" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1024.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="1021.7" y="435.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1024.7" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/1260444598.get$Lambda (12 samples, 0.05%)</title><rect x="1021.7" y="419.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1024.7" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$113 (12 samples, 0.05%)</title><rect x="1021.7" y="403.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1024.7" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (17 samples, 0.07%)</title><rect x="1022.3" y="451.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1025.3" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (17 samples, 0.07%)</title><rect x="1022.3" y="435.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1025.3" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (7 samples, 0.03%)</title><rect x="1023.1" y="483.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1026.1" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.of (7 samples, 0.03%)</title><rect x="1023.1" y="467.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1026.1" y="478.0"></text>
</g>
<g>
<title>java.util.Optional (7 samples, 0.03%)</title><rect x="1023.1" y="451.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1026.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.trySendResponse (457 samples, 1.79%)</title><rect x="1023.4" y="563.0" width="21.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1026.4" y="574.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (457 samples, 1.79%)</title><rect x="1023.4" y="547.0" width="21.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1026.4" y="558.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (320 samples, 1.25%)</title><rect x="1023.4" y="531.0" width="14.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1026.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (286 samples, 1.12%)</title><rect x="1023.4" y="515.0" width="13.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1026.4" y="526.0"></text>
</g>
<g>
<title>one.nio.util.ByteArrayBuilder (61 samples, 0.24%)</title><rect x="1023.4" y="499.0" width="2.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1026.4" y="510.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (225 samples, 0.88%)</title><rect x="1026.2" y="499.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1029.2" y="510.0"></text>
</g>
<g>
<title>byte[] (225 samples, 0.88%)</title><rect x="1026.2" y="483.0" width="10.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1029.2" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (34 samples, 0.13%)</title><rect x="1036.6" y="515.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1039.6" y="526.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (34 samples, 0.13%)</title><rect x="1036.6" y="499.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1039.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (137 samples, 0.54%)</title><rect x="1038.2" y="531.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1041.2" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (137 samples, 0.54%)</title><rect x="1038.2" y="515.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1041.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (137 samples, 0.54%)</title><rect x="1038.2" y="499.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.2" y="510.0"></text>
</g>
<g>
<title>java.lang.String (53 samples, 0.21%)</title><rect x="1038.2" y="483.0" width="2.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1041.2" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (84 samples, 0.33%)</title><rect x="1040.6" y="483.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1043.6" y="494.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.33%)</title><rect x="1040.6" y="467.0" width="3.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1043.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (108 samples, 0.42%)</title><rect x="1044.5" y="595.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1047.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (108 samples, 0.42%)</title><rect x="1044.5" y="579.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1047.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (108 samples, 0.42%)</title><rect x="1044.5" y="563.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.18%)</title><rect x="1044.5" y="547.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1047.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (63 samples, 0.25%)</title><rect x="1046.6" y="547.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1049.6" y="558.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.25%)</title><rect x="1046.6" y="531.0" width="2.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1049.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (780 samples, 3.06%)</title><rect x="1049.5" y="627.0" width="36.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1052.5" y="638.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (93 samples, 0.36%)</title><rect x="1049.5" y="611.0" width="4.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1052.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (154 samples, 0.60%)</title><rect x="1053.8" y="611.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1056.8" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (154 samples, 0.60%)</title><rect x="1053.8" y="595.0" width="7.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1056.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (533 samples, 2.09%)</title><rect x="1060.9" y="611.0" width="24.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1063.9" y="622.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (533 samples, 2.09%)</title><rect x="1060.9" y="595.0" width="24.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1063.9" y="606.0">o..</text>
</g>
<g>
<title>char[] (340 samples, 1.33%)</title><rect x="1060.9" y="579.0" width="15.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1063.9" y="590.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.28%)</title><rect x="1076.7" y="579.0" width="3.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1079.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (122 samples, 0.48%)</title><rect x="1079.9" y="579.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1082.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (122 samples, 0.48%)</title><rect x="1079.9" y="563.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1082.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (122 samples, 0.48%)</title><rect x="1079.9" y="547.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1082.9" y="558.0"></text>
</g>
<g>
<title>byte[] (122 samples, 0.48%)</title><rect x="1079.9" y="531.0" width="5.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1082.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (27 samples, 0.11%)</title><rect x="1085.6" y="627.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1088.6" y="638.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.11%)</title><rect x="1085.6" y="611.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1088.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (123 samples, 0.48%)</title><rect x="1086.8" y="627.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1089.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (123 samples, 0.48%)</title><rect x="1086.8" y="611.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1089.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (123 samples, 0.48%)</title><rect x="1086.8" y="595.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1089.8" y="606.0"></text>
</g>
<g>
<title>java.lang.String (70 samples, 0.27%)</title><rect x="1086.8" y="579.0" width="3.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1089.8" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (53 samples, 0.21%)</title><rect x="1090.1" y="579.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1093.1" y="590.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.21%)</title><rect x="1090.1" y="563.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1093.1" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,108 samples, 8.26%)</title><rect x="1092.5" y="627.0" width="97.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1095.5" y="638.0">one/nio/uti..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,108 samples, 8.26%)</title><rect x="1092.5" y="611.0" width="97.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1095.5" y="622.0">one/nio/uti..</text>
</g>
<g>
<title>char[] (1,078 samples, 4.22%)</title><rect x="1092.5" y="595.0" width="49.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1095.5" y="606.0">char[]</text>
</g>
<g>
<title>java.lang.String (326 samples, 1.28%)</title><rect x="1142.4" y="595.0" width="15.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1145.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (704 samples, 2.76%)</title><rect x="1157.4" y="595.0" width="32.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.4" y="606.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (704 samples, 2.76%)</title><rect x="1157.4" y="579.0" width="32.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1160.4" y="590.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (704 samples, 2.76%)</title><rect x="1157.4" y="563.0" width="32.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1160.4" y="574.0">ja..</text>
</g>
<g>
<title>byte[] (704 samples, 2.76%)</title><rect x="1157.4" y="547.0" width="32.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1160.4" y="558.0">by..</text>
</g>
</g>
</svg>
