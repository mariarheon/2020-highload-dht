<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="469"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="469"> </text>
<g id="frames">
<g>
<title>all (802 samples, 100.00%)</title><rect x="10.0" y="435.0" width="1180.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="13.0" y="446.0">all</text>
</g>
<g>
<title>[C2 CompilerThre tid=15563] (12 samples, 1.50%)</title><rect x="10.0" y="419.0" width="17.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>start_thread (12 samples, 1.50%)</title><rect x="10.0" y="403.0" width="17.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (12 samples, 1.50%)</title><rect x="10.0" y="387.0" width="17.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>Thread::call_run() (12 samples, 1.50%)</title><rect x="10.0" y="371.0" width="17.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (12 samples, 1.50%)</title><rect x="10.0" y="355.0" width="17.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (12 samples, 1.50%)</title><rect x="10.0" y="339.0" width="17.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (12 samples, 1.50%)</title><rect x="10.0" y="323.0" width="17.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (12 samples, 1.50%)</title><rect x="10.0" y="307.0" width="17.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (12 samples, 1.50%)</title><rect x="10.0" y="291.0" width="17.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (7 samples, 0.87%)</title><rect x="10.0" y="275.0" width="10.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.12%)</title><rect x="10.0" y="259.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.12%)</title><rect x="10.0" y="243.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.12%)</title><rect x="10.0" y="227.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.12%)</title><rect x="11.5" y="259.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.5" y="270.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.12%)</title><rect x="11.5" y="243.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="14.5" y="254.0"></text>
</g>
<g>
<title>CallDynamicJavaNode::Opcode() const (1 samples, 0.12%)</title><rect x="11.5" y="227.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="14.5" y="238.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (4 samples, 0.50%)</title><rect x="12.9" y="259.0" width="5.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="15.9" y="270.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.12%)</title><rect x="12.9" y="243.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="15.9" y="254.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (1 samples, 0.12%)</title><rect x="14.4" y="243.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="17.4" y="254.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.12%)</title><rect x="15.9" y="243.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="18.9" y="254.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.12%)</title><rect x="15.9" y="227.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="18.9" y="238.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.12%)</title><rect x="17.4" y="243.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="20.4" y="254.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.12%)</title><rect x="18.8" y="259.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="21.8" y="270.0"></text>
</g>
<g>
<title>Compile::Optimize() (3 samples, 0.37%)</title><rect x="20.3" y="275.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="23.3" y="286.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) (1 samples, 0.12%)</title><rect x="20.3" y="259.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="23.3" y="270.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.12%)</title><rect x="20.3" y="243.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="23.3" y="254.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.12%)</title><rect x="20.3" y="227.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="23.3" y="238.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.12%)</title><rect x="21.8" y="259.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="24.8" y="270.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.12%)</title><rect x="21.8" y="243.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="24.8" y="254.0"></text>
</g>
<g>
<title>PhaseMacroExpand::eliminate_macro_nodes() (1 samples, 0.12%)</title><rect x="23.2" y="259.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="26.2" y="270.0"></text>
</g>
<g>
<title>PhaseMacroExpand::eliminate_allocate_node(AllocateNode*) (1 samples, 0.12%)</title><rect x="23.2" y="243.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="26.2" y="254.0"></text>
</g>
<g>
<title>PhaseMacroExpand::process_users_of_allocation(CallNode*) (1 samples, 0.12%)</title><rect x="23.2" y="227.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="26.2" y="238.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.12%)</title><rect x="23.2" y="211.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="26.2" y="222.0"></text>
</g>
<g>
<title>Compile::rethrow_exceptions(JVMState*) (1 samples, 0.12%)</title><rect x="24.7" y="275.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="27.7" y="286.0"></text>
</g>
<g>
<title>RethrowNode::RethrowNode(Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.12%)</title><rect x="24.7" y="259.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="27.7" y="270.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="26.2" y="275.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="29.2" y="286.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.12%)</title><rect x="26.2" y="259.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="29.2" y="270.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.12%)</title><rect x="26.2" y="243.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="29.2" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.12%)</title><rect x="26.2" y="227.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="29.2" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.12%)</title><rect x="26.2" y="211.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="29.2" y="222.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.12%)</title><rect x="26.2" y="195.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="29.2" y="206.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="26.2" y="179.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="29.2" y="190.0"></text>
</g>
<g>
<title>UncommonTrapCallGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="26.2" y="163.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="29.2" y="174.0"></text>
</g>
<g>
<title>GraphKit::transfer_exceptions_into_jvms() (1 samples, 0.12%)</title><rect x="26.2" y="147.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="29.2" y="158.0"></text>
</g>
<g>
<title>GraphKit::set_all_memory(Node*) (1 samples, 0.12%)</title><rect x="26.2" y="131.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="29.2" y="142.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.12%)</title><rect x="26.2" y="115.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="29.2" y="126.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.12%)</title><rect x="26.2" y="99.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="29.2" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=15599] (91 samples, 11.35%)</title><rect x="27.7" y="419.0" width="133.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="30.7" y="430.0">[NIO Selector #0 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (91 samples, 11.35%)</title><rect x="27.7" y="403.0" width="133.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="30.7" y="414.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.12%)</title><rect x="32.1" y="387.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="35.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.12%)</title><rect x="32.1" y="371.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="35.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (21 samples, 2.62%)</title><rect x="33.5" y="387.0" width="30.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="36.5" y="398.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (19 samples, 2.37%)</title><rect x="36.5" y="371.0" width="27.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="39.5" y="382.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.12%)</title><rect x="38.0" y="355.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="41.0" y="366.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.25%)</title><rect x="39.4" y="355.0" width="3.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="42.4" y="366.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="40.9" y="339.0" width="1.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="43.9" y="350.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="42.4" y="355.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="45.4" y="366.0"></text>
</g>
<g>
<title>epoll_wait (14 samples, 1.75%)</title><rect x="43.8" y="355.0" width="20.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="46.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (66 samples, 8.23%)</title><rect x="64.4" y="387.0" width="97.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.4" y="398.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (65 samples, 8.10%)</title><rect x="65.9" y="371.0" width="95.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="68.9" y="382.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (56 samples, 6.98%)</title><rect x="65.9" y="355.0" width="82.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.9" y="366.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (47 samples, 5.86%)</title><rect x="65.9" y="339.0" width="69.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="68.9" y="350.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (47 samples, 5.86%)</title><rect x="65.9" y="323.0" width="69.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.9" y="334.0">one/nio..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (47 samples, 5.86%)</title><rect x="65.9" y="307.0" width="69.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.9" y="318.0">Request..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 1.25%)</title><rect x="65.9" y="291.0" width="14.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 1.12%)</title><rect x="67.4" y="275.0" width="13.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="70.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.25%)</title><rect x="67.4" y="259.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.4" y="270.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="67.4" y="243.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="70.4" y="254.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.12%)</title><rect x="68.9" y="243.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.9" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="68.9" y="227.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.9" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="68.9" y="211.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.9" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="68.9" y="195.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.9" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.87%)</title><rect x="70.3" y="259.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.3" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.87%)</title><rect x="70.3" y="243.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.3" y="254.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.12%)</title><rect x="71.8" y="227.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.8" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.62%)</title><rect x="73.3" y="227.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.3" y="238.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.62%)</title><rect x="73.3" y="211.0" width="7.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="76.3" y="222.0"></text>
</g>
<g>
<title>__libc_send (4 samples, 0.50%)</title><rect x="74.7" y="195.0" width="5.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="77.7" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.25%)</title><rect x="80.6" y="291.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.25%)</title><rect x="80.6" y="275.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.6" y="286.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.12%)</title><rect x="82.1" y="259.0" width="1.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="85.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.get (35 samples, 4.36%)</title><rect x="83.6" y="291.0" width="51.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.6" y="302.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/Response.ok (1 samples, 0.12%)</title><rect x="83.6" y="275.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.12%)</title><rect x="83.6" y="259.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="86.6" y="270.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.12%)</title><rect x="83.6" y="243.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.12%)</title><rect x="85.0" y="275.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.0" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.12%)</title><rect x="85.0" y="259.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.0" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="85.0" y="243.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.0" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="85.0" y="227.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (33 samples, 4.11%)</title><rect x="86.5" y="275.0" width="48.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.5" y="286.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (33 samples, 4.11%)</title><rect x="86.5" y="259.0" width="48.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="89.5" y="270.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (33 samples, 4.11%)</title><rect x="86.5" y="243.0" width="48.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="89.5" y="254.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (28 samples, 3.49%)</title><rect x="88.0" y="227.0" width="41.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="91.0" y="238.0">Jav..</text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (28 samples, 3.49%)</title><rect x="88.0" y="211.0" width="41.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="91.0" y="222.0">roc..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.12%)</title><rect x="88.0" y="195.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="91.0" y="206.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.12%)</title><rect x="88.0" y="179.0" width="1.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="91.0" y="190.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.12%)</title><rect x="88.0" y="163.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="91.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (22 samples, 2.74%)</title><rect x="89.5" y="195.0" width="32.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="92.5" y="206.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (22 samples, 2.74%)</title><rect x="89.5" y="179.0" width="32.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="92.5" y="190.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (21 samples, 2.62%)</title><rect x="89.5" y="163.0" width="30.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="92.5" y="174.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (21 samples, 2.62%)</title><rect x="89.5" y="147.0" width="30.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="92.5" y="158.0">ro..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.12%)</title><rect x="89.5" y="131.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="92.5" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.12%)</title><rect x="90.9" y="131.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="93.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (18 samples, 2.24%)</title><rect x="92.4" y="131.0" width="26.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="95.4" y="142.0">r..</text>
</g>
<g>
<title>__memmove_sse2_unaligned (2 samples, 0.25%)</title><rect x="95.3" y="115.0" width="3.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="98.3" y="126.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="98.3" y="115.0" width="1.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="101.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.12%)</title><rect x="99.8" y="115.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="102.8" y="126.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.12%)</title><rect x="99.8" y="99.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="102.8" y="110.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.12%)</title><rect x="101.2" y="115.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="104.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.12%)</title><rect x="102.7" y="115.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="105.7" y="126.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) [clone .plt] (1 samples, 0.12%)</title><rect x="102.7" y="99.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="105.7" y="110.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.12%)</title><rect x="104.2" y="115.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="107.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (9 samples, 1.12%)</title><rect x="105.6" y="115.0" width="13.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="108.6" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (9 samples, 1.12%)</title><rect x="105.6" y="99.0" width="13.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="108.6" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (9 samples, 1.12%)</title><rect x="105.6" y="83.0" width="13.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="108.6" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.12%)</title><rect x="105.6" y="67.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="108.6" y="78.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="105.6" y="51.0" width="1.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="108.6" y="62.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (7 samples, 0.87%)</title><rect x="107.1" y="67.0" width="10.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="110.1" y="78.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.25%)</title><rect x="110.0" y="51.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="113.0" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.37%)</title><rect x="113.0" y="51.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="116.0" y="62.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.12%)</title><rect x="114.5" y="35.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="117.5" y="46.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="115.9" y="35.0" width="1.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="118.9" y="46.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.12%)</title><rect x="117.4" y="67.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="120.4" y="78.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.12%)</title><rect x="118.9" y="131.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="121.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (1 samples, 0.12%)</title><rect x="120.3" y="163.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="123.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.12%)</title><rect x="121.8" y="195.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="124.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (4 samples, 0.50%)</title><rect x="123.3" y="195.0" width="5.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="126.3" y="206.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.37%)</title><rect x="123.3" y="179.0" width="4.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="126.3" y="190.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.12%)</title><rect x="123.3" y="163.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="126.3" y="174.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.25%)</title><rect x="124.8" y="163.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="127.8" y="174.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.25%)</title><rect x="124.8" y="147.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="127.8" y="158.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.25%)</title><rect x="124.8" y="131.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="127.8" y="142.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.12%)</title><rect x="124.8" y="115.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="127.8" y="126.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.12%)</title><rect x="126.2" y="115.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="129.2" y="126.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.12%)</title><rect x="127.7" y="179.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="130.7" y="190.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.12%)</title><rect x="127.7" y="163.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="130.7" y="174.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.12%)</title><rect x="129.2" y="227.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="132.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.25%)</title><rect x="130.6" y="227.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="133.6" y="238.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.12%)</title><rect x="133.6" y="227.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="136.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.75%)</title><rect x="135.1" y="339.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.25%)</title><rect x="135.1" y="323.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="135.1" y="307.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.1" y="318.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="135.1" y="291.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.12%)</title><rect x="136.5" y="307.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="139.5" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.37%)</title><rect x="138.0" y="323.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.0" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.37%)</title><rect x="138.0" y="307.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.0" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.12%)</title><rect x="142.4" y="323.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.37%)</title><rect x="143.9" y="339.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.9" y="350.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.25%)</title><rect x="145.4" y="323.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.4" y="334.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.25%)</title><rect x="145.4" y="307.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="148.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.12%)</title><rect x="146.8" y="291.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.8" y="302.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.12%)</title><rect x="146.8" y="275.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.8" y="286.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="146.8" y="259.0" width="1.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="149.8" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (9 samples, 1.12%)</title><rect x="148.3" y="355.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="151.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 1.12%)</title><rect x="148.3" y="339.0" width="13.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.3" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.25%)</title><rect x="151.2" y="323.0" width="3.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="154.2" y="334.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.12%)</title><rect x="152.7" y="307.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="155.7" y="318.0"></text>
</g>
<g>
<title>__recv (5 samples, 0.62%)</title><rect x="154.2" y="323.0" width="7.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="157.2" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=15600] (58 samples, 7.23%)</title><rect x="161.5" y="419.0" width="85.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="164.5" y="430.0">[NIO Selec..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (58 samples, 7.23%)</title><rect x="161.5" y="403.0" width="85.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="164.5" y="414.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.12%)</title><rect x="167.4" y="387.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="170.4" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.12%)</title><rect x="167.4" y="371.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="170.4" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 1.12%)</title><rect x="168.9" y="387.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 1.12%)</title><rect x="168.9" y="371.0" width="13.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.9" y="382.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.12%)</title><rect x="168.9" y="355.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="171.9" y="366.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="170.4" y="355.0" width="1.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="173.4" y="366.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.87%)</title><rect x="171.8" y="355.0" width="10.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="174.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (44 samples, 5.49%)</title><rect x="182.1" y="387.0" width="64.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.1" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (43 samples, 5.36%)</title><rect x="183.6" y="371.0" width="63.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="186.6" y="382.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (36 samples, 4.49%)</title><rect x="183.6" y="355.0" width="53.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="186.6" y="366.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (33 samples, 4.11%)</title><rect x="183.6" y="339.0" width="48.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="186.6" y="350.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (33 samples, 4.11%)</title><rect x="183.6" y="323.0" width="48.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.6" y="334.0">one/..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (33 samples, 4.11%)</title><rect x="183.6" y="307.0" width="48.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.6" y="318.0">Requ..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 0.87%)</title><rect x="183.6" y="291.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 0.87%)</title><rect x="183.6" y="275.0" width="10.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.50%)</title><rect x="183.6" y="259.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.6" y="270.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.12%)</title><rect x="188.0" y="243.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.0" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="188.0" y="227.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="188.0" y="211.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.0" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="188.0" y="195.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="191.0" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.37%)</title><rect x="189.5" y="259.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.5" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.37%)</title><rect x="189.5" y="243.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.5" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.37%)</title><rect x="189.5" y="227.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="192.5" y="238.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.37%)</title><rect x="189.5" y="211.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="192.5" y="222.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.12%)</title><rect x="192.4" y="195.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="195.4" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.12%)</title><rect x="193.9" y="291.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="196.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.12%)</title><rect x="193.9" y="275.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="196.9" y="286.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.12%)</title><rect x="193.9" y="259.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="196.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.get (25 samples, 3.12%)</title><rect x="195.4" y="291.0" width="36.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="198.4" y="302.0">ru/..</text>
</g>
<g>
<title>one/nio/http/Response.ok (1 samples, 0.12%)</title><rect x="195.4" y="275.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="198.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.12%)</title><rect x="195.4" y="259.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.4" y="270.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.12%)</title><rect x="195.4" y="243.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (24 samples, 2.99%)</title><rect x="196.9" y="275.0" width="35.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.9" y="286.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (24 samples, 2.99%)</title><rect x="196.9" y="259.0" width="35.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="199.9" y="270.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (24 samples, 2.99%)</title><rect x="196.9" y="243.0" width="35.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="199.9" y="254.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (24 samples, 2.99%)</title><rect x="196.9" y="227.0" width="35.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="199.9" y="238.0">Jav..</text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.12%)</title><rect x="196.9" y="211.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="199.9" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (22 samples, 2.74%)</title><rect x="198.3" y="211.0" width="32.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="201.3" y="222.0">ro..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.12%)</title><rect x="198.3" y="195.0" width="1.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="201.3" y="206.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.12%)</title><rect x="198.3" y="179.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="201.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (19 samples, 2.37%)</title><rect x="199.8" y="195.0" width="28.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="202.8" y="206.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (19 samples, 2.37%)</title><rect x="199.8" y="179.0" width="28.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="202.8" y="190.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (19 samples, 2.37%)</title><rect x="199.8" y="163.0" width="28.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="202.8" y="174.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (19 samples, 2.37%)</title><rect x="199.8" y="147.0" width="28.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="202.8" y="158.0">r..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.12%)</title><rect x="199.8" y="131.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="202.8" y="142.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (1 samples, 0.12%)</title><rect x="201.3" y="131.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="204.3" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (16 samples, 2.00%)</title><rect x="202.7" y="131.0" width="23.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="205.7" y="142.0">r..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.12%)</title><rect x="207.2" y="115.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="210.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.12%)</title><rect x="207.2" y="99.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="210.2" y="110.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.25%)</title><rect x="208.6" y="115.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="211.6" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.25%)</title><rect x="211.6" y="115.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="214.6" y="126.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.12%)</title><rect x="211.6" y="99.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="214.6" y="110.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.12%)</title><rect x="211.6" y="83.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="214.6" y="94.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.12%)</title><rect x="211.6" y="67.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="214.6" y="78.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.12%)</title><rect x="213.0" y="99.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="216.0" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (7 samples, 0.87%)</title><rect x="214.5" y="115.0" width="10.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="217.5" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (7 samples, 0.87%)</title><rect x="214.5" y="99.0" width="10.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="217.5" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (7 samples, 0.87%)</title><rect x="214.5" y="83.0" width="10.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="217.5" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.12%)</title><rect x="214.5" y="67.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="217.5" y="78.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (6 samples, 0.75%)</title><rect x="216.0" y="67.0" width="8.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="219.0" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.50%)</title><rect x="218.9" y="51.0" width="5.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="221.9" y="62.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.12%)</title><rect x="223.3" y="35.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="226.3" y="46.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.12%)</title><rect x="224.8" y="115.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="227.8" y="126.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.12%)</title><rect x="226.3" y="131.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="229.3" y="142.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.25%)</title><rect x="227.8" y="195.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="230.8" y="206.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.12%)</title><rect x="227.8" y="179.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="230.8" y="190.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.12%)</title><rect x="229.2" y="179.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="232.2" y="190.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.12%)</title><rect x="229.2" y="163.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="232.2" y="174.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.12%)</title><rect x="229.2" y="147.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="232.2" y="158.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.12%)</title><rect x="229.2" y="131.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="232.2" y="142.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.12%)</title><rect x="229.2" y="115.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="232.2" y="126.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.12%)</title><rect x="230.7" y="211.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="233.7" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.25%)</title><rect x="232.2" y="339.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="235.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.12%)</title><rect x="232.2" y="323.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="235.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="232.2" y="307.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="232.2" y="291.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.2" y="302.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.12%)</title><rect x="232.2" y="275.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.2" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="233.6" y="323.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="236.6" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="233.6" y="307.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.6" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="235.1" y="339.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="238.1" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="235.1" y="323.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="238.1" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 0.87%)</title><rect x="236.6" y="355.0" width="10.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="239.6" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 0.75%)</title><rect x="238.1" y="339.0" width="8.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.1" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.50%)</title><rect x="238.1" y="323.0" width="5.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="241.1" y="334.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="238.1" y="307.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="241.1" y="318.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.37%)</title><rect x="239.5" y="307.0" width="4.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="242.5" y="318.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.12%)</title><rect x="242.5" y="291.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="245.5" y="302.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.25%)</title><rect x="243.9" y="323.0" width="3.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="246.9" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=15601] (108 samples, 13.47%)</title><rect x="246.9" y="419.0" width="158.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="249.9" y="430.0">[NIO Selector #2 tid..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (108 samples, 13.47%)</title><rect x="246.9" y="403.0" width="158.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.9" y="414.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (23 samples, 2.87%)</title><rect x="246.9" y="387.0" width="33.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="249.9" y="398.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.12%)</title><rect x="246.9" y="371.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="249.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.access$100 (1 samples, 0.12%)</title><rect x="246.9" y="355.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="249.9" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (22 samples, 2.74%)</title><rect x="248.4" y="371.0" width="32.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.4" y="382.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.25%)</title><rect x="251.3" y="355.0" width="2.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="254.3" y="366.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.25%)</title><rect x="254.2" y="355.0" width="3.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="257.2" y="366.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.12%)</title><rect x="257.2" y="355.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="260.2" y="366.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.12%)</title><rect x="258.7" y="355.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="261.7" y="366.0"></text>
</g>
<g>
<title>epoll_wait (14 samples, 1.75%)</title><rect x="260.1" y="355.0" width="20.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="263.1" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (85 samples, 10.60%)</title><rect x="280.7" y="387.0" width="125.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.7" y="398.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (84 samples, 10.47%)</title><rect x="282.2" y="371.0" width="123.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.2" y="382.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (67 samples, 8.35%)</title><rect x="282.2" y="355.0" width="98.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.2" y="366.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (61 samples, 7.61%)</title><rect x="282.2" y="339.0" width="89.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="285.2" y="350.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (61 samples, 7.61%)</title><rect x="282.2" y="323.0" width="89.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.2" y="334.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (60 samples, 7.48%)</title><rect x="282.2" y="307.0" width="88.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="285.2" y="318.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 1.25%)</title><rect x="282.2" y="291.0" width="14.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 1.25%)</title><rect x="282.2" y="275.0" width="14.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.37%)</title><rect x="282.2" y="259.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="285.2" y="270.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.12%)</title><rect x="285.1" y="243.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="288.1" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.87%)</title><rect x="286.6" y="259.0" width="10.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.6" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.87%)</title><rect x="286.6" y="243.0" width="10.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.6" y="254.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.12%)</title><rect x="288.1" y="227.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="291.1" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.62%)</title><rect x="289.6" y="227.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="292.6" y="238.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.62%)</title><rect x="289.6" y="211.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="292.6" y="222.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.25%)</title><rect x="289.6" y="195.0" width="2.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="292.6" y="206.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.12%)</title><rect x="291.0" y="179.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="294.0" y="190.0"></text>
</g>
<g>
<title>__libc_send (3 samples, 0.37%)</title><rect x="292.5" y="195.0" width="4.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="295.5" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.37%)</title><rect x="296.9" y="291.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="299.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.37%)</title><rect x="296.9" y="275.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="299.9" y="286.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.12%)</title><rect x="296.9" y="259.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="299.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.12%)</title><rect x="296.9" y="243.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.9" y="254.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.12%)</title><rect x="296.9" y="227.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="299.9" y="238.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="298.4" y="259.0" width="1.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="301.4" y="270.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.12%)</title><rect x="299.9" y="259.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="302.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.get (47 samples, 5.86%)</title><rect x="301.3" y="291.0" width="69.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.3" y="302.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/Response.ok (1 samples, 0.12%)</title><rect x="301.3" y="275.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="304.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.12%)</title><rect x="301.3" y="259.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="304.3" y="270.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.12%)</title><rect x="301.3" y="243.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (46 samples, 5.74%)</title><rect x="302.8" y="275.0" width="67.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.8" y="286.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (45 samples, 5.61%)</title><rect x="302.8" y="259.0" width="66.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="305.8" y="270.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (45 samples, 5.61%)</title><rect x="302.8" y="243.0" width="66.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.8" y="254.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (43 samples, 5.36%)</title><rect x="302.8" y="227.0" width="63.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="305.8" y="238.0">Java_or..</text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (2 samples, 0.25%)</title><rect x="302.8" y="211.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="305.8" y="222.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.12%)</title><rect x="305.7" y="211.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="308.7" y="222.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.12%)</title><rect x="307.2" y="211.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="310.2" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (38 samples, 4.74%)</title><rect x="308.7" y="211.0" width="55.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="311.7" y="222.0">rocks..</text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.12%)</title><rect x="308.7" y="195.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="311.7" y="206.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.12%)</title><rect x="310.1" y="195.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="313.1" y="206.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.12%)</title><rect x="311.6" y="195.0" width="1.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="314.6" y="206.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.12%)</title><rect x="313.1" y="195.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="316.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.12%)</title><rect x="314.6" y="195.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="317.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (27 samples, 3.37%)</title><rect x="316.0" y="195.0" width="39.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="319.0" y="206.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (27 samples, 3.37%)</title><rect x="316.0" y="179.0" width="39.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="319.0" y="190.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (25 samples, 3.12%)</title><rect x="317.5" y="163.0" width="36.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="320.5" y="174.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (25 samples, 3.12%)</title><rect x="317.5" y="147.0" width="36.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="320.5" y="158.0">roc..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (1 samples, 0.12%)</title><rect x="319.0" y="131.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="322.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.12%)</title><rect x="320.4" y="131.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="323.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (17 samples, 2.12%)</title><rect x="321.9" y="131.0" width="25.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="324.9" y="142.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (15 samples, 1.87%)</title><rect x="323.4" y="115.0" width="22.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="326.4" y="126.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (15 samples, 1.87%)</title><rect x="323.4" y="99.0" width="22.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="326.4" y="110.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (15 samples, 1.87%)</title><rect x="323.4" y="83.0" width="22.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="326.4" y="94.0">/..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (14 samples, 1.75%)</title><rect x="323.4" y="67.0" width="20.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="326.4" y="78.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.12%)</title><rect x="335.2" y="51.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="338.2" y="62.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.12%)</title><rect x="336.6" y="51.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="339.6" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.50%)</title><rect x="338.1" y="51.0" width="5.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="341.1" y="62.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.12%)</title><rect x="341.0" y="35.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="344.0" y="46.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="342.5" y="35.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="345.5" y="46.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (1 samples, 0.12%)</title><rect x="344.0" y="67.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="347.0" y="78.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.12%)</title><rect x="345.5" y="115.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="348.5" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.12%)</title><rect x="346.9" y="131.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="349.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.12%)</title><rect x="348.4" y="131.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="351.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (2 samples, 0.25%)</title><rect x="349.9" y="131.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="352.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.12%)</title><rect x="352.8" y="131.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="355.8" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (1 samples, 0.12%)</title><rect x="354.3" y="163.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="357.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.12%)</title><rect x="355.8" y="195.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="358.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (5 samples, 0.62%)</title><rect x="357.2" y="195.0" width="7.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="360.2" y="206.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.12%)</title><rect x="357.2" y="179.0" width="1.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="360.2" y="190.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.37%)</title><rect x="358.7" y="179.0" width="4.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="361.7" y="190.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.12%)</title><rect x="358.7" y="163.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="361.7" y="174.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.25%)</title><rect x="360.2" y="163.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="363.2" y="174.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.25%)</title><rect x="360.2" y="147.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="363.2" y="158.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.12%)</title><rect x="360.2" y="131.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="363.2" y="142.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.12%)</title><rect x="360.2" y="115.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="363.2" y="126.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.12%)</title><rect x="361.6" y="131.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="364.6" y="142.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.12%)</title><rect x="363.1" y="179.0" width="1.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="366.1" y="190.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.12%)</title><rect x="363.1" y="163.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="366.1" y="174.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.12%)</title><rect x="364.6" y="211.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="367.6" y="222.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.12%)</title><rect x="366.1" y="227.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="369.1" y="238.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.12%)</title><rect x="367.5" y="227.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="370.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArraySpecial (1 samples, 0.12%)</title><rect x="369.0" y="259.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="372.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.12%)</title><rect x="369.0" y="243.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="372.0" y="254.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.12%)</title><rect x="369.0" y="227.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="372.0" y="238.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.12%)</title><rect x="369.0" y="211.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="372.0" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.12%)</title><rect x="370.5" y="307.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="373.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.12%)</title><rect x="370.5" y="291.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="373.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.12%)</title><rect x="370.5" y="275.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="373.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.37%)</title><rect x="371.9" y="339.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.12%)</title><rect x="371.9" y="323.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.9" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="373.4" y="323.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="376.4" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="373.4" y="307.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="376.4" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.12%)</title><rect x="374.9" y="323.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="377.9" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.37%)</title><rect x="376.4" y="339.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="379.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.37%)</title><rect x="376.4" y="323.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="379.4" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (17 samples, 2.12%)</title><rect x="380.8" y="355.0" width="25.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="383.8" y="366.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (16 samples, 2.00%)</title><rect x="382.2" y="339.0" width="23.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="385.2" y="350.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.75%)</title><rect x="383.7" y="323.0" width="8.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="386.7" y="334.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="383.7" y="307.0" width="1.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="386.7" y="318.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.12%)</title><rect x="385.2" y="307.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="388.2" y="318.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.37%)</title><rect x="386.7" y="307.0" width="4.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="389.7" y="318.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.12%)</title><rect x="388.1" y="291.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="391.1" y="302.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.12%)</title><rect x="389.6" y="291.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="392.6" y="302.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.12%)</title><rect x="391.1" y="307.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="394.1" y="318.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.12%)</title><rect x="392.5" y="323.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="395.5" y="334.0"></text>
</g>
<g>
<title>__recv (8 samples, 1.00%)</title><rect x="394.0" y="323.0" width="11.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="397.0" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=15602] (136 samples, 16.96%)</title><rect x="405.8" y="419.0" width="200.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="408.8" y="430.0">[NIO Selector #3 tid=15602]</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.12%)</title><rect x="405.8" y="403.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="408.8" y="414.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.12%)</title><rect x="405.8" y="387.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="408.8" y="398.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.12%)</title><rect x="405.8" y="371.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="408.8" y="382.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (135 samples, 16.83%)</title><rect x="407.3" y="403.0" width="198.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="410.3" y="414.0">one/nio/server/SelectorThr..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (3 samples, 0.37%)</title><rect x="408.7" y="387.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="411.7" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.25%)</title><rect x="413.1" y="387.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="416.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.25%)</title><rect x="413.1" y="371.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="416.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (17 samples, 2.12%)</title><rect x="416.1" y="387.0" width="25.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="419.1" y="398.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (17 samples, 2.12%)</title><rect x="416.1" y="371.0" width="25.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="419.1" y="382.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.12%)</title><rect x="417.6" y="355.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="420.6" y="366.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.25%)</title><rect x="419.0" y="355.0" width="3.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="422.0" y="366.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.12%)</title><rect x="420.5" y="339.0" width="1.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="423.5" y="350.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.25%)</title><rect x="422.0" y="355.0" width="2.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="425.0" y="366.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="424.9" y="355.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="427.9" y="366.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.12%)</title><rect x="426.4" y="355.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="429.4" y="366.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 1.12%)</title><rect x="427.9" y="355.0" width="13.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="430.9" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (112 samples, 13.97%)</title><rect x="441.1" y="387.0" width="164.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="444.1" y="398.0">one/nio/net/Session.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (111 samples, 13.84%)</title><rect x="442.6" y="371.0" width="163.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="445.6" y="382.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (95 samples, 11.85%)</title><rect x="442.6" y="355.0" width="139.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="445.6" y="366.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (90 samples, 11.22%)</title><rect x="442.6" y="339.0" width="132.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="445.6" y="350.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (90 samples, 11.22%)</title><rect x="442.6" y="323.0" width="132.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="445.6" y="334.0">one/nio/http/Htt..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (88 samples, 10.97%)</title><rect x="442.6" y="307.0" width="129.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="445.6" y="318.0">RequestHandler0_..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8 samples, 1.00%)</title><rect x="442.6" y="291.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="445.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 1.00%)</title><rect x="442.6" y="275.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="445.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.12%)</title><rect x="442.6" y="259.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="445.6" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.87%)</title><rect x="444.0" y="259.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="447.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.87%)</title><rect x="444.0" y="243.0" width="10.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="447.0" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (7 samples, 0.87%)</title><rect x="444.0" y="227.0" width="10.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="447.0" y="238.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (7 samples, 0.87%)</title><rect x="444.0" y="211.0" width="10.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="447.0" y="222.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.25%)</title><rect x="444.0" y="195.0" width="3.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="447.0" y="206.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="444.0" y="179.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="447.0" y="190.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.12%)</title><rect x="445.5" y="179.0" width="1.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="448.5" y="190.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.12%)</title><rect x="445.5" y="163.0" width="1.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="448.5" y="174.0"></text>
</g>
<g>
<title>__libc_send (4 samples, 0.50%)</title><rect x="447.0" y="195.0" width="5.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="450.0" y="206.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.12%)</title><rect x="452.9" y="195.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="455.9" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.37%)</title><rect x="454.3" y="291.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="457.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.37%)</title><rect x="454.3" y="275.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="457.3" y="286.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="454.3" y="259.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="457.3" y="270.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.25%)</title><rect x="455.8" y="259.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.get (77 samples, 9.60%)</title><rect x="458.8" y="291.0" width="113.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.8" y="302.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (2 samples, 0.25%)</title><rect x="461.7" y="275.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="464.7" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.25%)</title><rect x="461.7" y="259.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="464.7" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.25%)</title><rect x="461.7" y="243.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="464.7" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.25%)</title><rect x="461.7" y="227.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="464.7" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="463.2" y="211.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.2" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.12%)</title><rect x="463.2" y="195.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.2" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.12%)</title><rect x="463.2" y="179.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (3 samples, 0.37%)</title><rect x="464.6" y="275.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.37%)</title><rect x="464.6" y="259.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.6" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.37%)</title><rect x="464.6" y="243.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="467.6" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.37%)</title><rect x="464.6" y="227.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.37%)</title><rect x="464.6" y="211.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="467.6" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="467.6" y="195.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.12%)</title><rect x="467.6" y="179.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.6" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.12%)</title><rect x="467.6" y="163.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="470.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (70 samples, 8.73%)</title><rect x="469.1" y="275.0" width="102.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.1" y="286.0">ru/mail/poli..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (70 samples, 8.73%)</title><rect x="469.1" y="259.0" width="102.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="472.1" y="270.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (70 samples, 8.73%)</title><rect x="469.1" y="243.0" width="102.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.1" y="254.0">org/rocksdb/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (68 samples, 8.48%)</title><rect x="469.1" y="227.0" width="100.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="472.1" y="238.0">Java_org_roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.12%)</title><rect x="469.1" y="211.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="472.1" y="222.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.25%)</title><rect x="470.5" y="211.0" width="3.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="473.5" y="222.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.12%)</title><rect x="473.5" y="211.0" width="1.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="476.5" y="222.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.12%)</title><rect x="474.9" y="211.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="477.9" y="222.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.12%)</title><rect x="476.4" y="211.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="479.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (3 samples, 0.37%)</title><rect x="477.9" y="211.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="480.9" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (59 samples, 7.36%)</title><rect x="482.3" y="211.0" width="86.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="485.3" y="222.0">rocksdb_ge..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="483.8" y="195.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="486.8" y="206.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.25%)</title><rect x="485.2" y="195.0" width="3.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="488.2" y="206.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.12%)</title><rect x="486.7" y="179.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="489.7" y="190.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.12%)</title><rect x="488.2" y="195.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="491.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (46 samples, 5.74%)</title><rect x="489.7" y="195.0" width="67.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="492.7" y="206.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.12%)</title><rect x="489.7" y="179.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="492.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (45 samples, 5.61%)</title><rect x="491.1" y="179.0" width="66.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="494.1" y="190.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (43 samples, 5.36%)</title><rect x="494.1" y="163.0" width="63.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="497.1" y="174.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (42 samples, 5.24%)</title><rect x="494.1" y="147.0" width="61.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="497.1" y="158.0">rocksd..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (1 samples, 0.12%)</title><rect x="494.1" y="131.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="497.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) [clone .plt] (1 samples, 0.12%)</title><rect x="495.5" y="131.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="498.5" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (38 samples, 4.74%)</title><rect x="497.0" y="131.0" width="55.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="500.0" y="142.0">rocks..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.12%)</title><rect x="497.0" y="115.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="500.0" y="126.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.12%)</title><rect x="498.5" y="115.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="501.5" y="126.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (3 samples, 0.37%)</title><rect x="500.0" y="115.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="503.0" y="126.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.12%)</title><rect x="500.0" y="99.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="503.0" y="110.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.25%)</title><rect x="501.4" y="99.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="504.4" y="110.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.12%)</title><rect x="502.9" y="83.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="505.9" y="94.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (1 samples, 0.12%)</title><rect x="504.4" y="115.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="507.4" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (29 samples, 3.62%)</title><rect x="505.8" y="115.0" width="42.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="508.8" y="126.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.12%)</title><rect x="507.3" y="99.0" width="1.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="510.3" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (27 samples, 3.37%)</title><rect x="508.8" y="99.0" width="39.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="511.8" y="110.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (26 samples, 3.24%)</title><rect x="510.2" y="83.0" width="38.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="513.2" y="94.0">/tm..</text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (2 samples, 0.25%)</title><rect x="510.2" y="67.0" width="3.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="513.2" y="78.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.12%)</title><rect x="511.7" y="51.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="514.7" y="62.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (21 samples, 2.62%)</title><rect x="513.2" y="67.0" width="30.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="516.2" y="78.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.12%)</title><rect x="529.4" y="51.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="532.4" y="62.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.12%)</title><rect x="530.8" y="51.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="533.8" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 1.00%)</title><rect x="532.3" y="51.0" width="11.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="535.3" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.25%)</title><rect x="541.1" y="35.0" width="3.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="544.1" y="46.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (1 samples, 0.12%)</title><rect x="544.1" y="67.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="547.1" y="78.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (2 samples, 0.25%)</title><rect x="545.6" y="67.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="548.6" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) [clone .plt] (1 samples, 0.12%)</title><rect x="548.5" y="115.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="551.5" y="126.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.12%)</title><rect x="550.0" y="115.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="553.0" y="126.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.12%)</title><rect x="551.4" y="115.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="554.4" y="126.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.12%)</title><rect x="552.9" y="131.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="555.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.12%)</title><rect x="554.4" y="131.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="557.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (1 samples, 0.12%)</title><rect x="555.9" y="147.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="558.9" y="158.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (8 samples, 1.00%)</title><rect x="557.3" y="195.0" width="11.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="560.3" y="206.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.12%)</title><rect x="557.3" y="179.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="560.3" y="190.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.12%)</title><rect x="558.8" y="179.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="561.8" y="190.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.25%)</title><rect x="560.3" y="179.0" width="2.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="563.3" y="190.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.12%)</title><rect x="561.7" y="163.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="564.7" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.50%)</title><rect x="563.2" y="179.0" width="5.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="566.2" y="190.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.50%)</title><rect x="563.2" y="163.0" width="5.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="566.2" y="174.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.25%)</title><rect x="566.2" y="147.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="569.2" y="158.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="567.6" y="131.0" width="1.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="570.6" y="142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.12%)</title><rect x="569.1" y="227.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="572.1" y="238.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.12%)</title><rect x="569.1" y="211.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="572.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.12%)</title><rect x="570.6" y="227.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="573.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.25%)</title><rect x="572.0" y="307.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="575.0" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.25%)</title><rect x="572.0" y="291.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="575.0" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.25%)</title><rect x="572.0" y="275.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="575.0" y="286.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.25%)</title><rect x="572.0" y="259.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="575.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.25%)</title><rect x="572.0" y="243.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="575.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.37%)</title><rect x="575.0" y="339.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.25%)</title><rect x="575.0" y="323.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="578.0" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.25%)</title><rect x="575.0" y="307.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.0" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.12%)</title><rect x="577.9" y="323.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.9" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.25%)</title><rect x="579.4" y="339.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="582.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.25%)</title><rect x="579.4" y="323.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="582.4" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (16 samples, 2.00%)</title><rect x="582.3" y="355.0" width="23.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="585.3" y="366.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (16 samples, 2.00%)</title><rect x="582.3" y="339.0" width="23.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="585.3" y="350.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (9 samples, 1.12%)</title><rect x="585.3" y="323.0" width="13.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="588.3" y="334.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.12%)</title><rect x="585.3" y="307.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="588.3" y="318.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.12%)</title><rect x="586.8" y="307.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="589.8" y="318.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.50%)</title><rect x="588.2" y="307.0" width="5.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="591.2" y="318.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="591.2" y="291.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="594.2" y="302.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.12%)</title><rect x="592.6" y="291.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="595.6" y="302.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.12%)</title><rect x="594.1" y="307.0" width="1.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="597.1" y="318.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.12%)</title><rect x="595.6" y="307.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="598.6" y="318.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.12%)</title><rect x="597.1" y="307.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="600.1" y="318.0"></text>
</g>
<g>
<title>__recv (4 samples, 0.50%)</title><rect x="598.5" y="323.0" width="5.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="601.5" y="334.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.12%)</title><rect x="604.4" y="323.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="607.4" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=15603] (51 samples, 6.36%)</title><rect x="605.9" y="419.0" width="75.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="608.9" y="430.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (51 samples, 6.36%)</title><rect x="605.9" y="403.0" width="75.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="608.9" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.25%)</title><rect x="605.9" y="387.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="608.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.25%)</title><rect x="605.9" y="371.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="608.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 1.12%)</title><rect x="608.8" y="387.0" width="13.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="611.8" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.12%)</title><rect x="608.8" y="371.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.8" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.12%)</title><rect x="608.8" y="355.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (8 samples, 1.00%)</title><rect x="610.3" y="371.0" width="11.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.3" y="382.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.12%)</title><rect x="610.3" y="355.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="613.3" y="366.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.87%)</title><rect x="611.8" y="355.0" width="10.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="614.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (40 samples, 4.99%)</title><rect x="622.1" y="387.0" width="58.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.1" y="398.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (39 samples, 4.86%)</title><rect x="623.5" y="371.0" width="57.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.5" y="382.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (31 samples, 3.87%)</title><rect x="623.5" y="355.0" width="45.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.5" y="366.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (29 samples, 3.62%)</title><rect x="623.5" y="339.0" width="42.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.5" y="350.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (29 samples, 3.62%)</title><rect x="623.5" y="323.0" width="42.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="626.5" y="334.0">one/..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (29 samples, 3.62%)</title><rect x="623.5" y="307.0" width="42.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="626.5" y="318.0">Requ..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 1.25%)</title><rect x="623.5" y="291.0" width="14.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="626.5" y="302.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.12%)</title><rect x="623.5" y="275.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="626.5" y="286.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.12%)</title><rect x="623.5" y="259.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.12%)</title><rect x="623.5" y="243.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="626.5" y="254.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.12%)</title><rect x="623.5" y="227.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="626.5" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 1.12%)</title><rect x="625.0" y="275.0" width="13.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.62%)</title><rect x="625.0" y="259.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.0" y="270.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="626.5" y="243.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="629.5" y="254.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.37%)</title><rect x="628.0" y="243.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.0" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.12%)</title><rect x="628.0" y="227.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.25%)</title><rect x="629.4" y="227.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.4" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.25%)</title><rect x="629.4" y="211.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.4" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.25%)</title><rect x="629.4" y="195.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="632.4" y="206.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.12%)</title><rect x="630.9" y="179.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.9" y="190.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.12%)</title><rect x="630.9" y="163.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.9" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.50%)</title><rect x="632.4" y="259.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="635.4" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.50%)</title><rect x="632.4" y="243.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="635.4" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.50%)</title><rect x="632.4" y="227.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.4" y="238.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.50%)</title><rect x="632.4" y="211.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="635.4" y="222.0"></text>
</g>
<g>
<title>__libc_send (4 samples, 0.50%)</title><rect x="632.4" y="195.0" width="5.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="635.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.get (19 samples, 2.37%)</title><rect x="638.3" y="291.0" width="27.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="641.3" y="302.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (18 samples, 2.24%)</title><rect x="639.7" y="275.0" width="26.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.7" y="286.0">r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (18 samples, 2.24%)</title><rect x="639.7" y="259.0" width="26.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.7" y="270.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (18 samples, 2.24%)</title><rect x="639.7" y="243.0" width="26.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="642.7" y="254.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (18 samples, 2.24%)</title><rect x="639.7" y="227.0" width="26.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="642.7" y="238.0">J..</text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (1 samples, 0.12%)</title><rect x="639.7" y="211.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="642.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.12%)</title><rect x="641.2" y="211.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="644.2" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (16 samples, 2.00%)</title><rect x="642.7" y="211.0" width="23.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="645.7" y="222.0">r..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="642.7" y="195.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="645.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (13 samples, 1.62%)</title><rect x="644.1" y="195.0" width="19.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="647.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (13 samples, 1.62%)</title><rect x="644.1" y="179.0" width="19.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="647.1" y="190.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (12 samples, 1.50%)</title><rect x="645.6" y="163.0" width="17.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="648.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (11 samples, 1.37%)</title><rect x="645.6" y="147.0" width="16.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="648.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (9 samples, 1.12%)</title><rect x="645.6" y="131.0" width="13.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="648.6" y="142.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.12%)</title><rect x="645.6" y="115.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="648.6" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (8 samples, 1.00%)</title><rect x="647.1" y="115.0" width="11.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="650.1" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (8 samples, 1.00%)</title><rect x="647.1" y="99.0" width="11.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="650.1" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (8 samples, 1.00%)</title><rect x="647.1" y="83.0" width="11.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="650.1" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.12%)</title><rect x="647.1" y="67.0" width="1.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="650.1" y="78.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (7 samples, 0.87%)</title><rect x="648.6" y="67.0" width="10.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="651.6" y="78.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.12%)</title><rect x="651.5" y="51.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="654.5" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.50%)</title><rect x="653.0" y="51.0" width="5.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="656.0" y="62.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.12%)</title><rect x="653.0" y="35.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="656.0" y="46.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (3 samples, 0.37%)</title><rect x="654.4" y="35.0" width="4.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="657.4" y="46.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) [clone .plt] (1 samples, 0.12%)</title><rect x="658.9" y="131.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="661.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.12%)</title><rect x="660.3" y="131.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="663.3" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) [clone .plt] (1 samples, 0.12%)</title><rect x="661.8" y="147.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="664.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.25%)</title><rect x="663.3" y="195.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="666.3" y="206.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.12%)</title><rect x="663.3" y="179.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="666.3" y="190.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.12%)</title><rect x="664.7" y="179.0" width="1.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="667.7" y="190.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="664.7" y="163.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="667.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.25%)</title><rect x="666.2" y="339.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="669.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.12%)</title><rect x="666.2" y="323.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="669.2" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="667.7" y="323.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.7" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="667.7" y="307.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="670.7" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 1.00%)</title><rect x="669.2" y="355.0" width="11.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="672.2" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 0.87%)</title><rect x="670.6" y="339.0" width="10.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="673.6" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.50%)</title><rect x="673.6" y="323.0" width="5.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="676.6" y="334.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.37%)</title><rect x="675.0" y="307.0" width="4.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="678.0" y="318.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.12%)</title><rect x="678.0" y="291.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="681.0" y="302.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.12%)</title><rect x="679.5" y="323.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="682.5" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=15604] (144 samples, 17.96%)</title><rect x="680.9" y="419.0" width="211.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="683.9" y="430.0">[NIO Selector #5 tid=15604]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (144 samples, 17.96%)</title><rect x="680.9" y="403.0" width="211.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.9" y="414.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.12%)</title><rect x="682.4" y="387.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="685.4" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.12%)</title><rect x="683.9" y="387.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (20 samples, 2.49%)</title><rect x="685.3" y="387.0" width="29.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="688.3" y="398.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.25%)</title><rect x="685.3" y="371.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="688.3" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.12%)</title><rect x="686.8" y="355.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (18 samples, 2.24%)</title><rect x="688.3" y="371.0" width="26.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.3" y="382.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.37%)</title><rect x="691.2" y="355.0" width="4.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="694.2" y="366.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.12%)</title><rect x="695.6" y="355.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="698.6" y="366.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.25%)</title><rect x="697.1" y="355.0" width="2.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="700.1" y="366.0"></text>
</g>
<g>
<title>epoll_wait (10 samples, 1.25%)</title><rect x="700.0" y="355.0" width="14.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="703.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (121 samples, 15.09%)</title><rect x="714.8" y="387.0" width="178.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.8" y="398.0">one/nio/net/Session.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (121 samples, 15.09%)</title><rect x="714.8" y="371.0" width="178.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="717.8" y="382.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (107 samples, 13.34%)</title><rect x="714.8" y="355.0" width="157.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="717.8" y="366.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (98 samples, 12.22%)</title><rect x="716.2" y="339.0" width="144.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.2" y="350.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (98 samples, 12.22%)</title><rect x="716.2" y="323.0" width="144.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.2" y="334.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (97 samples, 12.09%)</title><rect x="716.2" y="307.0" width="142.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.2" y="318.0">RequestHandler0_ge..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 1.87%)</title><rect x="716.2" y="291.0" width="22.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="719.2" y="302.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.12%)</title><rect x="716.2" y="275.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.2" y="286.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.12%)</title><rect x="716.2" y="259.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.12%)</title><rect x="716.2" y="243.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="719.2" y="254.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.12%)</title><rect x="716.2" y="227.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="719.2" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (14 samples, 1.75%)</title><rect x="717.7" y="275.0" width="20.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.12%)</title><rect x="717.7" y="259.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.62%)</title><rect x="719.2" y="259.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.2" y="270.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="719.2" y="243.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="722.2" y="254.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.50%)</title><rect x="720.6" y="243.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.6" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.12%)</title><rect x="720.6" y="227.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="723.6" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.37%)</title><rect x="722.1" y="227.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.1" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.37%)</title><rect x="722.1" y="211.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.1" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.37%)</title><rect x="722.1" y="195.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="725.1" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 1.00%)</title><rect x="726.5" y="259.0" width="11.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.5" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 1.00%)</title><rect x="726.5" y="243.0" width="11.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="729.5" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (8 samples, 1.00%)</title><rect x="726.5" y="227.0" width="11.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="729.5" y="238.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (8 samples, 1.00%)</title><rect x="726.5" y="211.0" width="11.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.5" y="222.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.25%)</title><rect x="726.5" y="195.0" width="3.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="729.5" y="206.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.12%)</title><rect x="728.0" y="179.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="731.0" y="190.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.12%)</title><rect x="728.0" y="163.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="731.0" y="174.0"></text>
</g>
<g>
<title>__libc_send (4 samples, 0.50%)</title><rect x="729.5" y="195.0" width="5.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="732.5" y="206.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.25%)</title><rect x="735.4" y="195.0" width="2.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="738.4" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.37%)</title><rect x="738.3" y="291.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.37%)</title><rect x="738.3" y="275.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.3" y="286.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.37%)</title><rect x="738.3" y="259.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.3" y="270.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="741.2" y="243.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.2" y="254.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="741.2" y="227.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="744.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.12%)</title><rect x="741.2" y="211.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="744.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.get (79 samples, 9.85%)</title><rect x="742.7" y="291.0" width="116.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.7" y="302.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.12%)</title><rect x="744.2" y="275.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="747.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.12%)</title><rect x="744.2" y="259.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="747.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.12%)</title><rect x="744.2" y="243.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.2" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.12%)</title><rect x="744.2" y="227.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="747.2" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (1 samples, 0.12%)</title><rect x="745.7" y="275.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="748.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.12%)</title><rect x="745.7" y="259.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="748.7" y="270.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.12%)</title><rect x="745.7" y="243.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="748.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.12%)</title><rect x="747.1" y="275.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="750.1" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.12%)</title><rect x="747.1" y="259.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.1" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="747.1" y="243.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="750.1" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="747.1" y="227.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="750.1" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="747.1" y="211.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.1" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.12%)</title><rect x="747.1" y="195.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="750.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.12%)</title><rect x="747.1" y="179.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="750.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (75 samples, 9.35%)</title><rect x="748.6" y="275.0" width="110.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.6" y="286.0">ru/mail/polis..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (73 samples, 9.10%)</title><rect x="748.6" y="259.0" width="107.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="751.6" y="270.0">org/rocksdb/R..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (73 samples, 9.10%)</title><rect x="748.6" y="243.0" width="107.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.6" y="254.0">org/rocksdb/R..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (66 samples, 8.23%)</title><rect x="748.6" y="227.0" width="97.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="751.6" y="238.0">Java_org_ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.12%)</title><rect x="750.1" y="211.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="753.1" y="222.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.12%)</title><rect x="751.5" y="211.0" width="1.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="754.5" y="222.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.25%)</title><rect x="753.0" y="211.0" width="3.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="756.0" y="222.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.12%)</title><rect x="756.0" y="211.0" width="1.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="759.0" y="222.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.25%)</title><rect x="757.4" y="211.0" width="3.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="760.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.12%)</title><rect x="760.4" y="211.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="763.4" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (56 samples, 6.98%)</title><rect x="761.8" y="211.0" width="82.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="764.8" y="222.0">rocksdb_g..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.37%)</title><rect x="763.3" y="195.0" width="4.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="766.3" y="206.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="764.8" y="179.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="767.8" y="190.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.12%)</title><rect x="766.3" y="179.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="769.3" y="190.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.12%)</title><rect x="767.7" y="195.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="770.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (40 samples, 4.99%)</title><rect x="769.2" y="195.0" width="58.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="772.2" y="206.0">rocksd..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.12%)</title><rect x="770.7" y="179.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="773.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (38 samples, 4.74%)</title><rect x="772.1" y="179.0" width="56.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="775.1" y="190.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (38 samples, 4.74%)</title><rect x="772.1" y="163.0" width="56.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="775.1" y="174.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (38 samples, 4.74%)</title><rect x="772.1" y="147.0" width="56.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="775.1" y="158.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) [clone .plt] (1 samples, 0.12%)</title><rect x="772.1" y="131.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="775.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (35 samples, 4.36%)</title><rect x="773.6" y="131.0" width="51.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="776.6" y="142.0">rocks..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.37%)</title><rect x="779.5" y="115.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="782.5" y="126.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.12%)</title><rect x="783.9" y="115.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="786.9" y="126.0"></text>
</g>
<g>
<title>memcpy@plt (1 samples, 0.12%)</title><rect x="785.4" y="115.0" width="1.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="788.4" y="126.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.25%)</title><rect x="786.9" y="115.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="789.9" y="126.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.12%)</title><rect x="786.9" y="99.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="789.9" y="110.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.12%)</title><rect x="788.3" y="99.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="791.3" y="110.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.12%)</title><rect x="789.8" y="115.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="792.8" y="126.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.12%)</title><rect x="791.3" y="115.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="794.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.12%)</title><rect x="792.7" y="115.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="795.7" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (21 samples, 2.62%)</title><rect x="794.2" y="115.0" width="30.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="797.2" y="126.0">ro..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.12%)</title><rect x="795.7" y="99.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="798.7" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (18 samples, 2.24%)</title><rect x="797.2" y="99.0" width="26.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="800.2" y="110.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (17 samples, 2.12%)</title><rect x="798.6" y="83.0" width="25.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="801.6" y="94.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.12%)</title><rect x="798.6" y="67.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="801.6" y="78.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (16 samples, 2.00%)</title><rect x="800.1" y="67.0" width="23.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="803.1" y="78.0">r..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.12%)</title><rect x="811.9" y="51.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="814.9" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 0.87%)</title><rect x="813.3" y="51.0" width="10.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="816.3" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (3 samples, 0.37%)</title><rect x="819.2" y="35.0" width="4.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="822.2" y="46.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.12%)</title><rect x="823.6" y="99.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="826.6" y="110.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.12%)</title><rect x="825.1" y="131.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="828.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.12%)</title><rect x="826.6" y="131.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="829.6" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.12%)</title><rect x="828.1" y="195.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="831.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (10 samples, 1.25%)</title><rect x="829.5" y="195.0" width="14.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="832.5" y="206.0"></text>
</g>
<g>
<title>jni_NewByteArray (7 samples, 0.87%)</title><rect x="831.0" y="179.0" width="10.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="834.0" y="190.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.25%)</title><rect x="832.5" y="163.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="835.5" y="174.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.12%)</title><rect x="835.4" y="163.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="838.4" y="174.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.12%)</title><rect x="836.9" y="163.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="839.9" y="174.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.25%)</title><rect x="838.4" y="163.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="841.4" y="174.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.25%)</title><rect x="838.4" y="147.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="841.4" y="158.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.12%)</title><rect x="838.4" y="131.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="841.4" y="142.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.12%)</title><rect x="838.4" y="115.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="841.4" y="126.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="839.8" y="131.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="842.8" y="142.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.25%)</title><rect x="841.3" y="179.0" width="2.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="844.3" y="190.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.12%)</title><rect x="842.8" y="163.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="845.8" y="174.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.12%)</title><rect x="844.2" y="211.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="847.2" y="222.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.25%)</title><rect x="845.7" y="227.0" width="3.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="848.7" y="238.0"></text>
</g>
<g>
<title>_int_free (2 samples, 0.25%)</title><rect x="845.7" y="211.0" width="3.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="848.7" y="222.0"></text>
</g>
<g>
<title>malloc (3 samples, 0.37%)</title><rect x="848.7" y="227.0" width="4.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="851.7" y="238.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.12%)</title><rect x="853.1" y="227.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="856.1" y="238.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) [clone .plt] (1 samples, 0.12%)</title><rect x="854.5" y="227.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="857.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArraySpecial (2 samples, 0.25%)</title><rect x="856.0" y="259.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (2 samples, 0.25%)</title><rect x="856.0" y="243.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="859.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.25%)</title><rect x="856.0" y="227.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="859.0" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.25%)</title><rect x="856.0" y="211.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="859.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.25%)</title><rect x="856.0" y="195.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="859.0" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.25%)</title><rect x="856.0" y="179.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="859.0" y="190.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.12%)</title><rect x="859.0" y="307.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="862.0" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.12%)</title><rect x="859.0" y="291.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="862.0" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.12%)</title><rect x="859.0" y="275.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="862.0" y="286.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.12%)</title><rect x="859.0" y="259.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="862.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.62%)</title><rect x="860.4" y="339.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="863.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.50%)</title><rect x="860.4" y="323.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="863.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="864.8" y="307.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="867.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="864.8" y="291.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="867.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.12%)</title><rect x="864.8" y="275.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="867.8" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.12%)</title><rect x="866.3" y="323.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="869.3" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.12%)</title><rect x="867.8" y="339.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="870.8" y="350.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.12%)</title><rect x="867.8" y="323.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="870.8" y="334.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.12%)</title><rect x="867.8" y="307.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="870.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.12%)</title><rect x="867.8" y="291.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="870.8" y="302.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.12%)</title><rect x="867.8" y="275.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="870.8" y="286.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="867.8" y="259.0" width="1.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="870.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.25%)</title><rect x="869.3" y="339.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="872.3" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (14 samples, 1.75%)</title><rect x="872.2" y="355.0" width="20.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="875.2" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (14 samples, 1.75%)</title><rect x="872.2" y="339.0" width="20.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.2" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.62%)</title><rect x="873.7" y="323.0" width="7.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="876.7" y="334.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.12%)</title><rect x="873.7" y="307.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="876.7" y="318.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.12%)</title><rect x="875.1" y="307.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="878.1" y="318.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.12%)</title><rect x="876.6" y="307.0" width="1.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="879.6" y="318.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="876.6" y="291.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="879.6" y="302.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.12%)</title><rect x="878.1" y="307.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="881.1" y="318.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.12%)</title><rect x="879.6" y="307.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="882.6" y="318.0"></text>
</g>
<g>
<title>__recv (8 samples, 1.00%)</title><rect x="881.0" y="323.0" width="11.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="884.0" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=15605] (96 samples, 11.97%)</title><rect x="892.8" y="419.0" width="141.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="895.8" y="430.0">[NIO Selector #6 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (96 samples, 11.97%)</title><rect x="892.8" y="403.0" width="141.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="895.8" y="414.0">one/nio/server/Sel..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.12%)</title><rect x="892.8" y="387.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="895.8" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.12%)</title><rect x="894.3" y="387.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="897.3" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.12%)</title><rect x="894.3" y="371.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="897.3" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (16 samples, 2.00%)</title><rect x="895.7" y="387.0" width="23.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.7" y="398.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (14 samples, 1.75%)</title><rect x="898.7" y="371.0" width="20.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.7" y="382.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.12%)</title><rect x="901.6" y="355.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="904.6" y="366.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.25%)</title><rect x="903.1" y="355.0" width="2.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="906.1" y="366.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 1.12%)</title><rect x="906.0" y="355.0" width="13.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="909.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (78 samples, 9.73%)</title><rect x="919.3" y="387.0" width="114.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="922.3" y="398.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (78 samples, 9.73%)</title><rect x="919.3" y="371.0" width="114.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="922.3" y="382.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (69 samples, 8.60%)</title><rect x="920.7" y="355.0" width="101.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="923.7" y="366.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (58 samples, 7.23%)</title><rect x="920.7" y="339.0" width="85.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="923.7" y="350.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (58 samples, 7.23%)</title><rect x="920.7" y="323.0" width="85.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="923.7" y="334.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (56 samples, 6.98%)</title><rect x="920.7" y="307.0" width="82.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="923.7" y="318.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (12 samples, 1.50%)</title><rect x="920.7" y="291.0" width="17.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="923.7" y="302.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.25%)</title><rect x="922.2" y="275.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="925.2" y="286.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.25%)</title><rect x="922.2" y="259.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="925.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.25%)</title><rect x="922.2" y="243.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="925.2" y="254.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.12%)</title><rect x="923.7" y="227.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="926.7" y="238.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.12%)</title><rect x="923.7" y="211.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="926.7" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 1.12%)</title><rect x="925.2" y="275.0" width="13.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="928.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.37%)</title><rect x="925.2" y="259.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="928.2" y="270.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="925.2" y="243.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="928.2" y="254.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.25%)</title><rect x="926.6" y="243.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="929.6" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.12%)</title><rect x="926.6" y="227.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="929.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.12%)</title><rect x="926.6" y="211.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="929.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.12%)</title><rect x="926.6" y="195.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="929.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="928.1" y="227.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="931.1" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="928.1" y="211.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="931.1" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="928.1" y="195.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="931.1" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.75%)</title><rect x="929.6" y="259.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="932.6" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.75%)</title><rect x="929.6" y="243.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="932.6" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 0.75%)</title><rect x="929.6" y="227.0" width="8.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="932.6" y="238.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (6 samples, 0.75%)</title><rect x="929.6" y="211.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="932.6" y="222.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.25%)</title><rect x="931.0" y="195.0" width="3.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="934.0" y="206.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="931.0" y="179.0" width="1.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="934.0" y="190.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.12%)</title><rect x="932.5" y="179.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="935.5" y="190.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="932.5" y="163.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="935.5" y="174.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.25%)</title><rect x="934.0" y="195.0" width="2.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="937.0" y="206.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.12%)</title><rect x="936.9" y="195.0" width="1.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="939.9" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.12%)</title><rect x="938.4" y="291.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="941.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.12%)</title><rect x="938.4" y="275.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="941.4" y="286.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.12%)</title><rect x="938.4" y="259.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="941.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.12%)</title><rect x="938.4" y="243.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="941.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.get (43 samples, 5.36%)</title><rect x="939.9" y="291.0" width="63.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="942.9" y="302.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (43 samples, 5.36%)</title><rect x="939.9" y="275.0" width="63.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="942.9" y="286.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (42 samples, 5.24%)</title><rect x="939.9" y="259.0" width="61.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="942.9" y="270.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (42 samples, 5.24%)</title><rect x="939.9" y="243.0" width="61.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="942.9" y="254.0">org/ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (37 samples, 4.61%)</title><rect x="941.3" y="227.0" width="54.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="944.3" y="238.0">Java_..</text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.12%)</title><rect x="941.3" y="211.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="944.3" y="222.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.12%)</title><rect x="942.8" y="211.0" width="1.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="945.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) [clone .plt] (1 samples, 0.12%)</title><rect x="944.3" y="211.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="947.3" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (34 samples, 4.24%)</title><rect x="945.8" y="211.0" width="50.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="948.8" y="222.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (33 samples, 4.11%)</title><rect x="945.8" y="195.0" width="48.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="948.8" y="206.0">rock..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (33 samples, 4.11%)</title><rect x="945.8" y="179.0" width="48.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="948.8" y="190.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (32 samples, 3.99%)</title><rect x="945.8" y="163.0" width="47.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="948.8" y="174.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (32 samples, 3.99%)</title><rect x="945.8" y="147.0" width="47.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="948.8" y="158.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.12%)</title><rect x="945.8" y="131.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="948.8" y="142.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="947.2" y="131.0" width="1.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="950.2" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (30 samples, 3.74%)</title><rect x="948.7" y="131.0" width="44.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="951.7" y="142.0">rock..</text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.12%)</title><rect x="951.6" y="115.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="954.6" y="126.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.25%)</title><rect x="953.1" y="115.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="956.1" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.12%)</title><rect x="956.1" y="115.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="959.1" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (23 samples, 2.87%)</title><rect x="957.5" y="115.0" width="33.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="960.5" y="126.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (18 samples, 2.24%)</title><rect x="963.4" y="99.0" width="26.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="966.4" y="110.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (17 samples, 2.12%)</title><rect x="963.4" y="83.0" width="25.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="966.4" y="94.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (2 samples, 0.25%)</title><rect x="963.4" y="67.0" width="3.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="966.4" y="78.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.12%)</title><rect x="964.9" y="51.0" width="1.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="967.9" y="62.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (15 samples, 1.87%)</title><rect x="966.4" y="67.0" width="22.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="969.4" y="78.0">r..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.12%)</title><rect x="985.5" y="51.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="988.5" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.12%)</title><rect x="987.0" y="51.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="990.0" y="62.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.12%)</title><rect x="988.4" y="83.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="991.4" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.12%)</title><rect x="989.9" y="99.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="992.9" y="110.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.12%)</title><rect x="991.4" y="115.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="994.4" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (1 samples, 0.12%)</title><rect x="992.8" y="163.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="995.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.12%)</title><rect x="994.3" y="195.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="997.3" y="206.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.12%)</title><rect x="994.3" y="179.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="997.3" y="190.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.25%)</title><rect x="995.8" y="227.0" width="2.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="998.8" y="238.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="995.8" y="211.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="998.8" y="222.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.12%)</title><rect x="997.3" y="211.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1000.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.12%)</title><rect x="998.7" y="227.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1001.7" y="238.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.12%)</title><rect x="1000.2" y="227.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1003.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArraySpecial (1 samples, 0.12%)</title><rect x="1001.7" y="259.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1004.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.12%)</title><rect x="1001.7" y="243.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1004.7" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.12%)</title><rect x="1001.7" y="227.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1004.7" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="1001.7" y="211.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1004.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="1001.7" y="195.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1004.7" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="1001.7" y="179.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1004.7" y="190.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="1001.7" y="163.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1004.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.12%)</title><rect x="1003.1" y="307.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1006.1" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.12%)</title><rect x="1003.1" y="291.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1006.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.12%)</title><rect x="1004.6" y="307.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1007.6" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.12%)</title><rect x="1004.6" y="291.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1007.6" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.12%)</title><rect x="1004.6" y="275.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1007.6" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.12%)</title><rect x="1004.6" y="259.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1007.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.75%)</title><rect x="1006.1" y="339.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1009.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.37%)</title><rect x="1006.1" y="323.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1009.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.25%)</title><rect x="1006.1" y="307.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1009.1" y="318.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.25%)</title><rect x="1006.1" y="291.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1009.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.25%)</title><rect x="1006.1" y="275.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1009.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.canEncode (1 samples, 0.12%)</title><rect x="1007.6" y="259.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1010.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.12%)</title><rect x="1009.0" y="307.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1012.0" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="1010.5" y="323.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1013.5" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="1010.5" y="307.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1013.5" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.25%)</title><rect x="1012.0" y="323.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1015.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (4 samples, 0.50%)</title><rect x="1014.9" y="339.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1017.9" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="1020.8" y="339.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1023.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="1020.8" y="323.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1023.8" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 1.00%)</title><rect x="1022.3" y="355.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1025.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (8 samples, 1.00%)</title><rect x="1022.3" y="339.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1025.3" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.12%)</title><rect x="1022.3" y="323.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1025.3" y="334.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.12%)</title><rect x="1022.3" y="307.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1025.3" y="318.0"></text>
</g>
<g>
<title>__recv (7 samples, 0.87%)</title><rect x="1023.7" y="323.0" width="10.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1026.7" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=15606] (106 samples, 13.22%)</title><rect x="1034.0" y="419.0" width="156.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1037.0" y="430.0">[NIO Selector #7 tid..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (106 samples, 13.22%)</title><rect x="1034.0" y="403.0" width="156.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1037.0" y="414.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.37%)</title><rect x="1034.0" y="387.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1037.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.37%)</title><rect x="1034.0" y="371.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1037.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (21 samples, 2.62%)</title><rect x="1038.5" y="387.0" width="30.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1041.5" y="398.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (21 samples, 2.62%)</title><rect x="1038.5" y="371.0" width="30.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1041.5" y="382.0">on..</text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.62%)</title><rect x="1041.4" y="355.0" width="7.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1044.4" y="366.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.12%)</title><rect x="1044.3" y="339.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1047.3" y="350.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.25%)</title><rect x="1045.8" y="339.0" width="3.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1048.8" y="350.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.12%)</title><rect x="1048.8" y="355.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1051.8" y="366.0"></text>
</g>
<g>
<title>epoll_wait (13 samples, 1.62%)</title><rect x="1050.2" y="355.0" width="19.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1053.2" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (82 samples, 10.22%)</title><rect x="1069.4" y="387.0" width="120.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1072.4" y="398.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (81 samples, 10.10%)</title><rect x="1070.8" y="371.0" width="119.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1073.8" y="382.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (74 samples, 9.23%)</title><rect x="1070.8" y="355.0" width="108.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1073.8" y="366.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (61 samples, 7.61%)</title><rect x="1070.8" y="339.0" width="89.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1073.8" y="350.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (61 samples, 7.61%)</title><rect x="1070.8" y="323.0" width="89.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1073.8" y="334.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (61 samples, 7.61%)</title><rect x="1070.8" y="307.0" width="89.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1073.8" y="318.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (14 samples, 1.75%)</title><rect x="1072.3" y="291.0" width="20.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1075.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (14 samples, 1.75%)</title><rect x="1072.3" y="275.0" width="20.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1075.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.62%)</title><rect x="1072.3" y="259.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1075.3" y="270.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.62%)</title><rect x="1072.3" y="243.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1075.3" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.12%)</title><rect x="1072.3" y="227.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1075.3" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.50%)</title><rect x="1073.8" y="227.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.8" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.37%)</title><rect x="1075.2" y="211.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1078.2" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.37%)</title><rect x="1075.2" y="195.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1078.2" y="206.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.12%)</title><rect x="1078.2" y="179.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1081.2" y="190.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.12%)</title><rect x="1078.2" y="163.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1081.2" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 1.12%)</title><rect x="1079.7" y="259.0" width="13.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1082.7" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 1.12%)</title><rect x="1079.7" y="243.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1082.7" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (9 samples, 1.12%)</title><rect x="1079.7" y="227.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1082.7" y="238.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (9 samples, 1.12%)</title><rect x="1079.7" y="211.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1082.7" y="222.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.75%)</title><rect x="1079.7" y="195.0" width="8.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1082.7" y="206.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.12%)</title><rect x="1087.0" y="179.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1090.0" y="190.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.12%)</title><rect x="1087.0" y="163.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1090.0" y="174.0"></text>
</g>
<g>
<title>__libc_send (3 samples, 0.37%)</title><rect x="1088.5" y="195.0" width="4.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1091.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.get (46 samples, 5.74%)</title><rect x="1092.9" y="291.0" width="67.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1095.9" y="302.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.12%)</title><rect x="1092.9" y="275.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1095.9" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.12%)</title><rect x="1092.9" y="259.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1095.9" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.12%)</title><rect x="1092.9" y="243.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1095.9" y="254.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="1092.9" y="227.0" width="1.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1095.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (45 samples, 5.61%)</title><rect x="1094.4" y="275.0" width="66.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1097.4" y="286.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (45 samples, 5.61%)</title><rect x="1094.4" y="259.0" width="66.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1097.4" y="270.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (45 samples, 5.61%)</title><rect x="1094.4" y="243.0" width="66.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1097.4" y="254.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (41 samples, 5.11%)</title><rect x="1094.4" y="227.0" width="60.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1097.4" y="238.0">Java_o..</text>
</g>
<g>
<title>malloc (2 samples, 0.25%)</title><rect x="1094.4" y="211.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1097.4" y="222.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.12%)</title><rect x="1097.3" y="211.0" width="1.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1100.3" y="222.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.12%)</title><rect x="1098.8" y="211.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1101.8" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (35 samples, 4.36%)</title><rect x="1100.2" y="211.0" width="51.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1103.2" y="222.0">rocks..</text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.12%)</title><rect x="1101.7" y="195.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1104.7" y="206.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.25%)</title><rect x="1103.2" y="195.0" width="2.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1106.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (24 samples, 2.99%)</title><rect x="1106.1" y="195.0" width="35.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1109.1" y="206.0">roc..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.12%)</title><rect x="1106.1" y="179.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1109.1" y="190.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (23 samples, 2.87%)</title><rect x="1107.6" y="179.0" width="33.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1110.6" y="190.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (21 samples, 2.62%)</title><rect x="1110.5" y="163.0" width="30.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1113.5" y="174.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (20 samples, 2.49%)</title><rect x="1112.0" y="147.0" width="29.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1115.0" y="158.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (2 samples, 0.25%)</title><rect x="1112.0" y="131.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1115.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (18 samples, 2.24%)</title><rect x="1115.0" y="131.0" width="26.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1118.0" y="142.0">r..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.25%)</title><rect x="1119.4" y="115.0" width="2.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1122.4" y="126.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.12%)</title><rect x="1122.3" y="115.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1125.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.12%)</title><rect x="1123.8" y="115.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1126.8" y="126.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.12%)</title><rect x="1123.8" y="99.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1126.8" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (10 samples, 1.25%)</title><rect x="1125.3" y="115.0" width="14.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1128.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (9 samples, 1.12%)</title><rect x="1126.7" y="99.0" width="13.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1129.7" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (9 samples, 1.12%)</title><rect x="1126.7" y="83.0" width="13.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1129.7" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.12%)</title><rect x="1126.7" y="67.0" width="1.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1129.7" y="78.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (7 samples, 0.87%)</title><rect x="1128.2" y="67.0" width="10.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1131.2" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.37%)</title><rect x="1134.1" y="51.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1137.1" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="1137.0" y="35.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1140.0" y="46.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.12%)</title><rect x="1138.5" y="67.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1141.5" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) [clone .plt] (1 samples, 0.12%)</title><rect x="1140.0" y="115.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1143.0" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.12%)</title><rect x="1141.4" y="195.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (6 samples, 0.75%)</title><rect x="1142.9" y="195.0" width="8.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1145.9" y="206.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.12%)</title><rect x="1142.9" y="179.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1145.9" y="190.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.12%)</title><rect x="1144.4" y="179.0" width="1.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1147.4" y="190.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.12%)</title><rect x="1144.4" y="163.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1147.4" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.50%)</title><rect x="1145.9" y="179.0" width="5.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1148.9" y="190.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.12%)</title><rect x="1147.3" y="163.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1150.3" y="174.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.25%)</title><rect x="1148.8" y="163.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1151.8" y="174.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.25%)</title><rect x="1148.8" y="147.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1151.8" y="158.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.12%)</title><rect x="1148.8" y="131.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1151.8" y="142.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.12%)</title><rect x="1150.3" y="131.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1153.3" y="142.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (2 samples, 0.25%)</title><rect x="1151.7" y="211.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.7" y="222.0"></text>
</g>
<g>
<title>malloc (2 samples, 0.25%)</title><rect x="1154.7" y="227.0" width="2.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1157.7" y="238.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.12%)</title><rect x="1157.6" y="227.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1160.6" y="238.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) [clone .plt] (1 samples, 0.12%)</title><rect x="1159.1" y="227.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1162.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 1.12%)</title><rect x="1160.6" y="339.0" width="13.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1163.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.50%)</title><rect x="1160.6" y="323.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1163.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="1162.0" y="307.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1165.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="1162.0" y="291.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1165.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.12%)</title><rect x="1162.0" y="275.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1165.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.25%)</title><rect x="1163.5" y="307.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1166.5" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="1166.5" y="323.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1169.5" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.50%)</title><rect x="1167.9" y="323.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1170.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.12%)</title><rect x="1173.8" y="339.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1176.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="1173.8" y="323.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1176.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.12%)</title><rect x="1175.3" y="339.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1178.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.12%)</title><rect x="1175.3" y="323.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1178.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.12%)</title><rect x="1175.3" y="307.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1178.3" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.25%)</title><rect x="1176.8" y="339.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1179.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.25%)</title><rect x="1176.8" y="323.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1179.8" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 0.87%)</title><rect x="1179.7" y="355.0" width="10.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1182.7" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 0.87%)</title><rect x="1179.7" y="339.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1182.7" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.50%)</title><rect x="1179.7" y="323.0" width="5.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1182.7" y="334.0"></text>
</g>
<g>
<title>WeakPreserveExceptionMark::WeakPreserveExceptionMark(Thread*) (1 samples, 0.12%)</title><rect x="1179.7" y="307.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.7" y="318.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.25%)</title><rect x="1181.2" y="307.0" width="2.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1184.2" y="318.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.12%)</title><rect x="1181.2" y="291.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.2" y="302.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.12%)</title><rect x="1182.6" y="291.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.6" y="302.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.12%)</title><rect x="1184.1" y="307.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.1" y="318.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.37%)</title><rect x="1185.6" y="323.0" width="4.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1188.6" y="334.0"></text>
</g>
</g>
</svg>
