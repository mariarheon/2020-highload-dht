<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="469"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="469"> </text>
<g id="frames">
<g>
<title>all (521 samples, 100.00%)</title><rect x="10.0" y="435.0" width="1180.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="13.0" y="446.0">all</text>
</g>
<g>
<title>[C2 CompilerThre tid=319301] (6 samples, 1.15%)</title><rect x="10.0" y="419.0" width="13.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.19%)</title><rect x="10.0" y="403.0" width="2.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.19%)</title><rect x="10.0" y="387.0" width="2.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.96%)</title><rect x="12.3" y="403.0" width="11.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="15.3" y="414.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.96%)</title><rect x="12.3" y="387.0" width="11.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="15.3" y="398.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.96%)</title><rect x="12.3" y="371.0" width="11.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="15.3" y="382.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (5 samples, 0.96%)</title><rect x="12.3" y="355.0" width="11.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="15.3" y="366.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (5 samples, 0.96%)</title><rect x="12.3" y="339.0" width="11.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.3" y="350.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (5 samples, 0.96%)</title><rect x="12.3" y="323.0" width="11.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.3" y="334.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (5 samples, 0.96%)</title><rect x="12.3" y="307.0" width="11.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="15.3" y="318.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (5 samples, 0.96%)</title><rect x="12.3" y="291.0" width="11.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="15.3" y="302.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (2 samples, 0.38%)</title><rect x="12.3" y="275.0" width="4.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="15.3" y="286.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (2 samples, 0.38%)</title><rect x="12.3" y="259.0" width="4.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="15.3" y="270.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.19%)</title><rect x="12.3" y="243.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="15.3" y="254.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.19%)</title><rect x="14.5" y="243.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.5" y="254.0"></text>
</g>
<g>
<title>Compile::Optimize() (2 samples, 0.38%)</title><rect x="16.8" y="275.0" width="4.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="19.8" y="286.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) (1 samples, 0.19%)</title><rect x="16.8" y="259.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="19.8" y="270.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.19%)</title><rect x="16.8" y="243.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="19.8" y="254.0"></text>
</g>
<g>
<title>IfNode::Opcode() const (1 samples, 0.19%)</title><rect x="16.8" y="227.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="19.8" y="238.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.19%)</title><rect x="19.1" y="259.0" width="2.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="22.1" y="270.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.19%)</title><rect x="19.1" y="243.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="22.1" y="254.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.19%)</title><rect x="19.1" y="227.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="22.1" y="238.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.19%)</title><rect x="21.3" y="275.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="24.3" y="286.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.19%)</title><rect x="21.3" y="259.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="24.3" y="270.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=319341] (65 samples, 12.48%)</title><rect x="23.6" y="419.0" width="147.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="26.6" y="430.0">[NIO Selector #0 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (65 samples, 12.48%)</title><rect x="23.6" y="403.0" width="147.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.6" y="414.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (14 samples, 2.69%)</title><rect x="25.9" y="387.0" width="31.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.9" y="398.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (14 samples, 2.69%)</title><rect x="25.9" y="371.0" width="31.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.9" y="382.0">on..</text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.58%)</title><rect x="30.4" y="355.0" width="6.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="33.4" y="366.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.19%)</title><rect x="34.9" y="339.0" width="2.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="37.9" y="350.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 1.73%)</title><rect x="37.2" y="355.0" width="20.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="40.2" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (50 samples, 9.60%)</title><rect x="57.6" y="387.0" width="113.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.6" y="398.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (50 samples, 9.60%)</title><rect x="57.6" y="371.0" width="113.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.6" y="382.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (43 samples, 8.25%)</title><rect x="57.6" y="355.0" width="97.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.6" y="366.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (42 samples, 8.06%)</title><rect x="57.6" y="339.0" width="95.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.6" y="350.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (42 samples, 8.06%)</title><rect x="57.6" y="323.0" width="95.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="60.6" y="334.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (39 samples, 7.49%)</title><rect x="57.6" y="307.0" width="88.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="60.6" y="318.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (12 samples, 2.30%)</title><rect x="57.6" y="291.0" width="27.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.6" y="302.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (12 samples, 2.30%)</title><rect x="57.6" y="275.0" width="27.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.6" y="286.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 2.11%)</title><rect x="57.6" y="259.0" width="24.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="60.6" y="270.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (11 samples, 2.11%)</title><rect x="57.6" y="243.0" width="24.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.6" y="254.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.19%)</title><rect x="57.6" y="227.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.6" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 1.92%)</title><rect x="59.8" y="227.0" width="22.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.8" y="238.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 1.92%)</title><rect x="59.8" y="211.0" width="22.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.8" y="222.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 1.92%)</title><rect x="59.8" y="195.0" width="22.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="62.8" y="206.0">o..</text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.19%)</title><rect x="75.7" y="179.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.7" y="190.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.19%)</title><rect x="77.9" y="179.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="80.9" y="190.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.19%)</title><rect x="80.2" y="179.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.2" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.19%)</title><rect x="82.5" y="259.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.5" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.19%)</title><rect x="82.5" y="243.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.5" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.19%)</title><rect x="82.5" y="227.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.5" y="238.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.19%)</title><rect x="82.5" y="211.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.19%)</title><rect x="84.7" y="291.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.19%)</title><rect x="84.7" y="275.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.7" y="286.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.19%)</title><rect x="84.7" y="259.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.7" y="270.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.19%)</title><rect x="84.7" y="243.0" width="2.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="87.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.get (26 samples, 4.99%)</title><rect x="87.0" y="291.0" width="58.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.0" y="302.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (26 samples, 4.99%)</title><rect x="87.0" y="275.0" width="58.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.0" y="286.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (26 samples, 4.99%)</title><rect x="87.0" y="259.0" width="58.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="90.0" y="270.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (26 samples, 4.99%)</title><rect x="87.0" y="243.0" width="58.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.0" y="254.0">org/ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (25 samples, 4.80%)</title><rect x="87.0" y="227.0" width="56.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="90.0" y="238.0">Java_o..</text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.19%)</title><rect x="87.0" y="211.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="90.0" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (23 samples, 4.41%)</title><rect x="89.3" y="211.0" width="52.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="92.3" y="222.0">rocks..</text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.19%)</title><rect x="89.3" y="195.0" width="2.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="92.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (18 samples, 3.45%)</title><rect x="91.5" y="195.0" width="40.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="94.5" y="206.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (18 samples, 3.45%)</title><rect x="91.5" y="179.0" width="40.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="94.5" y="190.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (18 samples, 3.45%)</title><rect x="91.5" y="163.0" width="40.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="94.5" y="174.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (18 samples, 3.45%)</title><rect x="91.5" y="147.0" width="40.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="94.5" y="158.0">roc..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.19%)</title><rect x="91.5" y="131.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="94.5" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (16 samples, 3.07%)</title><rect x="93.8" y="131.0" width="36.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="96.8" y="142.0">roc..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.19%)</title><rect x="98.3" y="115.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="101.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (12 samples, 2.30%)</title><rect x="100.6" y="115.0" width="27.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="103.6" y="126.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (12 samples, 2.30%)</title><rect x="100.6" y="99.0" width="27.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="103.6" y="110.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (12 samples, 2.30%)</title><rect x="100.6" y="83.0" width="27.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="103.6" y="94.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.19%)</title><rect x="100.6" y="67.0" width="2.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="103.6" y="78.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (10 samples, 1.92%)</title><rect x="102.9" y="67.0" width="22.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="105.9" y="78.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.77%)</title><rect x="116.4" y="51.0" width="9.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="119.4" y="62.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.19%)</title><rect x="116.4" y="35.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="119.4" y="46.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (3 samples, 0.58%)</title><rect x="118.7" y="35.0" width="6.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="121.7" y="46.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.19%)</title><rect x="125.5" y="67.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="128.5" y="78.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.19%)</title><rect x="127.8" y="115.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="130.8" y="126.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() [clone .plt] (1 samples, 0.19%)</title><rect x="130.0" y="131.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="133.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (4 samples, 0.77%)</title><rect x="132.3" y="195.0" width="9.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="135.3" y="206.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.58%)</title><rect x="132.3" y="179.0" width="6.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="135.3" y="190.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.19%)</title><rect x="136.8" y="163.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="139.8" y="174.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.19%)</title><rect x="136.8" y="147.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="139.8" y="158.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.19%)</title><rect x="139.1" y="179.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="142.1" y="190.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.19%)</title><rect x="139.1" y="163.0" width="2.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="142.1" y="174.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.19%)</title><rect x="141.4" y="211.0" width="2.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="144.4" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) [clone .plt] (1 samples, 0.19%)</title><rect x="143.6" y="227.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="146.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.38%)</title><rect x="145.9" y="307.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.9" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.38%)</title><rect x="145.9" y="291.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="148.9" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.19%)</title><rect x="145.9" y="275.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.9" y="286.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.19%)</title><rect x="145.9" y="259.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="148.9" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.19%)</title><rect x="148.2" y="275.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.2" y="286.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.19%)</title><rect x="148.2" y="259.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.19%)</title><rect x="150.4" y="307.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="153.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.19%)</title><rect x="150.4" y="291.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.19%)</title><rect x="152.7" y="339.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.7" y="350.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.19%)</title><rect x="152.7" y="323.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.7" y="334.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.19%)</title><rect x="152.7" y="307.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.19%)</title><rect x="152.7" y="291.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.7" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 1.34%)</title><rect x="155.0" y="355.0" width="15.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 1.34%)</title><rect x="155.0" y="339.0" width="15.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="158.0" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.58%)</title><rect x="159.5" y="323.0" width="6.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="162.5" y="334.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.19%)</title><rect x="159.5" y="307.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="162.5" y="318.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.38%)</title><rect x="161.7" y="307.0" width="4.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="164.7" y="318.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.38%)</title><rect x="166.3" y="323.0" width="4.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="169.3" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=319342] (81 samples, 15.55%)</title><rect x="170.8" y="419.0" width="183.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="173.8" y="430.0">[NIO Selector #1 tid=319..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (81 samples, 15.55%)</title><rect x="170.8" y="403.0" width="183.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.8" y="414.0">one/nio/server/SelectorT..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.38%)</title><rect x="173.1" y="387.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="176.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.19%)</title><rect x="175.3" y="371.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.3" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (12 samples, 2.30%)</title><rect x="177.6" y="387.0" width="27.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="180.6" y="398.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 1.73%)</title><rect x="184.4" y="371.0" width="20.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="187.4" y="382.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.19%)</title><rect x="184.4" y="355.0" width="2.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="187.4" y="366.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.19%)</title><rect x="186.7" y="355.0" width="2.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="189.7" y="366.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.19%)</title><rect x="188.9" y="355.0" width="2.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="191.9" y="366.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.96%)</title><rect x="191.2" y="355.0" width="11.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="194.2" y="366.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.19%)</title><rect x="202.5" y="355.0" width="2.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="205.5" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (66 samples, 12.67%)</title><rect x="204.8" y="387.0" width="149.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.8" y="398.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (65 samples, 12.48%)</title><rect x="207.0" y="371.0" width="147.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.0" y="382.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (53 samples, 10.17%)</title><rect x="209.3" y="355.0" width="120.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="212.3" y="366.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (51 samples, 9.79%)</title><rect x="209.3" y="339.0" width="115.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="212.3" y="350.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (51 samples, 9.79%)</title><rect x="209.3" y="323.0" width="115.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="212.3" y="334.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (51 samples, 9.79%)</title><rect x="209.3" y="307.0" width="115.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.3" y="318.0">RequestHandler..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8 samples, 1.54%)</title><rect x="209.3" y="291.0" width="18.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="212.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 1.54%)</title><rect x="209.3" y="275.0" width="18.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="212.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.96%)</title><rect x="209.3" y="259.0" width="11.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.3" y="270.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.96%)</title><rect x="209.3" y="243.0" width="11.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.3" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.96%)</title><rect x="209.3" y="227.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="212.3" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.96%)</title><rect x="209.3" y="211.0" width="11.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="212.3" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.96%)</title><rect x="209.3" y="195.0" width="11.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="212.3" y="206.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.19%)</title><rect x="216.1" y="179.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="219.1" y="190.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.19%)</title><rect x="218.4" y="179.0" width="2.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="221.4" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.58%)</title><rect x="220.6" y="259.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.6" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.58%)</title><rect x="220.6" y="243.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.6" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.58%)</title><rect x="220.6" y="227.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.6" y="238.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.58%)</title><rect x="220.6" y="211.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.6" y="222.0"></text>
</g>
<g>
<title>__libc_send (3 samples, 0.58%)</title><rect x="220.6" y="195.0" width="6.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="223.6" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.19%)</title><rect x="227.4" y="291.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.19%)</title><rect x="227.4" y="275.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.4" y="286.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.19%)</title><rect x="227.4" y="259.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.get (42 samples, 8.06%)</title><rect x="229.7" y="291.0" width="95.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="232.7" y="302.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (42 samples, 8.06%)</title><rect x="229.7" y="275.0" width="95.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="232.7" y="286.0">ru/mail/pol..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (42 samples, 8.06%)</title><rect x="229.7" y="259.0" width="95.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.7" y="270.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (42 samples, 8.06%)</title><rect x="229.7" y="243.0" width="95.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="232.7" y="254.0">org/rocksdb..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (39 samples, 7.49%)</title><rect x="229.7" y="227.0" width="88.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="232.7" y="238.0">Java_org_r..</text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.19%)</title><rect x="232.0" y="211.0" width="2.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="235.0" y="222.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.19%)</title><rect x="234.2" y="211.0" width="2.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="237.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.38%)</title><rect x="236.5" y="211.0" width="4.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="239.5" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (34 samples, 6.53%)</title><rect x="241.0" y="211.0" width="77.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="244.0" y="222.0">rocksdb_g..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.19%)</title><rect x="241.0" y="195.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="244.0" y="206.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.38%)</title><rect x="243.3" y="195.0" width="4.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="246.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.19%)</title><rect x="247.8" y="195.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="250.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (26 samples, 4.99%)</title><rect x="250.1" y="195.0" width="58.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="253.1" y="206.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (26 samples, 4.99%)</title><rect x="250.1" y="179.0" width="58.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="253.1" y="190.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (25 samples, 4.80%)</title><rect x="250.1" y="163.0" width="56.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="253.1" y="174.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (24 samples, 4.61%)</title><rect x="250.1" y="147.0" width="54.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="253.1" y="158.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) [clone .plt] (1 samples, 0.19%)</title><rect x="250.1" y="131.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="253.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (23 samples, 4.41%)</title><rect x="252.3" y="131.0" width="52.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="255.3" y="142.0">rocks..</text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.19%)</title><rect x="252.3" y="115.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="255.3" y="126.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.19%)</title><rect x="254.6" y="115.0" width="2.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="257.6" y="126.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.19%)</title><rect x="256.9" y="115.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="259.9" y="126.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (1 samples, 0.19%)</title><rect x="259.1" y="115.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="262.1" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (17 samples, 3.26%)</title><rect x="261.4" y="115.0" width="38.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="264.4" y="126.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (16 samples, 3.07%)</title><rect x="263.7" y="99.0" width="36.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="266.7" y="110.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (16 samples, 3.07%)</title><rect x="263.7" y="83.0" width="36.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="266.7" y="94.0">/tm..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (13 samples, 2.50%)</title><rect x="265.9" y="67.0" width="29.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="268.9" y="78.0">ro..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.19%)</title><rect x="279.5" y="51.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="282.5" y="62.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.19%)</title><rect x="281.8" y="51.0" width="2.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="284.8" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.96%)</title><rect x="284.0" y="51.0" width="11.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="287.0" y="62.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (2 samples, 0.38%)</title><rect x="286.3" y="35.0" width="4.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="289.3" y="46.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.19%)</title><rect x="290.8" y="35.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="293.8" y="46.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.19%)</title><rect x="293.1" y="35.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="296.1" y="46.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.19%)</title><rect x="295.4" y="67.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="298.4" y="78.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.19%)</title><rect x="297.6" y="67.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="300.6" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (1 samples, 0.19%)</title><rect x="299.9" y="115.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="302.9" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) [clone .plt] (1 samples, 0.19%)</title><rect x="302.2" y="115.0" width="2.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="305.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (1 samples, 0.19%)</title><rect x="304.4" y="147.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="307.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (1 samples, 0.19%)</title><rect x="306.7" y="163.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="309.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (4 samples, 0.77%)</title><rect x="309.0" y="195.0" width="9.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="312.0" y="206.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.77%)</title><rect x="309.0" y="179.0" width="9.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="312.0" y="190.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.38%)</title><rect x="313.5" y="163.0" width="4.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="316.5" y="174.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.19%)</title><rect x="315.8" y="147.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="318.8" y="158.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.19%)</title><rect x="315.8" y="131.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="318.8" y="142.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.19%)</title><rect x="315.8" y="115.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="318.8" y="126.0"></text>
</g>
<g>
<title>malloc (2 samples, 0.38%)</title><rect x="318.0" y="227.0" width="4.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="321.0" y="238.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() [clone .plt] (1 samples, 0.19%)</title><rect x="322.6" y="227.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="325.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.38%)</title><rect x="324.8" y="339.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="327.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.19%)</title><rect x="327.1" y="323.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="330.1" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 2.11%)</title><rect x="329.3" y="355.0" width="25.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="332.3" y="366.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (11 samples, 2.11%)</title><rect x="329.3" y="339.0" width="25.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="332.3" y="350.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 1.34%)</title><rect x="331.6" y="323.0" width="15.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="334.6" y="334.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.19%)</title><rect x="331.6" y="307.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="334.6" y="318.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.19%)</title><rect x="333.9" y="307.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="336.9" y="318.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.96%)</title><rect x="336.1" y="307.0" width="11.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="339.1" y="318.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.58%)</title><rect x="340.7" y="291.0" width="6.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="343.7" y="302.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.19%)</title><rect x="345.2" y="275.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="348.2" y="286.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.19%)</title><rect x="347.5" y="323.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="350.5" y="334.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.38%)</title><rect x="349.7" y="323.0" width="4.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="352.7" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=319343] (58 samples, 11.13%)</title><rect x="354.3" y="419.0" width="131.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="357.3" y="430.0">[NIO Selector #2..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (58 samples, 11.13%)</title><rect x="354.3" y="403.0" width="131.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="357.3" y="414.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 1.73%)</title><rect x="361.1" y="387.0" width="20.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="364.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 1.73%)</title><rect x="361.1" y="371.0" width="20.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="364.1" y="382.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.19%)</title><rect x="365.6" y="355.0" width="2.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="368.6" y="366.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.38%)</title><rect x="367.9" y="355.0" width="4.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="370.9" y="366.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.77%)</title><rect x="372.4" y="355.0" width="9.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="375.4" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (46 samples, 8.83%)</title><rect x="381.4" y="387.0" width="104.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="384.4" y="398.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (46 samples, 8.83%)</title><rect x="381.4" y="371.0" width="104.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="384.4" y="382.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (39 samples, 7.49%)</title><rect x="381.4" y="355.0" width="88.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="384.4" y="366.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (34 samples, 6.53%)</title><rect x="381.4" y="339.0" width="77.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.4" y="350.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (34 samples, 6.53%)</title><rect x="381.4" y="323.0" width="77.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.4" y="334.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (34 samples, 6.53%)</title><rect x="381.4" y="307.0" width="77.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.4" y="318.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 1.92%)</title><rect x="381.4" y="291.0" width="22.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.4" y="302.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 1.92%)</title><rect x="381.4" y="275.0" width="22.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.4" y="286.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 1.15%)</title><rect x="381.4" y="259.0" width="13.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.4" y="270.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 1.15%)</title><rect x="381.4" y="243.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="384.4" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 1.15%)</title><rect x="381.4" y="227.0" width="13.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.4" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 1.15%)</title><rect x="381.4" y="211.0" width="13.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="384.4" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 1.15%)</title><rect x="381.4" y="195.0" width="13.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.4" y="206.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.19%)</title><rect x="390.5" y="179.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="393.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.19%)</title><rect x="392.8" y="179.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.8" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.77%)</title><rect x="395.0" y="259.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="398.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.77%)</title><rect x="395.0" y="243.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.0" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.77%)</title><rect x="395.0" y="227.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="398.0" y="238.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.77%)</title><rect x="395.0" y="211.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="398.0" y="222.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.19%)</title><rect x="395.0" y="195.0" width="2.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="398.0" y="206.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.19%)</title><rect x="395.0" y="179.0" width="2.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="398.0" y="190.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.19%)</title><rect x="395.0" y="163.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="398.0" y="174.0"></text>
</g>
<g>
<title>__libc_send (3 samples, 0.58%)</title><rect x="397.3" y="195.0" width="6.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="400.3" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.38%)</title><rect x="404.1" y="291.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="407.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.38%)</title><rect x="404.1" y="275.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.1" y="286.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.19%)</title><rect x="404.1" y="259.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="407.1" y="270.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.19%)</title><rect x="404.1" y="243.0" width="2.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="407.1" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.19%)</title><rect x="406.4" y="259.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="409.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.19%)</title><rect x="406.4" y="243.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="409.4" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.19%)</title><rect x="406.4" y="227.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="409.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.get (22 samples, 4.22%)</title><rect x="408.6" y="291.0" width="49.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="411.6" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (22 samples, 4.22%)</title><rect x="408.6" y="275.0" width="49.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="411.6" y="286.0">ru/ma..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (22 samples, 4.22%)</title><rect x="408.6" y="259.0" width="49.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.6" y="270.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (22 samples, 4.22%)</title><rect x="408.6" y="243.0" width="49.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.6" y="254.0">org/r..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (21 samples, 4.03%)</title><rect x="408.6" y="227.0" width="47.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="411.6" y="238.0">Java..</text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.19%)</title><rect x="408.6" y="211.0" width="2.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="411.6" y="222.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.38%)</title><rect x="410.9" y="211.0" width="4.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="413.9" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (17 samples, 3.26%)</title><rect x="415.4" y="211.0" width="38.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="418.4" y="222.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.19%)</title><rect x="415.4" y="195.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="418.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (14 samples, 2.69%)</title><rect x="417.7" y="195.0" width="31.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="420.7" y="206.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (14 samples, 2.69%)</title><rect x="417.7" y="179.0" width="31.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="420.7" y="190.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (14 samples, 2.69%)</title><rect x="417.7" y="163.0" width="31.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="420.7" y="174.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (14 samples, 2.69%)</title><rect x="417.7" y="147.0" width="31.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="420.7" y="158.0">ro..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.19%)</title><rect x="417.7" y="131.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="420.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (11 samples, 2.11%)</title><rect x="419.9" y="131.0" width="25.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="422.9" y="142.0">r..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.38%)</title><rect x="424.5" y="115.0" width="4.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="427.5" y="126.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.38%)</title><rect x="429.0" y="115.0" width="4.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="432.0" y="126.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.19%)</title><rect x="431.3" y="99.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="434.3" y="110.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.19%)</title><rect x="431.3" y="83.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="434.3" y="94.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.19%)</title><rect x="433.5" y="115.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="436.5" y="126.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.19%)</title><rect x="433.5" y="99.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="436.5" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (4 samples, 0.77%)</title><rect x="435.8" y="115.0" width="9.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="438.8" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (4 samples, 0.77%)</title><rect x="435.8" y="99.0" width="9.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="438.8" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (4 samples, 0.77%)</title><rect x="435.8" y="83.0" width="9.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="438.8" y="94.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (3 samples, 0.58%)</title><rect x="435.8" y="67.0" width="6.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="438.8" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.38%)</title><rect x="438.1" y="51.0" width="4.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="441.1" y="62.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.19%)</title><rect x="438.1" y="35.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="441.1" y="46.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.19%)</title><rect x="440.3" y="35.0" width="2.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="443.3" y="46.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) [clone .plt] (1 samples, 0.19%)</title><rect x="442.6" y="67.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="445.6" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.19%)</title><rect x="444.9" y="131.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="447.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.19%)</title><rect x="447.1" y="131.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="450.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.38%)</title><rect x="449.4" y="195.0" width="4.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="452.4" y="206.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.38%)</title><rect x="449.4" y="179.0" width="4.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="452.4" y="190.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.19%)</title><rect x="451.7" y="163.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="454.7" y="174.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.19%)</title><rect x="451.7" y="147.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="454.7" y="158.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.19%)</title><rect x="451.7" y="131.0" width="2.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="454.7" y="142.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) [clone .plt] (1 samples, 0.19%)</title><rect x="453.9" y="211.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="456.9" y="222.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.19%)</title><rect x="456.2" y="227.0" width="2.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="459.2" y="238.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.19%)</title><rect x="456.2" y="211.0" width="2.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="459.2" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.58%)</title><rect x="458.4" y="339.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.38%)</title><rect x="458.4" y="323.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.38%)</title><rect x="458.4" y="307.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="461.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.38%)</title><rect x="458.4" y="291.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.38%)</title><rect x="458.4" y="275.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.4" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.19%)</title><rect x="463.0" y="323.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.19%)</title><rect x="465.2" y="339.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.2" y="350.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.19%)</title><rect x="465.2" y="323.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.2" y="334.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.19%)</title><rect x="465.2" y="307.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.19%)</title><rect x="467.5" y="339.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.5" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 1.34%)</title><rect x="469.8" y="355.0" width="15.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="472.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 1.34%)</title><rect x="469.8" y="339.0" width="15.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.8" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.38%)</title><rect x="472.0" y="323.0" width="4.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="475.0" y="334.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.19%)</title><rect x="472.0" y="307.0" width="2.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="475.0" y="318.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.19%)</title><rect x="474.3" y="307.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="477.3" y="318.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.58%)</title><rect x="476.6" y="323.0" width="6.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="479.6" y="334.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.19%)</title><rect x="483.4" y="323.0" width="2.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="486.4" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=319344] (70 samples, 13.44%)</title><rect x="485.6" y="419.0" width="158.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="488.6" y="430.0">[NIO Selector #3 tid..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (70 samples, 13.44%)</title><rect x="485.6" y="403.0" width="158.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="488.6" y="414.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.19%)</title><rect x="487.9" y="387.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.19%)</title><rect x="487.9" y="371.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (11 samples, 2.11%)</title><rect x="490.2" y="387.0" width="24.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.2" y="398.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (8 samples, 1.54%)</title><rect x="496.9" y="371.0" width="18.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="499.9" y="382.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.19%)</title><rect x="496.9" y="355.0" width="2.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="499.9" y="366.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.19%)</title><rect x="496.9" y="339.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="499.9" y="350.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 1.34%)</title><rect x="499.2" y="355.0" width="15.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="502.2" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (57 samples, 10.94%)</title><rect x="515.1" y="387.0" width="129.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.1" y="398.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (56 samples, 10.75%)</title><rect x="515.1" y="371.0" width="126.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.1" y="382.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (45 samples, 8.64%)</title><rect x="515.1" y="355.0" width="101.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="518.1" y="366.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (44 samples, 8.45%)</title><rect x="515.1" y="339.0" width="99.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.1" y="350.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (44 samples, 8.45%)</title><rect x="515.1" y="323.0" width="99.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.1" y="334.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (44 samples, 8.45%)</title><rect x="515.1" y="307.0" width="99.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.1" y="318.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 1.34%)</title><rect x="515.1" y="291.0" width="15.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 1.34%)</title><rect x="515.1" y="275.0" width="15.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 1.15%)</title><rect x="515.1" y="259.0" width="13.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.1" y="270.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 1.15%)</title><rect x="515.1" y="243.0" width="13.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.1" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 1.15%)</title><rect x="515.1" y="227.0" width="13.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="518.1" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 1.15%)</title><rect x="515.1" y="211.0" width="13.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.1" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 1.15%)</title><rect x="515.1" y="195.0" width="13.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.1" y="206.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.19%)</title><rect x="526.4" y="179.0" width="2.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="529.4" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.19%)</title><rect x="528.7" y="259.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.7" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.19%)</title><rect x="528.7" y="243.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.7" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.19%)</title><rect x="528.7" y="227.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="531.7" y="238.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.19%)</title><rect x="528.7" y="211.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="531.7" y="222.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.19%)</title><rect x="528.7" y="195.0" width="2.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="531.7" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.19%)</title><rect x="530.9" y="291.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="533.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.19%)</title><rect x="530.9" y="275.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.9" y="286.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.19%)</title><rect x="530.9" y="259.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="533.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.get (36 samples, 6.91%)</title><rect x="533.2" y="291.0" width="81.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="536.2" y="302.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/Response.ok (1 samples, 0.19%)</title><rect x="533.2" y="275.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="536.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.19%)</title><rect x="533.2" y="259.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="536.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (35 samples, 6.72%)</title><rect x="535.5" y="275.0" width="79.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="538.5" y="286.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (35 samples, 6.72%)</title><rect x="535.5" y="259.0" width="79.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="538.5" y="270.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (35 samples, 6.72%)</title><rect x="535.5" y="243.0" width="79.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="538.5" y="254.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (33 samples, 6.33%)</title><rect x="535.5" y="227.0" width="74.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="538.5" y="238.0">Java_org..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.38%)</title><rect x="535.5" y="211.0" width="4.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="538.5" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (30 samples, 5.76%)</title><rect x="540.0" y="211.0" width="67.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="543.0" y="222.0">rocksdb..</text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.19%)</title><rect x="540.0" y="195.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="543.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (22 samples, 4.22%)</title><rect x="542.2" y="195.0" width="49.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="545.2" y="206.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (22 samples, 4.22%)</title><rect x="542.2" y="179.0" width="49.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="545.2" y="190.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (22 samples, 4.22%)</title><rect x="542.2" y="163.0" width="49.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="545.2" y="174.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (22 samples, 4.22%)</title><rect x="542.2" y="147.0" width="49.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="545.2" y="158.0">rocks..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.19%)</title><rect x="542.2" y="131.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="545.2" y="142.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) [clone .plt] (2 samples, 0.38%)</title><rect x="544.5" y="131.0" width="4.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="547.5" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (18 samples, 3.45%)</title><rect x="549.0" y="131.0" width="40.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="552.0" y="142.0">roc..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.19%)</title><rect x="549.0" y="115.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="552.0" y="126.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.19%)</title><rect x="551.3" y="115.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="554.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (16 samples, 3.07%)</title><rect x="553.6" y="115.0" width="36.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="556.6" y="126.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (15 samples, 2.88%)</title><rect x="553.6" y="99.0" width="33.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="556.6" y="110.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (14 samples, 2.69%)</title><rect x="553.6" y="83.0" width="31.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="556.6" y="94.0">/t..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (13 samples, 2.50%)</title><rect x="553.6" y="67.0" width="29.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="556.6" y="78.0">ro..</text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.58%)</title><rect x="571.7" y="51.0" width="6.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="574.7" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.38%)</title><rect x="578.5" y="51.0" width="4.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="581.5" y="62.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.19%)</title><rect x="580.7" y="35.0" width="2.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="583.7" y="46.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.19%)</title><rect x="583.0" y="67.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="586.0" y="78.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.19%)</title><rect x="585.3" y="83.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="588.3" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.19%)</title><rect x="587.5" y="99.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="590.5" y="110.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.19%)</title><rect x="589.8" y="131.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="592.8" y="142.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (7 samples, 1.34%)</title><rect x="592.1" y="195.0" width="15.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="595.1" y="206.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.19%)</title><rect x="592.1" y="179.0" width="2.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="595.1" y="190.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.19%)</title><rect x="594.3" y="179.0" width="2.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="597.3" y="190.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 0.96%)</title><rect x="596.6" y="179.0" width="11.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="599.6" y="190.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.19%)</title><rect x="598.9" y="163.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="601.9" y="174.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.58%)</title><rect x="601.1" y="163.0" width="6.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="604.1" y="174.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.38%)</title><rect x="603.4" y="147.0" width="4.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="606.4" y="158.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.19%)</title><rect x="603.4" y="131.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="606.4" y="142.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.19%)</title><rect x="603.4" y="115.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="606.4" y="126.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.19%)</title><rect x="605.7" y="131.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="608.7" y="142.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.19%)</title><rect x="607.9" y="211.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="610.9" y="222.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.19%)</title><rect x="610.2" y="227.0" width="2.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="613.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.19%)</title><rect x="612.5" y="227.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="615.5" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.19%)</title><rect x="614.7" y="339.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="617.7" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.19%)</title><rect x="614.7" y="323.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="617.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.19%)</title><rect x="614.7" y="307.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="617.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.19%)</title><rect x="614.7" y="291.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="617.7" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 2.11%)</title><rect x="617.0" y="355.0" width="24.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.0" y="366.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (11 samples, 2.11%)</title><rect x="617.0" y="339.0" width="24.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.0" y="350.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.96%)</title><rect x="617.0" y="323.0" width="11.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="620.0" y="334.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.19%)</title><rect x="621.5" y="307.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="624.5" y="318.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.38%)</title><rect x="623.8" y="307.0" width="4.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="626.8" y="318.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.19%)</title><rect x="628.3" y="323.0" width="2.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="631.3" y="334.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.19%)</title><rect x="630.6" y="323.0" width="2.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="633.6" y="334.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.58%)</title><rect x="632.8" y="323.0" width="6.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="635.8" y="334.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.19%)</title><rect x="639.6" y="323.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="642.6" y="334.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.19%)</title><rect x="641.9" y="371.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="644.9" y="382.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.19%)</title><rect x="641.9" y="355.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="644.9" y="366.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=319345] (82 samples, 15.74%)</title><rect x="644.2" y="419.0" width="185.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="647.2" y="430.0">[NIO Selector #4 tid=319..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (82 samples, 15.74%)</title><rect x="644.2" y="403.0" width="185.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.2" y="414.0">one/nio/server/SelectorT..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.19%)</title><rect x="644.2" y="387.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.2" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 1.92%)</title><rect x="646.4" y="387.0" width="22.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="649.4" y="398.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (8 samples, 1.54%)</title><rect x="651.0" y="371.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.0" y="382.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.38%)</title><rect x="651.0" y="355.0" width="4.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="654.0" y="366.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.19%)</title><rect x="653.2" y="339.0" width="2.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="656.2" y="350.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.19%)</title><rect x="655.5" y="355.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="658.5" y="366.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.96%)</title><rect x="657.8" y="355.0" width="11.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="660.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (71 samples, 13.63%)</title><rect x="669.1" y="387.0" width="160.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="672.1" y="398.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (69 samples, 13.24%)</title><rect x="673.6" y="371.0" width="156.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="676.6" y="382.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (60 samples, 11.52%)</title><rect x="675.9" y="355.0" width="135.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="678.9" y="366.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (57 samples, 10.94%)</title><rect x="675.9" y="339.0" width="129.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="678.9" y="350.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (57 samples, 10.94%)</title><rect x="675.9" y="323.0" width="129.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.9" y="334.0">one/nio/http/Htt..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (56 samples, 10.75%)</title><rect x="675.9" y="307.0" width="126.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="678.9" y="318.0">RequestHandler0_..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (16 samples, 3.07%)</title><rect x="675.9" y="291.0" width="36.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.9" y="302.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.19%)</title><rect x="675.9" y="275.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.9" y="286.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.19%)</title><rect x="675.9" y="259.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="678.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.19%)</title><rect x="675.9" y="243.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="678.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (15 samples, 2.88%)</title><rect x="678.1" y="275.0" width="34.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="681.1" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 2.11%)</title><rect x="678.1" y="259.0" width="25.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="681.1" y="270.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (11 samples, 2.11%)</title><rect x="678.1" y="243.0" width="25.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="681.1" y="254.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 2.11%)</title><rect x="678.1" y="227.0" width="25.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="681.1" y="238.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 2.11%)</title><rect x="678.1" y="211.0" width="25.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="681.1" y="222.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 2.11%)</title><rect x="678.1" y="195.0" width="25.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="681.1" y="206.0">o..</text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.19%)</title><rect x="684.9" y="179.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="687.9" y="190.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.19%)</title><rect x="687.2" y="179.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.2" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.19%)</title><rect x="689.5" y="179.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="692.5" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.19%)</title><rect x="691.7" y="179.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.7" y="190.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.19%)</title><rect x="694.0" y="179.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="697.0" y="190.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.38%)</title><rect x="696.3" y="179.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="699.3" y="190.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1 samples, 0.19%)</title><rect x="700.8" y="179.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="703.8" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.77%)</title><rect x="703.1" y="259.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="706.1" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.77%)</title><rect x="703.1" y="243.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.1" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.77%)</title><rect x="703.1" y="227.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.1" y="238.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.77%)</title><rect x="703.1" y="211.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="706.1" y="222.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.38%)</title><rect x="703.1" y="195.0" width="4.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="706.1" y="206.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.19%)</title><rect x="705.3" y="179.0" width="2.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="708.3" y="190.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.19%)</title><rect x="705.3" y="163.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="708.3" y="174.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.38%)</title><rect x="707.6" y="195.0" width="4.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="710.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.get (40 samples, 7.68%)</title><rect x="712.1" y="291.0" width="90.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.1" y="302.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.19%)</title><rect x="712.1" y="275.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.1" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.19%)</title><rect x="712.1" y="259.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="715.1" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.19%)</title><rect x="712.1" y="243.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.1" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.19%)</title><rect x="712.1" y="227.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="715.1" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.19%)</title><rect x="712.1" y="211.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.1" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.19%)</title><rect x="712.1" y="195.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.19%)</title><rect x="712.1" y="179.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="715.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (39 samples, 7.49%)</title><rect x="714.4" y="275.0" width="88.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="717.4" y="286.0">ru/mail/po..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (39 samples, 7.49%)</title><rect x="714.4" y="259.0" width="88.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="717.4" y="270.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (39 samples, 7.49%)</title><rect x="714.4" y="243.0" width="88.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.4" y="254.0">org/rocksd..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (34 samples, 6.53%)</title><rect x="714.4" y="227.0" width="77.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="717.4" y="238.0">Java_org_..</text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.19%)</title><rect x="714.4" y="211.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="717.4" y="222.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.19%)</title><rect x="716.6" y="211.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="719.6" y="222.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.19%)</title><rect x="718.9" y="211.0" width="2.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="721.9" y="222.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.19%)</title><rect x="721.2" y="211.0" width="2.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="724.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.19%)</title><rect x="723.4" y="211.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="726.4" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (29 samples, 5.57%)</title><rect x="725.7" y="211.0" width="65.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="728.7" y="222.0">rocksdb..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.19%)</title><rect x="725.7" y="195.0" width="2.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="728.7" y="206.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.19%)</title><rect x="725.7" y="179.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="728.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (25 samples, 4.80%)</title><rect x="728.0" y="195.0" width="56.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="731.0" y="206.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (25 samples, 4.80%)</title><rect x="728.0" y="179.0" width="56.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="731.0" y="190.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (25 samples, 4.80%)</title><rect x="728.0" y="163.0" width="56.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="731.0" y="174.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (25 samples, 4.80%)</title><rect x="728.0" y="147.0" width="56.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="731.0" y="158.0">rocksd..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.19%)</title><rect x="728.0" y="131.0" width="2.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="731.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (22 samples, 4.22%)</title><rect x="730.2" y="131.0" width="49.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="733.2" y="142.0">rocks..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.19%)</title><rect x="737.0" y="115.0" width="2.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="740.0" y="126.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.19%)</title><rect x="739.3" y="115.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="742.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.19%)</title><rect x="741.6" y="115.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="744.6" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (14 samples, 2.69%)</title><rect x="743.8" y="115.0" width="31.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="746.8" y="126.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.19%)</title><rect x="743.8" y="99.0" width="2.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="746.8" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (13 samples, 2.50%)</title><rect x="746.1" y="99.0" width="29.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="749.1" y="110.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (13 samples, 2.50%)</title><rect x="746.1" y="83.0" width="29.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="749.1" y="94.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.19%)</title><rect x="746.1" y="67.0" width="2.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="749.1" y="78.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.19%)</title><rect x="746.1" y="51.0" width="2.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="749.1" y="62.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (11 samples, 2.11%)</title><rect x="748.3" y="67.0" width="25.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="751.3" y="78.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.19%)</title><rect x="764.2" y="51.0" width="2.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="767.2" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.58%)</title><rect x="766.5" y="51.0" width="6.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="769.5" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.19%)</title><rect x="771.0" y="35.0" width="2.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="774.0" y="46.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.19%)</title><rect x="773.3" y="67.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="776.3" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.19%)</title><rect x="775.5" y="115.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="778.5" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) [clone .plt] (1 samples, 0.19%)</title><rect x="777.8" y="115.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="780.8" y="126.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (2 samples, 0.38%)</title><rect x="780.1" y="131.0" width="4.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="783.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (3 samples, 0.58%)</title><rect x="784.6" y="195.0" width="6.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="787.6" y="206.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.58%)</title><rect x="784.6" y="179.0" width="6.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="787.6" y="190.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.19%)</title><rect x="784.6" y="163.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="787.6" y="174.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.38%)</title><rect x="786.9" y="163.0" width="4.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="789.9" y="174.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.38%)</title><rect x="786.9" y="147.0" width="4.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="789.9" y="158.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.38%)</title><rect x="786.9" y="131.0" width="4.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="789.9" y="142.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.38%)</title><rect x="786.9" y="115.0" width="4.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="789.9" y="126.0"></text>
</g>
<g>
<title>malloc (3 samples, 0.58%)</title><rect x="791.4" y="227.0" width="6.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="794.4" y="238.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.19%)</title><rect x="798.2" y="227.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="801.2" y="238.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) [clone .plt] (1 samples, 0.19%)</title><rect x="800.4" y="227.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="803.4" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.19%)</title><rect x="802.7" y="307.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.19%)</title><rect x="802.7" y="291.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="805.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.19%)</title><rect x="802.7" y="275.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="805.7" y="286.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.19%)</title><rect x="802.7" y="259.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="805.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.58%)</title><rect x="805.0" y="339.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.0" y="350.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.38%)</title><rect x="807.2" y="323.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="810.2" y="334.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.19%)</title><rect x="809.5" y="307.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="812.5" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 1.54%)</title><rect x="811.8" y="355.0" width="18.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="814.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (8 samples, 1.54%)</title><rect x="811.8" y="339.0" width="18.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="814.8" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.58%)</title><rect x="818.6" y="323.0" width="6.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="821.6" y="334.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.19%)</title><rect x="820.8" y="307.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="823.8" y="318.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.19%)</title><rect x="823.1" y="307.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="826.1" y="318.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.38%)</title><rect x="825.4" y="323.0" width="4.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="828.4" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=319346] (68 samples, 13.05%)</title><rect x="829.9" y="419.0" width="154.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="832.9" y="430.0">[NIO Selector #5 tid..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (68 samples, 13.05%)</title><rect x="829.9" y="403.0" width="154.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.9" y="414.0">one/nio/server/Selec..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.19%)</title><rect x="832.1" y="387.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="835.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 1.15%)</title><rect x="834.4" y="387.0" width="13.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="837.4" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 1.15%)</title><rect x="834.4" y="371.0" width="13.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.4" y="382.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.19%)</title><rect x="838.9" y="355.0" width="2.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="841.9" y="366.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.19%)</title><rect x="838.9" y="339.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="841.9" y="350.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.58%)</title><rect x="841.2" y="355.0" width="6.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="844.2" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (60 samples, 11.52%)</title><rect x="848.0" y="387.0" width="135.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.0" y="398.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (60 samples, 11.52%)</title><rect x="848.0" y="371.0" width="135.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="851.0" y="382.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (52 samples, 9.98%)</title><rect x="852.5" y="355.0" width="117.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.5" y="366.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (51 samples, 9.79%)</title><rect x="852.5" y="339.0" width="115.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="855.5" y="350.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (51 samples, 9.79%)</title><rect x="852.5" y="323.0" width="115.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.5" y="334.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (51 samples, 9.79%)</title><rect x="852.5" y="307.0" width="115.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.5" y="318.0">RequestHandler..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (14 samples, 2.69%)</title><rect x="852.5" y="291.0" width="31.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.5" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (14 samples, 2.69%)</title><rect x="852.5" y="275.0" width="31.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.5" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 1.54%)</title><rect x="852.5" y="259.0" width="18.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="855.5" y="270.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 1.54%)</title><rect x="852.5" y="243.0" width="18.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="855.5" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 1.54%)</title><rect x="852.5" y="227.0" width="18.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.5" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 1.54%)</title><rect x="852.5" y="211.0" width="18.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="855.5" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 1.54%)</title><rect x="852.5" y="195.0" width="18.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.5" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.19%)</title><rect x="859.3" y="179.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="862.3" y="190.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.19%)</title><rect x="861.6" y="179.0" width="2.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="864.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.19%)</title><rect x="863.9" y="179.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="866.9" y="190.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.19%)</title><rect x="866.1" y="179.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="869.1" y="190.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.19%)</title><rect x="868.4" y="179.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="871.4" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 1.15%)</title><rect x="870.7" y="259.0" width="13.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="873.7" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 1.15%)</title><rect x="870.7" y="243.0" width="13.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="873.7" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 1.15%)</title><rect x="870.7" y="227.0" width="13.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="873.7" y="238.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (6 samples, 1.15%)</title><rect x="870.7" y="211.0" width="13.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.7" y="222.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.19%)</title><rect x="870.7" y="195.0" width="2.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="873.7" y="206.0"></text>
</g>
<g>
<title>__libc_send (4 samples, 0.77%)</title><rect x="872.9" y="195.0" width="9.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="875.9" y="206.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.19%)</title><rect x="882.0" y="195.0" width="2.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="885.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.38%)</title><rect x="884.2" y="291.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="887.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.38%)</title><rect x="884.2" y="275.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="887.2" y="286.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.38%)</title><rect x="884.2" y="259.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="887.2" y="270.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.19%)</title><rect x="886.5" y="243.0" width="2.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="889.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.get (35 samples, 6.72%)</title><rect x="888.8" y="291.0" width="79.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="891.8" y="302.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (2 samples, 0.38%)</title><rect x="888.8" y="275.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="891.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.38%)</title><rect x="888.8" y="259.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="891.8" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.38%)</title><rect x="888.8" y="243.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="891.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.38%)</title><rect x="888.8" y="227.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="891.8" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.38%)</title><rect x="888.8" y="211.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="891.8" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.38%)</title><rect x="888.8" y="195.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="891.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.38%)</title><rect x="888.8" y="179.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="891.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (33 samples, 6.33%)</title><rect x="893.3" y="275.0" width="74.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="896.3" y="286.0">ru/mail/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (33 samples, 6.33%)</title><rect x="893.3" y="259.0" width="74.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="896.3" y="270.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (33 samples, 6.33%)</title><rect x="893.3" y="243.0" width="74.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="896.3" y="254.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (30 samples, 5.76%)</title><rect x="895.6" y="227.0" width="67.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="898.6" y="238.0">Java_or..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.19%)</title><rect x="895.6" y="211.0" width="2.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="898.6" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (29 samples, 5.57%)</title><rect x="897.8" y="211.0" width="65.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="900.8" y="222.0">rocksdb..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.19%)</title><rect x="897.8" y="195.0" width="2.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="900.8" y="206.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.19%)</title><rect x="900.1" y="195.0" width="2.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="903.1" y="206.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.19%)</title><rect x="900.1" y="179.0" width="2.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="903.1" y="190.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.19%)</title><rect x="900.1" y="163.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="903.1" y="174.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.19%)</title><rect x="902.4" y="195.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="905.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (21 samples, 4.03%)</title><rect x="904.6" y="195.0" width="47.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="907.6" y="206.0">rock..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.19%)</title><rect x="904.6" y="179.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="907.6" y="190.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() [clone .plt] (1 samples, 0.19%)</title><rect x="906.9" y="179.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="909.9" y="190.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (19 samples, 3.65%)</title><rect x="909.2" y="179.0" width="43.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="912.2" y="190.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (19 samples, 3.65%)</title><rect x="909.2" y="163.0" width="43.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="912.2" y="174.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (19 samples, 3.65%)</title><rect x="909.2" y="147.0" width="43.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="912.2" y="158.0">rock..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.19%)</title><rect x="909.2" y="131.0" width="2.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="912.2" y="142.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.19%)</title><rect x="911.4" y="131.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="914.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (17 samples, 3.26%)</title><rect x="913.7" y="131.0" width="38.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="916.7" y="142.0">roc..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.19%)</title><rect x="918.2" y="115.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="921.2" y="126.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.19%)</title><rect x="920.5" y="115.0" width="2.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="923.5" y="126.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.19%)</title><rect x="922.7" y="115.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="925.7" y="126.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.19%)</title><rect x="922.7" y="99.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="925.7" y="110.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.19%)</title><rect x="925.0" y="115.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="928.0" y="126.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.19%)</title><rect x="925.0" y="99.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="928.0" y="110.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.19%)</title><rect x="925.0" y="83.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="928.0" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (11 samples, 2.11%)</title><rect x="927.3" y="115.0" width="24.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="930.3" y="126.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (10 samples, 1.92%)</title><rect x="929.5" y="99.0" width="22.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="932.5" y="110.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (10 samples, 1.92%)</title><rect x="929.5" y="83.0" width="22.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="932.5" y="94.0">/..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (7 samples, 1.34%)</title><rect x="931.8" y="67.0" width="15.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="934.8" y="78.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.19%)</title><rect x="938.6" y="51.0" width="2.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="941.6" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.58%)</title><rect x="940.9" y="51.0" width="6.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="943.9" y="62.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.19%)</title><rect x="943.1" y="35.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="946.1" y="46.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.19%)</title><rect x="945.4" y="35.0" width="2.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="948.4" y="46.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.38%)</title><rect x="947.7" y="67.0" width="4.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="950.7" y="78.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (5 samples, 0.96%)</title><rect x="952.2" y="195.0" width="11.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="955.2" y="206.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.77%)</title><rect x="954.5" y="179.0" width="9.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="957.5" y="190.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.19%)</title><rect x="956.7" y="163.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="959.7" y="174.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.38%)</title><rect x="959.0" y="163.0" width="4.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="962.0" y="174.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.38%)</title><rect x="959.0" y="147.0" width="4.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="962.0" y="158.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.38%)</title><rect x="959.0" y="131.0" width="4.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="962.0" y="142.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.19%)</title><rect x="959.0" y="115.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="962.0" y="126.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.19%)</title><rect x="961.2" y="115.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="964.2" y="126.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.38%)</title><rect x="963.5" y="227.0" width="4.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="966.5" y="238.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.19%)</title><rect x="963.5" y="211.0" width="2.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="966.5" y="222.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.19%)</title><rect x="965.8" y="211.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="968.8" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.19%)</title><rect x="968.0" y="339.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="971.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.19%)</title><rect x="968.0" y="323.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="971.0" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 1.15%)</title><rect x="970.3" y="355.0" width="13.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="973.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 1.15%)</title><rect x="970.3" y="339.0" width="13.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.3" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.77%)</title><rect x="970.3" y="323.0" width="9.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="973.3" y="334.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.19%)</title><rect x="972.6" y="307.0" width="2.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="975.6" y="318.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.38%)</title><rect x="974.8" y="307.0" width="4.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="977.8" y="318.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.19%)</title><rect x="977.1" y="291.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="980.1" y="302.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.38%)</title><rect x="979.4" y="323.0" width="4.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="982.4" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=319347] (20 samples, 3.84%)</title><rect x="983.9" y="419.0" width="45.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="986.9" y="430.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (20 samples, 3.84%)</title><rect x="983.9" y="403.0" width="45.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="986.9" y="414.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 1.15%)</title><rect x="983.9" y="387.0" width="13.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="986.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 1.15%)</title><rect x="983.9" y="371.0" width="13.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="986.9" y="382.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.19%)</title><rect x="986.2" y="355.0" width="2.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="989.2" y="366.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.19%)</title><rect x="988.4" y="355.0" width="2.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="991.4" y="366.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.58%)</title><rect x="990.7" y="355.0" width="6.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="993.7" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (14 samples, 2.69%)</title><rect x="997.5" y="387.0" width="31.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1000.5" y="398.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (14 samples, 2.69%)</title><rect x="997.5" y="371.0" width="31.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1000.5" y="382.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (12 samples, 2.30%)</title><rect x="997.5" y="355.0" width="27.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1000.5" y="366.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (11 samples, 2.11%)</title><rect x="997.5" y="339.0" width="24.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1000.5" y="350.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (11 samples, 2.11%)</title><rect x="997.5" y="323.0" width="24.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1000.5" y="334.0">o..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (11 samples, 2.11%)</title><rect x="997.5" y="307.0" width="24.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1000.5" y="318.0">R..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.77%)</title><rect x="997.5" y="291.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1000.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.77%)</title><rect x="997.5" y="275.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1000.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.38%)</title><rect x="997.5" y="259.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1000.5" y="270.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.38%)</title><rect x="997.5" y="243.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1000.5" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.38%)</title><rect x="997.5" y="227.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1000.5" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.38%)</title><rect x="997.5" y="211.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1000.5" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.38%)</title><rect x="997.5" y="195.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1000.5" y="206.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.19%)</title><rect x="999.8" y="179.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1002.8" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.38%)</title><rect x="1002.0" y="259.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1005.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.38%)</title><rect x="1002.0" y="243.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1005.0" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.38%)</title><rect x="1002.0" y="227.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1005.0" y="238.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.38%)</title><rect x="1002.0" y="211.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1005.0" y="222.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.38%)</title><rect x="1002.0" y="195.0" width="4.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1005.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.get (7 samples, 1.34%)</title><rect x="1006.5" y="291.0" width="15.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1009.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (7 samples, 1.34%)</title><rect x="1006.5" y="275.0" width="15.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1009.5" y="286.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (7 samples, 1.34%)</title><rect x="1006.5" y="259.0" width="15.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1009.5" y="270.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (7 samples, 1.34%)</title><rect x="1006.5" y="243.0" width="15.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1009.5" y="254.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (7 samples, 1.34%)</title><rect x="1006.5" y="227.0" width="15.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1009.5" y="238.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.19%)</title><rect x="1006.5" y="211.0" width="2.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1009.5" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (5 samples, 0.96%)</title><rect x="1008.8" y="211.0" width="11.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1011.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (3 samples, 0.58%)</title><rect x="1008.8" y="195.0" width="6.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1011.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (3 samples, 0.58%)</title><rect x="1008.8" y="179.0" width="6.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1011.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (3 samples, 0.58%)</title><rect x="1008.8" y="163.0" width="6.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1011.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (3 samples, 0.58%)</title><rect x="1008.8" y="147.0" width="6.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1011.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (1 samples, 0.19%)</title><rect x="1008.8" y="131.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1011.8" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (2 samples, 0.38%)</title><rect x="1011.1" y="131.0" width="4.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1014.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.19%)</title><rect x="1011.1" y="115.0" width="2.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1014.1" y="126.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.19%)</title><rect x="1011.1" y="99.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1014.1" y="110.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.19%)</title><rect x="1011.1" y="83.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1014.1" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.19%)</title><rect x="1013.3" y="115.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1016.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (1 samples, 0.19%)</title><rect x="1013.3" y="99.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1016.3" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.19%)</title><rect x="1013.3" y="83.0" width="2.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1016.3" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.19%)</title><rect x="1013.3" y="67.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1016.3" y="78.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.38%)</title><rect x="1015.6" y="195.0" width="4.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1018.6" y="206.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.19%)</title><rect x="1015.6" y="179.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1018.6" y="190.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.19%)</title><rect x="1017.9" y="179.0" width="2.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1020.9" y="190.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.19%)</title><rect x="1017.9" y="163.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1020.9" y="174.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) [clone .plt] (1 samples, 0.19%)</title><rect x="1020.1" y="211.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1023.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.19%)</title><rect x="1022.4" y="339.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1025.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.19%)</title><rect x="1022.4" y="323.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1025.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.19%)</title><rect x="1022.4" y="307.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1025.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.19%)</title><rect x="1022.4" y="291.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1025.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.19%)</title><rect x="1022.4" y="275.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1025.4" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.38%)</title><rect x="1024.7" y="355.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1027.7" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.38%)</title><rect x="1024.7" y="339.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1027.7" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.19%)</title><rect x="1024.7" y="323.0" width="2.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1027.7" y="334.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.19%)</title><rect x="1024.7" y="307.0" width="2.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1027.7" y="318.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.19%)</title><rect x="1026.9" y="323.0" width="2.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1029.9" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=319348] (65 samples, 12.48%)</title><rect x="1029.2" y="419.0" width="147.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1032.2" y="430.0">[NIO Selector #7 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (65 samples, 12.48%)</title><rect x="1029.2" y="403.0" width="147.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1032.2" y="414.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 1.92%)</title><rect x="1029.2" y="387.0" width="22.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1032.2" y="398.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 1.73%)</title><rect x="1031.5" y="371.0" width="20.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1034.5" y="382.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.19%)</title><rect x="1033.7" y="355.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1036.7" y="366.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.19%)</title><rect x="1036.0" y="355.0" width="2.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1039.0" y="366.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 1.15%)</title><rect x="1038.3" y="355.0" width="13.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1041.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (55 samples, 10.56%)</title><rect x="1051.8" y="387.0" width="124.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1054.8" y="398.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (55 samples, 10.56%)</title><rect x="1051.8" y="371.0" width="124.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1054.8" y="382.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (45 samples, 8.64%)</title><rect x="1051.8" y="355.0" width="102.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1054.8" y="366.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (42 samples, 8.06%)</title><rect x="1051.8" y="339.0" width="95.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1054.8" y="350.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (42 samples, 8.06%)</title><rect x="1051.8" y="323.0" width="95.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1054.8" y="334.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (42 samples, 8.06%)</title><rect x="1051.8" y="307.0" width="95.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1054.8" y="318.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 2.88%)</title><rect x="1051.8" y="291.0" width="34.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1054.8" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (15 samples, 2.88%)</title><rect x="1051.8" y="275.0" width="34.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1054.8" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 1.92%)</title><rect x="1051.8" y="259.0" width="22.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1054.8" y="270.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (10 samples, 1.92%)</title><rect x="1051.8" y="243.0" width="22.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1054.8" y="254.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 1.92%)</title><rect x="1051.8" y="227.0" width="22.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1054.8" y="238.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 1.92%)</title><rect x="1051.8" y="211.0" width="22.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1054.8" y="222.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 1.92%)</title><rect x="1051.8" y="195.0" width="22.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1054.8" y="206.0">o..</text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.19%)</title><rect x="1070.0" y="179.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1073.0" y="190.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.19%)</title><rect x="1072.2" y="179.0" width="2.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1075.2" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.96%)</title><rect x="1074.5" y="259.0" width="11.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1077.5" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.96%)</title><rect x="1074.5" y="243.0" width="11.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1077.5" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.96%)</title><rect x="1074.5" y="227.0" width="11.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1077.5" y="238.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.96%)</title><rect x="1074.5" y="211.0" width="11.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1077.5" y="222.0"></text>
</g>
<g>
<title>__libc_send (5 samples, 0.96%)</title><rect x="1074.5" y="195.0" width="11.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1077.5" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.19%)</title><rect x="1085.8" y="291.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1088.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.19%)</title><rect x="1085.8" y="275.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1088.8" y="286.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.19%)</title><rect x="1085.8" y="259.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1088.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.get (26 samples, 4.99%)</title><rect x="1088.1" y="291.0" width="58.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1091.1" y="302.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (26 samples, 4.99%)</title><rect x="1088.1" y="275.0" width="58.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1091.1" y="286.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (26 samples, 4.99%)</title><rect x="1088.1" y="259.0" width="58.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1091.1" y="270.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (26 samples, 4.99%)</title><rect x="1088.1" y="243.0" width="58.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1091.1" y="254.0">org/ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (25 samples, 4.80%)</title><rect x="1088.1" y="227.0" width="56.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1091.1" y="238.0">Java_o..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.19%)</title><rect x="1088.1" y="211.0" width="2.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1091.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.19%)</title><rect x="1090.3" y="211.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1093.3" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (22 samples, 4.22%)</title><rect x="1092.6" y="211.0" width="49.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1095.6" y="222.0">rocks..</text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.19%)</title><rect x="1092.6" y="195.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1095.6" y="206.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.19%)</title><rect x="1094.9" y="195.0" width="2.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1097.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (18 samples, 3.45%)</title><rect x="1097.1" y="195.0" width="40.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1100.1" y="206.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (18 samples, 3.45%)</title><rect x="1097.1" y="179.0" width="40.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1100.1" y="190.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (18 samples, 3.45%)</title><rect x="1097.1" y="163.0" width="40.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1100.1" y="174.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (18 samples, 3.45%)</title><rect x="1097.1" y="147.0" width="40.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1100.1" y="158.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.19%)</title><rect x="1097.1" y="131.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1100.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (16 samples, 3.07%)</title><rect x="1099.4" y="131.0" width="36.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1102.4" y="142.0">roc..</text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (1 samples, 0.19%)</title><rect x="1101.7" y="115.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1104.7" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (14 samples, 2.69%)</title><rect x="1103.9" y="115.0" width="31.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1106.9" y="126.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (14 samples, 2.69%)</title><rect x="1103.9" y="99.0" width="31.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1106.9" y="110.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (12 samples, 2.30%)</title><rect x="1108.5" y="83.0" width="27.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1111.5" y="94.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.19%)</title><rect x="1108.5" y="67.0" width="2.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1111.5" y="78.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (11 samples, 2.11%)</title><rect x="1110.7" y="67.0" width="24.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1113.7" y="78.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 1.34%)</title><rect x="1119.8" y="51.0" width="15.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1122.8" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (3 samples, 0.58%)</title><rect x="1126.6" y="35.0" width="6.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1129.6" y="46.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.19%)</title><rect x="1133.4" y="35.0" width="2.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1136.4" y="46.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.19%)</title><rect x="1135.6" y="131.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1138.6" y="142.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.38%)</title><rect x="1137.9" y="195.0" width="4.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1140.9" y="206.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.38%)</title><rect x="1137.9" y="179.0" width="4.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1140.9" y="190.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.19%)</title><rect x="1142.4" y="211.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1145.4" y="222.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.19%)</title><rect x="1144.7" y="227.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1147.7" y="238.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.19%)</title><rect x="1144.7" y="211.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1147.7" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.19%)</title><rect x="1147.0" y="339.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1150.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.19%)</title><rect x="1147.0" y="323.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1150.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.19%)</title><rect x="1147.0" y="307.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1150.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.19%)</title><rect x="1147.0" y="291.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1150.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.19%)</title><rect x="1147.0" y="275.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1150.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.19%)</title><rect x="1149.2" y="339.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1152.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.19%)</title><rect x="1151.5" y="339.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1154.5" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.19%)</title><rect x="1151.5" y="323.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1154.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.19%)</title><rect x="1151.5" y="307.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1154.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.19%)</title><rect x="1151.5" y="291.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1154.5" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (10 samples, 1.92%)</title><rect x="1153.8" y="355.0" width="22.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1156.8" y="366.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (10 samples, 1.92%)</title><rect x="1153.8" y="339.0" width="22.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1156.8" y="350.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.77%)</title><rect x="1156.0" y="323.0" width="9.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1159.0" y="334.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.19%)</title><rect x="1158.3" y="307.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1161.3" y="318.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.19%)</title><rect x="1160.6" y="307.0" width="2.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1163.6" y="318.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.19%)</title><rect x="1162.8" y="307.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1165.8" y="318.0"></text>
</g>
<g>
<title>__recv (5 samples, 0.96%)</title><rect x="1165.1" y="323.0" width="11.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1168.1" y="334.0"></text>
</g>
<g>
<title>[tid=319644] (6 samples, 1.15%)</title><rect x="1176.4" y="419.0" width="13.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1179.4" y="430.0"></text>
</g>
<g>
<title>start_thread (6 samples, 1.15%)</title><rect x="1176.4" y="403.0" width="13.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1179.4" y="414.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 1.15%)</title><rect x="1176.4" y="387.0" width="13.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1179.4" y="398.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 1.15%)</title><rect x="1176.4" y="371.0" width="13.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.4" y="382.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (6 samples, 1.15%)</title><rect x="1176.4" y="355.0" width="13.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.4" y="366.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (6 samples, 1.15%)</title><rect x="1176.4" y="339.0" width="13.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.4" y="350.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (6 samples, 1.15%)</title><rect x="1176.4" y="323.0" width="13.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.4" y="334.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (6 samples, 1.15%)</title><rect x="1176.4" y="307.0" width="13.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.4" y="318.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (6 samples, 1.15%)</title><rect x="1176.4" y="291.0" width="13.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.4" y="302.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (4 samples, 0.77%)</title><rect x="1176.4" y="275.0" width="9.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.4" y="286.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.19%)</title><rect x="1176.4" y="259.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1179.4" y="270.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.19%)</title><rect x="1176.4" y="243.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.4" y="254.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.19%)</title><rect x="1176.4" y="227.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.4" y="238.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.19%)</title><rect x="1178.7" y="259.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.7" y="270.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.19%)</title><rect x="1178.7" y="243.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.7" y="254.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.19%)</title><rect x="1178.7" y="227.0" width="2.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.7" y="238.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 0.19%)</title><rect x="1178.7" y="211.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.7" y="222.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (2 samples, 0.38%)</title><rect x="1180.9" y="259.0" width="4.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.9" y="270.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.19%)</title><rect x="1180.9" y="243.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1183.9" y="254.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.19%)</title><rect x="1183.2" y="243.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.2" y="254.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.19%)</title><rect x="1183.2" y="227.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.2" y="238.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.19%)</title><rect x="1183.2" y="211.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.2" y="222.0"></text>
</g>
<g>
<title>rRegLOper::type() const (1 samples, 0.19%)</title><rect x="1183.2" y="195.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.2" y="206.0"></text>
</g>
<g>
<title>Compile::Optimize() (2 samples, 0.38%)</title><rect x="1185.5" y="275.0" width="4.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.5" y="286.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.19%)</title><rect x="1185.5" y="259.0" width="2.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.5" y="270.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.19%)</title><rect x="1187.7" y="259.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.7" y="270.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.19%)</title><rect x="1187.7" y="243.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.7" y="254.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.19%)</title><rect x="1187.7" y="227.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.7" y="238.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (1 samples, 0.19%)</title><rect x="1187.7" y="211.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.7" y="222.0"></text>
</g>
</g>
</svg>
