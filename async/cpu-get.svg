<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="597"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="597"> </text>
<g id="frames">
<g>
<title>all (1,173 samples, 100.00%)</title><rect x="10.0" y="563.0" width="1180.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="574.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=240091] (38 samples, 3.24%)</title><rect x="10.0" y="547.0" width="38.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="558.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (38 samples, 3.24%)</title><rect x="10.0" y="531.0" width="38.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="542.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (15 samples, 1.28%)</title><rect x="10.0" y="515.0" width="15.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.17%)</title><rect x="10.0" y="499.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.09%)</title><rect x="10.0" y="483.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.access$100 (1 samples, 0.09%)</title><rect x="11.0" y="483.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.0" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (13 samples, 1.11%)</title><rect x="12.0" y="499.0" width="13.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.0" y="510.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.09%)</title><rect x="15.0" y="483.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="18.0" y="494.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.09%)</title><rect x="16.0" y="483.0" width="1.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="19.0" y="494.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 0.68%)</title><rect x="17.0" y="483.0" width="8.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="20.0" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (23 samples, 1.96%)</title><rect x="25.1" y="515.0" width="23.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.1" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (23 samples, 1.96%)</title><rect x="25.1" y="499.0" width="23.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="28.1" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (16 samples, 1.36%)</title><rect x="25.1" y="483.0" width="16.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="28.1" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7 samples, 0.60%)</title><rect x="25.1" y="467.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7 samples, 0.60%)</title><rect x="25.1" y="451.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.1" y="462.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (5 samples, 0.43%)</title><rect x="25.1" y="435.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (5 samples, 0.43%)</title><rect x="25.1" y="419.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="28.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.43%)</title><rect x="25.1" y="403.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="28.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.43%)</title><rect x="25.1" y="387.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.17%)</title><rect x="25.1" y="371.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="28.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.17%)</title><rect x="25.1" y="355.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="28.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.17%)</title><rect x="25.1" y="339.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="28.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.17%)</title><rect x="25.1" y="323.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.26%)</title><rect x="27.1" y="371.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.26%)</title><rect x="27.1" y="355.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.26%)</title><rect x="27.1" y="339.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.26%)</title><rect x="27.1" y="323.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="30.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.26%)</title><rect x="27.1" y="307.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="30.1" y="318.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.26%)</title><rect x="27.1" y="291.0" width="3.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="30.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.09%)</title><rect x="30.1" y="435.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.1" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.09%)</title><rect x="30.1" y="419.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="33.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.09%)</title><rect x="31.1" y="435.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="31.1" y="419.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="31.1" y="403.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="31.1" y="387.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.43%)</title><rect x="32.1" y="467.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="35.1" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.34%)</title><rect x="33.1" y="451.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.1" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.34%)</title><rect x="33.1" y="435.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="36.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="36.2" y="419.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="39.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="36.2" y="403.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="39.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.09%)</title><rect x="37.2" y="467.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.2" y="478.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.09%)</title><rect x="37.2" y="451.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.2" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.09%)</title><rect x="37.2" y="435.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.09%)</title><rect x="37.2" y="419.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.2" y="430.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="37.2" y="403.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="40.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="38.2" y="467.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.2" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="39.2" y="467.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.2" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="39.2" y="451.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="40.2" y="435.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="40.2" y="419.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.2" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 0.60%)</title><rect x="41.2" y="483.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.2" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 0.60%)</title><rect x="41.2" y="467.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="44.2" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.17%)</title><rect x="41.2" y="451.0" width="2.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="44.2" y="462.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.17%)</title><rect x="41.2" y="435.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="44.2" y="446.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.17%)</title><rect x="41.2" y="419.0" width="2.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="44.2" y="430.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (2 samples, 0.17%)</title><rect x="41.2" y="403.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="44.2" y="414.0"></text>
</g>
<g>
<title>__recv (5 samples, 0.43%)</title><rect x="43.2" y="451.0" width="5.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="46.2" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=240092] (35 samples, 2.98%)</title><rect x="48.2" y="547.0" width="35.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="51.2" y="558.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (35 samples, 2.98%)</title><rect x="48.2" y="531.0" width="35.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.2" y="542.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 0.77%)</title><rect x="48.2" y="515.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.2" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.17%)</title><rect x="50.2" y="499.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="53.2" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.17%)</title><rect x="50.2" y="483.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.2" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 0.43%)</title><rect x="52.3" y="499.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.3" y="510.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.09%)</title><rect x="53.3" y="483.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="56.3" y="494.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.09%)</title><rect x="54.3" y="483.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="57.3" y="494.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.09%)</title><rect x="55.3" y="483.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="58.3" y="494.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.09%)</title><rect x="56.3" y="483.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="59.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (26 samples, 2.22%)</title><rect x="57.3" y="515.0" width="26.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.3" y="526.0">o..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="57.3" y="499.0" width="1.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="60.3" y="510.0"></text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.09%)</title><rect x="58.3" y="499.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="61.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (24 samples, 2.05%)</title><rect x="59.3" y="499.0" width="24.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.3" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (13 samples, 1.11%)</title><rect x="59.3" y="483.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (6 samples, 0.51%)</title><rect x="59.3" y="467.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.3" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (6 samples, 0.51%)</title><rect x="59.3" y="451.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.3" y="462.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (4 samples, 0.34%)</title><rect x="59.3" y="435.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="62.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (4 samples, 0.34%)</title><rect x="59.3" y="419.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.34%)</title><rect x="59.3" y="403.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.34%)</title><rect x="59.3" y="387.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.09%)</title><rect x="59.3" y="371.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.09%)</title><rect x="59.3" y="355.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.09%)</title><rect x="59.3" y="339.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.09%)</title><rect x="59.3" y="323.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.17%)</title><rect x="60.3" y="371.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.17%)</title><rect x="60.3" y="355.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.17%)</title><rect x="60.3" y="339.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.17%)</title><rect x="60.3" y="323.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.17%)</title><rect x="60.3" y="307.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.17%)</title><rect x="60.3" y="291.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.3" y="302.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.09%)</title><rect x="60.3" y="275.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="63.3" y="286.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="61.3" y="275.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="64.3" y="286.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.09%)</title><rect x="61.3" y="259.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="64.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.09%)</title><rect x="62.3" y="371.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.09%)</title><rect x="62.3" y="355.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.09%)</title><rect x="62.3" y="339.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="65.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="62.3" y="323.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="62.3" y="307.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.3" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.09%)</title><rect x="62.3" y="291.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="65.3" y="302.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.09%)</title><rect x="62.3" y="275.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="65.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.09%)</title><rect x="63.3" y="435.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.3" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.isEmpty (1 samples, 0.09%)</title><rect x="63.3" y="419.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.09%)</title><rect x="64.3" y="435.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="67.3" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.09%)</title><rect x="64.3" y="419.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.09%)</title><rect x="64.3" y="403.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.34%)</title><rect x="65.3" y="467.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.3" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.26%)</title><rect x="65.3" y="451.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.17%)</title><rect x="66.3" y="435.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="67.3" y="419.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.09%)</title><rect x="67.3" y="403.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="70.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="67.3" y="387.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.3" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="68.3" y="451.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.3" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="68.3" y="435.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="68.3" y="419.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.17%)</title><rect x="69.4" y="467.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.4" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="71.4" y="467.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.4" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="71.4" y="451.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="71.4" y="435.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="71.4" y="419.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.4" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 0.94%)</title><rect x="72.4" y="483.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (11 samples, 0.94%)</title><rect x="72.4" y="467.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.4" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.26%)</title><rect x="72.4" y="451.0" width="3.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="75.4" y="462.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.17%)</title><rect x="73.4" y="435.0" width="2.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="76.4" y="446.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.09%)</title><rect x="74.4" y="419.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="77.4" y="430.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.09%)</title><rect x="74.4" y="403.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="77.4" y="414.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.09%)</title><rect x="75.4" y="451.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="78.4" y="462.0"></text>
</g>
<g>
<title>__recv (6 samples, 0.51%)</title><rect x="76.4" y="451.0" width="6.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="79.4" y="462.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="82.4" y="451.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="85.4" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=240093] (36 samples, 3.07%)</title><rect x="83.4" y="547.0" width="36.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="86.4" y="558.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (36 samples, 3.07%)</title><rect x="83.4" y="531.0" width="36.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.4" y="542.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.17%)</title><rect x="84.4" y="515.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.4" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.17%)</title><rect x="84.4" y="499.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.4" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 0.51%)</title><rect x="86.5" y="515.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="89.5" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.09%)</title><rect x="86.5" y="499.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="89.5" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.09%)</title><rect x="86.5" y="483.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="89.5" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 0.43%)</title><rect x="87.5" y="499.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.5" y="510.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.34%)</title><rect x="87.5" y="483.0" width="4.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="90.5" y="494.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.09%)</title><rect x="91.5" y="483.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="94.5" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (27 samples, 2.30%)</title><rect x="92.5" y="515.0" width="27.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.5" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (27 samples, 2.30%)</title><rect x="92.5" y="499.0" width="27.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="95.5" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (16 samples, 1.36%)</title><rect x="92.5" y="483.0" width="16.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="95.5" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7 samples, 0.60%)</title><rect x="94.5" y="467.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7 samples, 0.60%)</title><rect x="94.5" y="451.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.5" y="462.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (5 samples, 0.43%)</title><rect x="94.5" y="435.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="97.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.09%)</title><rect x="94.5" y="419.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.09%)</title><rect x="94.5" y="403.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="97.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (4 samples, 0.34%)</title><rect x="95.5" y="419.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.17%)</title><rect x="97.5" y="403.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="100.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.17%)</title><rect x="97.5" y="387.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.09%)</title><rect x="97.5" y="371.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.09%)</title><rect x="97.5" y="355.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.09%)</title><rect x="97.5" y="339.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.09%)</title><rect x="97.5" y="323.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.09%)</title><rect x="98.5" y="371.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.09%)</title><rect x="98.5" y="355.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.09%)</title><rect x="98.5" y="339.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="101.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="98.5" y="323.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="98.5" y="307.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.5" y="318.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.09%)</title><rect x="98.5" y="291.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="101.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.09%)</title><rect x="99.5" y="435.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.5" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.09%)</title><rect x="99.5" y="419.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="102.5" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.09%)</title><rect x="99.5" y="403.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.09%)</title><rect x="99.5" y="387.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.09%)</title><rect x="99.5" y="371.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.09%)</title><rect x="100.5" y="435.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="103.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="100.5" y="419.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="103.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="100.5" y="403.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.09%)</title><rect x="100.5" y="387.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="103.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.26%)</title><rect x="101.5" y="467.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="104.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.09%)</title><rect x="101.5" y="451.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="101.5" y="435.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="101.5" y="419.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.09%)</title><rect x="101.5" y="403.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.5" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="101.5" y="387.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.5" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="102.5" y="451.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.5" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="102.5" y="435.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.26%)</title><rect x="104.6" y="467.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.6" y="478.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.26%)</title><rect x="104.6" y="451.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.6" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.26%)</title><rect x="104.6" y="435.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.17%)</title><rect x="104.6" y="419.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="107.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.09%)</title><rect x="105.6" y="403.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="108.6" y="414.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.09%)</title><rect x="106.6" y="419.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.6" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="107.6" y="467.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="110.6" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="107.6" y="451.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 0.94%)</title><rect x="108.6" y="483.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="111.6" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (11 samples, 0.94%)</title><rect x="108.6" y="467.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.6" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.34%)</title><rect x="110.6" y="451.0" width="4.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="113.6" y="462.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="110.6" y="435.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="113.6" y="446.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.09%)</title><rect x="111.6" y="435.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="114.6" y="446.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.17%)</title><rect x="112.6" y="435.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="115.6" y="446.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.09%)</title><rect x="112.6" y="419.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="115.6" y="430.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.09%)</title><rect x="113.6" y="419.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="116.6" y="430.0"></text>
</g>
<g>
<title>__recv (5 samples, 0.43%)</title><rect x="114.6" y="451.0" width="5.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="117.6" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=240094] (30 samples, 2.56%)</title><rect x="119.7" y="547.0" width="30.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="122.7" y="558.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (30 samples, 2.56%)</title><rect x="119.7" y="531.0" width="30.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.7" y="542.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.09%)</title><rect x="119.7" y="515.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="122.7" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.09%)</title><rect x="119.7" y="499.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.7" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 0.77%)</title><rect x="120.7" y="515.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.7" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 0.77%)</title><rect x="120.7" y="499.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.7" y="510.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.17%)</title><rect x="123.7" y="483.0" width="2.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="126.7" y="494.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.09%)</title><rect x="125.7" y="483.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="128.7" y="494.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.26%)</title><rect x="126.7" y="483.0" width="3.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="129.7" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (20 samples, 1.71%)</title><rect x="129.7" y="515.0" width="20.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.7" y="526.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="129.7" y="499.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="132.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (19 samples, 1.62%)</title><rect x="130.7" y="499.0" width="19.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (10 samples, 0.85%)</title><rect x="130.7" y="483.0" width="10.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="133.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2 samples, 0.17%)</title><rect x="131.7" y="467.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2 samples, 0.17%)</title><rect x="131.7" y="451.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="134.7" y="462.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (2 samples, 0.17%)</title><rect x="131.7" y="435.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.09%)</title><rect x="131.7" y="419.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.09%)</title><rect x="131.7" y="403.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="134.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (1 samples, 0.09%)</title><rect x="132.7" y="419.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.09%)</title><rect x="132.7" y="403.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="135.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.09%)</title><rect x="132.7" y="387.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.09%)</title><rect x="132.7" y="371.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.09%)</title><rect x="132.7" y="355.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="135.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.09%)</title><rect x="132.7" y="339.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="132.7" y="323.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="135.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="132.7" y="307.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.7" y="318.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.09%)</title><rect x="132.7" y="291.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="135.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.43%)</title><rect x="133.7" y="467.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.17%)</title><rect x="134.7" y="451.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="135.7" y="435.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.7" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="136.8" y="451.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="139.8" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="136.8" y="435.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.17%)</title><rect x="136.8" y="419.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="139.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="137.8" y="403.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.17%)</title><rect x="138.8" y="467.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.8" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (9 samples, 0.77%)</title><rect x="140.8" y="483.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="143.8" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 0.77%)</title><rect x="140.8" y="467.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.8" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.43%)</title><rect x="142.8" y="451.0" width="5.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="145.8" y="462.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.09%)</title><rect x="142.8" y="435.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="145.8" y="446.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="143.8" y="435.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="146.8" y="446.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.26%)</title><rect x="144.8" y="435.0" width="3.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="147.8" y="446.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.09%)</title><rect x="146.8" y="419.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="149.8" y="430.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.09%)</title><rect x="147.8" y="451.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="150.8" y="462.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="148.8" y="451.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="151.8" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=240095] (30 samples, 2.56%)</title><rect x="149.8" y="547.0" width="30.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="152.8" y="558.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (30 samples, 2.56%)</title><rect x="149.8" y="531.0" width="30.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.8" y="542.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (12 samples, 1.02%)</title><rect x="149.8" y="515.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.8" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.09%)</title><rect x="149.8" y="499.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="152.8" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.09%)</title><rect x="149.8" y="483.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.8" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (11 samples, 0.94%)</title><rect x="150.8" y="499.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="153.8" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.17%)</title><rect x="151.8" y="483.0" width="2.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="154.8" y="494.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.09%)</title><rect x="153.9" y="483.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="156.9" y="494.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.09%)</title><rect x="153.9" y="467.0" width="1.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="156.9" y="478.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.09%)</title><rect x="154.9" y="483.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="157.9" y="494.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 0.51%)</title><rect x="155.9" y="483.0" width="6.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="158.9" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (18 samples, 1.53%)</title><rect x="161.9" y="515.0" width="18.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="164.9" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (16 samples, 1.36%)</title><rect x="161.9" y="499.0" width="16.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7 samples, 0.60%)</title><rect x="163.9" y="483.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.9" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (6 samples, 0.51%)</title><rect x="163.9" y="467.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (6 samples, 0.51%)</title><rect x="163.9" y="451.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.9" y="462.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (5 samples, 0.43%)</title><rect x="163.9" y="435.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (5 samples, 0.43%)</title><rect x="163.9" y="419.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.43%)</title><rect x="163.9" y="403.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.43%)</title><rect x="163.9" y="387.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.09%)</title><rect x="163.9" y="371.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.09%)</title><rect x="163.9" y="355.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="166.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.09%)</title><rect x="163.9" y="339.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.09%)</title><rect x="163.9" y="323.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="166.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.09%)</title><rect x="163.9" y="307.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.09%)</title><rect x="163.9" y="291.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.9" y="302.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.09%)</title><rect x="163.9" y="275.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="166.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.34%)</title><rect x="164.9" y="371.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="167.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.34%)</title><rect x="164.9" y="355.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="167.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.34%)</title><rect x="164.9" y="339.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="167.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.34%)</title><rect x="164.9" y="323.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.34%)</title><rect x="164.9" y="307.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="167.9" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.26%)</title><rect x="164.9" y="291.0" width="3.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="167.9" y="302.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.17%)</title><rect x="165.9" y="275.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="168.9" y="286.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.09%)</title><rect x="167.9" y="291.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="170.9" y="302.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (1 samples, 0.09%)</title><rect x="168.9" y="435.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="171.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (1 samples, 0.09%)</title><rect x="168.9" y="419.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.09%)</title><rect x="169.9" y="467.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="172.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.09%)</title><rect x="169.9" y="451.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="172.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="169.9" y="435.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="172.9" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 0.60%)</title><rect x="171.0" y="483.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.0" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 0.60%)</title><rect x="171.0" y="467.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="174.0" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.34%)</title><rect x="171.0" y="451.0" width="4.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="174.0" y="462.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.09%)</title><rect x="171.0" y="435.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="174.0" y="446.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.09%)</title><rect x="172.0" y="435.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="175.0" y="446.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="173.0" y="435.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="176.0" y="446.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.09%)</title><rect x="174.0" y="435.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="177.0" y="446.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.26%)</title><rect x="175.0" y="451.0" width="3.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="178.0" y="462.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.17%)</title><rect x="178.0" y="499.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="181.0" y="510.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=240096] (28 samples, 2.39%)</title><rect x="180.0" y="547.0" width="28.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="183.0" y="558.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (28 samples, 2.39%)</title><rect x="180.0" y="531.0" width="28.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.0" y="542.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.09%)</title><rect x="180.0" y="515.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="183.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.17%)</title><rect x="181.0" y="515.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="184.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.17%)</title><rect x="181.0" y="499.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.0" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 0.68%)</title><rect x="183.0" y="515.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.09%)</title><rect x="184.0" y="499.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.0" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.09%)</title><rect x="184.0" y="483.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="187.0" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 0.51%)</title><rect x="185.0" y="499.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="188.0" y="510.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.09%)</title><rect x="186.0" y="483.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="189.0" y="494.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.09%)</title><rect x="187.1" y="483.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="190.1" y="494.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.26%)</title><rect x="188.1" y="483.0" width="3.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="191.1" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (17 samples, 1.45%)</title><rect x="191.1" y="515.0" width="17.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="194.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (16 samples, 1.36%)</title><rect x="191.1" y="499.0" width="16.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="194.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (10 samples, 0.85%)</title><rect x="191.1" y="483.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.1" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5 samples, 0.43%)</title><rect x="191.1" y="467.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="194.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 0.43%)</title><rect x="191.1" y="451.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="194.1" y="462.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (5 samples, 0.43%)</title><rect x="191.1" y="435.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (5 samples, 0.43%)</title><rect x="191.1" y="419.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="194.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.43%)</title><rect x="191.1" y="403.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="194.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.34%)</title><rect x="192.1" y="387.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="195.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.26%)</title><rect x="192.1" y="371.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.26%)</title><rect x="192.1" y="355.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.26%)</title><rect x="192.1" y="339.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="195.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.26%)</title><rect x="192.1" y="323.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.09%)</title><rect x="195.1" y="371.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.09%)</title><rect x="195.1" y="355.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.09%)</title><rect x="195.1" y="339.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="195.1" y="323.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="195.1" y="307.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="198.1" y="318.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.09%)</title><rect x="195.1" y="291.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="198.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.34%)</title><rect x="196.1" y="467.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="199.1" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.34%)</title><rect x="196.1" y="451.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="199.1" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.34%)</title><rect x="196.1" y="435.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.17%)</title><rect x="198.1" y="419.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="201.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.17%)</title><rect x="198.1" y="403.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.1" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="200.1" y="467.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="203.1" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="200.1" y="451.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="203.1" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 0.51%)</title><rect x="201.1" y="483.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="204.1" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 0.43%)</title><rect x="201.1" y="467.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.1" y="478.0"></text>
</g>
<g>
<title>__recv (4 samples, 0.34%)</title><rect x="202.1" y="451.0" width="4.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="205.1" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.09%)</title><rect x="206.2" y="467.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.2" y="478.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="207.2" y="499.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="210.2" y="510.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=240097] (29 samples, 2.47%)</title><rect x="208.2" y="547.0" width="29.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="211.2" y="558.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (29 samples, 2.47%)</title><rect x="208.2" y="531.0" width="29.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="211.2" y="542.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (11 samples, 0.94%)</title><rect x="209.2" y="515.0" width="11.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="212.2" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.17%)</title><rect x="209.2" y="499.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.2" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.access$100 (1 samples, 0.09%)</title><rect x="210.2" y="483.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="213.2" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 0.77%)</title><rect x="211.2" y="499.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="214.2" y="510.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.17%)</title><rect x="211.2" y="483.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="214.2" y="494.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.60%)</title><rect x="213.2" y="483.0" width="7.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="216.2" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (17 samples, 1.45%)</title><rect x="220.2" y="515.0" width="17.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="223.2" y="526.0"></text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.09%)</title><rect x="220.2" y="499.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="223.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (16 samples, 1.36%)</title><rect x="221.3" y="499.0" width="16.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="224.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8 samples, 0.68%)</title><rect x="221.3" y="483.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="224.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (6 samples, 0.51%)</title><rect x="221.3" y="467.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="224.3" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (6 samples, 0.51%)</title><rect x="221.3" y="451.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.3" y="462.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (5 samples, 0.43%)</title><rect x="221.3" y="435.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="224.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.09%)</title><rect x="221.3" y="419.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.09%)</title><rect x="221.3" y="403.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="224.3" y="414.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="221.3" y="387.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="224.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (4 samples, 0.34%)</title><rect x="222.3" y="419.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.34%)</title><rect x="222.3" y="403.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="225.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.34%)</title><rect x="222.3" y="387.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="225.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.09%)</title><rect x="222.3" y="371.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="225.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.09%)</title><rect x="222.3" y="355.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="225.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="222.3" y="339.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="225.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.26%)</title><rect x="223.3" y="371.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="226.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.26%)</title><rect x="223.3" y="355.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="226.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.26%)</title><rect x="223.3" y="339.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.26%)</title><rect x="223.3" y="323.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="226.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.26%)</title><rect x="223.3" y="307.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="226.3" y="318.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.09%)</title><rect x="223.3" y="291.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="226.3" y="302.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.09%)</title><rect x="224.3" y="291.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="227.3" y="302.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.09%)</title><rect x="225.3" y="291.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="228.3" y="302.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="225.3" y="275.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="228.3" y="286.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (1 samples, 0.09%)</title><rect x="226.3" y="435.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="229.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (1 samples, 0.09%)</title><rect x="226.3" y="419.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.09%)</title><rect x="227.3" y="467.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.3" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="227.3" y="451.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.3" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="227.3" y="435.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="230.3" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="228.3" y="467.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="231.3" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="228.3" y="451.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="231.3" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 0.68%)</title><rect x="229.3" y="483.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="232.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 0.60%)</title><rect x="230.3" y="467.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="233.3" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.09%)</title><rect x="232.3" y="451.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="235.3" y="462.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.09%)</title><rect x="232.3" y="435.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="235.3" y="446.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.09%)</title><rect x="233.3" y="451.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="236.3" y="462.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.26%)</title><rect x="234.3" y="451.0" width="3.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="237.3" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=240098] (35 samples, 2.98%)</title><rect x="237.3" y="547.0" width="35.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="240.3" y="558.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (35 samples, 2.98%)</title><rect x="237.3" y="531.0" width="35.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.3" y="542.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.17%)</title><rect x="239.4" y="515.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.4" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.17%)</title><rect x="239.4" y="499.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="242.4" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (14 samples, 1.19%)</title><rect x="241.4" y="515.0" width="14.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="244.4" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (13 samples, 1.11%)</title><rect x="242.4" y="499.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.4" y="510.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.17%)</title><rect x="244.4" y="483.0" width="2.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="247.4" y="494.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 0.77%)</title><rect x="246.4" y="483.0" width="9.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="249.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (17 samples, 1.45%)</title><rect x="255.5" y="515.0" width="17.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="258.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (15 samples, 1.28%)</title><rect x="255.5" y="499.0" width="15.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="258.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (11 samples, 0.94%)</title><rect x="255.5" y="483.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.5" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5 samples, 0.43%)</title><rect x="255.5" y="467.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="258.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 0.43%)</title><rect x="255.5" y="451.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.5" y="462.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (5 samples, 0.43%)</title><rect x="255.5" y="435.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.17%)</title><rect x="255.5" y="419.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="258.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.17%)</title><rect x="255.5" y="403.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.17%)</title><rect x="255.5" y="387.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="258.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.17%)</title><rect x="255.5" y="371.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (3 samples, 0.26%)</title><rect x="257.5" y="419.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="260.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.26%)</title><rect x="257.5" y="403.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="260.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.26%)</title><rect x="257.5" y="387.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.09%)</title><rect x="257.5" y="371.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="260.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.09%)</title><rect x="257.5" y="355.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="260.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.09%)</title><rect x="257.5" y="339.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="260.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.09%)</title><rect x="257.5" y="323.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.17%)</title><rect x="258.5" y="371.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="261.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.17%)</title><rect x="258.5" y="355.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.17%)</title><rect x="258.5" y="339.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="261.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.17%)</title><rect x="258.5" y="323.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.17%)</title><rect x="258.5" y="307.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="261.5" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.09%)</title><rect x="258.5" y="291.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="261.5" y="302.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="258.5" y="275.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="261.5" y="286.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.09%)</title><rect x="259.5" y="291.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="262.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.43%)</title><rect x="260.5" y="467.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.34%)</title><rect x="260.5" y="451.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="263.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.17%)</title><rect x="262.5" y="435.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="265.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="263.5" y="419.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="266.5" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="264.5" y="451.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="267.5" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="264.5" y="435.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="267.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="265.5" y="467.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="268.5" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.34%)</title><rect x="266.5" y="483.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="269.5" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.34%)</title><rect x="266.5" y="467.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="269.5" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.09%)</title><rect x="266.5" y="451.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="269.5" y="462.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.09%)</title><rect x="266.5" y="435.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="269.5" y="446.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.09%)</title><rect x="267.5" y="451.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="270.5" y="462.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.09%)</title><rect x="268.5" y="451.0" width="1.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="271.5" y="462.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="269.5" y="451.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="272.5" y="462.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.17%)</title><rect x="270.5" y="499.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="273.5" y="510.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="271.6" y="483.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="274.6" y="494.0"></text>
</g>
<g>
<title>[async_workers-0 tid=240137] (118 samples, 10.06%)</title><rect x="272.6" y="547.0" width="118.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="275.6" y="558.0">[async_workers..</text>
</g>
<g>
<title>java/lang/Thread.run (118 samples, 10.06%)</title><rect x="272.6" y="531.0" width="118.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="275.6" y="542.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (118 samples, 10.06%)</title><rect x="272.6" y="515.0" width="118.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="275.6" y="526.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.09%)</title><rect x="272.6" y="499.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="275.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.09%)</title><rect x="272.6" y="483.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="275.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.09%)</title><rect x="272.6" y="467.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="275.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.09%)</title><rect x="272.6" y="451.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="275.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (117 samples, 9.97%)</title><rect x="273.6" y="499.0" width="117.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.6" y="510.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.09%)</title><rect x="273.6" y="483.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="276.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.09%)</title><rect x="273.6" y="467.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.09%)</title><rect x="273.6" y="451.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="276.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.09%)</title><rect x="273.6" y="435.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="276.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (43 samples, 3.67%)</title><rect x="274.6" y="483.0" width="43.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="277.6" y="494.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (42 samples, 3.58%)</title><rect x="275.6" y="467.0" width="42.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="278.6" y="478.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (30 samples, 2.56%)</title><rect x="277.6" y="451.0" width="30.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.6" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (7 samples, 0.60%)</title><rect x="278.6" y="435.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.60%)</title><rect x="278.6" y="419.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.60%)</title><rect x="278.6" y="403.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.51%)</title><rect x="279.6" y="387.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.51%)</title><rect x="279.6" y="371.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="282.6" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.43%)</title><rect x="279.6" y="355.0" width="5.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="282.6" y="366.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.09%)</title><rect x="279.6" y="339.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="282.6" y="350.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.34%)</title><rect x="280.6" y="339.0" width="4.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="283.6" y="350.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.09%)</title><rect x="284.6" y="355.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="287.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (22 samples, 1.88%)</title><rect x="285.6" y="435.0" width="22.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="288.6" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (22 samples, 1.88%)</title><rect x="285.6" y="419.0" width="22.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.6" y="430.0">j..</text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.09%)</title><rect x="286.6" y="403.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="289.6" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park (11 samples, 0.94%)</title><rect x="287.6" y="403.0" width="11.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="290.6" y="414.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.09%)</title><rect x="288.7" y="387.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="291.7" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.26%)</title><rect x="289.7" y="387.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="292.7" y="398.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.09%)</title><rect x="290.7" y="371.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="293.7" y="382.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.09%)</title><rect x="291.7" y="371.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="294.7" y="382.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.26%)</title><rect x="292.7" y="387.0" width="3.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="295.7" y="398.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="295.7" y="387.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="298.7" y="398.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.09%)</title><rect x="296.7" y="387.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="299.7" y="398.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.09%)</title><rect x="297.7" y="387.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="300.7" y="398.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.68%)</title><rect x="298.7" y="403.0" width="8.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="301.7" y="414.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.09%)</title><rect x="298.7" y="387.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="301.7" y="398.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (7 samples, 0.60%)</title><rect x="299.7" y="387.0" width="7.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="302.7" y="398.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.09%)</title><rect x="306.8" y="403.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="309.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.26%)</title><rect x="307.8" y="451.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.26%)</title><rect x="307.8" y="435.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="310.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.26%)</title><rect x="307.8" y="419.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.09%)</title><rect x="308.8" y="403.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.09%)</title><rect x="309.8" y="403.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="312.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.09%)</title><rect x="309.8" y="387.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="312.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.09%)</title><rect x="309.8" y="371.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="312.8" y="382.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.09%)</title><rect x="309.8" y="355.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="312.8" y="366.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.09%)</title><rect x="309.8" y="339.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="312.8" y="350.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.09%)</title><rect x="309.8" y="323.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="312.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.60%)</title><rect x="310.8" y="451.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.60%)</title><rect x="310.8" y="435.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.60%)</title><rect x="310.8" y="419.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.60%)</title><rect x="310.8" y="403.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.51%)</title><rect x="311.8" y="387.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="314.8" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.09%)</title><rect x="311.8" y="371.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="314.8" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.17%)</title><rect x="312.8" y="371.0" width="2.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="315.8" y="382.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.09%)</title><rect x="313.8" y="355.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="316.8" y="366.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.26%)</title><rect x="314.8" y="371.0" width="3.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="317.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.run (73 samples, 6.22%)</title><rect x="317.8" y="483.0" width="73.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.8" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (73 samples, 6.22%)</title><rect x="317.8" y="467.0" width="73.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.8" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.getInternal (73 samples, 6.22%)</title><rect x="317.8" y="451.0" width="73.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="320.8" y="462.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8 samples, 0.68%)</title><rect x="317.8" y="435.0" width="8.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="320.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.17%)</title><rect x="317.8" y="419.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="320.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.17%)</title><rect x="317.8" y="403.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="320.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="318.8" y="387.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="321.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.09%)</title><rect x="318.8" y="371.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="321.8" y="382.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.09%)</title><rect x="318.8" y="355.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="321.8" y="366.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.09%)</title><rect x="318.8" y="339.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="321.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.51%)</title><rect x="319.8" y="419.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="322.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.09%)</title><rect x="319.8" y="403.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="322.8" y="414.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="319.8" y="387.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="322.8" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.43%)</title><rect x="320.8" y="403.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="323.8" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.43%)</title><rect x="320.8" y="387.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="323.8" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.43%)</title><rect x="320.8" y="371.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="323.8" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.43%)</title><rect x="320.8" y="355.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="323.8" y="366.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.09%)</title><rect x="320.8" y="339.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="323.8" y="350.0"></text>
</g>
<g>
<title>__libc_send (4 samples, 0.34%)</title><rect x="321.8" y="339.0" width="4.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="324.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (2 samples, 0.17%)</title><rect x="325.9" y="435.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="328.9" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.17%)</title><rect x="325.9" y="419.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="328.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.17%)</title><rect x="325.9" y="403.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="328.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.17%)</title><rect x="325.9" y="387.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="328.9" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="326.9" y="371.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.9" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.09%)</title><rect x="326.9" y="355.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="329.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.09%)</title><rect x="326.9" y="339.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="329.9" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.09%)</title><rect x="326.9" y="323.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="329.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (63 samples, 5.37%)</title><rect x="327.9" y="435.0" width="63.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="330.9" y="446.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (63 samples, 5.37%)</title><rect x="327.9" y="419.0" width="63.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="330.9" y="430.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (63 samples, 5.37%)</title><rect x="327.9" y="403.0" width="63.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.9" y="414.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (62 samples, 5.29%)</title><rect x="328.9" y="387.0" width="62.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="331.9" y="398.0">Java_o..</text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="328.9" y="371.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="331.9" y="382.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.09%)</title><rect x="329.9" y="371.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="332.9" y="382.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.09%)</title><rect x="330.9" y="371.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="333.9" y="382.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.09%)</title><rect x="331.9" y="371.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="334.9" y="382.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (58 samples, 4.94%)</title><rect x="332.9" y="371.0" width="58.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="335.9" y="382.0">rocksd..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.09%)</title><rect x="332.9" y="355.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="335.9" y="366.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.09%)</title><rect x="332.9" y="339.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="335.9" y="350.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (51 samples, 4.35%)</title><rect x="333.9" y="355.0" width="51.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="336.9" y="366.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (51 samples, 4.35%)</title><rect x="333.9" y="339.0" width="51.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="336.9" y="350.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (50 samples, 4.26%)</title><rect x="333.9" y="323.0" width="50.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="336.9" y="334.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (50 samples, 4.26%)</title><rect x="333.9" y="307.0" width="50.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="336.9" y="318.0">rocks..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.09%)</title><rect x="333.9" y="291.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="336.9" y="302.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.09%)</title><rect x="334.9" y="291.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="337.9" y="302.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.09%)</title><rect x="335.9" y="291.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="338.9" y="302.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.09%)</title><rect x="336.9" y="291.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="339.9" y="302.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (45 samples, 3.84%)</title><rect x="337.9" y="291.0" width="45.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="340.9" y="302.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.09%)</title><rect x="337.9" y="275.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="340.9" y="286.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.09%)</title><rect x="339.0" y="275.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="342.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (3 samples, 0.26%)</title><rect x="340.0" y="275.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="343.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (3 samples, 0.26%)</title><rect x="340.0" y="259.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="343.0" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.09%)</title><rect x="343.0" y="275.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="346.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.09%)</title><rect x="343.0" y="259.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="346.0" y="270.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.09%)</title><rect x="344.0" y="275.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="347.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (9 samples, 0.77%)</title><rect x="345.0" y="275.0" width="9.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="348.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (8 samples, 0.68%)</title><rect x="346.0" y="259.0" width="8.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="349.0" y="270.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (8 samples, 0.68%)</title><rect x="346.0" y="243.0" width="8.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="349.0" y="254.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (7 samples, 0.60%)</title><rect x="347.0" y="227.0" width="7.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="350.0" y="238.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.17%)</title><rect x="349.0" y="211.0" width="2.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="352.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.26%)</title><rect x="351.0" y="211.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="354.0" y="222.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.09%)</title><rect x="353.0" y="195.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="356.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) [clone .plt] (1 samples, 0.09%)</title><rect x="354.0" y="275.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="357.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.09%)</title><rect x="355.0" y="275.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="358.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.09%)</title><rect x="356.1" y="275.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="359.1" y="286.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (26 samples, 2.22%)</title><rect x="357.1" y="275.0" width="26.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="360.1" y="286.0">r..</text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (25 samples, 2.13%)</title><rect x="358.1" y="259.0" width="25.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="361.1" y="270.0">r..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (22 samples, 1.88%)</title><rect x="359.1" y="243.0" width="22.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="362.1" y="254.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="360.1" y="227.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="363.1" y="238.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.17%)</title><rect x="361.1" y="227.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="364.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const (1 samples, 0.09%)</title><rect x="363.1" y="227.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="366.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (11 samples, 0.94%)</title><rect x="364.1" y="227.0" width="11.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="367.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (11 samples, 0.94%)</title><rect x="364.1" y="211.0" width="11.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="367.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (10 samples, 0.85%)</title><rect x="364.1" y="195.0" width="10.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="367.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&amp;, char*) (1 samples, 0.09%)</title><rect x="364.1" y="179.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="367.1" y="190.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (1 samples, 0.09%)</title><rect x="365.1" y="179.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="368.1" y="190.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (1 samples, 0.09%)</title><rect x="365.1" y="163.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="368.1" y="174.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (1 samples, 0.09%)</title><rect x="365.1" y="147.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="368.1" y="158.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (1 samples, 0.09%)</title><rect x="365.1" y="131.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="368.1" y="142.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (1 samples, 0.09%)</title><rect x="365.1" y="115.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="368.1" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="365.1" y="99.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="368.1" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="365.1" y="83.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="368.1" y="94.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (1 samples, 0.09%)</title><rect x="365.1" y="67.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="368.1" y="78.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="365.1" y="51.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="368.1" y="62.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (7 samples, 0.60%)</title><rect x="366.1" y="179.0" width="7.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="369.1" y="190.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (7 samples, 0.60%)</title><rect x="366.1" y="163.0" width="7.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="369.1" y="174.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (1 samples, 0.09%)</title><rect x="368.1" y="147.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="371.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (4 samples, 0.34%)</title><rect x="369.1" y="147.0" width="4.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="372.1" y="158.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="370.1" y="131.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="373.1" y="142.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="371.1" y="131.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="374.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.09%)</title><rect x="372.1" y="131.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="375.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.09%)</title><rect x="372.1" y="115.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="375.1" y="126.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockContents*, rocksdb::CompressionType, rocksdb::UncompressionDict const&amp;, rocksdb::MemoryAllocator*, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.09%)</title><rect x="373.2" y="179.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="376.2" y="190.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (1 samples, 0.09%)</title><rect x="373.2" y="163.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="376.2" y="174.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (1 samples, 0.09%)</title><rect x="373.2" y="147.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="376.2" y="158.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.09%)</title><rect x="373.2" y="131.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="376.2" y="142.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.09%)</title><rect x="374.2" y="195.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="377.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (3 samples, 0.26%)</title><rect x="375.2" y="227.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="378.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (3 samples, 0.26%)</title><rect x="375.2" y="211.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="378.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.09%)</title><rect x="375.2" y="195.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="378.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.17%)</title><rect x="376.2" y="195.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="379.2" y="206.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.09%)</title><rect x="377.2" y="179.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="380.2" y="190.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.17%)</title><rect x="378.2" y="227.0" width="2.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="381.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.09%)</title><rect x="380.2" y="227.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="383.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (1 samples, 0.09%)</title><rect x="381.2" y="243.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="384.2" y="254.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (1 samples, 0.09%)</title><rect x="382.2" y="243.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="385.2" y="254.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.09%)</title><rect x="383.2" y="291.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="386.2" y="302.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (1 samples, 0.09%)</title><rect x="384.2" y="323.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="387.2" y="334.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (6 samples, 0.51%)</title><rect x="385.2" y="355.0" width="6.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="388.2" y="366.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.09%)</title><rect x="385.2" y="339.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="388.2" y="350.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.09%)</title><rect x="386.2" y="339.0" width="1.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="389.2" y="350.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.34%)</title><rect x="387.2" y="339.0" width="4.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="390.2" y="350.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.09%)</title><rect x="387.2" y="323.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="390.2" y="334.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.26%)</title><rect x="388.2" y="323.0" width="3.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="391.2" y="334.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.17%)</title><rect x="389.2" y="307.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="392.2" y="318.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.09%)</title><rect x="389.2" y="291.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="392.2" y="302.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.09%)</title><rect x="390.3" y="291.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="393.3" y="302.0"></text>
</g>
<g>
<title>[async_workers-1 tid=240136] (108 samples, 9.21%)</title><rect x="391.3" y="547.0" width="108.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="394.3" y="558.0">[async_worker..</text>
</g>
<g>
<title>java/lang/Thread.run (108 samples, 9.21%)</title><rect x="391.3" y="531.0" width="108.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="394.3" y="542.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (108 samples, 9.21%)</title><rect x="391.3" y="515.0" width="108.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.3" y="526.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (108 samples, 9.21%)</title><rect x="391.3" y="499.0" width="108.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="394.3" y="510.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (36 samples, 3.07%)</title><rect x="391.3" y="483.0" width="36.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.3" y="494.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (34 samples, 2.90%)</title><rect x="393.3" y="467.0" width="34.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="396.3" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (26 samples, 2.22%)</title><rect x="394.3" y="451.0" width="26.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="397.3" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.34%)</title><rect x="394.3" y="435.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="397.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (4 samples, 0.34%)</title><rect x="394.3" y="419.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="397.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.09%)</title><rect x="394.3" y="403.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (3 samples, 0.26%)</title><rect x="395.3" y="403.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (22 samples, 1.88%)</title><rect x="398.3" y="435.0" width="22.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="401.3" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (22 samples, 1.88%)</title><rect x="398.3" y="419.0" width="22.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="401.3" y="430.0">j..</text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.68%)</title><rect x="400.3" y="403.0" width="8.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="403.3" y="414.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.09%)</title><rect x="401.3" y="387.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="404.3" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.26%)</title><rect x="402.3" y="387.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="405.3" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.09%)</title><rect x="405.3" y="387.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="408.3" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="406.4" y="387.0" width="1.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="409.4" y="398.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="407.4" y="387.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="410.4" y="398.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.94%)</title><rect x="408.4" y="403.0" width="11.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="411.4" y="414.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.09%)</title><rect x="408.4" y="387.0" width="1.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="411.4" y="398.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (10 samples, 0.85%)</title><rect x="409.4" y="387.0" width="10.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="412.4" y="398.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.09%)</title><rect x="419.4" y="403.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="422.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.09%)</title><rect x="420.4" y="451.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="423.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.09%)</title><rect x="420.4" y="435.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="423.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.09%)</title><rect x="420.4" y="419.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.09%)</title><rect x="420.4" y="403.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="423.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.09%)</title><rect x="420.4" y="387.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="423.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.09%)</title><rect x="420.4" y="371.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="423.4" y="382.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.09%)</title><rect x="420.4" y="355.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="423.4" y="366.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="420.4" y="339.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="423.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.51%)</title><rect x="421.4" y="451.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.51%)</title><rect x="421.4" y="435.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.51%)</title><rect x="421.4" y="419.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="424.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.51%)</title><rect x="421.4" y="403.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.51%)</title><rect x="421.4" y="387.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.4" y="398.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.09%)</title><rect x="421.4" y="371.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="424.4" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.26%)</title><rect x="422.4" y="371.0" width="3.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="425.4" y="382.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.09%)</title><rect x="422.4" y="355.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="425.4" y="366.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.09%)</title><rect x="423.5" y="355.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="426.5" y="366.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="424.5" y="355.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="427.5" y="366.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.17%)</title><rect x="425.5" y="371.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="428.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.run (72 samples, 6.14%)</title><rect x="427.5" y="483.0" width="72.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.5" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (72 samples, 6.14%)</title><rect x="427.5" y="467.0" width="72.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.5" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.getInternal (72 samples, 6.14%)</title><rect x="427.5" y="451.0" width="72.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.5" y="462.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 0.77%)</title><rect x="427.5" y="435.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.17%)</title><rect x="427.5" y="419.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.5" y="430.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.17%)</title><rect x="427.5" y="403.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="430.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.17%)</title><rect x="427.5" y="387.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.17%)</title><rect x="427.5" y="371.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.5" y="382.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.17%)</title><rect x="427.5" y="355.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.5" y="366.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.17%)</title><rect x="427.5" y="339.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="430.5" y="350.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.09%)</title><rect x="428.5" y="323.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="431.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 0.60%)</title><rect x="429.5" y="419.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="432.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.17%)</title><rect x="429.5" y="403.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="432.5" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.17%)</title><rect x="429.5" y="387.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="432.5" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.09%)</title><rect x="430.5" y="371.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="433.5" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.43%)</title><rect x="431.5" y="403.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="434.5" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.43%)</title><rect x="431.5" y="387.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="434.5" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.43%)</title><rect x="431.5" y="371.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="434.5" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.43%)</title><rect x="431.5" y="355.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="434.5" y="366.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.09%)</title><rect x="431.5" y="339.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="434.5" y="350.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.09%)</title><rect x="431.5" y="323.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="434.5" y="334.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.09%)</title><rect x="431.5" y="307.0" width="1.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="434.5" y="318.0"></text>
</g>
<g>
<title>__libc_send (4 samples, 0.34%)</title><rect x="432.5" y="339.0" width="4.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="435.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (3 samples, 0.26%)</title><rect x="436.5" y="435.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="439.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.17%)</title><rect x="436.5" y="419.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="439.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.17%)</title><rect x="436.5" y="403.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.17%)</title><rect x="436.5" y="387.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.5" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.17%)</title><rect x="436.5" y="371.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="439.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.09%)</title><rect x="438.5" y="419.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="441.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="438.5" y="403.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="441.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="438.5" y="387.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="441.5" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="438.5" y="371.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="441.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.09%)</title><rect x="438.5" y="355.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="441.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.09%)</title><rect x="438.5" y="339.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="441.5" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.09%)</title><rect x="438.5" y="323.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="441.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (1 samples, 0.09%)</title><rect x="439.5" y="435.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="442.5" y="446.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.09%)</title><rect x="439.5" y="419.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="442.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (59 samples, 5.03%)</title><rect x="440.6" y="435.0" width="59.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="443.6" y="446.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (59 samples, 5.03%)</title><rect x="440.6" y="419.0" width="59.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="443.6" y="430.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (59 samples, 5.03%)</title><rect x="440.6" y="403.0" width="59.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="443.6" y="414.0">org/ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (54 samples, 4.60%)</title><rect x="440.6" y="387.0" width="54.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="443.6" y="398.0">Java_..</text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.09%)</title><rect x="440.6" y="371.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="443.6" y="382.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (52 samples, 4.43%)</title><rect x="441.6" y="371.0" width="52.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="444.6" y="382.0">rocks..</text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.09%)</title><rect x="441.6" y="355.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="444.6" y="366.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.09%)</title><rect x="442.6" y="355.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="445.6" y="366.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="443.6" y="355.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="446.6" y="366.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (44 samples, 3.75%)</title><rect x="444.6" y="355.0" width="44.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="447.6" y="366.0">rock..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (43 samples, 3.67%)</title><rect x="444.6" y="339.0" width="43.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="447.6" y="350.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (43 samples, 3.67%)</title><rect x="444.6" y="323.0" width="43.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="447.6" y="334.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (43 samples, 3.67%)</title><rect x="444.6" y="307.0" width="43.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="447.6" y="318.0">rock..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.09%)</title><rect x="444.6" y="291.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="447.6" y="302.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (41 samples, 3.50%)</title><rect x="445.6" y="291.0" width="41.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="448.6" y="302.0">roc..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="446.6" y="275.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="449.6" y="286.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.09%)</title><rect x="447.6" y="275.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="450.6" y="286.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.09%)</title><rect x="447.6" y="259.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="450.6" y="270.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.09%)</title><rect x="447.6" y="243.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="450.6" y="254.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (7 samples, 0.60%)</title><rect x="448.6" y="275.0" width="7.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="451.6" y="286.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="448.6" y="259.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="451.6" y="270.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (6 samples, 0.51%)</title><rect x="449.6" y="259.0" width="6.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="452.6" y="270.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (6 samples, 0.51%)</title><rect x="449.6" y="243.0" width="6.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="452.6" y="254.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (6 samples, 0.51%)</title><rect x="449.6" y="227.0" width="6.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="452.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="454.6" y="211.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="457.6" y="222.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.09%)</title><rect x="454.6" y="195.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="457.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.09%)</title><rect x="455.6" y="275.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="458.6" y="286.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.09%)</title><rect x="456.6" y="275.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="459.6" y="286.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (29 samples, 2.47%)</title><rect x="457.7" y="275.0" width="29.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="460.7" y="286.0">ro..</text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.09%)</title><rect x="459.7" y="259.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="462.7" y="270.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (26 samples, 2.22%)</title><rect x="460.7" y="259.0" width="26.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="463.7" y="270.0">r..</text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.09%)</title><rect x="460.7" y="243.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="463.7" y="254.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (25 samples, 2.13%)</title><rect x="461.7" y="243.0" width="25.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="464.7" y="254.0">r..</text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.09%)</title><rect x="464.7" y="227.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="467.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (8 samples, 0.68%)</title><rect x="465.7" y="227.0" width="8.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="468.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (1 samples, 0.09%)</title><rect x="465.7" y="211.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="468.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.09%)</title><rect x="466.7" y="211.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="469.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (6 samples, 0.51%)</title><rect x="467.7" y="211.0" width="6.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="470.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (5 samples, 0.43%)</title><rect x="468.7" y="195.0" width="5.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="471.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.09%)</title><rect x="468.7" y="179.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="471.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (4 samples, 0.34%)</title><rect x="469.7" y="179.0" width="4.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="472.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (4 samples, 0.34%)</title><rect x="469.7" y="163.0" width="4.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="472.7" y="174.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits@plt (1 samples, 0.09%)</title><rect x="469.7" y="147.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="472.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.17%)</title><rect x="470.7" y="147.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="473.7" y="158.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="470.7" y="131.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="473.7" y="142.0"></text>
</g>
<g>
<title>malloc_usable_size (1 samples, 0.09%)</title><rect x="471.7" y="131.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="474.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (1 samples, 0.09%)</title><rect x="472.7" y="147.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="475.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (7 samples, 0.60%)</title><rect x="473.8" y="227.0" width="7.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="476.8" y="238.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="474.8" y="211.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="477.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (3 samples, 0.26%)</title><rect x="475.8" y="211.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="478.8" y="222.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="475.8" y="195.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="478.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.09%)</title><rect x="476.8" y="195.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="479.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="477.8" y="195.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="480.8" y="206.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="477.8" y="179.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="480.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.09%)</title><rect x="478.8" y="211.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="481.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="479.8" y="211.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="482.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (6 samples, 0.51%)</title><rect x="480.8" y="227.0" width="6.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="483.8" y="238.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="484.8" y="211.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="487.8" y="222.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="485.8" y="211.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="488.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.09%)</title><rect x="486.8" y="291.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="489.8" y="302.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) [clone .plt] (1 samples, 0.09%)</title><rect x="487.8" y="339.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="490.8" y="350.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (4 samples, 0.34%)</title><rect x="488.8" y="355.0" width="4.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="491.8" y="366.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.34%)</title><rect x="488.8" y="339.0" width="4.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="491.8" y="350.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.09%)</title><rect x="488.8" y="323.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="491.8" y="334.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.26%)</title><rect x="489.8" y="323.0" width="3.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="492.8" y="334.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.26%)</title><rect x="489.8" y="307.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="492.8" y="318.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.09%)</title><rect x="490.9" y="291.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="493.9" y="302.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.09%)</title><rect x="490.9" y="275.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="493.9" y="286.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="491.9" y="291.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="494.9" y="302.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.09%)</title><rect x="492.9" y="355.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="495.9" y="366.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.09%)</title><rect x="493.9" y="371.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="496.9" y="382.0"></text>
</g>
<g>
<title>malloc (4 samples, 0.34%)</title><rect x="494.9" y="387.0" width="4.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="497.9" y="398.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.09%)</title><rect x="498.9" y="387.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="501.9" y="398.0"></text>
</g>
<g>
<title>[async_workers-2 tid=240142] (106 samples, 9.04%)</title><rect x="499.9" y="547.0" width="106.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="502.9" y="558.0">[async_worker..</text>
</g>
<g>
<title>java/lang/Thread.run (106 samples, 9.04%)</title><rect x="499.9" y="531.0" width="106.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="502.9" y="542.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (106 samples, 9.04%)</title><rect x="499.9" y="515.0" width="106.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="502.9" y="526.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (106 samples, 9.04%)</title><rect x="499.9" y="499.0" width="106.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="502.9" y="510.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (28 samples, 2.39%)</title><rect x="500.9" y="483.0" width="28.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.9" y="494.0">ja..</text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.09%)</title><rect x="500.9" y="467.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="503.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (27 samples, 2.30%)</title><rect x="501.9" y="467.0" width="27.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="504.9" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (25 samples, 2.13%)</title><rect x="502.9" y="451.0" width="25.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="505.9" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.09%)</title><rect x="503.9" y="435.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.09%)</title><rect x="503.9" y="419.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="506.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.09%)</title><rect x="503.9" y="403.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="503.9" y="387.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="506.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="503.9" y="371.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="506.9" y="382.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.09%)</title><rect x="503.9" y="355.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="506.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (23 samples, 1.96%)</title><rect x="504.9" y="435.0" width="23.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="507.9" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (23 samples, 1.96%)</title><rect x="504.9" y="419.0" width="23.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="507.9" y="430.0">j..</text>
</g>
<g>
<title>Unsafe_Park (16 samples, 1.36%)</title><rect x="505.9" y="403.0" width="16.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="508.9" y="414.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.09%)</title><rect x="508.0" y="387.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="511.0" y="398.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.09%)</title><rect x="509.0" y="387.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="512.0" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.09%)</title><rect x="510.0" y="387.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="513.0" y="398.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.09%)</title><rect x="510.0" y="371.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="513.0" y="382.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.09%)</title><rect x="510.0" y="355.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="513.0" y="366.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (2 samples, 0.17%)</title><rect x="511.0" y="387.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="514.0" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (8 samples, 0.68%)</title><rect x="513.0" y="387.0" width="8.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="516.0" y="398.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.09%)</title><rect x="521.0" y="387.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="524.0" y="398.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.43%)</title><rect x="522.0" y="403.0" width="5.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="525.0" y="414.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.26%)</title><rect x="522.0" y="387.0" width="3.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="525.0" y="398.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.17%)</title><rect x="525.1" y="387.0" width="2.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="528.1" y="398.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.09%)</title><rect x="527.1" y="403.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="530.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.09%)</title><rect x="528.1" y="451.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.09%)</title><rect x="528.1" y="435.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="531.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.09%)</title><rect x="528.1" y="419.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="528.1" y="403.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.run (77 samples, 6.56%)</title><rect x="529.1" y="483.0" width="77.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.1" y="494.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (77 samples, 6.56%)</title><rect x="529.1" y="467.0" width="77.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="532.1" y="478.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.getInternal (77 samples, 6.56%)</title><rect x="529.1" y="451.0" width="77.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="532.1" y="462.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.17%)</title><rect x="529.1" y="435.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="532.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.09%)</title><rect x="530.1" y="419.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.09%)</title><rect x="530.1" y="403.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="533.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.09%)</title><rect x="530.1" y="387.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="533.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 0.77%)</title><rect x="531.1" y="435.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.09%)</title><rect x="531.1" y="419.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="534.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.09%)</title><rect x="531.1" y="403.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="531.1" y="387.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.09%)</title><rect x="531.1" y="371.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="534.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.51%)</title><rect x="532.1" y="419.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.26%)</title><rect x="532.1" y="403.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.1" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.26%)</title><rect x="532.1" y="387.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="535.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.26%)</title><rect x="535.1" y="403.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="538.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.26%)</title><rect x="535.1" y="387.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="538.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.26%)</title><rect x="535.1" y="371.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="538.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.26%)</title><rect x="535.1" y="355.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="538.1" y="366.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.09%)</title><rect x="536.1" y="339.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="539.1" y="350.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.09%)</title><rect x="537.1" y="339.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="540.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (2 samples, 0.17%)</title><rect x="538.1" y="419.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="541.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (3 samples, 0.26%)</title><rect x="540.1" y="435.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="543.1" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.26%)</title><rect x="540.1" y="419.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="543.1" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.26%)</title><rect x="540.1" y="403.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.26%)</title><rect x="540.1" y="387.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="543.1" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.26%)</title><rect x="540.1" y="371.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.1" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="541.2" y="355.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="544.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.09%)</title><rect x="541.2" y="339.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="544.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.09%)</title><rect x="541.2" y="323.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="544.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.09%)</title><rect x="542.2" y="355.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="545.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (63 samples, 5.37%)</title><rect x="543.2" y="435.0" width="63.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="546.2" y="446.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (63 samples, 5.37%)</title><rect x="543.2" y="419.0" width="63.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.2" y="430.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (63 samples, 5.37%)</title><rect x="543.2" y="403.0" width="63.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.2" y="414.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (61 samples, 5.20%)</title><rect x="544.2" y="387.0" width="61.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="547.2" y="398.0">Java_o..</text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.09%)</title><rect x="544.2" y="371.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="547.2" y="382.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (60 samples, 5.12%)</title><rect x="545.2" y="371.0" width="60.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="548.2" y="382.0">rocksd..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.09%)</title><rect x="546.2" y="355.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="549.2" y="366.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.26%)</title><rect x="547.2" y="355.0" width="3.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="550.2" y="366.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.09%)</title><rect x="549.2" y="339.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="552.2" y="350.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.09%)</title><rect x="550.2" y="355.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="553.2" y="366.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (43 samples, 3.67%)</title><rect x="551.2" y="355.0" width="43.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="554.2" y="366.0">rock..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (43 samples, 3.67%)</title><rect x="551.2" y="339.0" width="43.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="554.2" y="350.0">rock..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (3 samples, 0.26%)</title><rect x="551.2" y="323.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="554.2" y="334.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (3 samples, 0.26%)</title><rect x="551.2" y="307.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="554.2" y="318.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="551.2" y="291.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="554.2" y="302.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="552.2" y="291.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="555.2" y="302.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="553.2" y="291.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="556.2" y="302.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (39 samples, 3.32%)</title><rect x="554.2" y="323.0" width="39.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="557.2" y="334.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (38 samples, 3.24%)</title><rect x="555.2" y="307.0" width="38.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="558.2" y="318.0">roc..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="555.2" y="291.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="558.2" y="302.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (1 samples, 0.09%)</title><rect x="556.2" y="291.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="559.2" y="302.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (36 samples, 3.07%)</title><rect x="557.2" y="291.0" width="36.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="560.2" y="302.0">roc..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.17%)</title><rect x="558.3" y="275.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="561.3" y="286.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.09%)</title><rect x="559.3" y="259.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="562.3" y="270.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (10 samples, 0.85%)</title><rect x="560.3" y="275.0" width="10.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="563.3" y="286.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (2 samples, 0.17%)</title><rect x="560.3" y="259.0" width="2.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="563.3" y="270.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (8 samples, 0.68%)</title><rect x="562.3" y="259.0" width="8.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="565.3" y="270.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (8 samples, 0.68%)</title><rect x="562.3" y="243.0" width="8.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="565.3" y="254.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="562.3" y="227.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="565.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (7 samples, 0.60%)</title><rect x="563.3" y="227.0" width="7.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="566.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.17%)</title><rect x="568.3" y="211.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="571.3" y="222.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="568.3" y="195.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="571.3" y="206.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.09%)</title><rect x="569.3" y="195.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="572.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.09%)</title><rect x="570.3" y="275.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="573.3" y="286.0"></text>
</g>
<g>
<title>rocksdb::PinnedIteratorsManager::~PinnedIteratorsManager() (1 samples, 0.09%)</title><rect x="571.3" y="275.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="574.3" y="286.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (21 samples, 1.79%)</title><rect x="572.3" y="275.0" width="21.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="575.3" y="286.0">r..</text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (20 samples, 1.71%)</title><rect x="573.3" y="259.0" width="20.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="576.3" y="270.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (18 samples, 1.53%)</title><rect x="573.3" y="243.0" width="18.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="576.3" y="254.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="573.3" y="227.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="576.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.09%)</title><rect x="574.3" y="227.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="577.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (1 samples, 0.09%)</title><rect x="575.4" y="227.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="578.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::DelegateCleanupsTo(rocksdb::Cleanable*) (1 samples, 0.09%)</title><rect x="576.4" y="227.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="579.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.09%)</title><rect x="577.4" y="227.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="580.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (1 samples, 0.09%)</title><rect x="578.4" y="227.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="581.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (1 samples, 0.09%)</title><rect x="578.4" y="211.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="581.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (1 samples, 0.09%)</title><rect x="578.4" y="195.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="581.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.09%)</title><rect x="578.4" y="179.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="581.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.09%)</title><rect x="578.4" y="163.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="581.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (4 samples, 0.34%)</title><rect x="579.4" y="227.0" width="4.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="582.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (2 samples, 0.17%)</title><rect x="581.4" y="211.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="584.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.17%)</title><rect x="581.4" y="195.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="584.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (1 samples, 0.09%)</title><rect x="583.4" y="227.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="586.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (5 samples, 0.43%)</title><rect x="584.4" y="227.0" width="5.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="587.4" y="238.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.09%)</title><rect x="587.4" y="211.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="590.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.09%)</title><rect x="588.4" y="211.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="591.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.09%)</title><rect x="588.4" y="195.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="591.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (2 samples, 0.17%)</title><rect x="589.4" y="227.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="592.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (1 samples, 0.09%)</title><rect x="591.4" y="243.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="594.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="592.5" y="243.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="595.5" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (1 samples, 0.09%)</title><rect x="593.5" y="323.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="596.5" y="334.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (10 samples, 0.85%)</title><rect x="594.5" y="355.0" width="10.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="597.5" y="366.0"></text>
</g>
<g>
<title>WeakPreserveExceptionMark::WeakPreserveExceptionMark(Thread*) (1 samples, 0.09%)</title><rect x="594.5" y="339.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="597.5" y="350.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.09%)</title><rect x="595.5" y="339.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="598.5" y="350.0"></text>
</g>
<g>
<title>jni_NewByteArray (6 samples, 0.51%)</title><rect x="596.5" y="339.0" width="6.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="599.5" y="350.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.09%)</title><rect x="596.5" y="323.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="599.5" y="334.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.43%)</title><rect x="597.5" y="323.0" width="5.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="600.5" y="334.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.34%)</title><rect x="598.5" y="307.0" width="4.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="601.5" y="318.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.34%)</title><rect x="598.5" y="291.0" width="4.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="601.5" y="302.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.09%)</title><rect x="598.5" y="275.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="601.5" y="286.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.17%)</title><rect x="599.5" y="275.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="602.5" y="286.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.09%)</title><rect x="601.5" y="275.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="604.5" y="286.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.17%)</title><rect x="602.5" y="339.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="605.5" y="350.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (2 samples, 0.17%)</title><rect x="602.5" y="323.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="605.5" y="334.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.09%)</title><rect x="604.5" y="355.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="607.5" y="366.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.09%)</title><rect x="605.5" y="387.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="608.5" y="398.0"></text>
</g>
<g>
<title>[async_workers-3 tid=240135] (112 samples, 9.55%)</title><rect x="606.5" y="547.0" width="112.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="609.5" y="558.0">[async_workers..</text>
</g>
<g>
<title>java/lang/Thread.run (112 samples, 9.55%)</title><rect x="606.5" y="531.0" width="112.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="609.5" y="542.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (112 samples, 9.55%)</title><rect x="606.5" y="515.0" width="112.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.5" y="526.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (112 samples, 9.55%)</title><rect x="606.5" y="499.0" width="112.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="609.5" y="510.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (29 samples, 2.47%)</title><rect x="606.5" y="483.0" width="29.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.5" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (26 samples, 2.22%)</title><rect x="609.6" y="467.0" width="26.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.6" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (24 samples, 2.05%)</title><rect x="609.6" y="451.0" width="24.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.6" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.09%)</title><rect x="609.6" y="435.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="612.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.09%)</title><rect x="609.6" y="419.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="612.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.09%)</title><rect x="609.6" y="403.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="612.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.26%)</title><rect x="610.6" y="435.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.17%)</title><rect x="611.6" y="419.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="614.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.17%)</title><rect x="611.6" y="403.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.17%)</title><rect x="611.6" y="387.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="614.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.17%)</title><rect x="611.6" y="371.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="614.6" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.09%)</title><rect x="611.6" y="355.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="614.6" y="366.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.09%)</title><rect x="611.6" y="339.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="614.6" y="350.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.09%)</title><rect x="612.6" y="355.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="615.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.09%)</title><rect x="613.6" y="435.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="616.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.09%)</title><rect x="613.6" y="419.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="616.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (19 samples, 1.62%)</title><rect x="614.6" y="435.0" width="19.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="617.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (19 samples, 1.62%)</title><rect x="614.6" y="419.0" width="19.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.6" y="430.0"></text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.85%)</title><rect x="615.6" y="403.0" width="10.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="618.6" y="414.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.17%)</title><rect x="616.6" y="387.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="619.6" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.09%)</title><rect x="616.6" y="371.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="619.6" y="382.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="617.6" y="371.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="620.6" y="382.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (6 samples, 0.51%)</title><rect x="618.6" y="387.0" width="6.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="621.6" y="398.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.09%)</title><rect x="624.6" y="387.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="627.6" y="398.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.68%)</title><rect x="625.7" y="403.0" width="8.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="628.7" y="414.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (8 samples, 0.68%)</title><rect x="625.7" y="387.0" width="8.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="628.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.17%)</title><rect x="633.7" y="451.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.17%)</title><rect x="633.7" y="435.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="636.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.17%)</title><rect x="633.7" y="419.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.17%)</title><rect x="633.7" y="403.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="636.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.17%)</title><rect x="633.7" y="387.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="636.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.17%)</title><rect x="633.7" y="371.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="636.7" y="382.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.09%)</title><rect x="633.7" y="355.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="636.7" y="366.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.09%)</title><rect x="633.7" y="339.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="636.7" y="350.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="634.7" y="355.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="637.7" y="366.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="634.7" y="339.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="637.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.run (83 samples, 7.08%)</title><rect x="635.7" y="483.0" width="83.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="638.7" y="494.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (83 samples, 7.08%)</title><rect x="635.7" y="467.0" width="83.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.7" y="478.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.getInternal (83 samples, 7.08%)</title><rect x="635.7" y="451.0" width="83.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.7" y="462.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8 samples, 0.68%)</title><rect x="635.7" y="435.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="638.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.17%)</title><rect x="635.7" y="419.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.17%)</title><rect x="635.7" y="403.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="636.7" y="387.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="639.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.09%)</title><rect x="636.7" y="371.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="639.7" y="382.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.09%)</title><rect x="636.7" y="355.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.7" y="366.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.09%)</title><rect x="636.7" y="339.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.43%)</title><rect x="637.7" y="419.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="640.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.26%)</title><rect x="637.7" y="403.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.7" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="638.7" y="387.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="641.7" y="398.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="638.7" y="371.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="641.7" y="382.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.09%)</title><rect x="639.7" y="387.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.7" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.09%)</title><rect x="639.7" y="371.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.7" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.17%)</title><rect x="640.7" y="403.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="643.7" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.17%)</title><rect x="640.7" y="387.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="643.7" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.17%)</title><rect x="640.7" y="371.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.7" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.17%)</title><rect x="640.7" y="355.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.7" y="366.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.17%)</title><rect x="640.7" y="339.0" width="2.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="643.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="642.8" y="419.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (1 samples, 0.09%)</title><rect x="643.8" y="435.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.09%)</title><rect x="643.8" y="419.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="646.8" y="430.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.09%)</title><rect x="643.8" y="403.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (3 samples, 0.26%)</title><rect x="644.8" y="435.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="647.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.26%)</title><rect x="644.8" y="419.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="647.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.26%)</title><rect x="644.8" y="403.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.26%)</title><rect x="644.8" y="387.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.26%)</title><rect x="644.8" y="371.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="647.8" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="644.8" y="355.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.8" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.09%)</title><rect x="644.8" y="339.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="647.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.09%)</title><rect x="644.8" y="323.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.8" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.09%)</title><rect x="644.8" y="307.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.8" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.09%)</title><rect x="645.8" y="355.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.8" y="366.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="646.8" y="355.0" width="1.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="649.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (71 samples, 6.05%)</title><rect x="647.8" y="435.0" width="71.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.8" y="446.0">ru/mail/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (70 samples, 5.97%)</title><rect x="647.8" y="419.0" width="70.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.8" y="430.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (70 samples, 5.97%)</title><rect x="647.8" y="403.0" width="70.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="650.8" y="414.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (68 samples, 5.80%)</title><rect x="647.8" y="387.0" width="68.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="650.8" y="398.0">Java_or..</text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="648.8" y="371.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="651.8" y="382.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (66 samples, 5.63%)</title><rect x="649.8" y="371.0" width="66.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="652.8" y="382.0">rocksdb..</text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.09%)</title><rect x="650.8" y="355.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="653.8" y="366.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.09%)</title><rect x="651.8" y="355.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="654.8" y="366.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (56 samples, 4.77%)</title><rect x="652.8" y="355.0" width="56.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="655.8" y="366.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (56 samples, 4.77%)</title><rect x="652.8" y="339.0" width="56.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="655.8" y="350.0">rocksd..</text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseCacheHandle(void*, void*) (1 samples, 0.09%)</title><rect x="654.8" y="323.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="657.8" y="334.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.09%)</title><rect x="655.8" y="323.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="658.8" y="334.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (52 samples, 4.43%)</title><rect x="656.8" y="323.0" width="52.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="659.8" y="334.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (52 samples, 4.43%)</title><rect x="656.8" y="307.0" width="52.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="659.8" y="318.0">rocks..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.09%)</title><rect x="656.8" y="291.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="659.8" y="302.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (2 samples, 0.17%)</title><rect x="657.8" y="291.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="660.8" y="302.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (48 samples, 4.09%)</title><rect x="659.9" y="291.0" width="48.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="662.9" y="302.0">rock..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.09%)</title><rect x="659.9" y="275.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="662.9" y="286.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (15 samples, 1.28%)</title><rect x="660.9" y="275.0" width="15.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="663.9" y="286.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="660.9" y="259.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="663.9" y="270.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (14 samples, 1.19%)</title><rect x="661.9" y="259.0" width="14.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="664.9" y="270.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (13 samples, 1.11%)</title><rect x="662.9" y="243.0" width="13.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="665.9" y="254.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="662.9" y="227.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="665.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (12 samples, 1.02%)</title><rect x="663.9" y="227.0" width="12.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="666.9" y="238.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="668.9" y="211.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="671.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.51%)</title><rect x="669.9" y="211.0" width="6.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="672.9" y="222.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.09%)</title><rect x="671.9" y="195.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="674.9" y="206.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (3 samples, 0.26%)</title><rect x="672.9" y="195.0" width="3.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="675.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.09%)</title><rect x="676.0" y="275.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="679.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.09%)</title><rect x="677.0" y="275.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="680.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.09%)</title><rect x="678.0" y="275.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="681.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (29 samples, 2.47%)</title><rect x="679.0" y="275.0" width="29.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="682.0" y="286.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="679.0" y="259.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="682.0" y="270.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (28 samples, 2.39%)</title><rect x="680.0" y="259.0" width="28.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="683.0" y="270.0">ro..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (26 samples, 2.22%)</title><rect x="680.0" y="243.0" width="26.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="683.0" y="254.0">r..</text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.09%)</title><rect x="682.0" y="227.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="685.0" y="238.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (1 samples, 0.09%)</title><rect x="683.0" y="227.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="686.0" y="238.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (7 samples, 0.60%)</title><rect x="684.0" y="227.0" width="7.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="687.0" y="238.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.09%)</title><rect x="684.0" y="211.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="687.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (6 samples, 0.51%)</title><rect x="685.0" y="211.0" width="6.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="688.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (5 samples, 0.43%)</title><rect x="686.0" y="195.0" width="5.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="689.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (5 samples, 0.43%)</title><rect x="686.0" y="179.0" width="5.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="689.0" y="190.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (5 samples, 0.43%)</title><rect x="686.0" y="163.0" width="5.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="689.0" y="174.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (1 samples, 0.09%)</title><rect x="686.0" y="147.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="689.0" y="158.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetShard(int) (2 samples, 0.17%)</title><rect x="687.0" y="147.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="690.0" y="158.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.17%)</title><rect x="689.0" y="147.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="692.0" y="158.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.17%)</title><rect x="689.0" y="131.0" width="2.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="692.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (7 samples, 0.60%)</title><rect x="691.0" y="227.0" width="7.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="694.0" y="238.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="693.1" y="211.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="696.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (3 samples, 0.26%)</title><rect x="694.1" y="211.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="697.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (2 samples, 0.17%)</title><rect x="694.1" y="195.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="697.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="696.1" y="195.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="699.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="697.1" y="211.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="700.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (8 samples, 0.68%)</title><rect x="698.1" y="227.0" width="8.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="701.1" y="238.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.09%)</title><rect x="703.1" y="211.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="706.1" y="222.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.09%)</title><rect x="704.1" y="211.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="707.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.09%)</title><rect x="705.1" y="211.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="708.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) [clone .plt] (1 samples, 0.09%)</title><rect x="705.1" y="195.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="708.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.09%)</title><rect x="706.1" y="243.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="709.1" y="254.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (1 samples, 0.09%)</title><rect x="707.1" y="243.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="710.1" y="254.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.09%)</title><rect x="708.1" y="291.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="711.1" y="302.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (7 samples, 0.60%)</title><rect x="709.1" y="355.0" width="7.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="712.1" y="366.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.09%)</title><rect x="709.1" y="339.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="712.1" y="350.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.09%)</title><rect x="710.2" y="339.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="713.2" y="350.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.09%)</title><rect x="710.2" y="323.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="713.2" y="334.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.17%)</title><rect x="711.2" y="339.0" width="2.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="714.2" y="350.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.09%)</title><rect x="711.2" y="323.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="714.2" y="334.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.09%)</title><rect x="712.2" y="323.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="715.2" y="334.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.26%)</title><rect x="713.2" y="339.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="716.2" y="350.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="716.2" y="387.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="719.2" y="398.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.09%)</title><rect x="716.2" y="371.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="719.2" y="382.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.09%)</title><rect x="717.2" y="387.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="720.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (1 samples, 0.09%)</title><rect x="718.2" y="419.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="718.2" y="403.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="721.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="718.2" y="387.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="721.2" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="718.2" y="371.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="721.2" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="718.2" y="355.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="721.2" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="718.2" y="339.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="721.2" y="350.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="718.2" y="323.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="721.2" y="334.0"></text>
</g>
<g>
<title>[async_workers-4 tid=240138] (115 samples, 9.80%)</title><rect x="719.2" y="547.0" width="115.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="722.2" y="558.0">[async_workers..</text>
</g>
<g>
<title>java/lang/Thread.run (115 samples, 9.80%)</title><rect x="719.2" y="531.0" width="115.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="722.2" y="542.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (115 samples, 9.80%)</title><rect x="719.2" y="515.0" width="115.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="722.2" y="526.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (115 samples, 9.80%)</title><rect x="719.2" y="499.0" width="115.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.2" y="510.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.09%)</title><rect x="719.2" y="483.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.09%)</title><rect x="719.2" y="467.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="722.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.09%)</title><rect x="719.2" y="451.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="722.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (33 samples, 2.81%)</title><rect x="720.2" y="483.0" width="33.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.2" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (33 samples, 2.81%)</title><rect x="720.2" y="467.0" width="33.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="723.2" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (30 samples, 2.56%)</title><rect x="721.2" y="451.0" width="30.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="724.2" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.09%)</title><rect x="721.2" y="435.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="724.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.09%)</title><rect x="722.2" y="435.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.09%)</title><rect x="722.2" y="419.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="725.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.09%)</title><rect x="722.2" y="403.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (28 samples, 2.39%)</title><rect x="723.2" y="435.0" width="28.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="726.2" y="446.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (27 samples, 2.30%)</title><rect x="724.2" y="419.0" width="27.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="727.2" y="430.0">j..</text>
</g>
<g>
<title>Unsafe_Park (16 samples, 1.36%)</title><rect x="726.2" y="403.0" width="16.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="729.2" y="414.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (2 samples, 0.17%)</title><rect x="728.3" y="387.0" width="2.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="731.3" y="398.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.09%)</title><rect x="730.3" y="387.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="733.3" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.34%)</title><rect x="731.3" y="387.0" width="4.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="734.3" y="398.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="734.3" y="371.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="737.3" y="382.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.09%)</title><rect x="735.3" y="387.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="738.3" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="736.3" y="387.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="739.3" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (4 samples, 0.34%)</title><rect x="737.3" y="387.0" width="4.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="740.3" y="398.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.09%)</title><rect x="741.3" y="387.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="744.3" y="398.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.77%)</title><rect x="742.3" y="403.0" width="9.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="745.3" y="414.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.26%)</title><rect x="742.3" y="387.0" width="3.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="745.3" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.17%)</title><rect x="745.4" y="387.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="748.4" y="398.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (4 samples, 0.34%)</title><rect x="747.4" y="387.0" width="4.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="750.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.17%)</title><rect x="751.4" y="451.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.17%)</title><rect x="751.4" y="435.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.17%)</title><rect x="751.4" y="419.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.17%)</title><rect x="751.4" y="403.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="754.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="752.4" y="387.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="755.4" y="398.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.09%)</title><rect x="752.4" y="371.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="755.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.run (81 samples, 6.91%)</title><rect x="753.4" y="483.0" width="81.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.4" y="494.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (81 samples, 6.91%)</title><rect x="753.4" y="467.0" width="81.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.4" y="478.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.getInternal (81 samples, 6.91%)</title><rect x="753.4" y="451.0" width="81.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.4" y="462.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.51%)</title><rect x="753.4" y="435.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.43%)</title><rect x="753.4" y="419.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="756.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.26%)</title><rect x="753.4" y="403.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.4" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.26%)</title><rect x="753.4" y="387.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.4" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.17%)</title><rect x="753.4" y="371.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.17%)</title><rect x="753.4" y="355.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="756.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.09%)</title><rect x="755.4" y="371.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="758.4" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.17%)</title><rect x="756.4" y="403.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="759.4" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.17%)</title><rect x="756.4" y="387.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="759.4" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.17%)</title><rect x="756.4" y="371.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.4" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.17%)</title><rect x="756.4" y="355.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="759.4" y="366.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.09%)</title><rect x="756.4" y="339.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="759.4" y="350.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.09%)</title><rect x="757.4" y="339.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="760.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.09%)</title><rect x="758.4" y="419.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="761.4" y="430.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="758.4" y="403.0" width="1.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="761.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (1 samples, 0.09%)</title><rect x="759.4" y="435.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="762.4" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="759.4" y="419.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="762.4" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="759.4" y="403.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="759.4" y="387.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="762.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="759.4" y="371.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="762.4" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.09%)</title><rect x="759.4" y="355.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (74 samples, 6.31%)</title><rect x="760.5" y="435.0" width="74.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.5" y="446.0">ru/mail/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (70 samples, 5.97%)</title><rect x="760.5" y="419.0" width="70.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="763.5" y="430.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (70 samples, 5.97%)</title><rect x="760.5" y="403.0" width="70.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.5" y="414.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (67 samples, 5.71%)</title><rect x="760.5" y="387.0" width="67.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="763.5" y="398.0">Java_or..</text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (67 samples, 5.71%)</title><rect x="760.5" y="371.0" width="67.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="763.5" y="382.0">rocksdb..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.09%)</title><rect x="761.5" y="355.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="764.5" y="366.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.09%)</title><rect x="762.5" y="355.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="765.5" y="366.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.09%)</title><rect x="762.5" y="339.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="765.5" y="350.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (58 samples, 4.94%)</title><rect x="763.5" y="355.0" width="58.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="766.5" y="366.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (57 samples, 4.86%)</title><rect x="763.5" y="339.0" width="57.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="766.5" y="350.0">rocksd..</text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseCacheHandle(void*, void*) (1 samples, 0.09%)</title><rect x="764.5" y="323.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="767.5" y="334.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (55 samples, 4.69%)</title><rect x="765.5" y="323.0" width="55.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="768.5" y="334.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (54 samples, 4.60%)</title><rect x="765.5" y="307.0" width="54.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="768.5" y="318.0">rocks..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="766.5" y="291.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="769.5" y="302.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (1 samples, 0.09%)</title><rect x="767.5" y="291.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="770.5" y="302.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.09%)</title><rect x="768.5" y="291.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="771.5" y="302.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.09%)</title><rect x="769.5" y="291.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="772.5" y="302.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (47 samples, 4.01%)</title><rect x="770.5" y="291.0" width="47.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="773.5" y="302.0">rock..</text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.09%)</title><rect x="771.5" y="275.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="774.5" y="286.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="772.5" y="275.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="775.5" y="286.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.17%)</title><rect x="773.5" y="275.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="776.5" y="286.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.09%)</title><rect x="774.5" y="259.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="777.5" y="270.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.09%)</title><rect x="775.5" y="275.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="778.5" y="286.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (6 samples, 0.51%)</title><rect x="776.5" y="275.0" width="6.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="779.5" y="286.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (5 samples, 0.43%)</title><rect x="777.6" y="259.0" width="5.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="780.6" y="270.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (5 samples, 0.43%)</title><rect x="777.6" y="243.0" width="5.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="780.6" y="254.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (5 samples, 0.43%)</title><rect x="777.6" y="227.0" width="5.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="780.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="781.6" y="211.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="784.6" y="222.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.09%)</title><rect x="781.6" y="195.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="784.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.09%)</title><rect x="782.6" y="275.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="785.6" y="286.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (34 samples, 2.90%)</title><rect x="783.6" y="275.0" width="34.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="786.6" y="286.0">ro..</text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (1 samples, 0.09%)</title><rect x="784.6" y="259.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="787.6" y="270.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.09%)</title><rect x="785.6" y="259.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="788.6" y="270.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (31 samples, 2.64%)</title><rect x="786.6" y="259.0" width="31.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="789.6" y="270.0">ro..</text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.09%)</title><rect x="787.6" y="243.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="790.6" y="254.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (28 samples, 2.39%)</title><rect x="788.6" y="243.0" width="28.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="791.6" y="254.0">ro..</text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (2 samples, 0.17%)</title><rect x="790.6" y="227.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="793.6" y="238.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (1 samples, 0.09%)</title><rect x="791.6" y="211.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="794.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (1 samples, 0.09%)</title><rect x="792.6" y="227.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="795.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (9 samples, 0.77%)</title><rect x="793.6" y="227.0" width="9.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="796.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (7 samples, 0.60%)</title><rect x="795.7" y="211.0" width="7.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="798.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (7 samples, 0.60%)</title><rect x="795.7" y="195.0" width="7.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="798.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseResource() (1 samples, 0.09%)</title><rect x="795.7" y="179.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="798.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (6 samples, 0.51%)</title><rect x="796.7" y="179.0" width="6.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="799.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (4 samples, 0.34%)</title><rect x="796.7" y="163.0" width="4.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="799.7" y="174.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (1 samples, 0.09%)</title><rect x="796.7" y="147.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="799.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (1 samples, 0.09%)</title><rect x="797.7" y="147.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="800.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.17%)</title><rect x="798.7" y="147.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="801.7" y="158.0"></text>
</g>
<g>
<title>malloc_usable_size (1 samples, 0.09%)</title><rect x="798.7" y="131.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="801.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.09%)</title><rect x="799.7" y="131.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="802.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.09%)</title><rect x="799.7" y="115.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="802.7" y="126.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (1 samples, 0.09%)</title><rect x="800.7" y="163.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="803.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (1 samples, 0.09%)</title><rect x="801.7" y="163.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="804.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (4 samples, 0.34%)</title><rect x="802.7" y="227.0" width="4.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="805.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (4 samples, 0.34%)</title><rect x="802.7" y="211.0" width="4.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="805.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (2 samples, 0.17%)</title><rect x="803.7" y="195.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="806.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="805.7" y="195.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="808.7" y="206.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.09%)</title><rect x="805.7" y="179.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="808.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::value() const (1 samples, 0.09%)</title><rect x="806.7" y="227.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="809.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (1 samples, 0.09%)</title><rect x="807.7" y="227.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="810.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (7 samples, 0.60%)</title><rect x="808.7" y="227.0" width="7.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="811.7" y="238.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.09%)</title><rect x="810.8" y="211.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="813.8" y="222.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="811.8" y="211.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="814.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.26%)</title><rect x="812.8" y="211.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="815.8" y="222.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.09%)</title><rect x="813.8" y="195.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="816.8" y="206.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="814.8" y="195.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="817.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="815.8" y="227.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="818.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (1 samples, 0.09%)</title><rect x="816.8" y="243.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="819.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() [clone .plt] (1 samples, 0.09%)</title><rect x="817.8" y="291.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="820.8" y="302.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.09%)</title><rect x="818.8" y="291.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="821.8" y="302.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) [clone .plt] (1 samples, 0.09%)</title><rect x="819.8" y="307.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="822.8" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.09%)</title><rect x="820.8" y="339.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="823.8" y="350.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (6 samples, 0.51%)</title><rect x="821.8" y="355.0" width="6.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="824.8" y="366.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="821.8" y="339.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="824.8" y="350.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 0.43%)</title><rect x="822.8" y="339.0" width="5.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="825.8" y="350.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.09%)</title><rect x="824.8" y="323.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="827.8" y="334.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.17%)</title><rect x="825.8" y="323.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="828.8" y="334.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.17%)</title><rect x="825.8" y="307.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="828.8" y="318.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.17%)</title><rect x="825.8" y="291.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="828.8" y="302.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.09%)</title><rect x="825.8" y="275.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="828.8" y="286.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.09%)</title><rect x="826.8" y="275.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="829.8" y="286.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="827.9" y="387.0" width="2.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="830.9" y="398.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="827.9" y="371.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="830.9" y="382.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.09%)</title><rect x="828.9" y="371.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="831.9" y="382.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.09%)</title><rect x="829.9" y="387.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="832.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (3 samples, 0.26%)</title><rect x="830.9" y="419.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="833.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (3 samples, 0.26%)</title><rect x="830.9" y="403.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="833.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.09%)</title><rect x="830.9" y="387.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="833.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.09%)</title><rect x="830.9" y="371.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="833.9" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.17%)</title><rect x="831.9" y="387.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="834.9" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="832.9" y="371.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.9" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="832.9" y="355.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (1 samples, 0.09%)</title><rect x="833.9" y="419.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="833.9" y="403.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="836.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="833.9" y="387.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.9" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="833.9" y="371.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="836.9" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="833.9" y="355.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="836.9" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="833.9" y="339.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="836.9" y="350.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="833.9" y="323.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="836.9" y="334.0"></text>
</g>
<g>
<title>[async_workers-5 tid=240139] (117 samples, 9.97%)</title><rect x="834.9" y="547.0" width="117.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="837.9" y="558.0">[async_workers..</text>
</g>
<g>
<title>java/lang/Thread.run (117 samples, 9.97%)</title><rect x="834.9" y="531.0" width="117.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="837.9" y="542.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (117 samples, 9.97%)</title><rect x="834.9" y="515.0" width="117.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.9" y="526.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (117 samples, 9.97%)</title><rect x="834.9" y="499.0" width="117.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="837.9" y="510.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (21 samples, 1.79%)</title><rect x="834.9" y="483.0" width="21.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="837.9" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (20 samples, 1.71%)</title><rect x="834.9" y="467.0" width="20.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="837.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (16 samples, 1.36%)</title><rect x="834.9" y="451.0" width="16.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="837.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.17%)</title><rect x="835.9" y="435.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="838.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (2 samples, 0.17%)</title><rect x="835.9" y="419.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="838.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.09%)</title><rect x="835.9" y="403.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="838.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.set (1 samples, 0.09%)</title><rect x="835.9" y="387.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="838.9" y="398.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.09%)</title><rect x="835.9" y="371.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="838.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.09%)</title><rect x="836.9" y="403.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="839.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.17%)</title><rect x="837.9" y="435.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="840.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.17%)</title><rect x="837.9" y="419.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="840.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.17%)</title><rect x="837.9" y="403.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="840.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.17%)</title><rect x="837.9" y="387.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.17%)</title><rect x="837.9" y="371.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="840.9" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.17%)</title><rect x="837.9" y="355.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="840.9" y="366.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.09%)</title><rect x="837.9" y="339.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="840.9" y="350.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="838.9" y="339.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="841.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 0.94%)</title><rect x="839.9" y="435.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="842.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 0.94%)</title><rect x="839.9" y="419.0" width="11.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="842.9" y="430.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.60%)</title><rect x="839.9" y="403.0" width="7.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="842.9" y="414.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.26%)</title><rect x="840.9" y="387.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="843.9" y="398.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.09%)</title><rect x="841.9" y="371.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="844.9" y="382.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.09%)</title><rect x="841.9" y="355.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="844.9" y="366.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="842.9" y="371.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="845.9" y="382.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.09%)</title><rect x="843.9" y="387.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="846.9" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="845.0" y="387.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="848.0" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="846.0" y="387.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="849.0" y="398.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.34%)</title><rect x="847.0" y="403.0" width="4.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="850.0" y="414.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (4 samples, 0.34%)</title><rect x="847.0" y="387.0" width="4.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="850.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.09%)</title><rect x="851.0" y="451.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="854.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.09%)</title><rect x="851.0" y="435.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="854.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.09%)</title><rect x="851.0" y="419.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="854.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.09%)</title><rect x="851.0" y="403.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="854.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.09%)</title><rect x="851.0" y="387.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="854.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.09%)</title><rect x="851.0" y="371.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="854.0" y="382.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="851.0" y="355.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="854.0" y="366.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="851.0" y="339.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="854.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.26%)</title><rect x="852.0" y="451.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.26%)</title><rect x="852.0" y="435.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.26%)</title><rect x="852.0" y="419.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="855.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.26%)</title><rect x="852.0" y="403.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="854.0" y="387.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="857.0" y="398.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.09%)</title><rect x="854.0" y="371.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="857.0" y="382.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="855.0" y="467.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="858.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.run (96 samples, 8.18%)</title><rect x="856.0" y="483.0" width="96.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="859.0" y="494.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (96 samples, 8.18%)</title><rect x="856.0" y="467.0" width="96.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="859.0" y="478.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.getInternal (96 samples, 8.18%)</title><rect x="856.0" y="451.0" width="96.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="859.0" y="462.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (23 samples, 1.96%)</title><rect x="856.0" y="435.0" width="23.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="859.0" y="446.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.26%)</title><rect x="856.0" y="419.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.26%)</title><rect x="856.0" y="403.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="859.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.26%)</title><rect x="856.0" y="387.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="859.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.09%)</title><rect x="858.0" y="371.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="861.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.09%)</title><rect x="858.0" y="355.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="861.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (19 samples, 1.62%)</title><rect x="859.0" y="419.0" width="19.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="862.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.34%)</title><rect x="859.0" y="403.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="862.0" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.09%)</title><rect x="859.0" y="387.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="862.0" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.26%)</title><rect x="860.0" y="387.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="863.0" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.17%)</title><rect x="860.0" y="371.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="863.0" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="862.1" y="371.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="865.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="862.1" y="355.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="865.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.09%)</title><rect x="862.1" y="339.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.1" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (15 samples, 1.28%)</title><rect x="863.1" y="403.0" width="15.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="866.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (15 samples, 1.28%)</title><rect x="863.1" y="387.0" width="15.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="866.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (15 samples, 1.28%)</title><rect x="863.1" y="371.0" width="15.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="866.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (15 samples, 1.28%)</title><rect x="863.1" y="355.0" width="15.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="866.1" y="366.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.26%)</title><rect x="864.1" y="339.0" width="3.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="867.1" y="350.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.09%)</title><rect x="865.1" y="323.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="868.1" y="334.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.09%)</title><rect x="866.1" y="323.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="869.1" y="334.0"></text>
</g>
<g>
<title>__libc_send (11 samples, 0.94%)</title><rect x="867.1" y="339.0" width="11.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="870.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="878.2" y="419.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="881.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.09%)</title><rect x="878.2" y="403.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="881.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="878.2" y="387.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="881.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (1 samples, 0.09%)</title><rect x="879.2" y="435.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="882.2" y="446.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.09%)</title><rect x="879.2" y="419.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="882.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (72 samples, 6.14%)</title><rect x="880.2" y="435.0" width="72.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="883.2" y="446.0">ru/mail/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (68 samples, 5.80%)</title><rect x="880.2" y="419.0" width="68.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="883.2" y="430.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (68 samples, 5.80%)</title><rect x="880.2" y="403.0" width="68.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="883.2" y="414.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (68 samples, 5.80%)</title><rect x="880.2" y="387.0" width="68.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="883.2" y="398.0">Java_or..</text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.09%)</title><rect x="880.2" y="371.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="883.2" y="382.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (67 samples, 5.71%)</title><rect x="881.2" y="371.0" width="67.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="884.2" y="382.0">rocksdb..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.09%)</title><rect x="881.2" y="355.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="884.2" y="366.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.17%)</title><rect x="882.2" y="355.0" width="2.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="885.2" y="366.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.09%)</title><rect x="884.2" y="355.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="887.2" y="366.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.09%)</title><rect x="884.2" y="339.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="887.2" y="350.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.09%)</title><rect x="885.2" y="355.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="888.2" y="366.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (53 samples, 4.52%)</title><rect x="886.2" y="355.0" width="53.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="889.2" y="366.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (53 samples, 4.52%)</title><rect x="886.2" y="339.0" width="53.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="889.2" y="350.0">rocks..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.09%)</title><rect x="887.2" y="323.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="890.2" y="334.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.09%)</title><rect x="887.2" y="307.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="890.2" y="318.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="887.2" y="291.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="890.2" y="302.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (51 samples, 4.35%)</title><rect x="888.2" y="323.0" width="51.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="891.2" y="334.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (50 samples, 4.26%)</title><rect x="889.2" y="307.0" width="50.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="892.2" y="318.0">rocks..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.09%)</title><rect x="889.2" y="291.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="892.2" y="302.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (48 samples, 4.09%)</title><rect x="890.2" y="291.0" width="48.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="893.2" y="302.0">rock..</text>
</g>
<g>
<title>memcpy@plt (1 samples, 0.09%)</title><rect x="891.2" y="275.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="894.2" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.09%)</title><rect x="892.2" y="275.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="895.2" y="286.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.09%)</title><rect x="892.2" y="259.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="895.2" y="270.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.09%)</title><rect x="892.2" y="243.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="895.2" y="254.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.09%)</title><rect x="893.2" y="275.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="896.2" y="286.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (1 samples, 0.09%)</title><rect x="894.2" y="275.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="897.2" y="286.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (4 samples, 0.34%)</title><rect x="895.3" y="275.0" width="4.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="898.3" y="286.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (4 samples, 0.34%)</title><rect x="895.3" y="259.0" width="4.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="898.3" y="270.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (4 samples, 0.34%)</title><rect x="895.3" y="243.0" width="4.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="898.3" y="254.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (4 samples, 0.34%)</title><rect x="895.3" y="227.0" width="4.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="898.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="898.3" y="211.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="901.3" y="222.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.09%)</title><rect x="898.3" y="195.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="901.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (2 samples, 0.17%)</title><rect x="899.3" y="275.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="902.3" y="286.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.09%)</title><rect x="901.3" y="275.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="904.3" y="286.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.09%)</title><rect x="901.3" y="259.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="904.3" y="270.0"></text>
</g>
<g>
<title>rocksdb::StopWatchNano::StopWatchNano(rocksdb::Env*, bool) [clone .plt] (1 samples, 0.09%)</title><rect x="902.3" y="275.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="905.3" y="286.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (35 samples, 2.98%)</title><rect x="903.3" y="275.0" width="35.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="906.3" y="286.0">roc..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (1 samples, 0.09%)</title><rect x="905.3" y="259.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="908.3" y="270.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (1 samples, 0.09%)</title><rect x="906.3" y="259.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="909.3" y="270.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (31 samples, 2.64%)</title><rect x="907.3" y="259.0" width="31.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="910.3" y="270.0">ro..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.09%)</title><rect x="908.3" y="243.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="911.3" y="254.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (28 samples, 2.39%)</title><rect x="909.3" y="243.0" width="28.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="912.3" y="254.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="909.3" y="227.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="912.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.09%)</title><rect x="910.3" y="227.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="913.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.09%)</title><rect x="911.3" y="227.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="914.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (1 samples, 0.09%)</title><rect x="912.4" y="227.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="915.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) [clone .plt] (1 samples, 0.09%)</title><rect x="913.4" y="227.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="916.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (13 samples, 1.11%)</title><rect x="914.4" y="227.0" width="13.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="917.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (1 samples, 0.09%)</title><rect x="914.4" y="211.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="917.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (1 samples, 0.09%)</title><rect x="914.4" y="195.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="917.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (12 samples, 1.02%)</title><rect x="915.4" y="211.0" width="12.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="918.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (12 samples, 1.02%)</title><rect x="915.4" y="195.0" width="12.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="918.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseResource() (1 samples, 0.09%)</title><rect x="915.4" y="179.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="918.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (11 samples, 0.94%)</title><rect x="916.4" y="179.0" width="11.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="919.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (10 samples, 0.85%)</title><rect x="916.4" y="163.0" width="10.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="919.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (1 samples, 0.09%)</title><rect x="916.4" y="147.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="919.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (6 samples, 0.51%)</title><rect x="917.4" y="147.0" width="6.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="920.4" y="158.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="917.4" y="131.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="920.4" y="142.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="918.4" y="131.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="921.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.09%)</title><rect x="919.4" y="131.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="922.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (3 samples, 0.26%)</title><rect x="920.4" y="131.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="923.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (3 samples, 0.26%)</title><rect x="920.4" y="115.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="923.4" y="126.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (2 samples, 0.17%)</title><rect x="923.4" y="147.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="926.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() [clone .plt] (1 samples, 0.09%)</title><rect x="925.4" y="147.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="928.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetCharge(rocksdb::Cache::Handle*) const (1 samples, 0.09%)</title><rect x="926.4" y="163.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="929.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (4 samples, 0.34%)</title><rect x="927.4" y="227.0" width="4.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="930.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (3 samples, 0.26%)</title><rect x="928.4" y="211.0" width="3.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="931.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.09%)</title><rect x="929.5" y="195.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="932.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="930.5" y="195.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="933.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (5 samples, 0.43%)</title><rect x="931.5" y="227.0" width="5.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="934.5" y="238.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.09%)</title><rect x="934.5" y="211.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="937.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.09%)</title><rect x="934.5" y="195.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="937.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="935.5" y="211.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="938.5" y="222.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="935.5" y="195.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="938.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.09%)</title><rect x="936.5" y="227.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="939.5" y="238.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::value() const (1 samples, 0.09%)</title><rect x="937.5" y="243.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="940.5" y="254.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.09%)</title><rect x="938.5" y="291.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="941.5" y="302.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (8 samples, 0.68%)</title><rect x="939.5" y="355.0" width="8.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="942.5" y="366.0"></text>
</g>
<g>
<title>jni_NewByteArray (7 samples, 0.60%)</title><rect x="939.5" y="339.0" width="7.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="942.5" y="350.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.09%)</title><rect x="941.5" y="323.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="944.5" y="334.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.34%)</title><rect x="942.5" y="323.0" width="4.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="945.5" y="334.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.34%)</title><rect x="942.5" y="307.0" width="4.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="945.5" y="318.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.34%)</title><rect x="942.5" y="291.0" width="4.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="945.5" y="302.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (2 samples, 0.17%)</title><rect x="942.5" y="275.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="945.5" y="286.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.17%)</title><rect x="944.5" y="275.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="947.5" y="286.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="946.6" y="339.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="949.6" y="350.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.09%)</title><rect x="946.6" y="323.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="949.6" y="334.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.09%)</title><rect x="947.6" y="355.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="950.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (1 samples, 0.09%)</title><rect x="948.6" y="419.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="951.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.09%)</title><rect x="948.6" y="403.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="951.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.09%)</title><rect x="948.6" y="387.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="951.6" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.09%)</title><rect x="948.6" y="371.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="951.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (3 samples, 0.26%)</title><rect x="949.6" y="419.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="952.6" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.17%)</title><rect x="950.6" y="403.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="953.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.17%)</title><rect x="950.6" y="387.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="953.6" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.17%)</title><rect x="950.6" y="371.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="953.6" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.17%)</title><rect x="950.6" y="355.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="953.6" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.17%)</title><rect x="950.6" y="339.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="953.6" y="350.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.09%)</title><rect x="950.6" y="323.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="953.6" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.09%)</title><rect x="951.6" y="323.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="954.6" y="334.0"></text>
</g>
<g>
<title>[async_workers-6 tid=240141] (113 samples, 9.63%)</title><rect x="952.6" y="547.0" width="113.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="955.6" y="558.0">[async_workers..</text>
</g>
<g>
<title>java/lang/Thread.run (113 samples, 9.63%)</title><rect x="952.6" y="531.0" width="113.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="955.6" y="542.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (113 samples, 9.63%)</title><rect x="952.6" y="515.0" width="113.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="955.6" y="526.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (113 samples, 9.63%)</title><rect x="952.6" y="499.0" width="113.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="955.6" y="510.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (29 samples, 2.47%)</title><rect x="952.6" y="483.0" width="29.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="955.6" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (28 samples, 2.39%)</title><rect x="952.6" y="467.0" width="28.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="955.6" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (18 samples, 1.53%)</title><rect x="955.6" y="451.0" width="18.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="958.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.26%)</title><rect x="955.6" y="435.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="958.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.26%)</title><rect x="955.6" y="419.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="958.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.26%)</title><rect x="955.6" y="403.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="958.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.17%)</title><rect x="956.6" y="387.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="959.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.17%)</title><rect x="956.6" y="371.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="959.6" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.17%)</title><rect x="956.6" y="355.0" width="2.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="959.6" y="366.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.09%)</title><rect x="956.6" y="339.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="959.6" y="350.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="957.6" y="339.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="960.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.09%)</title><rect x="958.6" y="435.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="961.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (14 samples, 1.19%)</title><rect x="959.6" y="435.0" width="14.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="962.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (14 samples, 1.19%)</title><rect x="959.6" y="419.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="962.6" y="430.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.09%)</title><rect x="960.6" y="403.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="963.6" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.43%)</title><rect x="961.6" y="403.0" width="5.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="964.6" y="414.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.09%)</title><rect x="961.6" y="387.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="964.6" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.09%)</title><rect x="962.7" y="387.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="965.7" y="398.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.09%)</title><rect x="962.7" y="371.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="965.7" y="382.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.09%)</title><rect x="962.7" y="355.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="965.7" y="366.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.26%)</title><rect x="963.7" y="387.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="966.7" y="398.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.60%)</title><rect x="966.7" y="403.0" width="7.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="969.7" y="414.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.09%)</title><rect x="966.7" y="387.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="969.7" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.09%)</title><rect x="967.7" y="387.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="970.7" y="398.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (5 samples, 0.43%)</title><rect x="968.7" y="387.0" width="5.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="971.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.26%)</title><rect x="973.7" y="451.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="976.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.26%)</title><rect x="973.7" y="435.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="976.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.26%)</title><rect x="973.7" y="419.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="976.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.09%)</title><rect x="973.7" y="403.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="976.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.17%)</title><rect x="974.7" y="403.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="977.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.17%)</title><rect x="974.7" y="387.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="977.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.17%)</title><rect x="974.7" y="371.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="977.7" y="382.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.17%)</title><rect x="974.7" y="355.0" width="2.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="977.7" y="366.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.17%)</title><rect x="974.7" y="339.0" width="2.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="977.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.34%)</title><rect x="976.7" y="451.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="979.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.34%)</title><rect x="976.7" y="435.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="979.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.34%)</title><rect x="976.7" y="419.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="979.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.34%)</title><rect x="976.7" y="403.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="979.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.34%)</title><rect x="976.7" y="387.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="979.7" y="398.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.17%)</title><rect x="976.7" y="371.0" width="2.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="979.7" y="382.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.09%)</title><rect x="976.7" y="355.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="979.7" y="366.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.09%)</title><rect x="977.7" y="355.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="980.7" y="366.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.17%)</title><rect x="978.7" y="371.0" width="2.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="981.7" y="382.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="980.8" y="467.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="983.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.run (84 samples, 7.16%)</title><rect x="981.8" y="483.0" width="84.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="984.8" y="494.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (84 samples, 7.16%)</title><rect x="981.8" y="467.0" width="84.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="984.8" y="478.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.getInternal (84 samples, 7.16%)</title><rect x="981.8" y="451.0" width="84.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="984.8" y="462.0">ru/mail/po..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.17%)</title><rect x="981.8" y="435.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="984.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.17%)</title><rect x="981.8" y="419.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.17%)</title><rect x="981.8" y="403.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="984.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.17%)</title><rect x="981.8" y="387.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="984.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8 samples, 0.68%)</title><rect x="983.8" y="435.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="986.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.17%)</title><rect x="983.8" y="419.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="986.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.17%)</title><rect x="983.8" y="403.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="986.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.17%)</title><rect x="983.8" y="387.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="986.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.17%)</title><rect x="983.8" y="371.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="986.8" y="382.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.09%)</title><rect x="984.8" y="355.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="987.8" y="366.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.09%)</title><rect x="984.8" y="339.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="987.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.43%)</title><rect x="985.8" y="419.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="988.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.09%)</title><rect x="985.8" y="403.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="988.8" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.09%)</title><rect x="985.8" y="387.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="988.8" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.09%)</title><rect x="985.8" y="371.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="988.8" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.34%)</title><rect x="986.8" y="403.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="989.8" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.34%)</title><rect x="986.8" y="387.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="989.8" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.34%)</title><rect x="986.8" y="371.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="989.8" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.34%)</title><rect x="986.8" y="355.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="989.8" y="366.0"></text>
</g>
<g>
<title>__libc_send (4 samples, 0.34%)</title><rect x="986.8" y="339.0" width="4.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="989.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="990.8" y="419.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="993.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (1 samples, 0.09%)</title><rect x="991.8" y="435.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="994.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.09%)</title><rect x="991.8" y="419.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="994.8" y="430.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.09%)</title><rect x="991.8" y="403.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.09%)</title><rect x="992.8" y="435.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="995.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.09%)</title><rect x="992.8" y="419.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="995.8" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.09%)</title><rect x="992.8" y="403.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="995.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.09%)</title><rect x="992.8" y="387.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="995.8" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.09%)</title><rect x="992.8" y="371.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="995.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (3 samples, 0.26%)</title><rect x="993.8" y="435.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="996.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.26%)</title><rect x="993.8" y="419.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="996.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.26%)</title><rect x="993.8" y="403.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="996.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.17%)</title><rect x="994.8" y="387.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="997.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.17%)</title><rect x="994.8" y="371.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="997.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (69 samples, 5.88%)</title><rect x="996.9" y="435.0" width="69.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="999.9" y="446.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (69 samples, 5.88%)</title><rect x="996.9" y="419.0" width="69.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="999.9" y="430.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (69 samples, 5.88%)</title><rect x="996.9" y="403.0" width="69.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="999.9" y="414.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (68 samples, 5.80%)</title><rect x="996.9" y="387.0" width="68.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="999.9" y="398.0">Java_or..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.09%)</title><rect x="996.9" y="371.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="999.9" y="382.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.09%)</title><rect x="997.9" y="371.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1000.9" y="382.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.09%)</title><rect x="998.9" y="371.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1001.9" y="382.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.09%)</title><rect x="999.9" y="371.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1002.9" y="382.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (64 samples, 5.46%)</title><rect x="1000.9" y="371.0" width="64.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1003.9" y="382.0">rocksdb..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.17%)</title><rect x="1000.9" y="355.0" width="2.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1003.9" y="366.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.17%)</title><rect x="1002.9" y="355.0" width="2.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1005.9" y="366.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.09%)</title><rect x="1004.9" y="355.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1007.9" y="366.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.09%)</title><rect x="1004.9" y="339.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1007.9" y="350.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.09%)</title><rect x="1004.9" y="323.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1007.9" y="334.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (53 samples, 4.52%)</title><rect x="1005.9" y="355.0" width="53.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1008.9" y="366.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (53 samples, 4.52%)</title><rect x="1005.9" y="339.0" width="53.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1008.9" y="350.0">rocks..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.09%)</title><rect x="1007.9" y="323.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1010.9" y="334.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.09%)</title><rect x="1007.9" y="307.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1010.9" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (50 samples, 4.26%)</title><rect x="1008.9" y="323.0" width="50.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1011.9" y="334.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (48 samples, 4.09%)</title><rect x="1009.9" y="307.0" width="48.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1012.9" y="318.0">rock..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="1009.9" y="291.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1012.9" y="302.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (46 samples, 3.92%)</title><rect x="1010.9" y="291.0" width="46.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1013.9" y="302.0">rock..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="1014.0" y="275.0" width="1.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1017.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.09%)</title><rect x="1015.0" y="275.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1018.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (14 samples, 1.19%)</title><rect x="1016.0" y="275.0" width="14.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1019.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (13 samples, 1.11%)</title><rect x="1017.0" y="259.0" width="13.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1020.0" y="270.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (13 samples, 1.11%)</title><rect x="1017.0" y="243.0" width="13.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1020.0" y="254.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (13 samples, 1.11%)</title><rect x="1017.0" y="227.0" width="13.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1020.0" y="238.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.17%)</title><rect x="1026.0" y="211.0" width="2.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1029.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.17%)</title><rect x="1028.0" y="211.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1031.0" y="222.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.17%)</title><rect x="1028.0" y="195.0" width="2.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1031.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (1 samples, 0.09%)</title><rect x="1030.1" y="275.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1033.1" y="286.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (26 samples, 2.22%)</title><rect x="1031.1" y="275.0" width="26.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1034.1" y="286.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="1032.1" y="259.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1035.1" y="270.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.09%)</title><rect x="1033.1" y="259.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1036.1" y="270.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (23 samples, 1.96%)</title><rect x="1034.1" y="259.0" width="23.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1037.1" y="270.0">r..</text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.09%)</title><rect x="1034.1" y="243.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1037.1" y="254.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (21 samples, 1.79%)</title><rect x="1035.1" y="243.0" width="21.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1038.1" y="254.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="1037.1" y="227.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1040.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (7 samples, 0.60%)</title><rect x="1038.1" y="227.0" width="7.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1041.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.09%)</title><rect x="1039.1" y="211.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1042.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (5 samples, 0.43%)</title><rect x="1040.1" y="211.0" width="5.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1043.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (5 samples, 0.43%)</title><rect x="1040.1" y="195.0" width="5.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1043.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (5 samples, 0.43%)</title><rect x="1040.1" y="179.0" width="5.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1043.1" y="190.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (4 samples, 0.34%)</title><rect x="1040.1" y="163.0" width="4.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1043.1" y="174.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (1 samples, 0.09%)</title><rect x="1041.1" y="147.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1044.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::Hash64(char const*, unsigned long) (1 samples, 0.09%)</title><rect x="1042.1" y="147.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1045.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.09%)</title><rect x="1043.1" y="147.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1046.1" y="158.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="1043.1" y="131.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1046.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (1 samples, 0.09%)</title><rect x="1044.1" y="163.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1047.1" y="174.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (6 samples, 0.51%)</title><rect x="1045.1" y="227.0" width="6.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1048.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (5 samples, 0.43%)</title><rect x="1045.1" y="211.0" width="5.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1048.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (2 samples, 0.17%)</title><rect x="1046.1" y="195.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1049.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.17%)</title><rect x="1048.2" y="195.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1051.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="1050.2" y="211.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1053.2" y="222.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.09%)</title><rect x="1050.2" y="195.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1053.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (1 samples, 0.09%)</title><rect x="1051.2" y="227.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1054.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (3 samples, 0.26%)</title><rect x="1052.2" y="227.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1055.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.09%)</title><rect x="1053.2" y="211.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1056.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.09%)</title><rect x="1053.2" y="195.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1056.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="1054.2" y="211.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1057.2" y="222.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.09%)</title><rect x="1054.2" y="195.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1057.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="1055.2" y="227.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1058.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="1056.2" y="243.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1059.2" y="254.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.09%)</title><rect x="1057.2" y="291.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1060.2" y="302.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (1 samples, 0.09%)</title><rect x="1058.2" y="307.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1061.2" y="318.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (5 samples, 0.43%)</title><rect x="1059.2" y="355.0" width="5.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1062.2" y="366.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.09%)</title><rect x="1059.2" y="339.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1062.2" y="350.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.34%)</title><rect x="1060.2" y="339.0" width="4.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1063.2" y="350.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.09%)</title><rect x="1061.2" y="323.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1064.2" y="334.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.17%)</title><rect x="1062.2" y="323.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1065.2" y="334.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.09%)</title><rect x="1064.3" y="355.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1067.3" y="366.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.09%)</title><rect x="1065.3" y="387.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1068.3" y="398.0"></text>
</g>
<g>
<title>[async_workers-7 tid=240140] (123 samples, 10.49%)</title><rect x="1066.3" y="547.0" width="123.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1069.3" y="558.0">[async_workers-..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.09%)</title><rect x="1066.3" y="531.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1069.3" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.09%)</title><rect x="1066.3" y="515.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1069.3" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.09%)</title><rect x="1066.3" y="499.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1069.3" y="510.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="1066.3" y="483.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1069.3" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.run (122 samples, 10.40%)</title><rect x="1067.3" y="531.0" width="122.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1070.3" y="542.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (122 samples, 10.40%)</title><rect x="1067.3" y="515.0" width="122.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1070.3" y="526.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (122 samples, 10.40%)</title><rect x="1067.3" y="499.0" width="122.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1070.3" y="510.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (27 samples, 2.30%)</title><rect x="1067.3" y="483.0" width="27.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1070.3" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (25 samples, 2.13%)</title><rect x="1068.3" y="467.0" width="25.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1071.3" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (22 samples, 1.88%)</title><rect x="1069.3" y="451.0" width="22.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1072.3" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (4 samples, 0.34%)</title><rect x="1070.3" y="435.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1073.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.34%)</title><rect x="1070.3" y="419.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1073.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.26%)</title><rect x="1070.3" y="403.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1073.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="1072.3" y="387.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1075.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="1072.3" y="371.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1075.3" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.09%)</title><rect x="1072.3" y="355.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1075.3" y="366.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.09%)</title><rect x="1072.3" y="339.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1075.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.09%)</title><rect x="1073.3" y="403.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1076.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (17 samples, 1.45%)</title><rect x="1074.3" y="435.0" width="17.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1077.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (17 samples, 1.45%)</title><rect x="1074.3" y="419.0" width="17.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1077.3" y="430.0"></text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.85%)</title><rect x="1074.3" y="403.0" width="10.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1077.3" y="414.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.26%)</title><rect x="1075.3" y="387.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1078.3" y="398.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.17%)</title><rect x="1075.3" y="371.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1078.3" y="382.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.09%)</title><rect x="1077.3" y="371.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1080.3" y="382.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.09%)</title><rect x="1078.3" y="387.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1081.3" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.09%)</title><rect x="1079.3" y="387.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1082.3" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.26%)</title><rect x="1080.3" y="387.0" width="3.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1083.3" y="398.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.09%)</title><rect x="1083.4" y="387.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1086.4" y="398.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.60%)</title><rect x="1084.4" y="403.0" width="7.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1087.4" y="414.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (2 samples, 0.17%)</title><rect x="1084.4" y="387.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1087.4" y="398.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (5 samples, 0.43%)</title><rect x="1086.4" y="387.0" width="5.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1089.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.09%)</title><rect x="1091.4" y="451.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1094.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.09%)</title><rect x="1091.4" y="435.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1094.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.09%)</title><rect x="1091.4" y="419.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="1091.4" y="403.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1094.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.09%)</title><rect x="1092.4" y="451.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1095.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.09%)</title><rect x="1092.4" y="435.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1095.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.09%)</title><rect x="1092.4" y="419.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1095.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="1092.4" y="403.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1095.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="1092.4" y="387.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1095.4" y="398.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.09%)</title><rect x="1092.4" y="371.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1095.4" y="382.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="1093.4" y="467.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1096.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/1245639208.run (95 samples, 8.10%)</title><rect x="1094.4" y="483.0" width="95.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1097.4" y="494.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (95 samples, 8.10%)</title><rect x="1094.4" y="467.0" width="95.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1097.4" y="478.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.getInternal (95 samples, 8.10%)</title><rect x="1094.4" y="451.0" width="95.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.4" y="462.0">ru/mail/pol..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.09%)</title><rect x="1094.4" y="435.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1097.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (13 samples, 1.11%)</title><rect x="1095.4" y="435.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1098.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.26%)</title><rect x="1095.4" y="419.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.26%)</title><rect x="1095.4" y="403.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1098.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="1097.5" y="387.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1100.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.09%)</title><rect x="1097.5" y="371.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1100.5" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.09%)</title><rect x="1097.5" y="355.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1100.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 0.85%)</title><rect x="1098.5" y="419.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1101.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.51%)</title><rect x="1098.5" y="403.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1101.5" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1098.5" y="387.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1101.5" y="398.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="1098.5" y="371.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1101.5" y="382.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.09%)</title><rect x="1099.5" y="387.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1102.5" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.26%)</title><rect x="1100.5" y="387.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1103.5" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.09%)</title><rect x="1101.5" y="371.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1104.5" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="1102.5" y="371.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1105.5" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="1102.5" y="355.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1105.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.09%)</title><rect x="1102.5" y="339.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1105.5" y="350.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="1103.5" y="387.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1106.5" y="398.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="1103.5" y="371.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1106.5" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.34%)</title><rect x="1104.5" y="403.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1107.5" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.34%)</title><rect x="1104.5" y="387.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1107.5" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.34%)</title><rect x="1104.5" y="371.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1107.5" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.34%)</title><rect x="1104.5" y="355.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1107.5" y="366.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.09%)</title><rect x="1104.5" y="339.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1107.5" y="350.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.17%)</title><rect x="1105.5" y="339.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1108.5" y="350.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.09%)</title><rect x="1107.5" y="339.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1110.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (2 samples, 0.17%)</title><rect x="1108.5" y="435.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1111.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.09%)</title><rect x="1108.5" y="419.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1111.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.09%)</title><rect x="1108.5" y="403.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1111.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.09%)</title><rect x="1108.5" y="387.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1111.5" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.09%)</title><rect x="1108.5" y="371.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1111.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.09%)</title><rect x="1109.5" y="419.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1112.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="1109.5" y="403.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1112.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="1109.5" y="387.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1112.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (1 samples, 0.09%)</title><rect x="1110.5" y="435.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1113.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="1110.5" y="419.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1113.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="1110.5" y="403.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1113.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (78 samples, 6.65%)</title><rect x="1111.5" y="435.0" width="78.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1114.5" y="446.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (77 samples, 6.56%)</title><rect x="1111.5" y="419.0" width="77.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1114.5" y="430.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (77 samples, 6.56%)</title><rect x="1111.5" y="403.0" width="77.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1114.5" y="414.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (74 samples, 6.31%)</title><rect x="1111.5" y="387.0" width="74.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1114.5" y="398.0">Java_org..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.09%)</title><rect x="1111.5" y="371.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1114.5" y="382.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.09%)</title><rect x="1112.5" y="371.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1115.5" y="382.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.09%)</title><rect x="1113.5" y="371.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1116.5" y="382.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.09%)</title><rect x="1114.6" y="371.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1117.6" y="382.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (70 samples, 5.97%)</title><rect x="1115.6" y="371.0" width="70.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1118.6" y="382.0">rocksdb_..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.09%)</title><rect x="1115.6" y="355.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1118.6" y="366.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="1116.6" y="355.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1119.6" y="366.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.09%)</title><rect x="1117.6" y="355.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1120.6" y="366.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.09%)</title><rect x="1118.6" y="355.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1121.6" y="366.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="1119.6" y="355.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1122.6" y="366.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (62 samples, 5.29%)</title><rect x="1120.6" y="355.0" width="62.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1123.6" y="366.0">rocksd..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.09%)</title><rect x="1120.6" y="339.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1123.6" y="350.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (61 samples, 5.20%)</title><rect x="1121.6" y="339.0" width="61.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1124.6" y="350.0">rocksd..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (4 samples, 0.34%)</title><rect x="1122.6" y="323.0" width="4.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1125.6" y="334.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (1 samples, 0.09%)</title><rect x="1122.6" y="307.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1125.6" y="318.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.17%)</title><rect x="1123.6" y="307.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1126.6" y="318.0"></text>
</g>
<g>
<title>malloc_usable_size (2 samples, 0.17%)</title><rect x="1123.6" y="291.0" width="2.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1126.6" y="302.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.09%)</title><rect x="1125.6" y="307.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1128.6" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (56 samples, 4.77%)</title><rect x="1126.6" y="323.0" width="56.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1129.6" y="334.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (55 samples, 4.69%)</title><rect x="1126.6" y="307.0" width="55.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1129.6" y="318.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (51 samples, 4.35%)</title><rect x="1126.6" y="291.0" width="51.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1129.6" y="302.0">rocks..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="1127.6" y="275.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1130.6" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.17%)</title><rect x="1128.6" y="275.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1131.6" y="286.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.09%)</title><rect x="1128.6" y="259.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1131.6" y="270.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.09%)</title><rect x="1128.6" y="243.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1131.6" y="254.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.09%)</title><rect x="1129.6" y="259.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1132.6" y="270.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (11 samples, 0.94%)</title><rect x="1130.6" y="275.0" width="11.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1133.6" y="286.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (10 samples, 0.85%)</title><rect x="1131.7" y="259.0" width="10.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1134.7" y="270.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (9 samples, 0.77%)</title><rect x="1132.7" y="243.0" width="9.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1135.7" y="254.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (9 samples, 0.77%)</title><rect x="1132.7" y="227.0" width="9.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1135.7" y="238.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.26%)</title><rect x="1136.7" y="211.0" width="3.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1139.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.17%)</title><rect x="1139.7" y="211.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1142.7" y="222.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="1140.7" y="195.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1143.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) [clone .plt] (1 samples, 0.09%)</title><rect x="1141.7" y="275.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.7" y="286.0"></text>
</g>
<g>
<title>rocksdb::PinnedIteratorsManager::~PinnedIteratorsManager() (1 samples, 0.09%)</title><rect x="1142.7" y="275.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1145.7" y="286.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (34 samples, 2.90%)</title><rect x="1143.7" y="275.0" width="34.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1146.7" y="286.0">ro..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (1 samples, 0.09%)</title><rect x="1143.7" y="259.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1146.7" y="270.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (1 samples, 0.09%)</title><rect x="1144.7" y="259.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1147.7" y="270.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (32 samples, 2.73%)</title><rect x="1145.7" y="259.0" width="32.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1148.7" y="270.0">ro..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.09%)</title><rect x="1145.7" y="243.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1148.7" y="254.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (29 samples, 2.47%)</title><rect x="1146.7" y="243.0" width="29.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1149.7" y="254.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="1148.8" y="227.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1151.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.09%)</title><rect x="1149.8" y="227.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1152.8" y="238.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.09%)</title><rect x="1149.8" y="211.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1152.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.09%)</title><rect x="1150.8" y="227.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (2 samples, 0.17%)</title><rect x="1151.8" y="227.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1154.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (8 samples, 0.68%)</title><rect x="1153.8" y="227.0" width="8.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1156.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (1 samples, 0.09%)</title><rect x="1154.8" y="211.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1157.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (6 samples, 0.51%)</title><rect x="1155.8" y="211.0" width="6.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1158.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (5 samples, 0.43%)</title><rect x="1156.8" y="195.0" width="5.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1159.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (2 samples, 0.17%)</title><rect x="1156.8" y="179.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (2 samples, 0.17%)</title><rect x="1156.8" y="163.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1159.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (2 samples, 0.17%)</title><rect x="1156.8" y="147.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1159.8" y="158.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (2 samples, 0.17%)</title><rect x="1156.8" y="131.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.8" y="142.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (2 samples, 0.17%)</title><rect x="1156.8" y="115.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.8" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (2 samples, 0.17%)</title><rect x="1156.8" y="99.0" width="2.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1159.8" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (2 samples, 0.17%)</title><rect x="1156.8" y="83.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1159.8" y="94.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (2 samples, 0.17%)</title><rect x="1156.8" y="67.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1159.8" y="78.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (1 samples, 0.09%)</title><rect x="1156.8" y="51.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1159.8" y="62.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::Produced() const (1 samples, 0.09%)</title><rect x="1156.8" y="35.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1159.8" y="46.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::TryFastAppend(char const*, unsigned long, unsigned long) (1 samples, 0.09%)</title><rect x="1157.8" y="51.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1160.8" y="62.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::Value(rocksdb::Cache::Handle*) (1 samples, 0.09%)</title><rect x="1158.8" y="179.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1161.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.09%)</title><rect x="1159.8" y="179.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1162.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.09%)</title><rect x="1159.8" y="163.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.09%)</title><rect x="1159.8" y="147.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1162.8" y="158.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="1159.8" y="131.0" width="1.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1162.8" y="142.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.09%)</title><rect x="1160.8" y="179.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1163.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (10 samples, 0.85%)</title><rect x="1161.8" y="227.0" width="10.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1164.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (9 samples, 0.77%)</title><rect x="1161.8" y="211.0" width="9.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1164.8" y="222.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.09%)</title><rect x="1161.8" y="195.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1164.8" y="206.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="1162.8" y="195.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1165.8" y="206.0"></text>
</g>
<g>
<title>memcpy@plt (1 samples, 0.09%)</title><rect x="1163.8" y="195.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1166.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (3 samples, 0.26%)</title><rect x="1164.9" y="195.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1167.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.26%)</title><rect x="1167.9" y="195.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1170.9" y="206.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.17%)</title><rect x="1168.9" y="179.0" width="2.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1171.9" y="190.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="1170.9" y="211.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1173.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (1 samples, 0.09%)</title><rect x="1171.9" y="227.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1174.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (3 samples, 0.26%)</title><rect x="1172.9" y="227.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.9" y="238.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.09%)</title><rect x="1172.9" y="211.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1175.9" y="222.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="1173.9" y="211.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1176.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) [clone .plt] (1 samples, 0.09%)</title><rect x="1174.9" y="211.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1177.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="1175.9" y="243.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.9" y="254.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (1 samples, 0.09%)</title><rect x="1176.9" y="243.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.9" y="254.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.09%)</title><rect x="1177.9" y="291.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.9" y="302.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() [clone .plt] (1 samples, 0.09%)</title><rect x="1178.9" y="291.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.9" y="302.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.09%)</title><rect x="1179.9" y="291.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.9" y="302.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.09%)</title><rect x="1180.9" y="291.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.9" y="302.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (1 samples, 0.09%)</title><rect x="1182.0" y="307.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.0" y="318.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (3 samples, 0.26%)</title><rect x="1183.0" y="355.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.0" y="366.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.09%)</title><rect x="1183.0" y="339.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.0" y="350.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.17%)</title><rect x="1184.0" y="339.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1187.0" y="350.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.09%)</title><rect x="1184.0" y="323.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.0" y="334.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.09%)</title><rect x="1185.0" y="323.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.0" y="334.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.09%)</title><rect x="1185.0" y="307.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.0" y="318.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.09%)</title><rect x="1185.0" y="291.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.0" y="302.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.09%)</title><rect x="1185.0" y="275.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.0" y="286.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="1186.0" y="387.0" width="2.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1189.0" y="398.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="1186.0" y="371.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1189.0" y="382.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.09%)</title><rect x="1187.0" y="371.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.0" y="382.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.09%)</title><rect x="1188.0" y="387.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1191.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (1 samples, 0.09%)</title><rect x="1189.0" y="419.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.09%)</title><rect x="1189.0" y="403.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1192.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.09%)</title><rect x="1189.0" y="387.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.0" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="1189.0" y="371.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.0" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="1189.0" y="355.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.0" y="366.0"></text>
</g>
</g>
</svg>
