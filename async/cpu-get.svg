<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="421"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="421"> </text>
<g id="frames">
<g>
<title>all (404 samples, 100.00%)</title><rect x="10.0" y="387.0" width="1180.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="398.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=2943] (21 samples, 5.20%)</title><rect x="10.0" y="371.0" width="61.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="382.0">[NIO S..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (21 samples, 5.20%)</title><rect x="10.0" y="355.0" width="61.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="366.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 2.23%)</title><rect x="10.0" y="339.0" width="26.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="350.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (8 samples, 1.98%)</title><rect x="12.9" y="323.0" width="23.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.9" y="334.0">o..</text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.25%)</title><rect x="15.8" y="307.0" width="3.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="18.8" y="318.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 1.49%)</title><rect x="18.8" y="307.0" width="17.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="21.8" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (12 samples, 2.97%)</title><rect x="36.3" y="339.0" width="35.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.3" y="350.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (12 samples, 2.97%)</title><rect x="36.3" y="323.0" width="35.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.3" y="334.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (10 samples, 2.48%)</title><rect x="36.3" y="307.0" width="29.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.3" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5 samples, 1.24%)</title><rect x="39.2" y="291.0" width="14.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 1.24%)</title><rect x="39.2" y="275.0" width="14.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.2" y="286.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (4 samples, 0.99%)</title><rect x="39.2" y="259.0" width="11.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.50%)</title><rect x="39.2" y="243.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="42.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.50%)</title><rect x="39.2" y="227.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="42.2" y="238.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.25%)</title><rect x="42.1" y="211.0" width="2.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="45.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (2 samples, 0.50%)</title><rect x="45.0" y="243.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.50%)</title><rect x="45.0" y="227.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="48.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.50%)</title><rect x="45.0" y="211.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.50%)</title><rect x="45.0" y="195.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.50%)</title><rect x="45.0" y="179.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.50%)</title><rect x="45.0" y="163.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.50%)</title><rect x="45.0" y="147.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.25%)</title><rect x="48.0" y="131.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.0" y="142.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.25%)</title><rect x="48.0" y="115.0" width="2.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="51.0" y="126.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.25%)</title><rect x="50.9" y="259.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="53.9" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.25%)</title><rect x="50.9" y="243.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.9" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.25%)</title><rect x="50.9" y="227.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.25%)</title><rect x="50.9" y="211.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="53.9" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.50%)</title><rect x="53.8" y="291.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.8" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.25%)</title><rect x="56.7" y="275.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="59.7" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.25%)</title><rect x="56.7" y="259.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="59.7" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.25%)</title><rect x="56.7" y="243.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.25%)</title><rect x="59.7" y="291.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.25%)</title><rect x="62.6" y="291.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.6" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.50%)</title><rect x="65.5" y="307.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.5" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.50%)</title><rect x="65.5" y="291.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.5" y="302.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.25%)</title><rect x="68.4" y="275.0" width="2.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="71.4" y="286.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.25%)</title><rect x="68.4" y="259.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="71.4" y="270.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.25%)</title><rect x="68.4" y="243.0" width="2.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="71.4" y="254.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=2944] (20 samples, 4.95%)</title><rect x="71.3" y="371.0" width="58.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="74.3" y="382.0">[NIO S..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (20 samples, 4.95%)</title><rect x="71.3" y="355.0" width="58.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.3" y="366.0">one/ni..</text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.25%)</title><rect x="71.3" y="339.0" width="3.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="74.3" y="350.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 1.73%)</title><rect x="74.3" y="339.0" width="20.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.3" y="350.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 1.49%)</title><rect x="77.2" y="323.0" width="17.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.2" y="334.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 1.24%)</title><rect x="80.1" y="307.0" width="14.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="83.1" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (12 samples, 2.97%)</title><rect x="94.7" y="339.0" width="35.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.7" y="350.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (12 samples, 2.97%)</title><rect x="94.7" y="323.0" width="35.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="97.7" y="334.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8 samples, 1.98%)</title><rect x="94.7" y="307.0" width="23.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="97.7" y="318.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7 samples, 1.73%)</title><rect x="94.7" y="291.0" width="20.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7 samples, 1.73%)</title><rect x="94.7" y="275.0" width="20.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.7" y="286.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (7 samples, 1.73%)</title><rect x="94.7" y="259.0" width="20.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.50%)</title><rect x="94.7" y="243.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.50%)</title><rect x="94.7" y="227.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.7" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.25%)</title><rect x="97.6" y="211.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.25%)</title><rect x="97.6" y="195.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.25%)</title><rect x="97.6" y="179.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="100.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (5 samples, 1.24%)</title><rect x="100.5" y="243.0" width="14.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="103.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 1.24%)</title><rect x="100.5" y="227.0" width="14.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="103.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 1.24%)</title><rect x="100.5" y="211.0" width="14.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="103.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.25%)</title><rect x="106.4" y="195.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="109.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.25%)</title><rect x="106.4" y="179.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="109.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.25%)</title><rect x="106.4" y="163.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.25%)</title><rect x="106.4" y="147.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.50%)</title><rect x="109.3" y="195.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="112.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.50%)</title><rect x="109.3" y="179.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="112.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.50%)</title><rect x="109.3" y="163.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="112.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.50%)</title><rect x="109.3" y="147.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.50%)</title><rect x="109.3" y="131.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.3" y="142.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.25%)</title><rect x="109.3" y="115.0" width="2.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="112.3" y="126.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.25%)</title><rect x="112.2" y="115.0" width="2.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="115.2" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.25%)</title><rect x="115.1" y="291.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="118.1" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.25%)</title><rect x="115.1" y="275.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.1" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.25%)</title><rect x="115.1" y="259.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.1" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.25%)</title><rect x="115.1" y="243.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.1" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.25%)</title><rect x="115.1" y="227.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.1" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.99%)</title><rect x="118.1" y="307.0" width="11.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.1" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.99%)</title><rect x="118.1" y="291.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="121.1" y="302.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.50%)</title><rect x="118.1" y="275.0" width="5.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="121.1" y="286.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.25%)</title><rect x="118.1" y="259.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="121.1" y="270.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.25%)</title><rect x="121.0" y="259.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="124.0" y="270.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.50%)</title><rect x="123.9" y="275.0" width="5.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="126.9" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=2945] (14 samples, 3.47%)</title><rect x="129.8" y="371.0" width="40.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="132.8" y="382.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14 samples, 3.47%)</title><rect x="129.8" y="355.0" width="40.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.8" y="366.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.99%)</title><rect x="129.8" y="339.0" width="11.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.8" y="350.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.99%)</title><rect x="129.8" y="323.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.8" y="334.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.25%)</title><rect x="129.8" y="307.0" width="2.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="132.8" y="318.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.25%)</title><rect x="132.7" y="307.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="135.7" y="318.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.25%)</title><rect x="135.6" y="307.0" width="2.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="138.6" y="318.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.25%)</title><rect x="138.5" y="307.0" width="2.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="141.5" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (10 samples, 2.48%)</title><rect x="141.4" y="339.0" width="29.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="144.4" y="350.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9 samples, 2.23%)</title><rect x="144.4" y="323.0" width="26.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.4" y="334.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5 samples, 1.24%)</title><rect x="144.4" y="307.0" width="14.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.74%)</title><rect x="144.4" y="291.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="147.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.74%)</title><rect x="144.4" y="275.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.4" y="286.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (3 samples, 0.74%)</title><rect x="144.4" y="259.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="147.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (3 samples, 0.74%)</title><rect x="144.4" y="243.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="147.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.74%)</title><rect x="144.4" y="227.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.74%)</title><rect x="144.4" y="211.0" width="8.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="147.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.25%)</title><rect x="144.4" y="195.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="147.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.25%)</title><rect x="144.4" y="179.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.25%)</title><rect x="144.4" y="163.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.25%)</title><rect x="144.4" y="147.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.25%)</title><rect x="147.3" y="195.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.25%)</title><rect x="147.3" y="179.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.25%)</title><rect x="147.3" y="163.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.25%)</title><rect x="147.3" y="147.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.25%)</title><rect x="147.3" y="131.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.25%)</title><rect x="147.3" y="115.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.3" y="126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.25%)</title><rect x="147.3" y="99.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="150.3" y="110.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.25%)</title><rect x="147.3" y="83.0" width="2.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="150.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.25%)</title><rect x="150.2" y="195.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="153.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.25%)</title><rect x="150.2" y="179.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.25%)</title><rect x="150.2" y="163.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.25%)</title><rect x="150.2" y="147.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.25%)</title><rect x="150.2" y="131.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.2" y="142.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.25%)</title><rect x="150.2" y="115.0" width="2.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="153.2" y="126.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.25%)</title><rect x="150.2" y="99.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="153.2" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.25%)</title><rect x="153.1" y="291.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="156.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.25%)</title><rect x="156.0" y="291.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="159.0" y="302.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.25%)</title><rect x="156.0" y="275.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.0" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.99%)</title><rect x="159.0" y="307.0" width="11.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="162.0" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.99%)</title><rect x="159.0" y="291.0" width="11.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="162.0" y="302.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.50%)</title><rect x="159.0" y="275.0" width="5.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="162.0" y="286.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.25%)</title><rect x="159.0" y="259.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="162.0" y="270.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.25%)</title><rect x="161.9" y="259.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="164.9" y="270.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.50%)</title><rect x="164.8" y="275.0" width="5.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="167.8" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=2946] (15 samples, 3.71%)</title><rect x="170.6" y="371.0" width="43.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="173.6" y="382.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (15 samples, 3.71%)</title><rect x="170.6" y="355.0" width="43.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.6" y="366.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 2.23%)</title><rect x="170.6" y="339.0" width="26.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="173.6" y="350.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 1.49%)</title><rect x="179.4" y="323.0" width="17.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.4" y="334.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.25%)</title><rect x="179.4" y="307.0" width="2.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="182.4" y="318.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.25%)</title><rect x="179.4" y="291.0" width="2.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="182.4" y="302.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.25%)</title><rect x="182.3" y="307.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="185.3" y="318.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.99%)</title><rect x="185.2" y="307.0" width="11.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="188.2" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (6 samples, 1.49%)</title><rect x="196.9" y="339.0" width="17.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="199.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6 samples, 1.49%)</title><rect x="196.9" y="323.0" width="17.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4 samples, 0.99%)</title><rect x="196.9" y="307.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2 samples, 0.50%)</title><rect x="196.9" y="291.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="199.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2 samples, 0.50%)</title><rect x="196.9" y="275.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="199.9" y="286.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (1 samples, 0.25%)</title><rect x="196.9" y="259.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="199.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (1 samples, 0.25%)</title><rect x="196.9" y="243.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.25%)</title><rect x="196.9" y="227.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="199.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.25%)</title><rect x="196.9" y="211.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="199.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.25%)</title><rect x="196.9" y="195.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="199.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.25%)</title><rect x="196.9" y="179.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="199.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.25%)</title><rect x="196.9" y="163.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="199.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.25%)</title><rect x="196.9" y="147.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.25%)</title><rect x="196.9" y="131.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="199.9" y="142.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.25%)</title><rect x="196.9" y="115.0" width="3.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="199.9" y="126.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.25%)</title><rect x="196.9" y="99.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="199.9" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.25%)</title><rect x="199.9" y="259.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="202.9" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.25%)</title><rect x="199.9" y="243.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.9" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.25%)</title><rect x="199.9" y="227.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.25%)</title><rect x="199.9" y="211.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="202.9" y="222.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (1 samples, 0.25%)</title><rect x="199.9" y="195.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="202.9" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.25%)</title><rect x="202.8" y="291.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="205.8" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.25%)</title><rect x="202.8" y="275.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="205.8" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.25%)</title><rect x="202.8" y="259.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="205.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.25%)</title><rect x="205.7" y="291.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.7" y="302.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.25%)</title><rect x="205.7" y="275.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.7" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.25%)</title><rect x="205.7" y="259.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.7" y="270.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.25%)</title><rect x="205.7" y="243.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.7" y="254.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.25%)</title><rect x="205.7" y="227.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.7" y="238.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.25%)</title><rect x="205.7" y="211.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.7" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.50%)</title><rect x="208.6" y="307.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.6" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.50%)</title><rect x="208.6" y="291.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="211.6" y="302.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.25%)</title><rect x="208.6" y="275.0" width="2.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="211.6" y="286.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.25%)</title><rect x="208.6" y="259.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="211.6" y="270.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.25%)</title><rect x="211.5" y="275.0" width="3.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="214.5" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=2947] (14 samples, 3.47%)</title><rect x="214.5" y="371.0" width="40.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="217.5" y="382.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14 samples, 3.47%)</title><rect x="214.5" y="355.0" width="40.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="217.5" y="366.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 1.73%)</title><rect x="214.5" y="339.0" width="20.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.5" y="350.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (7 samples, 1.73%)</title><rect x="214.5" y="323.0" width="20.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="217.5" y="334.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.25%)</title><rect x="217.4" y="307.0" width="2.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="220.4" y="318.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 1.24%)</title><rect x="220.3" y="307.0" width="14.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="223.3" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (7 samples, 1.73%)</title><rect x="234.9" y="339.0" width="20.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="237.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (7 samples, 1.73%)</title><rect x="234.9" y="323.0" width="20.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4 samples, 0.99%)</title><rect x="234.9" y="307.0" width="11.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.74%)</title><rect x="234.9" y="291.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="237.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.50%)</title><rect x="237.8" y="275.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="240.8" y="286.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.50%)</title><rect x="237.8" y="259.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.8" y="270.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.50%)</title><rect x="237.8" y="243.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.8" y="254.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.25%)</title><rect x="237.8" y="227.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.8" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.25%)</title><rect x="240.7" y="227.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="243.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.25%)</title><rect x="243.7" y="291.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="246.7" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 0.74%)</title><rect x="246.6" y="307.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.6" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.74%)</title><rect x="246.6" y="291.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.6" y="302.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.25%)</title><rect x="246.6" y="275.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="249.6" y="286.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.25%)</title><rect x="246.6" y="259.0" width="2.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="249.6" y="270.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.50%)</title><rect x="249.5" y="275.0" width="5.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="252.5" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=2948] (13 samples, 3.22%)</title><rect x="255.3" y="371.0" width="38.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="258.3" y="382.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (13 samples, 3.22%)</title><rect x="255.3" y="355.0" width="38.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.3" y="366.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 1.73%)</title><rect x="255.3" y="339.0" width="20.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="258.3" y="350.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (7 samples, 1.73%)</title><rect x="255.3" y="323.0" width="20.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.3" y="334.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.25%)</title><rect x="264.1" y="307.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="267.1" y="318.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.74%)</title><rect x="267.0" y="307.0" width="8.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="270.0" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (6 samples, 1.49%)</title><rect x="275.8" y="339.0" width="17.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6 samples, 1.49%)</title><rect x="275.8" y="323.0" width="17.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="278.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4 samples, 0.99%)</title><rect x="275.8" y="307.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="278.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.25%)</title><rect x="275.8" y="291.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.25%)</title><rect x="275.8" y="275.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="278.8" y="286.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (1 samples, 0.25%)</title><rect x="275.8" y="259.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="278.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (1 samples, 0.25%)</title><rect x="275.8" y="243.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.25%)</title><rect x="275.8" y="227.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.25%)</title><rect x="275.8" y="211.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.25%)</title><rect x="275.8" y="195.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="278.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.25%)</title><rect x="275.8" y="179.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="278.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.25%)</title><rect x="275.8" y="163.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.25%)</title><rect x="275.8" y="147.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.50%)</title><rect x="278.7" y="291.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="281.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.25%)</title><rect x="278.7" y="275.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.7" y="286.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.25%)</title><rect x="278.7" y="259.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.7" y="270.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.25%)</title><rect x="278.7" y="243.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="281.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.25%)</title><rect x="278.7" y="227.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="281.7" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.25%)</title><rect x="281.6" y="275.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="284.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.25%)</title><rect x="284.6" y="291.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="287.6" y="302.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.25%)</title><rect x="284.6" y="275.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="287.6" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.25%)</title><rect x="284.6" y="259.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="287.6" y="270.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.25%)</title><rect x="284.6" y="243.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.6" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.25%)</title><rect x="284.6" y="227.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="287.6" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.50%)</title><rect x="287.5" y="307.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="290.5" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.50%)</title><rect x="287.5" y="291.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="290.5" y="302.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.25%)</title><rect x="290.4" y="275.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="293.4" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=2949] (17 samples, 4.21%)</title><rect x="293.3" y="371.0" width="49.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="296.3" y="382.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (17 samples, 4.21%)</title><rect x="293.3" y="355.0" width="49.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="296.3" y="366.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 2.23%)</title><rect x="293.3" y="339.0" width="26.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="296.3" y="350.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 2.23%)</title><rect x="293.3" y="323.0" width="26.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="296.3" y="334.0">o..</text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.25%)</title><rect x="296.2" y="307.0" width="3.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="299.2" y="318.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.25%)</title><rect x="299.2" y="307.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="302.2" y="318.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.25%)</title><rect x="302.1" y="307.0" width="2.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="305.1" y="318.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 1.24%)</title><rect x="305.0" y="307.0" width="14.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="308.0" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8 samples, 1.98%)</title><rect x="319.6" y="339.0" width="23.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="322.6" y="350.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8 samples, 1.98%)</title><rect x="319.6" y="323.0" width="23.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="322.6" y="334.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6 samples, 1.49%)</title><rect x="319.6" y="307.0" width="17.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="322.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4 samples, 0.99%)</title><rect x="319.6" y="291.0" width="11.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="322.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4 samples, 0.99%)</title><rect x="319.6" y="275.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="322.6" y="286.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (4 samples, 0.99%)</title><rect x="319.6" y="259.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="322.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (4 samples, 0.99%)</title><rect x="319.6" y="243.0" width="11.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="322.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.25%)</title><rect x="319.6" y="227.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="322.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.25%)</title><rect x="319.6" y="211.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="322.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/345273012.get$Lambda (1 samples, 0.25%)</title><rect x="319.6" y="195.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="322.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/345273012.&lt;init&gt; (1 samples, 0.25%)</title><rect x="319.6" y="179.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="322.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.74%)</title><rect x="322.5" y="227.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.74%)</title><rect x="322.5" y="211.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="325.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.74%)</title><rect x="322.5" y="195.0" width="8.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="325.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.74%)</title><rect x="322.5" y="179.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="325.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.74%)</title><rect x="322.5" y="163.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="325.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.74%)</title><rect x="322.5" y="147.0" width="8.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.74%)</title><rect x="322.5" y="131.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="325.5" y="142.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.25%)</title><rect x="322.5" y="115.0" width="2.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="325.5" y="126.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.50%)</title><rect x="325.4" y="115.0" width="5.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="328.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.25%)</title><rect x="331.3" y="291.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="334.3" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.25%)</title><rect x="331.3" y="275.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="334.3" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.25%)</title><rect x="331.3" y="259.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="334.3" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.25%)</title><rect x="331.3" y="243.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="334.3" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.25%)</title><rect x="331.3" y="227.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="334.3" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.25%)</title><rect x="331.3" y="211.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="334.3" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.25%)</title><rect x="334.2" y="291.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.2" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.25%)</title><rect x="334.2" y="275.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="337.2" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.50%)</title><rect x="337.1" y="307.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="340.1" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.25%)</title><rect x="340.0" y="291.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="343.0" y="302.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.25%)</title><rect x="340.0" y="275.0" width="3.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="343.0" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=2950] (16 samples, 3.96%)</title><rect x="343.0" y="371.0" width="46.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="346.0" y="382.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (16 samples, 3.96%)</title><rect x="343.0" y="355.0" width="46.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="346.0" y="366.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.25%)</title><rect x="343.0" y="339.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="346.0" y="350.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 1.73%)</title><rect x="345.9" y="339.0" width="20.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.9" y="350.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 1.49%)</title><rect x="348.8" y="323.0" width="17.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="351.8" y="334.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.50%)</title><rect x="351.7" y="307.0" width="5.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="354.7" y="318.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.25%)</title><rect x="357.6" y="307.0" width="2.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="360.6" y="318.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.50%)</title><rect x="360.5" y="307.0" width="5.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="363.5" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8 samples, 1.98%)</title><rect x="366.3" y="339.0" width="23.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="369.3" y="350.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (7 samples, 1.73%)</title><rect x="369.3" y="323.0" width="20.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="372.3" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5 samples, 1.24%)</title><rect x="369.3" y="307.0" width="14.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="372.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4 samples, 0.99%)</title><rect x="369.3" y="291.0" width="11.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="372.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4 samples, 0.99%)</title><rect x="369.3" y="275.0" width="11.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="372.3" y="286.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (3 samples, 0.74%)</title><rect x="369.3" y="259.0" width="8.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="372.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.50%)</title><rect x="369.3" y="243.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="372.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.50%)</title><rect x="369.3" y="227.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="372.3" y="238.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.25%)</title><rect x="369.3" y="211.0" width="2.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="372.3" y="222.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.25%)</title><rect x="372.2" y="211.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (1 samples, 0.25%)</title><rect x="375.1" y="243.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="378.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.25%)</title><rect x="375.1" y="227.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="378.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.25%)</title><rect x="375.1" y="211.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.25%)</title><rect x="378.0" y="259.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="381.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.25%)</title><rect x="380.9" y="291.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="383.9" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.50%)</title><rect x="383.9" y="307.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="386.9" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.50%)</title><rect x="383.9" y="291.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="386.9" y="302.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.25%)</title><rect x="383.9" y="275.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="386.9" y="286.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.25%)</title><rect x="383.9" y="259.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="386.9" y="270.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.25%)</title><rect x="386.8" y="275.0" width="2.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="389.8" y="286.0"></text>
</g>
<g>
<title>[async_workers-0 tid=2968] (36 samples, 8.91%)</title><rect x="389.7" y="371.0" width="105.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="392.7" y="382.0">[async_worker..</text>
</g>
<g>
<title>java/lang/Thread.run (36 samples, 8.91%)</title><rect x="389.7" y="355.0" width="105.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.7" y="366.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (36 samples, 8.91%)</title><rect x="389.7" y="339.0" width="105.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="392.7" y="350.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (36 samples, 8.91%)</title><rect x="389.7" y="323.0" width="105.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="392.7" y="334.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (15 samples, 3.71%)</title><rect x="389.7" y="307.0" width="43.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="392.7" y="318.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (14 samples, 3.47%)</title><rect x="392.6" y="291.0" width="40.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="395.6" y="302.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (12 samples, 2.97%)</title><rect x="392.6" y="275.0" width="35.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.6" y="286.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.25%)</title><rect x="392.6" y="259.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.25%)</title><rect x="392.6" y="243.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="395.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.25%)</title><rect x="392.6" y="227.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="395.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.50%)</title><rect x="395.5" y="259.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="398.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.50%)</title><rect x="395.5" y="243.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.50%)</title><rect x="395.5" y="227.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="398.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.50%)</title><rect x="395.5" y="211.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.50%)</title><rect x="395.5" y="195.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="398.5" y="206.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.25%)</title><rect x="395.5" y="179.0" width="3.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="398.5" y="190.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.25%)</title><rect x="395.5" y="163.0" width="3.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="398.5" y="174.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.25%)</title><rect x="398.5" y="179.0" width="2.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="401.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 2.23%)</title><rect x="401.4" y="259.0" width="26.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="404.4" y="270.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 2.23%)</title><rect x="401.4" y="243.0" width="26.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="404.4" y="254.0">j..</text>
</g>
<g>
<title>Unsafe_Park (5 samples, 1.24%)</title><rect x="401.4" y="227.0" width="14.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="404.4" y="238.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.25%)</title><rect x="404.3" y="211.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="407.3" y="222.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.25%)</title><rect x="407.2" y="211.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="410.2" y="222.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.25%)</title><rect x="407.2" y="195.0" width="2.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="410.2" y="206.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.50%)</title><rect x="410.1" y="211.0" width="5.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="413.1" y="222.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.99%)</title><rect x="416.0" y="227.0" width="11.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="419.0" y="238.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (4 samples, 0.99%)</title><rect x="416.0" y="211.0" width="11.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="419.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.50%)</title><rect x="427.7" y="275.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="430.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.50%)</title><rect x="427.7" y="259.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="430.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.50%)</title><rect x="427.7" y="243.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.50%)</title><rect x="427.7" y="227.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.25%)</title><rect x="430.6" y="211.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="433.6" y="222.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.25%)</title><rect x="430.6" y="195.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="433.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/345273012.run (21 samples, 5.20%)</title><rect x="433.5" y="307.0" width="61.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="436.5" y="318.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (21 samples, 5.20%)</title><rect x="433.5" y="291.0" width="61.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.5" y="302.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 1.49%)</title><rect x="433.5" y="275.0" width="17.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="436.5" y="286.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.50%)</title><rect x="433.5" y="259.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.5" y="270.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.50%)</title><rect x="433.5" y="243.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.5" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.50%)</title><rect x="433.5" y="227.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.5" y="238.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.25%)</title><rect x="436.4" y="211.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="439.4" y="222.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.25%)</title><rect x="436.4" y="195.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.4" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.99%)</title><rect x="439.4" y="259.0" width="11.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="442.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.50%)</title><rect x="439.4" y="243.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.4" y="254.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.25%)</title><rect x="439.4" y="227.0" width="2.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="442.4" y="238.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.25%)</title><rect x="442.3" y="227.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="445.3" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.50%)</title><rect x="445.2" y="243.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="448.2" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.50%)</title><rect x="445.2" y="227.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="448.2" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.50%)</title><rect x="445.2" y="211.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="448.2" y="222.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.50%)</title><rect x="445.2" y="195.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="448.2" y="206.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.25%)</title><rect x="445.2" y="179.0" width="2.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="448.2" y="190.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.25%)</title><rect x="445.2" y="163.0" width="2.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="448.2" y="174.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.25%)</title><rect x="448.1" y="179.0" width="2.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="451.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (15 samples, 3.71%)</title><rect x="451.0" y="275.0" width="43.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="454.0" y="286.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (15 samples, 3.71%)</title><rect x="451.0" y="259.0" width="43.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="454.0" y="270.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (15 samples, 3.71%)</title><rect x="451.0" y="243.0" width="43.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="454.0" y="254.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (14 samples, 3.47%)</title><rect x="451.0" y="227.0" width="40.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="454.0" y="238.0">Jav..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.25%)</title><rect x="454.0" y="211.0" width="2.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="457.0" y="222.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.25%)</title><rect x="456.9" y="211.0" width="2.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="459.9" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (11 samples, 2.72%)</title><rect x="459.8" y="211.0" width="32.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="462.8" y="222.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (9 samples, 2.23%)</title><rect x="459.8" y="195.0" width="26.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="462.8" y="206.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (9 samples, 2.23%)</title><rect x="459.8" y="179.0" width="26.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="462.8" y="190.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (9 samples, 2.23%)</title><rect x="459.8" y="163.0" width="26.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="462.8" y="174.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (9 samples, 2.23%)</title><rect x="459.8" y="147.0" width="26.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="462.8" y="158.0">r..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.25%)</title><rect x="459.8" y="131.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="462.8" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (8 samples, 1.98%)</title><rect x="462.7" y="131.0" width="23.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="465.7" y="142.0">r..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.25%)</title><rect x="462.7" y="115.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="465.7" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (6 samples, 1.49%)</title><rect x="465.6" y="115.0" width="17.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="468.6" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (6 samples, 1.49%)</title><rect x="465.6" y="99.0" width="17.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="468.6" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (6 samples, 1.49%)</title><rect x="465.6" y="83.0" width="17.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="468.6" y="94.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (6 samples, 1.49%)</title><rect x="465.6" y="67.0" width="17.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="468.6" y="78.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.25%)</title><rect x="471.5" y="51.0" width="2.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="474.5" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.74%)</title><rect x="474.4" y="51.0" width="8.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="477.4" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.25%)</title><rect x="474.4" y="35.0" width="2.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="477.4" y="46.0"></text>
</g>
<g>
<title>memcmp@plt (2 samples, 0.50%)</title><rect x="477.3" y="35.0" width="5.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="480.3" y="46.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.25%)</title><rect x="483.2" y="115.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="486.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.50%)</title><rect x="486.1" y="195.0" width="5.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="489.1" y="206.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.50%)</title><rect x="486.1" y="179.0" width="5.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="489.1" y="190.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.25%)</title><rect x="486.1" y="163.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="489.1" y="174.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.25%)</title><rect x="489.0" y="163.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="492.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.25%)</title><rect x="491.9" y="227.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="494.9" y="238.0"></text>
</g>
<g>
<title>[async_workers-1 tid=2974] (32 samples, 7.92%)</title><rect x="494.9" y="371.0" width="93.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="497.9" y="382.0">[async_work..</text>
</g>
<g>
<title>java/lang/Thread.run (32 samples, 7.92%)</title><rect x="494.9" y="355.0" width="93.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.9" y="366.0">java/lang/T..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (32 samples, 7.92%)</title><rect x="494.9" y="339.0" width="93.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="497.9" y="350.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (32 samples, 7.92%)</title><rect x="494.9" y="323.0" width="93.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.9" y="334.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (14 samples, 3.47%)</title><rect x="494.9" y="307.0" width="40.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.9" y="318.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (14 samples, 3.47%)</title><rect x="494.9" y="291.0" width="40.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.9" y="302.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (12 samples, 2.97%)</title><rect x="494.9" y="275.0" width="35.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.9" y="286.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.50%)</title><rect x="500.7" y="259.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="503.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.25%)</title><rect x="503.6" y="243.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="506.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.25%)</title><rect x="503.6" y="227.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="506.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.set (1 samples, 0.25%)</title><rect x="503.6" y="211.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.6" y="222.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.25%)</title><rect x="503.6" y="195.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.25%)</title><rect x="506.5" y="259.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="509.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.25%)</title><rect x="506.5" y="243.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.25%)</title><rect x="506.5" y="227.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="509.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 1.73%)</title><rect x="509.5" y="259.0" width="20.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="512.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 1.73%)</title><rect x="509.5" y="243.0" width="20.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="512.5" y="254.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 1.73%)</title><rect x="509.5" y="227.0" width="20.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="512.5" y="238.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.25%)</title><rect x="509.5" y="211.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="512.5" y="222.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.99%)</title><rect x="512.4" y="211.0" width="11.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="515.4" y="222.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.25%)</title><rect x="515.3" y="195.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="518.3" y="206.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.25%)</title><rect x="515.3" y="179.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="518.3" y="190.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (2 samples, 0.50%)</title><rect x="518.2" y="195.0" width="5.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="521.2" y="206.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.25%)</title><rect x="524.1" y="211.0" width="2.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="527.1" y="222.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.25%)</title><rect x="527.0" y="211.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="530.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.50%)</title><rect x="529.9" y="275.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="532.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.50%)</title><rect x="529.9" y="259.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.50%)</title><rect x="529.9" y="243.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="532.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.50%)</title><rect x="529.9" y="227.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="532.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.25%)</title><rect x="532.8" y="211.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="535.8" y="222.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.25%)</title><rect x="532.8" y="195.0" width="2.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="535.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/345273012.run (18 samples, 4.46%)</title><rect x="535.7" y="307.0" width="52.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="538.7" y="318.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (18 samples, 4.46%)</title><rect x="535.7" y="291.0" width="52.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="538.7" y="302.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.74%)</title><rect x="535.7" y="275.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="538.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.74%)</title><rect x="535.7" y="259.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="538.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.25%)</title><rect x="535.7" y="243.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.7" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.50%)</title><rect x="538.7" y="243.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.7" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.50%)</title><rect x="538.7" y="227.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.7" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.50%)</title><rect x="538.7" y="211.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="541.7" y="222.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.50%)</title><rect x="538.7" y="195.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="541.7" y="206.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.25%)</title><rect x="538.7" y="179.0" width="2.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="541.7" y="190.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.25%)</title><rect x="538.7" y="163.0" width="2.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="541.7" y="174.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.25%)</title><rect x="541.6" y="179.0" width="2.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="544.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.25%)</title><rect x="544.5" y="275.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.5" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.25%)</title><rect x="544.5" y="259.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.5" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.25%)</title><rect x="544.5" y="243.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.5" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.25%)</title><rect x="544.5" y="227.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (14 samples, 3.47%)</title><rect x="547.4" y="275.0" width="40.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="550.4" y="286.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (14 samples, 3.47%)</title><rect x="547.4" y="259.0" width="40.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="550.4" y="270.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (14 samples, 3.47%)</title><rect x="547.4" y="243.0" width="40.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="550.4" y="254.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (13 samples, 3.22%)</title><rect x="547.4" y="227.0" width="38.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="550.4" y="238.0">Jav..</text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.25%)</title><rect x="547.4" y="211.0" width="2.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="550.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.25%)</title><rect x="550.3" y="211.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="553.3" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (11 samples, 2.72%)</title><rect x="553.3" y="211.0" width="32.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="556.3" y="222.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (9 samples, 2.23%)</title><rect x="553.3" y="195.0" width="26.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="556.3" y="206.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (9 samples, 2.23%)</title><rect x="553.3" y="179.0" width="26.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="556.3" y="190.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (9 samples, 2.23%)</title><rect x="553.3" y="163.0" width="26.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="556.3" y="174.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (9 samples, 2.23%)</title><rect x="553.3" y="147.0" width="26.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="556.3" y="158.0">r..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.25%)</title><rect x="553.3" y="131.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="556.3" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (8 samples, 1.98%)</title><rect x="556.2" y="131.0" width="23.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="559.2" y="142.0">r..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.25%)</title><rect x="556.2" y="115.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="559.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (5 samples, 1.24%)</title><rect x="559.1" y="115.0" width="14.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="562.1" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (5 samples, 1.24%)</title><rect x="559.1" y="99.0" width="14.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="562.1" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (5 samples, 1.24%)</title><rect x="559.1" y="83.0" width="14.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="562.1" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.25%)</title><rect x="559.1" y="67.0" width="2.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="562.1" y="78.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (4 samples, 0.99%)</title><rect x="562.0" y="67.0" width="11.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="565.0" y="78.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.25%)</title><rect x="570.8" y="51.0" width="2.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="573.8" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) [clone .plt] (1 samples, 0.25%)</title><rect x="573.7" y="115.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="576.7" y="126.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.25%)</title><rect x="576.6" y="115.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="579.6" y="126.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.50%)</title><rect x="579.6" y="195.0" width="5.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="582.6" y="206.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.25%)</title><rect x="579.6" y="179.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="582.6" y="190.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.25%)</title><rect x="582.5" y="179.0" width="2.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="585.5" y="190.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.25%)</title><rect x="582.5" y="163.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="585.5" y="174.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.25%)</title><rect x="582.5" y="147.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="585.5" y="158.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.25%)</title><rect x="582.5" y="131.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="585.5" y="142.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.25%)</title><rect x="582.5" y="115.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="585.5" y="126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.25%)</title><rect x="585.4" y="227.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="588.4" y="238.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.25%)</title><rect x="585.4" y="211.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="588.4" y="222.0"></text>
</g>
<g>
<title>[async_workers-2 tid=2967] (35 samples, 8.66%)</title><rect x="588.3" y="371.0" width="102.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="591.3" y="382.0">[async_worke..</text>
</g>
<g>
<title>java/lang/Thread.run (35 samples, 8.66%)</title><rect x="588.3" y="355.0" width="102.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.3" y="366.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (35 samples, 8.66%)</title><rect x="588.3" y="339.0" width="102.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.3" y="350.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (35 samples, 8.66%)</title><rect x="588.3" y="323.0" width="102.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.3" y="334.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 2.72%)</title><rect x="588.3" y="307.0" width="32.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.3" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (11 samples, 2.72%)</title><rect x="588.3" y="291.0" width="32.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="591.3" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 1.73%)</title><rect x="588.3" y="275.0" width="20.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="591.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.25%)</title><rect x="588.3" y="259.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.25%)</title><rect x="588.3" y="243.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.25%)</title><rect x="588.3" y="227.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 1.49%)</title><rect x="591.2" y="259.0" width="17.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 1.49%)</title><rect x="591.2" y="243.0" width="17.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="594.2" y="254.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 1.24%)</title><rect x="591.2" y="227.0" width="14.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="594.2" y="238.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.25%)</title><rect x="591.2" y="211.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="594.2" y="222.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.25%)</title><rect x="594.2" y="211.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="597.2" y="222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.25%)</title><rect x="597.1" y="211.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="600.1" y="222.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.25%)</title><rect x="600.0" y="211.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="603.0" y="222.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.25%)</title><rect x="602.9" y="211.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="605.9" y="222.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.25%)</title><rect x="605.8" y="227.0" width="3.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="608.8" y="238.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.25%)</title><rect x="605.8" y="211.0" width="3.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="608.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.99%)</title><rect x="608.8" y="275.0" width="11.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="611.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.99%)</title><rect x="608.8" y="259.0" width="11.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="611.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.99%)</title><rect x="608.8" y="243.0" width="11.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="611.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.99%)</title><rect x="608.8" y="227.0" width="11.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.74%)</title><rect x="611.7" y="211.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="614.7" y="222.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.50%)</title><rect x="611.7" y="195.0" width="5.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="614.7" y="206.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.25%)</title><rect x="611.7" y="179.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="614.7" y="190.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.25%)</title><rect x="614.6" y="179.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="617.6" y="190.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.25%)</title><rect x="617.5" y="195.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="620.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/345273012.run (24 samples, 5.94%)</title><rect x="620.4" y="307.0" width="70.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="623.4" y="318.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (24 samples, 5.94%)</title><rect x="620.4" y="291.0" width="70.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="623.4" y="302.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.99%)</title><rect x="620.4" y="275.0" width="11.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.4" y="286.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.25%)</title><rect x="623.4" y="259.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="626.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.25%)</title><rect x="623.4" y="243.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="626.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.25%)</title><rect x="623.4" y="227.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="626.4" y="238.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.25%)</title><rect x="623.4" y="211.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.4" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.50%)</title><rect x="626.3" y="259.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="629.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.25%)</title><rect x="626.3" y="243.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.3" y="254.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.25%)</title><rect x="626.3" y="227.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.3" y="238.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.25%)</title><rect x="626.3" y="211.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.3" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.25%)</title><rect x="629.2" y="243.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.2" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.25%)</title><rect x="629.2" y="227.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.2" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.25%)</title><rect x="629.2" y="211.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.2" y="222.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.25%)</title><rect x="629.2" y="195.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.2" y="206.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.25%)</title><rect x="629.2" y="179.0" width="2.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="632.2" y="190.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.25%)</title><rect x="629.2" y="163.0" width="2.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="632.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (20 samples, 4.95%)</title><rect x="632.1" y="275.0" width="58.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.1" y="286.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (19 samples, 4.70%)</title><rect x="632.1" y="259.0" width="55.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.1" y="270.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (19 samples, 4.70%)</title><rect x="632.1" y="243.0" width="55.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.1" y="254.0">org/r..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (16 samples, 3.96%)</title><rect x="632.1" y="227.0" width="46.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="635.1" y="238.0">Java..</text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (1 samples, 0.25%)</title><rect x="632.1" y="211.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="635.1" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (15 samples, 3.71%)</title><rect x="635.0" y="211.0" width="43.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="638.0" y="222.0">rock..</text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.25%)</title><rect x="635.0" y="195.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="638.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (11 samples, 2.72%)</title><rect x="638.0" y="195.0" width="32.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="641.0" y="206.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (11 samples, 2.72%)</title><rect x="638.0" y="179.0" width="32.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="641.0" y="190.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (10 samples, 2.48%)</title><rect x="640.9" y="163.0" width="29.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="643.9" y="174.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (10 samples, 2.48%)</title><rect x="640.9" y="147.0" width="29.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="643.9" y="158.0">ro..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (1 samples, 0.25%)</title><rect x="640.9" y="131.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="643.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (8 samples, 1.98%)</title><rect x="643.8" y="131.0" width="23.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="646.8" y="142.0">r..</text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.25%)</title><rect x="643.8" y="115.0" width="2.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="646.8" y="126.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.25%)</title><rect x="646.7" y="115.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="649.7" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (6 samples, 1.49%)</title><rect x="649.7" y="115.0" width="17.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="652.7" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (6 samples, 1.49%)</title><rect x="649.7" y="99.0" width="17.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="652.7" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (6 samples, 1.49%)</title><rect x="649.7" y="83.0" width="17.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="652.7" y="94.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (5 samples, 1.24%)</title><rect x="649.7" y="67.0" width="14.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="652.7" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.25%)</title><rect x="661.3" y="51.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="664.3" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.25%)</title><rect x="661.3" y="35.0" width="3.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="664.3" y="46.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.25%)</title><rect x="664.3" y="67.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="667.3" y="78.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.25%)</title><rect x="667.2" y="131.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="670.2" y="142.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.50%)</title><rect x="670.1" y="195.0" width="5.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="673.1" y="206.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.50%)</title><rect x="670.1" y="179.0" width="5.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="673.1" y="190.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.50%)</title><rect x="670.1" y="163.0" width="5.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="673.1" y="174.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.50%)</title><rect x="670.1" y="147.0" width="5.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="673.1" y="158.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.50%)</title><rect x="670.1" y="131.0" width="5.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="673.1" y="142.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.25%)</title><rect x="670.1" y="115.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="673.1" y="126.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.25%)</title><rect x="673.0" y="115.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="676.0" y="126.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.25%)</title><rect x="675.9" y="195.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="678.9" y="206.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.50%)</title><rect x="678.9" y="227.0" width="5.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="681.9" y="238.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.25%)</title><rect x="678.9" y="211.0" width="2.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="681.9" y="222.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.25%)</title><rect x="681.8" y="211.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="684.8" y="222.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.25%)</title><rect x="684.7" y="227.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="687.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArraySpecial (1 samples, 0.25%)</title><rect x="687.6" y="259.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.25%)</title><rect x="687.6" y="243.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.6" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.25%)</title><rect x="687.6" y="227.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="690.6" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.25%)</title><rect x="687.6" y="211.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.6" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.25%)</title><rect x="687.6" y="195.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.6" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.25%)</title><rect x="687.6" y="179.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="690.6" y="190.0"></text>
</g>
<g>
<title>[async_workers-3 tid=2970] (35 samples, 8.66%)</title><rect x="690.5" y="371.0" width="102.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="693.5" y="382.0">[async_worke..</text>
</g>
<g>
<title>java/lang/Thread.run (35 samples, 8.66%)</title><rect x="690.5" y="355.0" width="102.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="693.5" y="366.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (35 samples, 8.66%)</title><rect x="690.5" y="339.0" width="102.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.5" y="350.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (35 samples, 8.66%)</title><rect x="690.5" y="323.0" width="102.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="693.5" y="334.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 2.72%)</title><rect x="690.5" y="307.0" width="32.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.5" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (10 samples, 2.48%)</title><rect x="693.5" y="291.0" width="29.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.5" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 1.49%)</title><rect x="693.5" y="275.0" width="17.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.25%)</title><rect x="693.5" y="259.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.25%)</title><rect x="693.5" y="243.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.25%)</title><rect x="693.5" y="227.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 1.24%)</title><rect x="696.4" y="259.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 1.24%)</title><rect x="696.4" y="243.0" width="14.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="699.4" y="254.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.74%)</title><rect x="696.4" y="227.0" width="8.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="699.4" y="238.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.50%)</title><rect x="699.3" y="211.0" width="5.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="702.3" y="222.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.50%)</title><rect x="705.1" y="227.0" width="5.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="708.1" y="238.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.25%)</title><rect x="705.1" y="211.0" width="3.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="708.1" y="222.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.25%)</title><rect x="708.1" y="211.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="711.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.99%)</title><rect x="711.0" y="275.0" width="11.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="714.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.99%)</title><rect x="711.0" y="259.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.99%)</title><rect x="711.0" y="243.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.99%)</title><rect x="711.0" y="227.0" width="11.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.25%)</title><rect x="711.0" y="211.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="714.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.74%)</title><rect x="713.9" y="211.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="716.9" y="222.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.74%)</title><rect x="713.9" y="195.0" width="8.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="716.9" y="206.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.50%)</title><rect x="713.9" y="179.0" width="5.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="716.9" y="190.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.25%)</title><rect x="719.8" y="179.0" width="2.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="722.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/345273012.run (24 samples, 5.94%)</title><rect x="722.7" y="307.0" width="70.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.7" y="318.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (24 samples, 5.94%)</title><rect x="722.7" y="291.0" width="70.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="725.7" y="302.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 1.49%)</title><rect x="722.7" y="275.0" width="17.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 1.24%)</title><rect x="722.7" y="259.0" width="14.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="725.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.25%)</title><rect x="722.7" y="243.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.7" y="254.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.25%)</title><rect x="722.7" y="227.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="725.7" y="238.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.25%)</title><rect x="722.7" y="211.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="725.7" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.99%)</title><rect x="725.6" y="243.0" width="11.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="728.6" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.99%)</title><rect x="725.6" y="227.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="728.6" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.99%)</title><rect x="725.6" y="211.0" width="11.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="728.6" y="222.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.99%)</title><rect x="725.6" y="195.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="728.6" y="206.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.50%)</title><rect x="728.5" y="179.0" width="5.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="731.5" y="190.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.25%)</title><rect x="734.4" y="179.0" width="2.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="737.4" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.25%)</title><rect x="737.3" y="259.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (18 samples, 4.46%)</title><rect x="740.2" y="275.0" width="52.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.2" y="286.0">ru/ma..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (18 samples, 4.46%)</title><rect x="740.2" y="259.0" width="52.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="743.2" y="270.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (18 samples, 4.46%)</title><rect x="740.2" y="243.0" width="52.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.2" y="254.0">org/r..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (17 samples, 4.21%)</title><rect x="740.2" y="227.0" width="49.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="743.2" y="238.0">Java_..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.25%)</title><rect x="740.2" y="211.0" width="2.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="743.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.25%)</title><rect x="743.1" y="211.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="746.1" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (15 samples, 3.71%)</title><rect x="746.0" y="211.0" width="43.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="749.0" y="222.0">rock..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.25%)</title><rect x="746.0" y="195.0" width="3.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="749.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (12 samples, 2.97%)</title><rect x="749.0" y="195.0" width="35.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="752.0" y="206.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (12 samples, 2.97%)</title><rect x="749.0" y="179.0" width="35.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="752.0" y="190.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (12 samples, 2.97%)</title><rect x="749.0" y="163.0" width="35.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="752.0" y="174.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (11 samples, 2.72%)</title><rect x="749.0" y="147.0" width="32.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="752.0" y="158.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (11 samples, 2.72%)</title><rect x="749.0" y="131.0" width="32.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="752.0" y="142.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (8 samples, 1.98%)</title><rect x="749.0" y="115.0" width="23.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="752.0" y="126.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (8 samples, 1.98%)</title><rect x="749.0" y="99.0" width="23.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="752.0" y="110.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (8 samples, 1.98%)</title><rect x="749.0" y="83.0" width="23.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="752.0" y="94.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.25%)</title><rect x="749.0" y="67.0" width="2.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="752.0" y="78.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (7 samples, 1.73%)</title><rect x="751.9" y="67.0" width="20.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="754.9" y="78.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.50%)</title><rect x="763.6" y="51.0" width="5.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="766.6" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.25%)</title><rect x="769.4" y="51.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="772.4" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.25%)</title><rect x="769.4" y="35.0" width="2.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="772.4" y="46.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (1 samples, 0.25%)</title><rect x="772.3" y="115.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="775.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.25%)</title><rect x="775.2" y="115.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="778.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.25%)</title><rect x="778.2" y="115.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="781.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (1 samples, 0.25%)</title><rect x="781.1" y="147.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="784.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.50%)</title><rect x="784.0" y="195.0" width="5.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="787.0" y="206.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.25%)</title><rect x="784.0" y="179.0" width="2.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="787.0" y="190.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.25%)</title><rect x="784.0" y="163.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="787.0" y="174.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.25%)</title><rect x="786.9" y="179.0" width="3.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="789.9" y="190.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.25%)</title><rect x="789.9" y="227.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="792.9" y="238.0"></text>
</g>
<g>
<title>[async_workers-4 tid=2975] (28 samples, 6.93%)</title><rect x="792.8" y="371.0" width="81.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="795.8" y="382.0">[async_wo..</text>
</g>
<g>
<title>java/lang/Thread.run (28 samples, 6.93%)</title><rect x="792.8" y="355.0" width="81.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="795.8" y="366.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (28 samples, 6.93%)</title><rect x="792.8" y="339.0" width="81.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="795.8" y="350.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (28 samples, 6.93%)</title><rect x="792.8" y="323.0" width="81.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="795.8" y="334.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (10 samples, 2.48%)</title><rect x="792.8" y="307.0" width="29.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.8" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (10 samples, 2.48%)</title><rect x="792.8" y="291.0" width="29.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="795.8" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 2.23%)</title><rect x="792.8" y="275.0" width="26.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="795.8" y="286.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 2.23%)</title><rect x="792.8" y="259.0" width="26.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.8" y="270.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 2.23%)</title><rect x="792.8" y="243.0" width="26.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="795.8" y="254.0">j..</text>
</g>
<g>
<title>Unsafe_Park (7 samples, 1.73%)</title><rect x="792.8" y="227.0" width="20.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="795.8" y="238.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.25%)</title><rect x="792.8" y="211.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="795.8" y="222.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.25%)</title><rect x="792.8" y="195.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="795.8" y="206.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (5 samples, 1.24%)</title><rect x="795.7" y="211.0" width="14.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="798.7" y="222.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.25%)</title><rect x="810.3" y="211.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="813.3" y="222.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.50%)</title><rect x="813.2" y="227.0" width="5.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="816.2" y="238.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.25%)</title><rect x="813.2" y="211.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="816.2" y="222.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.25%)</title><rect x="816.1" y="211.0" width="3.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="819.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.25%)</title><rect x="819.1" y="275.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.25%)</title><rect x="819.1" y="259.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.25%)</title><rect x="819.1" y="243.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.25%)</title><rect x="819.1" y="227.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.25%)</title><rect x="819.1" y="211.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="822.1" y="222.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.25%)</title><rect x="819.1" y="195.0" width="2.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="822.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/345273012.run (18 samples, 4.46%)</title><rect x="822.0" y="307.0" width="52.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.0" y="318.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (18 samples, 4.46%)</title><rect x="822.0" y="291.0" width="52.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.0" y="302.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.74%)</title><rect x="827.8" y="275.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.74%)</title><rect x="827.8" y="259.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.8" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.74%)</title><rect x="827.8" y="243.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="830.8" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.74%)</title><rect x="827.8" y="227.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="830.8" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.74%)</title><rect x="827.8" y="211.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="830.8" y="222.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.74%)</title><rect x="827.8" y="195.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.8" y="206.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.50%)</title><rect x="830.7" y="179.0" width="5.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="833.7" y="190.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.25%)</title><rect x="833.7" y="163.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="836.7" y="174.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.25%)</title><rect x="833.7" y="147.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="836.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (13 samples, 3.22%)</title><rect x="836.6" y="275.0" width="38.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="839.6" y="286.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (13 samples, 3.22%)</title><rect x="836.6" y="259.0" width="38.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.6" y="270.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (13 samples, 3.22%)</title><rect x="836.6" y="243.0" width="38.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="839.6" y="254.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (12 samples, 2.97%)</title><rect x="836.6" y="227.0" width="35.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="839.6" y="238.0">Jav..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.25%)</title><rect x="836.6" y="211.0" width="2.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="839.6" y="222.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.25%)</title><rect x="839.5" y="211.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="842.5" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (10 samples, 2.48%)</title><rect x="842.4" y="211.0" width="29.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="845.4" y="222.0">ro..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.25%)</title><rect x="842.4" y="195.0" width="2.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="845.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (7 samples, 1.73%)</title><rect x="845.3" y="195.0" width="20.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="848.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (7 samples, 1.73%)</title><rect x="845.3" y="179.0" width="20.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="848.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (7 samples, 1.73%)</title><rect x="845.3" y="163.0" width="20.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="848.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (7 samples, 1.73%)</title><rect x="845.3" y="147.0" width="20.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="848.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (5 samples, 1.24%)</title><rect x="845.3" y="131.0" width="14.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="848.3" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (3 samples, 0.74%)</title><rect x="845.3" y="115.0" width="8.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="848.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (3 samples, 0.74%)</title><rect x="845.3" y="99.0" width="8.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="848.3" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (3 samples, 0.74%)</title><rect x="845.3" y="83.0" width="8.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="848.3" y="94.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (3 samples, 0.74%)</title><rect x="845.3" y="67.0" width="8.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="848.3" y="78.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.25%)</title><rect x="845.3" y="51.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="848.3" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.50%)</title><rect x="848.3" y="51.0" width="5.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="851.3" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.25%)</title><rect x="851.2" y="35.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="854.2" y="46.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.25%)</title><rect x="854.1" y="115.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="857.1" y="126.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.25%)</title><rect x="857.0" y="115.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="860.0" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.25%)</title><rect x="860.0" y="131.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="863.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.25%)</title><rect x="862.9" y="131.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="865.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.50%)</title><rect x="865.8" y="195.0" width="5.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="868.8" y="206.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.25%)</title><rect x="865.8" y="179.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="868.8" y="190.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.25%)</title><rect x="868.7" y="179.0" width="2.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="871.7" y="190.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.25%)</title><rect x="871.6" y="227.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="874.6" y="238.0"></text>
</g>
<g>
<title>[async_workers-5 tid=2973] (31 samples, 7.67%)</title><rect x="874.6" y="371.0" width="90.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="877.6" y="382.0">[async_wor..</text>
</g>
<g>
<title>java/lang/Thread.run (31 samples, 7.67%)</title><rect x="874.6" y="355.0" width="90.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="877.6" y="366.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (31 samples, 7.67%)</title><rect x="874.6" y="339.0" width="90.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="877.6" y="350.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (31 samples, 7.67%)</title><rect x="874.6" y="323.0" width="90.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="877.6" y="334.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 2.23%)</title><rect x="874.6" y="307.0" width="26.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="877.6" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 2.23%)</title><rect x="874.6" y="291.0" width="26.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="877.6" y="302.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 1.49%)</title><rect x="874.6" y="275.0" width="17.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="877.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.25%)</title><rect x="877.5" y="259.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="880.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.25%)</title><rect x="877.5" y="243.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="880.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.25%)</title><rect x="877.5" y="227.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="880.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.25%)</title><rect x="877.5" y="211.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="880.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.25%)</title><rect x="877.5" y="195.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="880.5" y="206.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.25%)</title><rect x="877.5" y="179.0" width="2.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="880.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.99%)</title><rect x="880.4" y="259.0" width="11.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="883.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.99%)</title><rect x="880.4" y="243.0" width="11.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="883.4" y="254.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.25%)</title><rect x="883.3" y="227.0" width="2.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="886.3" y="238.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.25%)</title><rect x="883.3" y="211.0" width="2.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="886.3" y="222.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.50%)</title><rect x="886.2" y="227.0" width="5.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="889.2" y="238.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.50%)</title><rect x="886.2" y="211.0" width="5.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="889.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.74%)</title><rect x="892.1" y="275.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="895.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.74%)</title><rect x="892.1" y="259.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="895.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.74%)</title><rect x="892.1" y="243.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="895.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.74%)</title><rect x="892.1" y="227.0" width="8.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="895.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.74%)</title><rect x="892.1" y="211.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="895.1" y="222.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.25%)</title><rect x="892.1" y="195.0" width="2.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="895.1" y="206.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.25%)</title><rect x="892.1" y="179.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="895.1" y="190.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.50%)</title><rect x="895.0" y="195.0" width="5.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="898.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/345273012.run (22 samples, 5.45%)</title><rect x="900.8" y="307.0" width="64.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="903.8" y="318.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (22 samples, 5.45%)</title><rect x="900.8" y="291.0" width="64.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="903.8" y="302.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.isEmpty (2 samples, 0.50%)</title><rect x="900.8" y="275.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="903.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.50%)</title><rect x="900.8" y="259.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="903.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 1.49%)</title><rect x="906.7" y="275.0" width="17.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 1.49%)</title><rect x="906.7" y="259.0" width="17.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="909.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.25%)</title><rect x="906.7" y="243.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.7" y="254.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.25%)</title><rect x="906.7" y="227.0" width="2.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="909.7" y="238.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.25%)</title><rect x="906.7" y="211.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="909.7" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.24%)</title><rect x="909.6" y="243.0" width="14.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="912.6" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.24%)</title><rect x="909.6" y="227.0" width="14.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="912.6" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 1.24%)</title><rect x="909.6" y="211.0" width="14.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="912.6" y="222.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 1.24%)</title><rect x="909.6" y="195.0" width="14.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="912.6" y="206.0"></text>
</g>
<g>
<title>__libc_send (5 samples, 1.24%)</title><rect x="909.6" y="179.0" width="14.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="912.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (14 samples, 3.47%)</title><rect x="924.2" y="275.0" width="40.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="927.2" y="286.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (13 samples, 3.22%)</title><rect x="924.2" y="259.0" width="38.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="927.2" y="270.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (13 samples, 3.22%)</title><rect x="924.2" y="243.0" width="38.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="927.2" y="254.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (11 samples, 2.72%)</title><rect x="924.2" y="227.0" width="32.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="927.2" y="238.0">Ja..</text>
</g>
<g>
<title>malloc (1 samples, 0.25%)</title><rect x="924.2" y="211.0" width="2.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="927.2" y="222.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.50%)</title><rect x="927.1" y="211.0" width="5.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="930.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.25%)</title><rect x="933.0" y="211.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="936.0" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (7 samples, 1.73%)</title><rect x="935.9" y="211.0" width="20.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="938.9" y="222.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.25%)</title><rect x="935.9" y="195.0" width="2.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="938.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (4 samples, 0.99%)</title><rect x="938.8" y="195.0" width="11.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="941.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (4 samples, 0.99%)</title><rect x="938.8" y="179.0" width="11.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="941.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (4 samples, 0.99%)</title><rect x="938.8" y="163.0" width="11.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="941.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (4 samples, 0.99%)</title><rect x="938.8" y="147.0" width="11.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="941.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (4 samples, 0.99%)</title><rect x="938.8" y="131.0" width="11.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="941.8" y="142.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.50%)</title><rect x="938.8" y="115.0" width="5.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="941.8" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (2 samples, 0.50%)</title><rect x="944.7" y="115.0" width="5.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="947.7" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (2 samples, 0.50%)</title><rect x="944.7" y="99.0" width="5.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="947.7" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (2 samples, 0.50%)</title><rect x="944.7" y="83.0" width="5.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="947.7" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.25%)</title><rect x="944.7" y="67.0" width="2.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="947.7" y="78.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.25%)</title><rect x="947.6" y="67.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="950.6" y="78.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.50%)</title><rect x="950.5" y="195.0" width="5.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="953.5" y="206.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.25%)</title><rect x="950.5" y="179.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="953.5" y="190.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.25%)</title><rect x="953.4" y="179.0" width="2.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="956.4" y="190.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.25%)</title><rect x="956.3" y="227.0" width="3.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="959.3" y="238.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.25%)</title><rect x="956.3" y="211.0" width="3.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="959.3" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.25%)</title><rect x="959.3" y="227.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="962.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArraySpecial (1 samples, 0.25%)</title><rect x="962.2" y="259.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="965.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.25%)</title><rect x="962.2" y="243.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="965.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.25%)</title><rect x="962.2" y="227.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="965.2" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.25%)</title><rect x="962.2" y="211.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="965.2" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.25%)</title><rect x="962.2" y="195.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="965.2" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.25%)</title><rect x="962.2" y="179.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="965.2" y="190.0"></text>
</g>
<g>
<title>[async_workers-6 tid=2969] (39 samples, 9.65%)</title><rect x="965.1" y="371.0" width="113.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="968.1" y="382.0">[async_workers..</text>
</g>
<g>
<title>java/lang/Thread.run (39 samples, 9.65%)</title><rect x="965.1" y="355.0" width="113.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="968.1" y="366.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (39 samples, 9.65%)</title><rect x="965.1" y="339.0" width="113.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.1" y="350.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (39 samples, 9.65%)</title><rect x="965.1" y="323.0" width="113.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="968.1" y="334.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (20 samples, 4.95%)</title><rect x="965.1" y="307.0" width="58.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.1" y="318.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (19 samples, 4.70%)</title><rect x="968.0" y="291.0" width="55.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="971.0" y="302.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 3.71%)</title><rect x="970.9" y="275.0" width="43.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="973.9" y="286.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.25%)</title><rect x="973.9" y="259.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="976.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.25%)</title><rect x="973.9" y="243.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="976.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.25%)</title><rect x="973.9" y="227.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="976.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.50%)</title><rect x="976.8" y="259.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="979.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.50%)</title><rect x="976.8" y="243.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="979.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.50%)</title><rect x="976.8" y="227.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="979.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.50%)</title><rect x="976.8" y="211.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="979.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.50%)</title><rect x="976.8" y="195.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="979.8" y="206.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.25%)</title><rect x="976.8" y="179.0" width="2.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="979.8" y="190.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.25%)</title><rect x="976.8" y="163.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="979.8" y="174.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.25%)</title><rect x="979.7" y="179.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="982.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 2.72%)</title><rect x="982.6" y="259.0" width="32.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="985.6" y="270.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 2.72%)</title><rect x="982.6" y="243.0" width="32.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="985.6" y="254.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (9 samples, 2.23%)</title><rect x="982.6" y="227.0" width="26.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="985.6" y="238.0">U..</text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.25%)</title><rect x="985.5" y="211.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="988.5" y="222.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.74%)</title><rect x="988.5" y="211.0" width="8.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="991.5" y="222.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.25%)</title><rect x="991.4" y="195.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="994.4" y="206.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.25%)</title><rect x="994.3" y="195.0" width="2.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="997.3" y="206.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.25%)</title><rect x="997.2" y="211.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1000.2" y="222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.74%)</title><rect x="1000.1" y="211.0" width="8.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1003.1" y="222.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.50%)</title><rect x="1008.9" y="227.0" width="5.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1011.9" y="238.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.50%)</title><rect x="1008.9" y="211.0" width="5.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1011.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.74%)</title><rect x="1014.8" y="275.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1017.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.74%)</title><rect x="1014.8" y="259.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1017.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.74%)</title><rect x="1014.8" y="243.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1017.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.74%)</title><rect x="1014.8" y="227.0" width="8.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1017.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.74%)</title><rect x="1014.8" y="211.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1017.8" y="222.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.74%)</title><rect x="1014.8" y="195.0" width="8.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1017.8" y="206.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.25%)</title><rect x="1014.8" y="179.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1017.8" y="190.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.25%)</title><rect x="1017.7" y="179.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1020.7" y="190.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.25%)</title><rect x="1020.6" y="179.0" width="2.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1023.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/345273012.run (19 samples, 4.70%)</title><rect x="1023.5" y="307.0" width="55.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1026.5" y="318.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (19 samples, 4.70%)</title><rect x="1023.5" y="291.0" width="55.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1026.5" y="302.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.74%)</title><rect x="1023.5" y="275.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1026.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.74%)</title><rect x="1023.5" y="259.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1026.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.25%)</title><rect x="1023.5" y="243.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1026.5" y="254.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.25%)</title><rect x="1023.5" y="227.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1026.5" y="238.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.25%)</title><rect x="1023.5" y="211.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1026.5" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.50%)</title><rect x="1026.4" y="243.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1029.4" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.50%)</title><rect x="1026.4" y="227.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1029.4" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.50%)</title><rect x="1026.4" y="211.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1029.4" y="222.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.50%)</title><rect x="1026.4" y="195.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1029.4" y="206.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.50%)</title><rect x="1026.4" y="179.0" width="5.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1029.4" y="190.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.25%)</title><rect x="1029.4" y="163.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1032.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (16 samples, 3.96%)</title><rect x="1032.3" y="275.0" width="46.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1035.3" y="286.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (15 samples, 3.71%)</title><rect x="1032.3" y="259.0" width="43.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1035.3" y="270.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (15 samples, 3.71%)</title><rect x="1032.3" y="243.0" width="43.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1035.3" y="254.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (15 samples, 3.71%)</title><rect x="1032.3" y="227.0" width="43.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1035.3" y="238.0">Java..</text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.25%)</title><rect x="1032.3" y="211.0" width="2.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1035.3" y="222.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (14 samples, 3.47%)</title><rect x="1035.2" y="211.0" width="40.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1038.2" y="222.0">roc..</text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.25%)</title><rect x="1035.2" y="195.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1038.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (13 samples, 3.22%)</title><rect x="1038.1" y="195.0" width="38.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1041.1" y="206.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (13 samples, 3.22%)</title><rect x="1038.1" y="179.0" width="38.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1041.1" y="190.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (12 samples, 2.97%)</title><rect x="1041.0" y="163.0" width="35.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1044.0" y="174.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (12 samples, 2.97%)</title><rect x="1041.0" y="147.0" width="35.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1044.0" y="158.0">roc..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.25%)</title><rect x="1041.0" y="131.0" width="3.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1044.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (1 samples, 0.25%)</title><rect x="1044.0" y="131.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1047.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (8 samples, 1.98%)</title><rect x="1046.9" y="131.0" width="23.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1049.9" y="142.0">r..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.25%)</title><rect x="1049.8" y="115.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1052.8" y="126.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.50%)</title><rect x="1052.7" y="115.0" width="5.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1055.7" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (4 samples, 0.99%)</title><rect x="1058.6" y="115.0" width="11.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1061.6" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.25%)</title><rect x="1058.6" y="99.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1061.6" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (3 samples, 0.74%)</title><rect x="1061.5" y="99.0" width="8.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1064.5" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (3 samples, 0.74%)</title><rect x="1061.5" y="83.0" width="8.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1064.5" y="94.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (3 samples, 0.74%)</title><rect x="1061.5" y="67.0" width="8.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1064.5" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.25%)</title><rect x="1067.3" y="51.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1070.3" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.25%)</title><rect x="1067.3" y="35.0" width="2.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1070.3" y="46.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.25%)</title><rect x="1070.2" y="131.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1073.2" y="142.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() [clone .plt] (1 samples, 0.25%)</title><rect x="1073.2" y="131.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1076.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArraySpecial (1 samples, 0.25%)</title><rect x="1076.1" y="259.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1079.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.25%)</title><rect x="1076.1" y="243.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1079.1" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.25%)</title><rect x="1076.1" y="227.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1079.1" y="238.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.25%)</title><rect x="1076.1" y="211.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1079.1" y="222.0"></text>
</g>
<g>
<title>[async_workers-7 tid=2971] (38 samples, 9.41%)</title><rect x="1079.0" y="371.0" width="111.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1082.0" y="382.0">[async_worker..</text>
</g>
<g>
<title>java/lang/Thread.run (38 samples, 9.41%)</title><rect x="1079.0" y="355.0" width="111.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1082.0" y="366.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (38 samples, 9.41%)</title><rect x="1079.0" y="339.0" width="111.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1082.0" y="350.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (38 samples, 9.41%)</title><rect x="1079.0" y="323.0" width="111.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1082.0" y="334.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (16 samples, 3.96%)</title><rect x="1079.0" y="307.0" width="46.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1082.0" y="318.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (14 samples, 3.47%)</title><rect x="1084.9" y="291.0" width="40.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1087.9" y="302.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 3.47%)</title><rect x="1084.9" y="275.0" width="40.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1087.9" y="286.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.25%)</title><rect x="1087.8" y="259.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1090.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.25%)</title><rect x="1087.8" y="243.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1090.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.25%)</title><rect x="1087.8" y="227.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1090.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.25%)</title><rect x="1087.8" y="211.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1090.8" y="222.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.25%)</title><rect x="1087.8" y="195.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1090.8" y="206.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.25%)</title><rect x="1087.8" y="179.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1090.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.50%)</title><rect x="1090.7" y="259.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1093.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.50%)</title><rect x="1090.7" y="243.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1093.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.50%)</title><rect x="1090.7" y="227.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1093.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.25%)</title><rect x="1093.6" y="211.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1096.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.25%)</title><rect x="1093.6" y="195.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1096.6" y="206.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.25%)</title><rect x="1093.6" y="179.0" width="2.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1096.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 2.48%)</title><rect x="1096.5" y="259.0" width="29.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1099.5" y="270.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 2.48%)</title><rect x="1096.5" y="243.0" width="29.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1099.5" y="254.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (5 samples, 1.24%)</title><rect x="1102.4" y="227.0" width="14.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1105.4" y="238.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.25%)</title><rect x="1102.4" y="211.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1105.4" y="222.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.25%)</title><rect x="1102.4" y="195.0" width="2.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1105.4" y="206.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.25%)</title><rect x="1105.3" y="211.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1108.3" y="222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.74%)</title><rect x="1108.2" y="211.0" width="8.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1111.2" y="222.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.74%)</title><rect x="1117.0" y="227.0" width="8.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1120.0" y="238.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (2 samples, 0.50%)</title><rect x="1117.0" y="211.0" width="5.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1120.0" y="222.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.25%)</title><rect x="1122.8" y="211.0" width="2.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1125.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$74/345273012.run (22 samples, 5.45%)</title><rect x="1125.7" y="307.0" width="64.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1128.7" y="318.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$get$0 (22 samples, 5.45%)</title><rect x="1125.7" y="291.0" width="64.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1128.7" y="302.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 1.49%)</title><rect x="1125.7" y="275.0" width="17.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1128.7" y="286.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.25%)</title><rect x="1125.7" y="259.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1128.7" y="270.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.25%)</title><rect x="1125.7" y="243.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1128.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 1.24%)</title><rect x="1128.7" y="259.0" width="14.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1131.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.25%)</title><rect x="1131.6" y="243.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.6" y="254.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.25%)</title><rect x="1131.6" y="227.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1134.6" y="238.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.25%)</title><rect x="1131.6" y="211.0" width="2.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1134.6" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.74%)</title><rect x="1134.5" y="243.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1137.5" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.74%)</title><rect x="1134.5" y="227.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1137.5" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.74%)</title><rect x="1134.5" y="211.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1137.5" y="222.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.74%)</title><rect x="1134.5" y="195.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1137.5" y="206.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.25%)</title><rect x="1134.5" y="179.0" width="2.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1137.5" y="190.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.50%)</title><rect x="1137.4" y="179.0" width="5.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1140.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (16 samples, 3.96%)</title><rect x="1143.3" y="275.0" width="46.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1146.3" y="286.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (16 samples, 3.96%)</title><rect x="1143.3" y="259.0" width="46.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1146.3" y="270.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (16 samples, 3.96%)</title><rect x="1143.3" y="243.0" width="46.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1146.3" y="254.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (13 samples, 3.22%)</title><rect x="1143.3" y="227.0" width="37.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1146.3" y="238.0">Jav..</text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (11 samples, 2.72%)</title><rect x="1143.3" y="211.0" width="32.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1146.3" y="222.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (8 samples, 1.98%)</title><rect x="1146.2" y="195.0" width="23.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1149.2" y="206.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (6 samples, 1.49%)</title><rect x="1152.0" y="179.0" width="17.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1155.0" y="190.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (6 samples, 1.49%)</title><rect x="1152.0" y="163.0" width="17.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (6 samples, 1.49%)</title><rect x="1152.0" y="147.0" width="17.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1155.0" y="158.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.25%)</title><rect x="1152.0" y="131.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (5 samples, 1.24%)</title><rect x="1155.0" y="131.0" width="14.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1158.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.25%)</title><rect x="1155.0" y="115.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1158.0" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (4 samples, 0.99%)</title><rect x="1157.9" y="115.0" width="11.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.9" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (4 samples, 0.99%)</title><rect x="1157.9" y="99.0" width="11.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1160.9" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (4 samples, 0.99%)</title><rect x="1157.9" y="83.0" width="11.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1160.9" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.25%)</title><rect x="1157.9" y="67.0" width="2.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1160.9" y="78.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (2 samples, 0.50%)</title><rect x="1160.8" y="67.0" width="5.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1163.8" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.25%)</title><rect x="1163.7" y="51.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.7" y="62.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) [clone .plt] (1 samples, 0.25%)</title><rect x="1166.6" y="67.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.6" y="78.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.50%)</title><rect x="1169.6" y="195.0" width="5.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.6" y="206.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.50%)</title><rect x="1169.6" y="179.0" width="5.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1172.6" y="190.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.50%)</title><rect x="1169.6" y="163.0" width="5.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.6" y="174.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.50%)</title><rect x="1169.6" y="147.0" width="5.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.6" y="158.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.25%)</title><rect x="1169.6" y="131.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.6" y="142.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.25%)</title><rect x="1172.5" y="131.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.5" y="142.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.25%)</title><rect x="1172.5" y="115.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.5" y="126.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (2 samples, 0.50%)</title><rect x="1175.4" y="211.0" width="5.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.4" y="222.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.25%)</title><rect x="1181.2" y="227.0" width="3.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1184.2" y="238.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.25%)</title><rect x="1181.2" y="211.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.2" y="222.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.25%)</title><rect x="1184.2" y="227.0" width="2.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1187.2" y="238.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.25%)</title><rect x="1187.1" y="227.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.1" y="238.0"></text>
</g>
</g>
</svg>
