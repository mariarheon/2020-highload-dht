<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (1,669 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (16 samples, 0.96%)</title><rect x="10.0" y="691.0" width="11.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (16 samples, 0.96%)</title><rect x="10.0" y="675.0" width="11.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (15 samples, 0.90%)</title><rect x="10.0" y="659.0" width="10.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (3 samples, 0.18%)</title><rect x="10.7" y="643.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.7" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (8 samples, 0.48%)</title><rect x="12.8" y="643.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.8" y="654.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.18%)</title><rect x="18.5" y="643.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="21.5" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="20.6" y="659.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="23.6" y="670.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.12%)</title><rect x="21.3" y="691.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="24.3" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.12%)</title><rect x="21.3" y="675.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="24.3" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.12%)</title><rect x="21.3" y="659.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="24.3" y="670.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="21.3" y="643.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="24.3" y="654.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="21.3" y="627.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="24.3" y="638.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="22.0" y="643.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="25.0" y="654.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.06%)</title><rect x="22.0" y="627.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="25.0" y="638.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (1 samples, 0.06%)</title><rect x="22.0" y="611.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="25.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.30%)</title><rect x="22.7" y="691.0" width="3.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="25.7" y="702.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="22.7" y="675.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="25.7" y="686.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (4 samples, 0.24%)</title><rect x="23.4" y="675.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="26.4" y="686.0"></text>
</g>
<g>
<title>[unknown_Java] (31 samples, 1.86%)</title><rect x="26.3" y="691.0" width="21.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="29.3" y="702.0">[..</text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (1 samples, 0.06%)</title><rect x="26.3" y="675.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="29.3" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (3 samples, 0.18%)</title><rect x="27.0" y="675.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="30.0" y="686.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.18%)</title><rect x="27.0" y="659.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="30.0" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.12%)</title><rect x="29.1" y="675.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="32.1" y="686.0"></text>
</g>
<g>
<title>__clock_gettime (21 samples, 1.26%)</title><rect x="30.5" y="675.0" width="14.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="33.5" y="686.0"></text>
</g>
<g>
<title>[vdso] (14 samples, 0.84%)</title><rect x="31.9" y="659.0" width="9.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="34.9" y="670.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.30%)</title><rect x="41.8" y="659.0" width="3.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="44.8" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.12%)</title><rect x="45.4" y="675.0" width="1.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="48.4" y="686.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.12%)</title><rect x="46.8" y="675.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="49.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,005 samples, 60.22%)</title><rect x="48.2" y="691.0" width="710.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.2" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,005 samples, 60.22%)</title><rect x="48.2" y="675.0" width="710.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.2" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,005 samples, 60.22%)</title><rect x="48.2" y="659.0" width="710.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.2" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (5 samples, 0.30%)</title><rect x="49.6" y="643.0" width="3.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="52.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (412 samples, 24.69%)</title><rect x="53.1" y="643.0" width="291.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="56.1" y="654.0">java/util/concurrent/CompletableFuture$..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (8 samples, 0.48%)</title><rect x="56.7" y="627.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="59.7" y="638.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.30%)</title><rect x="56.7" y="611.0" width="3.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="59.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$145/1269260830.get (2 samples, 0.12%)</title><rect x="60.2" y="611.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$160/1885655202.get (1 samples, 0.06%)</title><rect x="61.6" y="611.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (277 samples, 16.60%)</title><rect x="62.3" y="627.0" width="195.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.3" y="638.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (12 samples, 0.72%)</title><rect x="62.3" y="611.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="65.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.72%)</title><rect x="62.3" y="595.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.72%)</title><rect x="62.3" y="579.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.3" y="590.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.36%)</title><rect x="63.7" y="563.0" width="4.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="66.7" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.06%)</title><rect x="64.4" y="547.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="67.4" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.06%)</title><rect x="65.1" y="547.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="68.1" y="558.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.06%)</title><rect x="65.9" y="547.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="68.9" y="558.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.06%)</title><rect x="66.6" y="547.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="69.6" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="67.3" y="547.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="70.3" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.24%)</title><rect x="68.0" y="563.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="71.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (265 samples, 15.88%)</title><rect x="70.8" y="611.0" width="187.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.8" y="622.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>itable stub (3 samples, 0.18%)</title><rect x="70.8" y="595.0" width="2.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="73.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.06%)</title><rect x="72.9" y="595.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 0.06%)</title><rect x="72.9" y="579.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.06%)</title><rect x="72.9" y="563.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="72.9" y="547.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$135/69462153.apply (260 samples, 15.58%)</title><rect x="73.6" y="595.0" width="183.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.6" y="606.0">jdk/internal/net/http/Mu..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (260 samples, 15.58%)</title><rect x="73.6" y="579.0" width="183.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.6" y="590.0">jdk/internal/net/http/Mu..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (260 samples, 15.58%)</title><rect x="73.6" y="563.0" width="183.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.6" y="574.0">jdk/internal/net/http/Mu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.18%)</title><rect x="74.3" y="547.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="77.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.12%)</title><rect x="75.0" y="531.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (2 samples, 0.12%)</title><rect x="75.0" y="515.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="78.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (227 samples, 13.60%)</title><rect x="76.5" y="547.0" width="160.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.5" y="558.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (227 samples, 13.60%)</title><rect x="76.5" y="531.0" width="160.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.5" y="542.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (226 samples, 13.54%)</title><rect x="77.2" y="515.0" width="159.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.2" y="526.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (104 samples, 6.23%)</title><rect x="77.2" y="499.0" width="73.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.2" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (104 samples, 6.23%)</title><rect x="77.2" y="483.0" width="73.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.2" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (104 samples, 6.23%)</title><rect x="77.2" y="467.0" width="73.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="80.2" y="478.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$254/927503844.apply (103 samples, 6.17%)</title><rect x="77.9" y="451.0" width="72.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.9" y="462.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (103 samples, 6.17%)</title><rect x="77.9" y="435.0" width="72.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.9" y="446.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (103 samples, 6.17%)</title><rect x="77.9" y="419.0" width="72.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.9" y="430.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$164/1669924159.apply (101 samples, 6.05%)</title><rect x="79.3" y="403.0" width="71.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.3" y="414.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (101 samples, 6.05%)</title><rect x="79.3" y="387.0" width="71.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.3" y="398.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.06%)</title><rect x="79.3" y="371.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="82.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.06%)</title><rect x="79.3" y="355.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.06%)</title><rect x="79.3" y="339.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (100 samples, 5.99%)</title><rect x="80.0" y="371.0" width="70.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.0" y="382.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.12%)</title><rect x="80.7" y="355.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (83 samples, 4.97%)</title><rect x="82.1" y="355.0" width="58.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="85.1" y="366.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (83 samples, 4.97%)</title><rect x="82.1" y="339.0" width="58.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.1" y="350.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.12%)</title><rect x="82.1" y="323.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$359/49379817.apply (1 samples, 0.06%)</title><rect x="82.8" y="307.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$359/49379817.apply (80 samples, 4.79%)</title><rect x="83.5" y="323.0" width="56.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.5" y="334.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (80 samples, 4.79%)</title><rect x="83.5" y="307.0" width="56.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.5" y="318.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.18%)</title><rect x="84.9" y="291.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.18%)</title><rect x="84.9" y="275.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.18%)</title><rect x="84.9" y="259.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.18%)</title><rect x="84.9" y="243.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1 samples, 0.06%)</title><rect x="85.7" y="227.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.06%)</title><rect x="86.4" y="227.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.06%)</title><rect x="86.4" y="211.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="89.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.06%)</title><rect x="86.4" y="195.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.06%)</title><rect x="86.4" y="179.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="89.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (10 samples, 0.60%)</title><rect x="87.1" y="291.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (10 samples, 0.60%)</title><rect x="87.1" y="275.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1 samples, 0.06%)</title><rect x="87.1" y="259.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.06%)</title><rect x="87.1" y="243.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (9 samples, 0.54%)</title><rect x="87.8" y="259.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (9 samples, 0.54%)</title><rect x="87.8" y="243.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (9 samples, 0.54%)</title><rect x="87.8" y="227.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (8 samples, 0.48%)</title><rect x="87.8" y="211.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (8 samples, 0.48%)</title><rect x="87.8" y="195.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.8" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="88.5" y="179.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="91.5" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="88.5" y="163.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="91.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6 samples, 0.36%)</title><rect x="89.2" y="179.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="92.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.18%)</title><rect x="91.3" y="163.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.3" y="174.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.12%)</title><rect x="91.3" y="147.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="94.3" y="158.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="92.7" y="147.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="95.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (1 samples, 0.06%)</title><rect x="93.4" y="211.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.4" y="222.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="93.4" y="195.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="96.4" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.06%)</title><rect x="93.4" y="179.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="96.4" y="190.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.06%)</title><rect x="93.4" y="163.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="96.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (65 samples, 3.89%)</title><rect x="94.1" y="291.0" width="46.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.1" y="302.0">jdk/..</text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="94.8" y="275.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.8" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="94.8" y="259.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.8" y="270.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="94.8" y="243.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="97.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.12%)</title><rect x="95.5" y="275.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="98.5" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.12%)</title><rect x="95.5" y="259.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="98.5" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.12%)</title><rect x="95.5" y="243.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (51 samples, 3.06%)</title><rect x="97.0" y="275.0" width="36.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="100.0" y="286.0">jdk..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="97.0" y="259.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="100.0" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="97.0" y="243.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="100.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (4 samples, 0.24%)</title><rect x="97.7" y="259.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.7" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.24%)</title><rect x="97.7" y="243.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.7" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.18%)</title><rect x="98.4" y="227.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.18%)</title><rect x="98.4" y="211.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.4" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.18%)</title><rect x="98.4" y="195.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="101.4" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.18%)</title><rect x="98.4" y="179.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.4" y="190.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="99.8" y="163.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="99.8" y="147.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.06%)</title><rect x="99.8" y="131.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.8" y="142.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="99.8" y="115.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.8" y="126.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="99.8" y="99.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.8" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.06%)</title><rect x="99.8" y="83.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.8" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.06%)</title><rect x="99.8" y="67.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="102.8" y="78.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.06%)</title><rect x="99.8" y="51.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.8" y="62.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.06%)</title><rect x="99.8" y="35.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.8" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (22 samples, 1.32%)</title><rect x="100.5" y="259.0" width="15.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.12%)</title><rect x="101.2" y="243.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.2" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.12%)</title><rect x="101.2" y="227.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="104.2" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.12%)</title><rect x="101.2" y="211.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.2" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext (7 samples, 0.42%)</title><rect x="102.6" y="243.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.6" y="254.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.12%)</title><rect x="106.2" y="227.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="109.2" y="238.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.06%)</title><rect x="107.6" y="243.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.6" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.06%)</title><rect x="107.6" y="227.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="110.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.hasNext (1 samples, 0.06%)</title><rect x="107.6" y="211.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.6" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (5 samples, 0.30%)</title><rect x="108.3" y="243.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.3" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (5 samples, 0.30%)</title><rect x="108.3" y="227.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (5 samples, 0.30%)</title><rect x="108.3" y="211.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.3" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (5 samples, 0.30%)</title><rect x="108.3" y="195.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.3" y="206.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$386/1190358281.test (6 samples, 0.36%)</title><rect x="111.8" y="243.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.8" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (5 samples, 0.30%)</title><rect x="112.5" y="227.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.getValue (1 samples, 0.06%)</title><rect x="112.5" y="211.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="115.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$38/90205195.test (4 samples, 0.24%)</title><rect x="113.2" y="211.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (4 samples, 0.24%)</title><rect x="113.2" y="195.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="116.2" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$27/24606376.test (4 samples, 0.24%)</title><rect x="113.2" y="179.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="116.2" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (4 samples, 0.24%)</title><rect x="113.2" y="163.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$26/688766789.test (4 samples, 0.24%)</title><rect x="113.2" y="147.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="116.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (4 samples, 0.24%)</title><rect x="113.2" y="131.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.24%)</title><rect x="113.2" y="115.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="116.2" y="126.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.24%)</title><rect x="113.2" y="99.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.2" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.24%)</title><rect x="113.2" y="83.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.2" y="94.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.12%)</title><rect x="113.9" y="67.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="116.9" y="78.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.12%)</title><rect x="113.9" y="51.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="116.9" y="62.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.06%)</title><rect x="115.3" y="67.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.3" y="78.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.06%)</title><rect x="115.3" y="51.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.3" y="62.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.06%)</title><rect x="115.3" y="35.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="118.3" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (24 samples, 1.44%)</title><rect x="116.1" y="259.0" width="16.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.1" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (24 samples, 1.44%)</title><rect x="116.1" y="243.0" width="16.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.1" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (24 samples, 1.44%)</title><rect x="116.1" y="227.0" width="16.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="119.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (23 samples, 1.38%)</title><rect x="116.8" y="211.0" width="16.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.8" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/1260444598.accept (19 samples, 1.14%)</title><rect x="118.9" y="195.0" width="13.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="121.9" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (17 samples, 1.02%)</title><rect x="120.3" y="179.0" width="12.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="123.3" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.24%)</title><rect x="122.4" y="163.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="125.4" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$394/1894267442.accept (3 samples, 0.18%)</title><rect x="123.1" y="147.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.1" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.18%)</title><rect x="123.1" y="131.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="126.1" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.18%)</title><rect x="123.1" y="115.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.1" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.18%)</title><rect x="123.1" y="99.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="126.1" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.18%)</title><rect x="123.1" y="83.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.1" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.18%)</title><rect x="123.1" y="67.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.1" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.18%)</title><rect x="123.1" y="51.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="126.1" y="62.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.60%)</title><rect x="125.2" y="163.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.2" y="174.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.30%)</title><rect x="127.4" y="147.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.30%)</title><rect x="127.4" y="131.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="130.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.30%)</title><rect x="127.4" y="115.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.4" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.12%)</title><rect x="130.9" y="147.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.9" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.06%)</title><rect x="132.3" y="195.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1 samples, 0.06%)</title><rect x="133.0" y="275.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.0" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.06%)</title><rect x="133.0" y="259.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (9 samples, 0.54%)</title><rect x="133.7" y="275.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.7" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.30%)</title><rect x="133.7" y="259.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.30%)</title><rect x="133.7" y="243.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.7" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.24%)</title><rect x="134.4" y="227.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.4" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.24%)</title><rect x="134.4" y="211.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="137.4" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (2 samples, 0.12%)</title><rect x="135.1" y="195.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1 samples, 0.06%)</title><rect x="135.8" y="179.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="136.6" y="195.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="139.6" y="206.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="136.6" y="179.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="139.6" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.24%)</title><rect x="137.3" y="259.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="140.3" y="270.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.12%)</title><rect x="138.0" y="243.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="141.0" y="254.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.12%)</title><rect x="138.0" y="227.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.12%)</title><rect x="138.0" y="211.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="141.0" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.06%)</title><rect x="139.4" y="243.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$362/262015866.apply (1 samples, 0.06%)</title><rect x="140.1" y="323.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (14 samples, 0.84%)</title><rect x="140.8" y="355.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (12 samples, 0.72%)</title><rect x="142.2" y="339.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.12%)</title><rect x="142.2" y="323.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.12%)</title><rect x="142.2" y="307.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.60%)</title><rect x="143.6" y="323.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.60%)</title><rect x="143.6" y="307.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10 samples, 0.60%)</title><rect x="143.6" y="291.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10 samples, 0.60%)</title><rect x="143.6" y="275.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8 samples, 0.48%)</title><rect x="143.6" y="259.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.run (7 samples, 0.42%)</title><rect x="144.3" y="243.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (7 samples, 0.42%)</title><rect x="144.3" y="227.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (5 samples, 0.30%)</title><rect x="144.3" y="211.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.06%)</title><rect x="145.0" y="195.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.06%)</title><rect x="145.0" y="179.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.18%)</title><rect x="145.7" y="195.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.12%)</title><rect x="147.9" y="211.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (2 samples, 0.12%)</title><rect x="147.9" y="195.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="150.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.12%)</title><rect x="147.9" y="179.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="150.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.06%)</title><rect x="147.9" y="163.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="148.6" y="163.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="148.6" y="147.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="148.6" y="131.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.12%)</title><rect x="149.3" y="259.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.06%)</title><rect x="150.0" y="243.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.06%)</title><rect x="150.0" y="227.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.18%)</title><rect x="150.7" y="499.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.18%)</title><rect x="150.7" y="483.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.18%)</title><rect x="150.7" y="467.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.7" y="478.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="152.1" y="451.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="155.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (119 samples, 7.13%)</title><rect x="152.8" y="499.0" width="84.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="155.8" y="510.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.12%)</title><rect x="152.8" y="483.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.06%)</title><rect x="153.5" y="467.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$251/863438674.apply (1 samples, 0.06%)</title><rect x="153.5" y="451.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (1 samples, 0.06%)</title><rect x="153.5" y="435.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkCancelled (1 samples, 0.06%)</title><rect x="153.5" y="419.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (1 samples, 0.06%)</title><rect x="153.5" y="403.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.5" y="414.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.06%)</title><rect x="153.5" y="387.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.5" y="398.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (1 samples, 0.06%)</title><rect x="153.5" y="371.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.5" y="382.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="153.5" y="355.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="156.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (117 samples, 7.01%)</title><rect x="154.2" y="483.0" width="82.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.2" y="494.0">jdk/inter..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (110 samples, 6.59%)</title><rect x="154.2" y="467.0" width="77.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="157.2" y="478.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (110 samples, 6.59%)</title><rect x="154.2" y="451.0" width="77.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.2" y="462.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (109 samples, 6.53%)</title><rect x="154.9" y="435.0" width="77.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="157.9" y="446.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.06%)</title><rect x="154.9" y="419.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="157.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$171/1166121287.apply (1 samples, 0.06%)</title><rect x="154.9" y="403.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="157.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$171/1166121287.apply (108 samples, 6.47%)</title><rect x="155.6" y="419.0" width="76.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="158.6" y="430.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (108 samples, 6.47%)</title><rect x="155.6" y="403.0" width="76.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.6" y="414.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (108 samples, 6.47%)</title><rect x="155.6" y="387.0" width="76.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.6" y="398.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (60 samples, 3.59%)</title><rect x="155.6" y="371.0" width="42.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.6" y="382.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (60 samples, 3.59%)</title><rect x="155.6" y="355.0" width="42.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.6" y="366.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (60 samples, 3.59%)</title><rect x="155.6" y="339.0" width="42.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.6" y="350.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$239/1117950874.apply (58 samples, 3.48%)</title><rect x="157.1" y="323.0" width="41.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.1" y="334.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (58 samples, 3.48%)</title><rect x="157.1" y="307.0" width="41.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="160.1" y="318.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (58 samples, 3.48%)</title><rect x="157.1" y="291.0" width="41.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="160.1" y="302.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (58 samples, 3.48%)</title><rect x="157.1" y="275.0" width="41.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.1" y="286.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (54 samples, 3.24%)</title><rect x="157.1" y="259.0" width="38.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.1" y="270.0">jdk..</text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (1 samples, 0.06%)</title><rect x="157.1" y="243.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="160.1" y="254.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (1 samples, 0.06%)</title><rect x="157.1" y="227.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="160.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (40 samples, 2.40%)</title><rect x="157.8" y="243.0" width="28.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="160.8" y="254.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (40 samples, 2.40%)</title><rect x="157.8" y="227.0" width="28.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="160.8" y="238.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (40 samples, 2.40%)</title><rect x="157.8" y="211.0" width="28.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.8" y="222.0">jd..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (39 samples, 2.34%)</title><rect x="158.5" y="195.0" width="27.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="161.5" y="206.0">j..</text>
</g>
<g>
<title>JVM_DoPrivileged (29 samples, 1.74%)</title><rect x="159.2" y="179.0" width="20.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="162.2" y="190.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.06%)</title><rect x="162.0" y="163.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="165.0" y="174.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.06%)</title><rect x="162.7" y="163.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="165.7" y="174.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.30%)</title><rect x="163.4" y="163.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="166.4" y="174.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.06%)</title><rect x="165.5" y="147.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="168.5" y="158.0"></text>
</g>
<g>
<title>JavaCallWrapper::~JavaCallWrapper() (1 samples, 0.06%)</title><rect x="166.2" y="147.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="169.2" y="158.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.06%)</title><rect x="167.0" y="163.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="170.0" y="174.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="167.7" y="163.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="170.7" y="174.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.06%)</title><rect x="168.4" y="163.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="171.4" y="174.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="169.1" y="163.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="172.1" y="174.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (14 samples, 0.84%)</title><rect x="169.8" y="163.0" width="9.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="172.8" y="174.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.06%)</title><rect x="169.8" y="147.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="172.8" y="158.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (5 samples, 0.30%)</title><rect x="170.5" y="147.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="173.5" y="158.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (4 samples, 0.24%)</title><rect x="171.2" y="131.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="174.2" y="142.0"></text>
</g>
<g>
<title>PcDescCache::find_pc_desc(int, bool) (1 samples, 0.06%)</title><rect x="174.0" y="147.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="177.0" y="158.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.12%)</title><rect x="174.7" y="147.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="177.7" y="158.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.24%)</title><rect x="176.1" y="147.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="179.1" y="158.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.06%)</title><rect x="176.9" y="131.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="179.9" y="142.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (2 samples, 0.12%)</title><rect x="177.6" y="131.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="180.6" y="142.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="177.6" y="115.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="180.6" y="126.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="177.6" y="99.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="180.6" y="110.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="178.3" y="115.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="181.3" y="126.0"></text>
</g>
<g>
<title>nmethod::metadata_at(int) const (1 samples, 0.06%)</title><rect x="179.0" y="147.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="182.0" y="158.0"></text>
</g>
<g>
<title>Method::is_method() const volatile (1 samples, 0.06%)</title><rect x="179.7" y="179.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="182.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$22/1176735295.run (7 samples, 0.42%)</title><rect x="180.4" y="179.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="183.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (6 samples, 0.36%)</title><rect x="181.1" y="163.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="184.1" y="174.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (6 samples, 0.36%)</title><rect x="181.1" y="147.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.1" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.12%)</title><rect x="181.1" y="131.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.1" y="142.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (2 samples, 0.12%)</title><rect x="182.5" y="131.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.5" y="142.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.12%)</title><rect x="182.5" y="115.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.5" y="126.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.12%)</title><rect x="182.5" y="99.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.12%)</title><rect x="182.5" y="83.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.5" y="94.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="183.2" y="67.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.2" y="78.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="183.2" y="51.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.2" y="62.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.12%)</title><rect x="183.9" y="131.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="186.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.12%)</title><rect x="183.9" y="115.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.9" y="126.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.12%)</title><rect x="183.9" y="99.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="186.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.12%)</title><rect x="183.9" y="83.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.9" y="94.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="185.3" y="179.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="188.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (13 samples, 0.78%)</title><rect x="186.0" y="243.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="189.0" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.30%)</title><rect x="186.0" y="227.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="189.0" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.30%)</title><rect x="186.0" y="211.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.0" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.30%)</title><rect x="186.0" y="195.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="189.0" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.24%)</title><rect x="186.8" y="179.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.8" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.24%)</title><rect x="186.8" y="163.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="189.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.18%)</title><rect x="186.8" y="147.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="189.8" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.06%)</title><rect x="188.2" y="131.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.2" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.06%)</title><rect x="188.2" y="115.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.2" y="126.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="188.9" y="147.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="191.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.length (3 samples, 0.18%)</title><rect x="189.6" y="227.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (2 samples, 0.12%)</title><rect x="190.3" y="211.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteBuffer (5 samples, 0.30%)</title><rect x="191.7" y="227.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="194.7" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putInt (3 samples, 0.18%)</title><rect x="191.7" y="211.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="194.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putIntUnaligned (3 samples, 0.18%)</title><rect x="191.7" y="195.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (2 samples, 0.12%)</title><rect x="192.4" y="179.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.4" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putShort (2 samples, 0.12%)</title><rect x="193.8" y="211.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="196.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putShortUnaligned (2 samples, 0.12%)</title><rect x="193.8" y="195.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="196.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.24%)</title><rect x="195.2" y="259.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.2" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.18%)</title><rect x="195.9" y="243.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.9" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.12%)</title><rect x="196.7" y="227.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (48 samples, 2.88%)</title><rect x="198.1" y="371.0" width="33.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.1" y="382.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (46 samples, 2.76%)</title><rect x="198.8" y="355.0" width="32.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.8" y="366.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (1 samples, 0.06%)</title><rect x="201.6" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="204.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2 samples, 0.12%)</title><rect x="202.3" y="339.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="205.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (11 samples, 0.66%)</title><rect x="203.7" y="339.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (10 samples, 0.60%)</title><rect x="203.7" y="323.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="206.7" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.24%)</title><rect x="205.1" y="307.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="208.1" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.24%)</title><rect x="205.1" y="291.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="208.1" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (4 samples, 0.24%)</title><rect x="205.1" y="275.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="208.1" y="286.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.12%)</title><rect x="206.5" y="259.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="209.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (4 samples, 0.24%)</title><rect x="208.0" y="307.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.0" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.12%)</title><rect x="208.0" y="291.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="211.0" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.12%)</title><rect x="208.0" y="275.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.0" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="208.7" y="259.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (2 samples, 0.12%)</title><rect x="209.4" y="291.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="212.4" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.06%)</title><rect x="209.4" y="275.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="212.4" y="286.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.06%)</title><rect x="209.4" y="259.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="212.4" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.06%)</title><rect x="209.4" y="243.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.4" y="254.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (1 samples, 0.06%)</title><rect x="209.4" y="227.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.4" y="238.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.remove (1 samples, 0.06%)</title><rect x="210.1" y="275.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="213.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (1 samples, 0.06%)</title><rect x="210.8" y="323.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="213.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (28 samples, 1.68%)</title><rect x="211.5" y="339.0" width="19.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="214.5" y="350.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (28 samples, 1.68%)</title><rect x="211.5" y="323.0" width="19.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="214.5" y="334.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.06%)</title><rect x="211.5" y="307.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="214.5" y="318.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (21 samples, 1.26%)</title><rect x="212.2" y="307.0" width="14.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="215.2" y="318.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="212.2" y="291.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="215.2" y="302.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.18%)</title><rect x="212.9" y="291.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="215.9" y="302.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (3 samples, 0.18%)</title><rect x="212.9" y="275.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="215.9" y="286.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.12%)</title><rect x="215.0" y="291.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="218.0" y="302.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.12%)</title><rect x="215.0" y="275.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="218.0" y="286.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.06%)</title><rect x="215.7" y="259.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="218.7" y="270.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.06%)</title><rect x="216.4" y="291.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="219.4" y="302.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.06%)</title><rect x="217.2" y="291.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="220.2" y="302.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.12%)</title><rect x="217.9" y="291.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="220.9" y="302.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (2 samples, 0.12%)</title><rect x="219.3" y="291.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="222.3" y="302.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.18%)</title><rect x="220.7" y="291.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="223.7" y="302.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="220.7" y="275.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="223.7" y="286.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.12%)</title><rect x="221.4" y="275.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="224.4" y="286.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (6 samples, 0.36%)</title><rect x="222.8" y="291.0" width="4.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="225.8" y="302.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.12%)</title><rect x="223.5" y="275.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="226.5" y="286.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.06%)</title><rect x="224.9" y="275.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="227.9" y="286.0"></text>
</g>
<g>
<title>PcDescCache::find_pc_desc(int, bool) (1 samples, 0.06%)</title><rect x="224.9" y="259.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="227.9" y="270.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="225.6" y="275.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="228.6" y="286.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.06%)</title><rect x="225.6" y="259.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="228.6" y="270.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="225.6" y="243.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="228.6" y="254.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="225.6" y="227.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="228.6" y="238.0"></text>
</g>
<g>
<title>nmethod::metadata_at(int) const (1 samples, 0.06%)</title><rect x="226.3" y="275.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="229.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$177/1022977529.run (6 samples, 0.36%)</title><rect x="227.1" y="307.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (6 samples, 0.36%)</title><rect x="227.1" y="291.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="230.1" y="302.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (6 samples, 0.36%)</title><rect x="227.1" y="275.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.1" y="286.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (6 samples, 0.36%)</title><rect x="227.1" y="259.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.1" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (6 samples, 0.36%)</title><rect x="227.1" y="243.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.1" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (6 samples, 0.36%)</title><rect x="227.1" y="227.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.1" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (6 samples, 0.36%)</title><rect x="227.1" y="211.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.12%)</title><rect x="227.8" y="195.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="230.8" y="206.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="227.8" y="179.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.8" y="190.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="227.8" y="163.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="230.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="228.5" y="179.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="231.5" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="228.5" y="163.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="231.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.next (1 samples, 0.06%)</title><rect x="229.2" y="195.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="232.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (1 samples, 0.06%)</title><rect x="229.2" y="179.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="232.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (2 samples, 0.12%)</title><rect x="229.9" y="195.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="232.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (1 samples, 0.06%)</title><rect x="230.6" y="179.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="233.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="230.6" y="163.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="230.6" y="147.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="233.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (1 samples, 0.06%)</title><rect x="230.6" y="131.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="233.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.06%)</title><rect x="231.3" y="355.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="234.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.06%)</title><rect x="231.3" y="339.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="234.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="231.3" y="323.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="234.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.18%)</title><rect x="232.0" y="467.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.18%)</title><rect x="232.0" y="451.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.06%)</title><rect x="232.7" y="435.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.06%)</title><rect x="233.4" y="435.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="236.4" y="446.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="233.4" y="419.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="236.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (4 samples, 0.24%)</title><rect x="234.1" y="467.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.1" y="478.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="234.8" y="451.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="237.8" y="462.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.06%)</title><rect x="234.8" y="435.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="237.8" y="446.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.06%)</title><rect x="234.8" y="419.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="237.8" y="430.0"></text>
</g>
<g>
<title>ObjectSynchronizer::omAlloc(Thread*) (1 samples, 0.06%)</title><rect x="234.8" y="403.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="237.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="235.5" y="451.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="238.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="235.5" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="238.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="235.5" y="419.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="238.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (1 samples, 0.06%)</title><rect x="236.2" y="451.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (1 samples, 0.06%)</title><rect x="236.2" y="435.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="239.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1026084144.linkToTargetMethod (1 samples, 0.06%)</title><rect x="236.2" y="419.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1999192409.invoke (1 samples, 0.06%)</title><rect x="236.2" y="403.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1032641801.invoke (1 samples, 0.06%)</title><rect x="236.2" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/476800120.invoke (1 samples, 0.06%)</title><rect x="236.2" y="371.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="236.2" y="355.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="239.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.06%)</title><rect x="236.2" y="339.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.06%)</title><rect x="236.2" y="323.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (13 samples, 0.78%)</title><rect x="237.0" y="547.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.0" y="558.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="237.0" y="531.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="240.0" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="237.0" y="515.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="240.0" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="237.0" y="499.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="240.0" y="510.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (5 samples, 0.30%)</title><rect x="237.7" y="531.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.7" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.30%)</title><rect x="237.7" y="515.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="240.7" y="526.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.12%)</title><rect x="239.1" y="499.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.1" y="510.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.12%)</title><rect x="239.1" y="483.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="242.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.12%)</title><rect x="239.1" y="467.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.1" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.06%)</title><rect x="240.5" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="243.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.06%)</title><rect x="240.5" y="483.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="243.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (7 samples, 0.42%)</title><rect x="241.2" y="531.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="244.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (7 samples, 0.42%)</title><rect x="241.2" y="515.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="244.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.06%)</title><rect x="243.3" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.3" y="510.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="243.3" y="483.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="246.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.18%)</title><rect x="244.0" y="499.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="247.0" y="510.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.12%)</title><rect x="244.7" y="483.0" width="1.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="247.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (10 samples, 0.60%)</title><rect x="246.1" y="547.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (9 samples, 0.54%)</title><rect x="246.1" y="531.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="249.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (1 samples, 0.06%)</title><rect x="246.8" y="515.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="249.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (7 samples, 0.42%)</title><rect x="247.6" y="515.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="250.6" y="526.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.12%)</title><rect x="248.3" y="499.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="251.3" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.12%)</title><rect x="248.3" y="483.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="251.3" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.12%)</title><rect x="248.3" y="467.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="251.3" y="478.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.12%)</title><rect x="248.3" y="451.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="251.3" y="462.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (4 samples, 0.24%)</title><rect x="249.7" y="499.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.7" y="510.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (2 samples, 0.12%)</title><rect x="249.7" y="483.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="252.7" y="494.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.06%)</title><rect x="250.4" y="467.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="253.4" y="478.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.06%)</title><rect x="250.4" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.4" y="462.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.06%)</title><rect x="250.4" y="435.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="253.4" y="446.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (2 samples, 0.12%)</title><rect x="251.1" y="483.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.1" y="494.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.12%)</title><rect x="251.1" y="467.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="254.1" y="478.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.06%)</title><rect x="251.1" y="451.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="254.1" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.06%)</title><rect x="251.8" y="451.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="254.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (1 samples, 0.06%)</title><rect x="252.5" y="531.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="255.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (6 samples, 0.36%)</title><rect x="253.2" y="547.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="256.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (6 samples, 0.36%)</title><rect x="253.2" y="531.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (6 samples, 0.36%)</title><rect x="253.2" y="515.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.2" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.now (5 samples, 0.30%)</title><rect x="253.2" y="499.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="256.2" y="510.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (5 samples, 0.30%)</title><rect x="253.2" y="483.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.2" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.12%)</title><rect x="253.9" y="467.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.9" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.12%)</title><rect x="253.9" y="451.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="256.9" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.&lt;init&gt; (2 samples, 0.12%)</title><rect x="253.9" y="435.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.12%)</title><rect x="255.3" y="467.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="258.3" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.06%)</title><rect x="256.7" y="499.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="259.7" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (1 samples, 0.06%)</title><rect x="256.7" y="483.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.7" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.06%)</title><rect x="256.7" y="467.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.7" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.06%)</title><rect x="256.7" y="451.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="259.7" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (1 samples, 0.06%)</title><rect x="256.7" y="435.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="259.7" y="446.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="256.7" y="419.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="259.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$142/558125001.apply (1 samples, 0.06%)</title><rect x="257.5" y="595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="260.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1 samples, 0.06%)</title><rect x="257.5" y="579.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="260.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1 samples, 0.06%)</title><rect x="257.5" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="260.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1 samples, 0.06%)</title><rect x="257.5" y="547.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="260.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1 samples, 0.06%)</title><rect x="257.5" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="260.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="257.5" y="515.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$496/855121012.run (1 samples, 0.06%)</title><rect x="257.5" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="260.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1 samples, 0.06%)</title><rect x="257.5" y="483.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="260.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (1 samples, 0.06%)</title><rect x="257.5" y="467.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="260.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (1 samples, 0.06%)</title><rect x="257.5" y="451.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="260.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="257.5" y="435.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="260.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="257.5" y="419.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="260.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="257.5" y="403.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="260.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="257.5" y="387.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="260.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.06%)</title><rect x="257.5" y="371.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="260.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (1 samples, 0.06%)</title><rect x="257.5" y="355.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="257.5" y="339.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="260.5" y="350.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="257.5" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.5" y="334.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.06%)</title><rect x="257.5" y="307.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="260.5" y="318.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="257.5" y="291.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="260.5" y="302.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="257.5" y="275.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.5" y="286.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="257.5" y="259.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="260.5" y="270.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.06%)</title><rect x="257.5" y="243.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="260.5" y="254.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.06%)</title><rect x="257.5" y="227.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="260.5" y="238.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="257.5" y="211.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="260.5" y="222.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="257.5" y="195.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="260.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$160/1885655202.get (122 samples, 7.31%)</title><rect x="258.2" y="627.0" width="86.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="261.2" y="638.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$processRequest$2 (122 samples, 7.31%)</title><rect x="258.2" y="611.0" width="86.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="261.2" y="622.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.get (120 samples, 7.19%)</title><rect x="259.6" y="595.0" width="84.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="262.6" y="606.0">ru/mail/po..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.12%)</title><rect x="261.0" y="579.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="264.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.12%)</title><rect x="261.0" y="563.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="264.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.12%)</title><rect x="261.0" y="547.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="264.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="261.7" y="531.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="264.7" y="542.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="261.7" y="515.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="264.7" y="526.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="261.7" y="499.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="264.7" y="510.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="261.7" y="483.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="264.7" y="494.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="261.7" y="467.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="264.7" y="478.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="261.7" y="451.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="264.7" y="462.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="261.7" y="435.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="264.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (2 samples, 0.12%)</title><rect x="262.4" y="579.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.12%)</title><rect x="262.4" y="563.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="265.4" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="262.4" y="547.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="265.4" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.06%)</title><rect x="262.4" y="531.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="265.4" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="262.4" y="515.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="265.4" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="262.4" y="499.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="265.4" y="510.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.06%)</title><rect x="262.4" y="483.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="265.4" y="494.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.06%)</title><rect x="262.4" y="467.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="265.4" y="478.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.06%)</title><rect x="262.4" y="451.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="265.4" y="462.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="263.1" y="547.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="266.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.06%)</title><rect x="263.8" y="579.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="266.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.06%)</title><rect x="263.8" y="563.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="266.8" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.06%)</title><rect x="263.8" y="547.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="266.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (1 samples, 0.06%)</title><rect x="264.5" y="579.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="267.5" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="264.5" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="267.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="264.5" y="547.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="267.5" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="264.5" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.get (112 samples, 6.71%)</title><rect x="265.2" y="579.0" width="79.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="268.2" y="590.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (107 samples, 6.41%)</title><rect x="265.2" y="563.0" width="75.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.2" y="574.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (107 samples, 6.41%)</title><rect x="265.2" y="547.0" width="75.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.2" y="558.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (97 samples, 5.81%)</title><rect x="265.9" y="531.0" width="68.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="268.9" y="542.0">Java_or..</text>
</g>
<g>
<title>_int_free (1 samples, 0.06%)</title><rect x="268.1" y="515.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="271.1" y="526.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.12%)</title><rect x="268.8" y="515.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="271.8" y="526.0"></text>
</g>
<g>
<title>malloc (2 samples, 0.12%)</title><rect x="270.2" y="515.0" width="1.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="273.2" y="526.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.06%)</title><rect x="271.6" y="515.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="274.6" y="526.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.06%)</title><rect x="272.3" y="515.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="275.3" y="526.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.06%)</title><rect x="273.0" y="515.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="276.0" y="526.0"></text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (2 samples, 0.12%)</title><rect x="273.7" y="515.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="276.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.06%)</title><rect x="275.1" y="515.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="278.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.06%)</title><rect x="275.8" y="515.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="278.8" y="526.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (80 samples, 4.79%)</title><rect x="276.5" y="515.0" width="56.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="279.5" y="526.0">rocksd..</text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.06%)</title><rect x="276.5" y="499.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="279.5" y="510.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="277.2" y="499.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="280.2" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.06%)</title><rect x="278.0" y="499.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="281.0" y="510.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="278.0" y="483.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="281.0" y="494.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.06%)</title><rect x="278.7" y="499.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="281.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (63 samples, 3.77%)</title><rect x="279.4" y="499.0" width="44.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="282.4" y="510.0">rock..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.06%)</title><rect x="279.4" y="483.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="282.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (62 samples, 3.71%)</title><rect x="280.1" y="483.0" width="43.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="283.1" y="494.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (58 samples, 3.48%)</title><rect x="282.9" y="467.0" width="41.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="285.9" y="478.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (57 samples, 3.42%)</title><rect x="282.9" y="451.0" width="40.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="285.9" y="462.0">roc..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="282.9" y="435.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="285.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (52 samples, 3.12%)</title><rect x="283.6" y="435.0" width="36.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="286.6" y="446.0">roc..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.06%)</title><rect x="285.7" y="419.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="288.7" y="430.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.06%)</title><rect x="286.4" y="419.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="289.4" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="287.1" y="419.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="290.1" y="430.0"></text>
</g>
<g>
<title>memcpy@plt (1 samples, 0.06%)</title><rect x="287.9" y="419.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="290.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (3 samples, 0.18%)</title><rect x="288.6" y="419.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="291.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.06%)</title><rect x="289.3" y="403.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="292.3" y="414.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.06%)</title><rect x="290.0" y="403.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="293.0" y="414.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.06%)</title><rect x="290.0" y="387.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="293.0" y="398.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.06%)</title><rect x="290.7" y="419.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="293.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (4 samples, 0.24%)</title><rect x="291.4" y="419.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="294.4" y="430.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.12%)</title><rect x="291.4" y="403.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="294.4" y="414.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (2 samples, 0.12%)</title><rect x="291.4" y="387.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="294.4" y="398.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.06%)</title><rect x="292.1" y="371.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="295.1" y="382.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.06%)</title><rect x="292.8" y="403.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="295.8" y="414.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) [clone .plt] (1 samples, 0.06%)</title><rect x="293.5" y="403.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="296.5" y="414.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.06%)</title><rect x="294.2" y="419.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="297.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (35 samples, 2.10%)</title><rect x="294.9" y="419.0" width="24.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="297.9" y="430.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (34 samples, 2.04%)</title><rect x="295.6" y="403.0" width="24.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="298.6" y="414.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni12529796041065143802.so (34 samples, 2.04%)</title><rect x="295.6" y="387.0" width="24.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="298.6" y="398.0">/..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (30 samples, 1.80%)</title><rect x="297.0" y="371.0" width="21.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="300.0" y="382.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni12529796041065143802.so (2 samples, 0.12%)</title><rect x="309.8" y="355.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="312.8" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (10 samples, 0.60%)</title><rect x="311.2" y="355.0" width="7.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="314.2" y="366.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.06%)</title><rect x="313.3" y="339.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="316.3" y="350.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (4 samples, 0.24%)</title><rect x="314.0" y="339.0" width="2.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="317.0" y="350.0"></text>
</g>
<g>
<title>memcmp@plt (2 samples, 0.12%)</title><rect x="316.8" y="339.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="319.8" y="350.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.06%)</title><rect x="318.3" y="371.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="321.3" y="382.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) [clone .plt] (1 samples, 0.06%)</title><rect x="319.0" y="371.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="322.0" y="382.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) [clone .plt] (1 samples, 0.06%)</title><rect x="319.7" y="419.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="322.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.06%)</title><rect x="320.4" y="435.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="323.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.06%)</title><rect x="321.1" y="435.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="324.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.06%)</title><rect x="321.8" y="435.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="324.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.06%)</title><rect x="322.5" y="435.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="325.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (1 samples, 0.06%)</title><rect x="323.2" y="451.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="326.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (3 samples, 0.18%)</title><rect x="323.9" y="499.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="326.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (9 samples, 0.54%)</title><rect x="326.0" y="499.0" width="6.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="329.0" y="510.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="326.0" y="483.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="329.0" y="494.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.06%)</title><rect x="326.7" y="483.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="329.7" y="494.0"></text>
</g>
<g>
<title>jni_NewByteArray (6 samples, 0.36%)</title><rect x="327.4" y="483.0" width="4.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="330.4" y="494.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="328.2" y="467.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="331.2" y="478.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.06%)</title><rect x="328.9" y="467.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="331.9" y="478.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.18%)</title><rect x="329.6" y="467.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="332.6" y="478.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.12%)</title><rect x="329.6" y="451.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="332.6" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.12%)</title><rect x="329.6" y="435.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="332.6" y="446.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.06%)</title><rect x="329.6" y="419.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="332.6" y="430.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="330.3" y="419.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="333.3" y="430.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="331.0" y="451.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="334.0" y="462.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.06%)</title><rect x="331.7" y="483.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="334.7" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="331.7" y="467.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="334.7" y="478.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.06%)</title><rect x="332.4" y="499.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="335.4" y="510.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.06%)</title><rect x="333.1" y="515.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="336.1" y="526.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) [clone .plt] (1 samples, 0.06%)</title><rect x="333.8" y="515.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="336.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.18%)</title><rect x="334.5" y="531.0" width="2.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="337.5" y="542.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="334.5" y="515.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="337.5" y="526.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.06%)</title><rect x="335.2" y="515.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="338.2" y="526.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.06%)</title><rect x="335.9" y="515.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="338.9" y="526.0"></text>
</g>
<g>
<title>malloc (3 samples, 0.18%)</title><rect x="336.6" y="531.0" width="2.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="339.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.06%)</title><rect x="338.8" y="531.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="341.8" y="542.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.06%)</title><rect x="339.5" y="531.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="342.5" y="542.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.06%)</title><rect x="340.2" y="531.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="343.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (5 samples, 0.30%)</title><rect x="340.9" y="563.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="343.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (5 samples, 0.30%)</title><rect x="340.9" y="547.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="343.9" y="558.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="340.9" y="531.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="343.9" y="542.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="340.9" y="515.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="343.9" y="526.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="340.9" y="499.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="343.9" y="510.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="340.9" y="483.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="343.9" y="494.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="340.9" y="467.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="343.9" y="478.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="340.9" y="451.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="343.9" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.18%)</title><rect x="341.6" y="531.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.18%)</title><rect x="341.6" y="515.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="344.6" y="526.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.18%)</title><rect x="341.6" y="499.0" width="2.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="344.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.06%)</title><rect x="343.7" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="346.7" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="343.7" y="515.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="346.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="343.7" y="499.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="346.7" y="510.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1 samples, 0.06%)</title><rect x="343.7" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="346.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.06%)</title><rect x="344.4" y="643.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="344.4" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="347.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.06%)</title><rect x="344.4" y="611.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="347.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.06%)</title><rect x="344.4" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="347.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.06%)</title><rect x="344.4" y="579.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="347.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="344.4" y="563.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="347.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (288 samples, 17.26%)</title><rect x="345.1" y="643.0" width="203.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="348.1" y="654.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (48 samples, 2.88%)</title><rect x="346.5" y="627.0" width="34.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="349.5" y="638.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (45 samples, 2.70%)</title><rect x="347.2" y="611.0" width="31.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.2" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.06%)</title><rect x="347.2" y="595.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="350.2" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="347.2" y="579.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="350.2" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="347.2" y="563.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="350.2" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="347.2" y="547.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="350.2" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="347.2" y="531.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="350.2" y="542.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.06%)</title><rect x="347.2" y="515.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="350.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.24%)</title><rect x="348.0" y="595.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="351.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.24%)</title><rect x="348.0" y="579.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="351.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.24%)</title><rect x="348.0" y="563.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="351.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.12%)</title><rect x="350.8" y="595.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="353.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.12%)</title><rect x="350.8" y="579.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="353.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.12%)</title><rect x="350.8" y="563.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="353.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.12%)</title><rect x="350.8" y="547.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="353.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="351.5" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="354.5" y="542.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="351.5" y="515.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="354.5" y="526.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.06%)</title><rect x="351.5" y="499.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="354.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.06%)</title><rect x="352.2" y="595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="355.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.06%)</title><rect x="352.2" y="579.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="355.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (37 samples, 2.22%)</title><rect x="352.9" y="595.0" width="26.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="355.9" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (37 samples, 2.22%)</title><rect x="352.9" y="579.0" width="26.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="355.9" y="590.0">j..</text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.06%)</title><rect x="352.9" y="563.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="355.9" y="574.0"></text>
</g>
<g>
<title>Unsafe_Park (21 samples, 1.26%)</title><rect x="353.6" y="563.0" width="14.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="356.6" y="574.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.06%)</title><rect x="354.3" y="547.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="357.3" y="558.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.06%)</title><rect x="355.0" y="547.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="358.0" y="558.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.24%)</title><rect x="355.7" y="547.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="358.7" y="558.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.06%)</title><rect x="357.1" y="531.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="360.1" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.06%)</title><rect x="357.8" y="531.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="360.8" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (3 samples, 0.18%)</title><rect x="358.6" y="547.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="361.6" y="558.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.06%)</title><rect x="360.7" y="547.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="363.7" y="558.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="361.4" y="547.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="364.4" y="558.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (8 samples, 0.48%)</title><rect x="362.1" y="547.0" width="5.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="365.1" y="558.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.06%)</title><rect x="367.7" y="547.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="370.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.90%)</title><rect x="368.5" y="563.0" width="10.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="371.5" y="574.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (2 samples, 0.12%)</title><rect x="368.5" y="547.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="371.5" y="558.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="369.9" y="547.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="372.9" y="558.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="370.6" y="547.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="373.6" y="558.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.06%)</title><rect x="371.3" y="547.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="374.3" y="558.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (10 samples, 0.60%)</title><rect x="372.0" y="547.0" width="7.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="375.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.12%)</title><rect x="379.1" y="611.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="382.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.12%)</title><rect x="379.1" y="595.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.12%)</title><rect x="379.1" y="579.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.12%)</title><rect x="379.1" y="563.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.12%)</title><rect x="379.1" y="547.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.1" y="558.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.12%)</title><rect x="379.1" y="531.0" width="1.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="382.1" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.06%)</title><rect x="379.1" y="515.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="382.1" y="526.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="379.8" y="515.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="382.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (238 samples, 14.26%)</title><rect x="380.5" y="627.0" width="168.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.5" y="638.0">java/util/concurrent/S..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (238 samples, 14.26%)</title><rect x="380.5" y="611.0" width="168.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.5" y="622.0">java/util/concurrent/S..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (9 samples, 0.54%)</title><rect x="380.5" y="595.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="383.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.54%)</title><rect x="380.5" y="579.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="383.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (229 samples, 13.72%)</title><rect x="386.8" y="595.0" width="161.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.8" y="606.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (220 samples, 13.18%)</title><rect x="392.5" y="579.0" width="155.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.5" y="590.0">java/util/concurrent..</text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.18%)</title><rect x="453.3" y="563.0" width="2.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="456.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (128 samples, 7.67%)</title><rect x="455.4" y="563.0" width="90.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="458.4" y="574.0">jdk/intern..</text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.06%)</title><rect x="456.1" y="547.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="459.1" y="558.0"></text>
</g>
<g>
<title>Unsafe_Park (71 samples, 4.25%)</title><rect x="456.8" y="547.0" width="50.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="459.8" y="558.0">Unsaf..</text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.12%)</title><rect x="460.4" y="531.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="463.4" y="542.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.06%)</title><rect x="461.8" y="531.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="464.8" y="542.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (28 samples, 1.68%)</title><rect x="462.5" y="531.0" width="19.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="465.5" y="542.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (8 samples, 0.48%)</title><rect x="466.7" y="515.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="469.7" y="526.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.12%)</title><rect x="472.4" y="515.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="475.4" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (6 samples, 0.36%)</title><rect x="473.8" y="515.0" width="4.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="476.8" y="526.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="478.0" y="515.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="481.0" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.18%)</title><rect x="478.7" y="515.0" width="2.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="481.7" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.06%)</title><rect x="480.9" y="515.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="483.9" y="526.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.06%)</title><rect x="481.6" y="515.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="484.6" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (3 samples, 0.18%)</title><rect x="482.3" y="531.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="485.3" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.06%)</title><rect x="484.4" y="531.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="487.4" y="542.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.06%)</title><rect x="485.1" y="531.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="488.1" y="542.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.18%)</title><rect x="485.8" y="531.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="488.8" y="542.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (25 samples, 1.50%)</title><rect x="487.9" y="531.0" width="17.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="490.9" y="542.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.06%)</title><rect x="505.6" y="531.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="508.6" y="542.0"></text>
</g>
<g>
<title>pthread_mutex_trylock@plt (1 samples, 0.06%)</title><rect x="506.3" y="531.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="509.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 3.18%)</title><rect x="507.0" y="547.0" width="37.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="510.0" y="558.0">[un..</text>
</g>
<g>
<title>__condvar_confirm_wakeup (1 samples, 0.06%)</title><rect x="507.0" y="531.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="510.0" y="542.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (2 samples, 0.12%)</title><rect x="507.7" y="531.0" width="1.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="510.7" y="542.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.06%)</title><rect x="509.1" y="531.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="512.1" y="542.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.12%)</title><rect x="509.9" y="531.0" width="1.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="512.9" y="542.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="511.3" y="531.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="514.3" y="542.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.12%)</title><rect x="512.0" y="531.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="515.0" y="542.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (3 samples, 0.18%)</title><rect x="513.4" y="531.0" width="2.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="516.4" y="542.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (41 samples, 2.46%)</title><rect x="515.5" y="531.0" width="29.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="518.5" y="542.0">pt..</text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.12%)</title><rect x="544.5" y="547.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="547.5" y="558.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (3 samples, 0.18%)</title><rect x="545.9" y="563.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="548.9" y="574.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.06%)</title><rect x="548.0" y="579.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="551.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$399/1148631027.run (46 samples, 2.76%)</title><rect x="548.7" y="643.0" width="32.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="551.7" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (43 samples, 2.58%)</title><rect x="550.9" y="627.0" width="30.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="553.9" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (42 samples, 2.52%)</title><rect x="551.6" y="611.0" width="29.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.6" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (38 samples, 2.28%)</title><rect x="554.4" y="595.0" width="26.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="557.4" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (38 samples, 2.28%)</title><rect x="554.4" y="579.0" width="26.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.4" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (38 samples, 2.28%)</title><rect x="554.4" y="563.0" width="26.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="557.4" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (38 samples, 2.28%)</title><rect x="554.4" y="547.0" width="26.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="557.4" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (38 samples, 2.28%)</title><rect x="554.4" y="531.0" width="26.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.4" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (38 samples, 2.28%)</title><rect x="554.4" y="515.0" width="26.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.4" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (37 samples, 2.22%)</title><rect x="554.4" y="499.0" width="26.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.4" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (37 samples, 2.22%)</title><rect x="554.4" y="483.0" width="26.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="557.4" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (19 samples, 1.14%)</title><rect x="554.4" y="467.0" width="13.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (13 samples, 0.78%)</title><rect x="555.1" y="451.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.78%)</title><rect x="555.1" y="435.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="558.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (13 samples, 0.78%)</title><rect x="555.1" y="419.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="558.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13 samples, 0.78%)</title><rect x="555.1" y="403.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="558.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (6 samples, 0.36%)</title><rect x="555.8" y="387.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="558.8" y="398.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="555.8" y="371.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="558.8" y="382.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$83/249034932.apply (1 samples, 0.06%)</title><rect x="556.5" y="371.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="559.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$411/2132316026.apply (3 samples, 0.18%)</title><rect x="557.2" y="371.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="560.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (3 samples, 0.18%)</title><rect x="557.2" y="355.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="560.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (3 samples, 0.18%)</title><rect x="557.2" y="339.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="560.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (2 samples, 0.12%)</title><rect x="557.2" y="323.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.12%)</title><rect x="557.2" y="307.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="560.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.12%)</title><rect x="557.2" y="291.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.12%)</title><rect x="557.2" y="275.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="560.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$239/1117950874.apply (2 samples, 0.12%)</title><rect x="557.2" y="259.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="560.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (2 samples, 0.12%)</title><rect x="557.2" y="243.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="560.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (2 samples, 0.12%)</title><rect x="557.2" y="227.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (2 samples, 0.12%)</title><rect x="557.2" y="211.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="560.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.12%)</title><rect x="557.2" y="195.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="560.2" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="557.2" y="179.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="560.2" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="557.2" y="163.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.2" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.12%)</title><rect x="557.2" y="147.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.2" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.12%)</title><rect x="557.2" y="131.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="560.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.wrapForDebug (1 samples, 0.06%)</title><rect x="558.6" y="323.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="561.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$142/558125001.apply (1 samples, 0.06%)</title><rect x="559.3" y="371.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="562.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1 samples, 0.06%)</title><rect x="559.3" y="355.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="562.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1 samples, 0.06%)</title><rect x="559.3" y="339.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="562.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1 samples, 0.06%)</title><rect x="559.3" y="323.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="562.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1 samples, 0.06%)</title><rect x="559.3" y="307.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.3" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (1 samples, 0.06%)</title><rect x="559.3" y="291.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="562.3" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.06%)</title><rect x="559.3" y="275.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.3" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.06%)</title><rect x="559.3" y="259.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="562.3" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.06%)</title><rect x="559.3" y="243.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="562.3" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.06%)</title><rect x="559.3" y="227.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.06%)</title><rect x="559.3" y="211.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (5 samples, 0.30%)</title><rect x="560.1" y="387.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="563.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4 samples, 0.24%)</title><rect x="560.8" y="371.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="563.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.06%)</title><rect x="560.8" y="355.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$364/22668537.apply (1 samples, 0.06%)</title><rect x="560.8" y="339.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$364/22668537.apply (3 samples, 0.18%)</title><rect x="561.5" y="355.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (3 samples, 0.18%)</title><rect x="561.5" y="339.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3 samples, 0.18%)</title><rect x="561.5" y="323.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$161/2060274688.apply (1 samples, 0.06%)</title><rect x="562.2" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.06%)</title><rect x="562.2" y="291.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="565.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.06%)</title><rect x="562.2" y="275.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="565.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (1 samples, 0.06%)</title><rect x="562.2" y="259.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="565.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (1 samples, 0.06%)</title><rect x="562.2" y="243.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.failedFuture (1 samples, 0.06%)</title><rect x="562.9" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="565.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (1 samples, 0.06%)</title><rect x="562.9" y="291.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="562.9" y="275.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.06%)</title><rect x="562.9" y="259.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="562.9" y="243.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="565.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$161/2060274688.apply (1 samples, 0.06%)</title><rect x="562.9" y="227.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="565.9" y="238.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="563.6" y="387.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="566.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (4 samples, 0.24%)</title><rect x="564.3" y="451.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (2 samples, 0.12%)</title><rect x="565.7" y="435.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="568.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (2 samples, 0.12%)</title><rect x="565.7" y="419.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (2 samples, 0.12%)</title><rect x="565.7" y="403.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="567.1" y="451.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="570.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$416/783689259.run (1 samples, 0.06%)</title><rect x="567.1" y="435.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1 samples, 0.06%)</title><rect x="567.1" y="419.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="570.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1 samples, 0.06%)</title><rect x="567.1" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="570.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1 samples, 0.06%)</title><rect x="567.1" y="387.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="570.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="567.1" y="371.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="567.1" y="355.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="570.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.06%)</title><rect x="567.8" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.06%)</title><rect x="567.8" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="570.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.06%)</title><rect x="567.8" y="435.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (17 samples, 1.02%)</title><rect x="568.5" y="467.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="571.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (17 samples, 1.02%)</title><rect x="568.5" y="451.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="571.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (17 samples, 1.02%)</title><rect x="568.5" y="435.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="571.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (16 samples, 0.96%)</title><rect x="569.2" y="419.0" width="11.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="572.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (16 samples, 0.96%)</title><rect x="569.2" y="403.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.2" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (13 samples, 0.78%)</title><rect x="569.2" y="387.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.2" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (13 samples, 0.78%)</title><rect x="569.2" y="371.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (13 samples, 0.78%)</title><rect x="569.2" y="355.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="572.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (13 samples, 0.78%)</title><rect x="569.2" y="339.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (10 samples, 0.60%)</title><rect x="570.7" y="323.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (10 samples, 0.60%)</title><rect x="570.7" y="307.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="573.7" y="318.0"></text>
</g>
<g>
<title>__GI___writev (6 samples, 0.36%)</title><rect x="572.1" y="291.0" width="4.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="575.1" y="302.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.06%)</title><rect x="576.3" y="291.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="579.3" y="302.0"></text>
</g>
<g>
<title>convertLongReturnVal (1 samples, 0.06%)</title><rect x="577.0" y="291.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="580.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="577.7" y="323.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="580.7" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="577.7" y="307.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="580.7" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.06%)</title><rect x="577.7" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.06%)</title><rect x="577.7" y="275.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.7" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3 samples, 0.18%)</title><rect x="578.4" y="387.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="581.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.06%)</title><rect x="580.6" y="499.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="583.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.06%)</title><rect x="580.6" y="483.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="583.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (251 samples, 15.04%)</title><rect x="581.3" y="643.0" width="177.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="584.3" y="654.0">jdk/internal/net/http/c..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (244 samples, 14.62%)</title><rect x="585.5" y="627.0" width="172.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="588.5" y="638.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="585.5" y="611.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="588.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (135 samples, 8.09%)</title><rect x="586.2" y="611.0" width="95.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.2" y="622.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.run (132 samples, 7.91%)</title><rect x="588.3" y="595.0" width="93.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="591.3" y="606.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (130 samples, 7.79%)</title><rect x="589.7" y="579.0" width="92.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.7" y="590.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (4 samples, 0.24%)</title><rect x="590.5" y="563.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="593.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (1 samples, 0.06%)</title><rect x="590.5" y="547.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="590.5" y="531.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="593.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.12%)</title><rect x="591.2" y="547.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.12%)</title><rect x="591.2" y="531.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.first (1 samples, 0.06%)</title><rect x="591.9" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="594.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.06%)</title><rect x="592.6" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (14 samples, 0.84%)</title><rect x="593.3" y="563.0" width="9.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="596.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (14 samples, 0.84%)</title><rect x="593.3" y="547.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="596.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (14 samples, 0.84%)</title><rect x="593.3" y="531.0" width="9.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="596.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (14 samples, 0.84%)</title><rect x="593.3" y="515.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1059063940.linkToTargetMethod (1 samples, 0.06%)</title><rect x="593.3" y="499.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="596.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1641313620.invoke (1 samples, 0.06%)</title><rect x="593.3" y="483.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="596.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="593.3" y="467.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="596.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.06%)</title><rect x="593.3" y="451.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="596.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.06%)</title><rect x="593.3" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.06%)</title><rect x="593.3" y="419.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="596.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (13 samples, 0.78%)</title><rect x="594.0" y="499.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (13 samples, 0.78%)</title><rect x="594.0" y="483.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (13 samples, 0.78%)</title><rect x="594.0" y="467.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="597.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (12 samples, 0.72%)</title><rect x="594.7" y="451.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="597.7" y="462.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="595.4" y="435.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="598.4" y="446.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.06%)</title><rect x="595.4" y="419.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="598.4" y="430.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.06%)</title><rect x="595.4" y="403.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="598.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (10 samples, 0.60%)</title><rect x="596.1" y="435.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="599.1" y="446.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="596.8" y="419.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="599.8" y="430.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="596.8" y="403.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="599.8" y="414.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.06%)</title><rect x="596.8" y="387.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="599.8" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (8 samples, 0.48%)</title><rect x="597.5" y="419.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.5" y="430.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="598.2" y="403.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="601.2" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="598.2" y="387.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="601.2" y="398.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.06%)</title><rect x="598.2" y="371.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="601.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (6 samples, 0.36%)</title><rect x="598.9" y="403.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.9" y="414.0"></text>
</g>
<g>
<title>__libc_write (6 samples, 0.36%)</title><rect x="598.9" y="387.0" width="4.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="601.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (111 samples, 6.65%)</title><rect x="603.2" y="563.0" width="78.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.2" y="574.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (110 samples, 6.59%)</title><rect x="603.2" y="547.0" width="77.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.2" y="558.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (110 samples, 6.59%)</title><rect x="603.2" y="531.0" width="77.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.2" y="542.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (110 samples, 6.59%)</title><rect x="603.2" y="515.0" width="77.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.2" y="526.0">jdk/inter..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (60 samples, 3.59%)</title><rect x="603.9" y="499.0" width="42.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.9" y="510.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (60 samples, 3.59%)</title><rect x="603.9" y="483.0" width="42.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.9" y="494.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (60 samples, 3.59%)</title><rect x="603.9" y="467.0" width="42.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.9" y="478.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (60 samples, 3.59%)</title><rect x="603.9" y="451.0" width="42.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.9" y="462.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (60 samples, 3.59%)</title><rect x="603.9" y="435.0" width="42.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="606.9" y="446.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (59 samples, 3.54%)</title><rect x="604.6" y="419.0" width="41.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.6" y="430.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (59 samples, 3.54%)</title><rect x="604.6" y="403.0" width="41.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.6" y="414.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (55 samples, 3.30%)</title><rect x="604.6" y="387.0" width="38.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="607.6" y="398.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (55 samples, 3.30%)</title><rect x="604.6" y="371.0" width="38.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.6" y="382.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (44 samples, 2.64%)</title><rect x="605.3" y="355.0" width="31.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="608.3" y="366.0">ja..</text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="605.3" y="339.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="608.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.06%)</title><rect x="606.0" y="339.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="609.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.06%)</title><rect x="606.0" y="323.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="609.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AltResult.&lt;init&gt; (1 samples, 0.06%)</title><rect x="606.0" y="307.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="609.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$414/1488698859.apply (2 samples, 0.12%)</title><rect x="606.7" y="339.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$142/558125001.apply (30 samples, 1.80%)</title><rect x="608.1" y="339.0" width="21.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.1" y="350.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (30 samples, 1.80%)</title><rect x="608.1" y="323.0" width="21.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.1" y="334.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (29 samples, 1.74%)</title><rect x="608.1" y="307.0" width="20.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="611.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="608.1" y="291.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="608.1" y="275.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="608.1" y="259.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (28 samples, 1.68%)</title><rect x="608.8" y="291.0" width="19.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="611.8" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$120/169726349.apply (2 samples, 0.12%)</title><rect x="608.8" y="275.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.8" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (2 samples, 0.12%)</title><rect x="608.8" y="259.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (2 samples, 0.12%)</title><rect x="608.8" y="243.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (2 samples, 0.12%)</title><rect x="608.8" y="227.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="611.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.12%)</title><rect x="608.8" y="211.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="611.8" y="222.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (2 samples, 0.12%)</title><rect x="608.8" y="195.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.8" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (2 samples, 0.12%)</title><rect x="608.8" y="179.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (26 samples, 1.56%)</title><rect x="610.3" y="275.0" width="18.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="613.3" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (8 samples, 0.48%)</title><rect x="610.3" y="259.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.3" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.12%)</title><rect x="610.3" y="243.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.3" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.12%)</title><rect x="610.3" y="227.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.12%)</title><rect x="610.3" y="211.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="613.3" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.12%)</title><rect x="610.3" y="195.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="613.3" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.12%)</title><rect x="610.3" y="179.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="613.3" y="190.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.12%)</title><rect x="610.3" y="163.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="613.3" y="174.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.12%)</title><rect x="610.3" y="147.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.3" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.12%)</title><rect x="610.3" y="131.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.3" y="142.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.12%)</title><rect x="611.7" y="243.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="614.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.12%)</title><rect x="611.7" y="227.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="614.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (2 samples, 0.12%)</title><rect x="611.7" y="211.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="614.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.12%)</title><rect x="611.7" y="195.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="614.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.12%)</title><rect x="611.7" y="179.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="614.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (4 samples, 0.24%)</title><rect x="613.1" y="243.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="616.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.18%)</title><rect x="613.8" y="227.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="616.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.12%)</title><rect x="614.5" y="211.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="617.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.12%)</title><rect x="614.5" y="195.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="617.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.12%)</title><rect x="614.5" y="179.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (2 samples, 0.12%)</title><rect x="614.5" y="163.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="617.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (2 samples, 0.12%)</title><rect x="614.5" y="147.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (2 samples, 0.12%)</title><rect x="614.5" y="131.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="617.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="615.9" y="259.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="618.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="615.9" y="243.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="615.9" y="227.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="618.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17 samples, 1.02%)</title><rect x="616.6" y="259.0" width="12.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="619.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$496/855121012.run (17 samples, 1.02%)</title><rect x="616.6" y="243.0" width="12.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (17 samples, 1.02%)</title><rect x="616.6" y="227.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.06%)</title><rect x="618.0" y="211.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="621.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.06%)</title><rect x="618.0" y="195.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.06%)</title><rect x="618.0" y="179.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="621.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.06%)</title><rect x="618.7" y="211.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.06%)</title><rect x="618.7" y="195.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="621.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (1 samples, 0.06%)</title><rect x="618.7" y="179.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (8 samples, 0.48%)</title><rect x="619.4" y="211.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="622.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (8 samples, 0.48%)</title><rect x="619.4" y="195.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="619.4" y="179.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="619.4" y="163.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="622.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$547/987248172.get$Lambda (1 samples, 0.06%)</title><rect x="619.4" y="147.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="622.4" y="158.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (1 samples, 0.06%)</title><rect x="619.4" y="131.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.4" y="142.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (5 samples, 0.30%)</title><rect x="620.1" y="179.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="623.1" y="190.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (3 samples, 0.18%)</title><rect x="621.6" y="163.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="624.6" y="174.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (3 samples, 0.18%)</title><rect x="621.6" y="147.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="624.6" y="158.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.12%)</title><rect x="621.6" y="131.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="624.6" y="142.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.06%)</title><rect x="621.6" y="115.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="624.6" y="126.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="621.6" y="99.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="624.6" y="110.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="622.3" y="115.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="625.3" y="126.0"></text>
</g>
<g>
<title>Java_java_lang_System_identityHashCode (1 samples, 0.06%)</title><rect x="623.0" y="131.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="626.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.12%)</title><rect x="623.7" y="179.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="626.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.12%)</title><rect x="623.7" y="163.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.12%)</title><rect x="625.1" y="211.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (1 samples, 0.06%)</title><rect x="625.8" y="195.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.8" y="206.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="625.8" y="179.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="628.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (3 samples, 0.18%)</title><rect x="626.5" y="211.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="629.5" y="222.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="627.9" y="195.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="630.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (1 samples, 0.06%)</title><rect x="628.6" y="307.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="631.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$369/1508220952.apply (10 samples, 0.60%)</title><rect x="629.3" y="339.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (8 samples, 0.48%)</title><rect x="630.8" y="323.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (7 samples, 0.42%)</title><rect x="630.8" y="307.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="633.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (7 samples, 0.42%)</title><rect x="630.8" y="291.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="633.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (7 samples, 0.42%)</title><rect x="630.8" y="275.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="633.8" y="286.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="630.8" y="259.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="633.8" y="270.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="630.8" y="243.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="633.8" y="254.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="630.8" y="227.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="633.8" y="238.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (6 samples, 0.36%)</title><rect x="631.5" y="259.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="634.5" y="270.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (1 samples, 0.06%)</title><rect x="631.5" y="243.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="634.5" y="254.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.06%)</title><rect x="631.5" y="227.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.5" y="238.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.06%)</title><rect x="631.5" y="211.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.5" y="222.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.06%)</title><rect x="631.5" y="195.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="634.5" y="206.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (5 samples, 0.30%)</title><rect x="632.2" y="243.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="635.2" y="254.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (5 samples, 0.30%)</title><rect x="632.2" y="227.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="635.2" y="238.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.18%)</title><rect x="632.2" y="211.0" width="2.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="635.2" y="222.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.06%)</title><rect x="633.6" y="195.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="636.6" y="206.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.06%)</title><rect x="634.3" y="211.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="637.3" y="222.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.06%)</title><rect x="635.0" y="211.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="638.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.06%)</title><rect x="635.7" y="307.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.06%)</title><rect x="635.7" y="291.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="635.7" y="275.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (1 samples, 0.06%)</title><rect x="635.7" y="259.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (6 samples, 0.36%)</title><rect x="636.4" y="355.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="639.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6 samples, 0.36%)</title><rect x="636.4" y="339.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="636.4" y="323.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.06%)</title><rect x="637.1" y="323.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="640.1" y="334.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="637.1" y="307.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="640.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$372/484910400.apply (4 samples, 0.24%)</title><rect x="637.8" y="323.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (4 samples, 0.24%)</title><rect x="637.8" y="307.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (3 samples, 0.18%)</title><rect x="637.8" y="291.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (3 samples, 0.18%)</title><rect x="637.8" y="275.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="640.8" y="286.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="639.2" y="259.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="642.2" y="270.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="639.2" y="243.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="642.2" y="254.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="639.2" y="227.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="642.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.06%)</title><rect x="639.9" y="291.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="642.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.06%)</title><rect x="639.9" y="275.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="639.9" y="259.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (4 samples, 0.24%)</title><rect x="640.7" y="355.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.06%)</title><rect x="642.8" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.06%)</title><rect x="642.8" y="323.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AltResult.&lt;init&gt; (1 samples, 0.06%)</title><rect x="642.8" y="307.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$420/992012201.apply (4 samples, 0.24%)</title><rect x="643.5" y="387.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="646.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (4 samples, 0.24%)</title><rect x="643.5" y="371.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="646.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (4 samples, 0.24%)</title><rect x="643.5" y="355.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="646.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.06%)</title><rect x="645.6" y="339.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="645.6" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="645.6" y="307.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (46 samples, 2.76%)</title><rect x="646.3" y="499.0" width="32.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="649.3" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (6 samples, 0.36%)</title><rect x="651.3" y="483.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.24%)</title><rect x="652.7" y="467.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="655.7" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.24%)</title><rect x="652.7" y="451.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (1 samples, 0.06%)</title><rect x="655.5" y="483.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="655.5" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.5" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="655.5" y="451.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="658.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (9 samples, 0.54%)</title><rect x="656.2" y="483.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="659.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (9 samples, 0.54%)</title><rect x="656.2" y="467.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.2" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (9 samples, 0.54%)</title><rect x="656.2" y="451.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.2" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (7 samples, 0.42%)</title><rect x="657.6" y="435.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.6" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/1260444598.accept (7 samples, 0.42%)</title><rect x="657.6" y="419.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="660.6" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.36%)</title><rect x="658.3" y="403.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.3" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.06%)</title><rect x="659.7" y="387.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="662.7" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$394/1894267442.accept (1 samples, 0.06%)</title><rect x="659.7" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.06%)</title><rect x="659.7" y="355.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="662.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="659.7" y="339.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="662.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="659.7" y="323.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="662.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="659.7" y="307.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="662.7" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="659.7" y="291.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="662.7" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="659.7" y="275.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="662.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.18%)</title><rect x="660.4" y="387.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="663.4" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.12%)</title><rect x="661.2" y="371.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="664.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (23 samples, 1.38%)</title><rect x="662.6" y="483.0" width="16.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="662.6" y="467.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="665.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="662.6" y="451.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="665.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (22 samples, 1.32%)</title><rect x="663.3" y="467.0" width="15.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="666.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="664.0" y="451.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="667.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="664.0" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="667.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.06%)</title><rect x="664.0" y="419.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.0" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="664.0" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.0" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (7 samples, 0.42%)</title><rect x="664.7" y="451.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="667.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (5 samples, 0.30%)</title><rect x="666.1" y="435.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.trim (6 samples, 0.36%)</title><rect x="669.6" y="451.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="672.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (6 samples, 0.36%)</title><rect x="669.6" y="435.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="672.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="673.9" y="451.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="673.9" y="435.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="676.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="673.9" y="419.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="676.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="673.9" y="403.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="676.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="673.9" y="387.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.9" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (6 samples, 0.36%)</title><rect x="674.6" y="451.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="677.6" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.12%)</title><rect x="676.0" y="435.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$443/1513688448.apply (2 samples, 0.12%)</title><rect x="677.4" y="435.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (2 samples, 0.12%)</title><rect x="677.4" y="419.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.12%)</title><rect x="677.4" y="403.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$264/884570996.accept (3 samples, 0.18%)</title><rect x="678.8" y="499.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (3 samples, 0.18%)</title><rect x="678.8" y="483.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (2 samples, 0.12%)</title><rect x="679.5" y="467.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="682.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.06%)</title><rect x="681.0" y="547.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="684.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.06%)</title><rect x="681.0" y="531.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.compareAndSet (1 samples, 0.06%)</title><rect x="681.0" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (108 samples, 6.47%)</title><rect x="681.7" y="611.0" width="76.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="684.7" y="622.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (106 samples, 6.35%)</title><rect x="683.1" y="595.0" width="74.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.1" y="606.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (105 samples, 6.29%)</title><rect x="683.1" y="579.0" width="74.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="686.1" y="590.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.run (104 samples, 6.23%)</title><rect x="683.8" y="563.0" width="73.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="686.8" y="574.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (104 samples, 6.23%)</title><rect x="683.8" y="547.0" width="73.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="686.8" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (1 samples, 0.06%)</title><rect x="683.8" y="531.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="686.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (1 samples, 0.06%)</title><rect x="683.8" y="515.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="683.8" y="499.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (1 samples, 0.06%)</title><rect x="683.8" y="483.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (4 samples, 0.24%)</title><rect x="684.5" y="531.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (2 samples, 0.12%)</title><rect x="684.5" y="515.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="687.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (2 samples, 0.12%)</title><rect x="684.5" y="499.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="687.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1 samples, 0.06%)</title><rect x="685.2" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="688.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1 samples, 0.06%)</title><rect x="685.2" y="467.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="688.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (1 samples, 0.06%)</title><rect x="685.2" y="451.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="688.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.06%)</title><rect x="685.2" y="435.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (2 samples, 0.12%)</title><rect x="685.9" y="515.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (99 samples, 5.93%)</title><rect x="687.3" y="531.0" width="70.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.3" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (99 samples, 5.93%)</title><rect x="687.3" y="515.0" width="70.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.3" y="526.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (99 samples, 5.93%)</title><rect x="687.3" y="499.0" width="70.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.3" y="510.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (99 samples, 5.93%)</title><rect x="687.3" y="483.0" width="70.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.3" y="494.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (99 samples, 5.93%)</title><rect x="687.3" y="467.0" width="70.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.3" y="478.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (98 samples, 5.87%)</title><rect x="688.0" y="451.0" width="69.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.0" y="462.0">jdk/int..</text>
</g>
<g>
<title>java/lang/Math.min (1 samples, 0.06%)</title><rect x="688.0" y="435.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$502/1814071412.run (50 samples, 3.00%)</title><rect x="688.7" y="435.0" width="35.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.7" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (50 samples, 3.00%)</title><rect x="688.7" y="419.0" width="35.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.7" y="430.0">jdk..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.06%)</title><rect x="689.4" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.clear (1 samples, 0.06%)</title><rect x="690.1" y="403.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (47 samples, 2.82%)</title><rect x="690.9" y="403.0" width="33.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="693.9" y="414.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (13 samples, 0.78%)</title><rect x="690.9" y="387.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="693.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (6 samples, 0.36%)</title><rect x="690.9" y="371.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.9" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.24%)</title><rect x="692.3" y="355.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.3" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.24%)</title><rect x="692.3" y="339.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.24%)</title><rect x="692.3" y="323.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.06%)</title><rect x="692.3" y="307.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.06%)</title><rect x="692.3" y="291.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.3" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.06%)</title><rect x="692.3" y="275.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.3" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.18%)</title><rect x="693.0" y="307.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="696.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.18%)</title><rect x="693.0" y="291.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.0" y="302.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.12%)</title><rect x="693.7" y="275.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.12%)</title><rect x="693.7" y="259.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.7" y="270.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.06%)</title><rect x="694.4" y="243.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="697.4" y="254.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.06%)</title><rect x="694.4" y="227.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="697.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (7 samples, 0.42%)</title><rect x="695.1" y="371.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.42%)</title><rect x="695.1" y="355.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (6 samples, 0.36%)</title><rect x="695.1" y="339.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.12%)</title><rect x="695.8" y="323.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="698.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.18%)</title><rect x="697.2" y="323.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.12%)</title><rect x="697.2" y="307.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.12%)</title><rect x="697.2" y="291.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (2 samples, 0.12%)</title><rect x="697.2" y="275.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="700.2" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.06%)</title><rect x="697.9" y="259.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (1 samples, 0.06%)</title><rect x="697.9" y="243.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.06%)</title><rect x="698.6" y="307.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.06%)</title><rect x="699.3" y="339.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="702.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.06%)</title><rect x="699.3" y="323.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="702.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.06%)</title><rect x="699.3" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="702.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.06%)</title><rect x="699.3" y="291.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="702.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.06%)</title><rect x="699.3" y="275.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.3" y="286.0"></text>
</g>
<g>
<title>java/util/Optional.map (2 samples, 0.12%)</title><rect x="700.0" y="387.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="703.0" y="398.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (1 samples, 0.06%)</title><rect x="700.0" y="371.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="703.0" y="382.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.06%)</title><rect x="700.0" y="355.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="703.0" y="366.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (1 samples, 0.06%)</title><rect x="700.0" y="339.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="703.0" y="350.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="700.0" y="323.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="703.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$$Lambda$584/295269630.apply (1 samples, 0.06%)</title><rect x="700.7" y="371.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="703.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.lambda$closeOrReturnToCache$2 (1 samples, 0.06%)</title><rect x="700.7" y="355.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="703.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.06%)</title><rect x="700.7" y="339.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="703.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="700.7" y="323.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="703.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="700.7" y="307.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="703.7" y="318.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="700.7" y="291.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="703.7" y="302.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="700.7" y="275.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="703.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.06%)</title><rect x="700.7" y="259.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="703.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (32 samples, 1.92%)</title><rect x="701.5" y="387.0" width="22.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.5" y="398.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (32 samples, 1.92%)</title><rect x="701.5" y="371.0" width="22.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.5" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (18 samples, 1.08%)</title><rect x="701.5" y="355.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.5" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.12%)</title><rect x="711.4" y="339.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="714.4" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (2 samples, 0.12%)</title><rect x="712.8" y="339.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.8" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (2 samples, 0.12%)</title><rect x="712.8" y="323.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="715.8" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.12%)</title><rect x="712.8" y="307.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.8" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.12%)</title><rect x="712.8" y="291.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.8" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.12%)</title><rect x="712.8" y="275.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="715.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (3 samples, 0.18%)</title><rect x="714.2" y="355.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="717.2" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.12%)</title><rect x="714.2" y="339.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="717.2" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="714.2" y="323.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="717.2" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="714.9" y="323.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="717.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.06%)</title><rect x="714.9" y="307.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="717.9" y="318.0"></text>
</g>
<g>
<title>java/util/Objects.hash (1 samples, 0.06%)</title><rect x="714.9" y="291.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.9" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (1 samples, 0.06%)</title><rect x="714.9" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.9" y="286.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.06%)</title><rect x="715.6" y="339.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="718.6" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.06%)</title><rect x="715.6" y="323.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="718.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (11 samples, 0.66%)</title><rect x="716.3" y="355.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (11 samples, 0.66%)</title><rect x="716.3" y="339.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="719.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1 samples, 0.06%)</title><rect x="716.3" y="323.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.06%)</title><rect x="716.3" y="307.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.06%)</title><rect x="716.3" y="291.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (10 samples, 0.60%)</title><rect x="717.0" y="323.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (10 samples, 0.60%)</title><rect x="717.0" y="307.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="720.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (10 samples, 0.60%)</title><rect x="717.0" y="291.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="720.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (9 samples, 0.54%)</title><rect x="717.0" y="275.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (9 samples, 0.54%)</title><rect x="717.0" y="259.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.0" y="270.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="717.7" y="243.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="720.7" y="254.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="717.7" y="227.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="720.7" y="238.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.06%)</title><rect x="717.7" y="211.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="720.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (7 samples, 0.42%)</title><rect x="718.4" y="243.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="721.4" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (4 samples, 0.24%)</title><rect x="720.5" y="227.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="723.5" y="238.0"></text>
</g>
<g>
<title>__libc_write (3 samples, 0.18%)</title><rect x="721.3" y="211.0" width="2.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="724.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (1 samples, 0.06%)</title><rect x="723.4" y="275.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="726.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$530/1618478091.accept (8 samples, 0.48%)</title><rect x="724.1" y="435.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="727.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (8 samples, 0.48%)</title><rect x="724.1" y="419.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (8 samples, 0.48%)</title><rect x="724.1" y="403.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="727.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (7 samples, 0.42%)</title><rect x="724.1" y="387.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="727.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 0.42%)</title><rect x="724.1" y="371.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="727.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7 samples, 0.42%)</title><rect x="724.1" y="355.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="727.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 0.42%)</title><rect x="724.1" y="339.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="727.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.18%)</title><rect x="724.8" y="323.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="727.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.18%)</title><rect x="724.8" y="307.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3 samples, 0.18%)</title><rect x="724.8" y="291.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="727.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.18%)</title><rect x="724.8" y="275.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="727.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.18%)</title><rect x="724.8" y="259.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="727.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.18%)</title><rect x="724.8" y="243.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="727.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$541/52399997.accept (1 samples, 0.06%)</title><rect x="725.5" y="227.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="728.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$547/987248172.accept (1 samples, 0.06%)</title><rect x="726.2" y="227.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$541/52399997.accept (1 samples, 0.06%)</title><rect x="726.9" y="323.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="729.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (1 samples, 0.06%)</title><rect x="726.9" y="307.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="729.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (1 samples, 0.06%)</title><rect x="726.9" y="291.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="729.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.06%)</title><rect x="726.9" y="275.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.06%)</title><rect x="726.9" y="259.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="729.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$547/987248172.accept (2 samples, 0.12%)</title><rect x="727.6" y="323.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="730.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (2 samples, 0.12%)</title><rect x="727.6" y="307.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="730.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (2 samples, 0.12%)</title><rect x="727.6" y="291.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.6" y="302.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (1 samples, 0.06%)</title><rect x="728.3" y="275.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$265/1675404960.accept (1 samples, 0.06%)</title><rect x="729.0" y="387.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.06%)</title><rect x="729.0" y="371.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (30 samples, 1.80%)</title><rect x="729.7" y="435.0" width="21.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="732.7" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (30 samples, 1.80%)</title><rect x="729.7" y="419.0" width="21.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.7" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (29 samples, 1.74%)</title><rect x="730.4" y="403.0" width="20.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (28 samples, 1.68%)</title><rect x="730.4" y="387.0" width="19.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (28 samples, 1.68%)</title><rect x="730.4" y="371.0" width="19.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (28 samples, 1.68%)</title><rect x="730.4" y="355.0" width="19.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="733.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.12%)</title><rect x="731.2" y="339.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="734.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.12%)</title><rect x="731.2" y="323.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="734.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="731.9" y="307.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (25 samples, 1.50%)</title><rect x="732.6" y="339.0" width="17.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="733.3" y="323.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="733.3" y="307.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.06%)</title><rect x="733.3" y="291.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.06%)</title><rect x="733.3" y="275.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="733.3" y="259.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="736.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="733.3" y="243.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$553/735033109.accept (1 samples, 0.06%)</title><rect x="733.3" y="227.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="736.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$553/735033109.accept (23 samples, 1.38%)</title><rect x="734.0" y="323.0" width="16.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="737.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (21 samples, 1.26%)</title><rect x="735.4" y="307.0" width="14.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="738.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (21 samples, 1.26%)</title><rect x="735.4" y="291.0" width="14.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="738.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (21 samples, 1.26%)</title><rect x="735.4" y="275.0" width="14.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="738.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.18%)</title><rect x="735.4" y="259.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$574/1641231001.apply (3 samples, 0.18%)</title><rect x="735.4" y="243.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (3 samples, 0.18%)</title><rect x="735.4" y="227.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="738.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (18 samples, 1.08%)</title><rect x="737.5" y="259.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (17 samples, 1.02%)</title><rect x="738.2" y="243.0" width="12.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="741.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (15 samples, 0.90%)</title><rect x="738.2" y="227.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="741.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (14 samples, 0.84%)</title><rect x="738.2" y="211.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (14 samples, 0.84%)</title><rect x="738.2" y="195.0" width="9.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="741.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (14 samples, 0.84%)</title><rect x="738.2" y="179.0" width="9.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (14 samples, 0.84%)</title><rect x="738.2" y="163.0" width="9.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.84%)</title><rect x="738.2" y="147.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="741.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.72%)</title><rect x="739.6" y="131.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="742.6" y="142.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.06%)</title><rect x="739.6" y="115.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="742.6" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.42%)</title><rect x="740.3" y="115.0" width="5.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="743.3" y="126.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.06%)</title><rect x="740.3" y="99.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="743.3" y="110.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.06%)</title><rect x="741.0" y="99.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="744.0" y="110.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.06%)</title><rect x="741.8" y="99.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="744.8" y="110.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.12%)</title><rect x="742.5" y="99.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="745.5" y="110.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.12%)</title><rect x="743.9" y="99.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="746.9" y="110.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.24%)</title><rect x="745.3" y="115.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="748.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="748.1" y="211.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.06%)</title><rect x="748.1" y="195.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="751.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.06%)</title><rect x="748.1" y="179.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="748.1" y="163.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="748.1" y="147.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="751.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$567/756387025.accept (1 samples, 0.06%)</title><rect x="748.1" y="131.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$567/756387025.accept (1 samples, 0.06%)</title><rect x="748.8" y="227.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="751.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (1 samples, 0.06%)</title><rect x="748.8" y="211.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$151/105436391.accept (1 samples, 0.06%)</title><rect x="749.5" y="227.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="752.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (1 samples, 0.06%)</title><rect x="749.5" y="211.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.06%)</title><rect x="749.5" y="195.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="752.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.06%)</title><rect x="749.5" y="179.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="752.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (1 samples, 0.06%)</title><rect x="750.2" y="387.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="753.2" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.06%)</title><rect x="750.2" y="371.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (4 samples, 0.24%)</title><rect x="750.9" y="435.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (4 samples, 0.24%)</title><rect x="750.9" y="419.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="753.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (4 samples, 0.24%)</title><rect x="750.9" y="403.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="753.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (4 samples, 0.24%)</title><rect x="750.9" y="387.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.9" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (4 samples, 0.24%)</title><rect x="750.9" y="371.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="753.9" y="382.0"></text>
</g>
<g>
<title>oop_arraycopy (2 samples, 0.12%)</title><rect x="750.9" y="355.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="753.9" y="366.0"></text>
</g>
<g>
<title>oop_disjoint_arraycopy (2 samples, 0.12%)</title><rect x="752.4" y="355.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="755.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (2 samples, 0.12%)</title><rect x="753.8" y="435.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (2 samples, 0.12%)</title><rect x="753.8" y="419.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1 samples, 0.06%)</title><rect x="754.5" y="403.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (3 samples, 0.18%)</title><rect x="755.2" y="435.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="758.2" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.slice (3 samples, 0.18%)</title><rect x="755.2" y="419.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="758.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.18%)</title><rect x="755.2" y="403.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="758.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.18%)</title><rect x="755.2" y="387.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="758.2" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.18%)</title><rect x="755.2" y="371.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="758.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (2 samples, 0.12%)</title><rect x="755.9" y="355.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="758.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.06%)</title><rect x="757.3" y="579.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.06%)</title><rect x="758.0" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="761.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (60 samples, 3.59%)</title><rect x="758.7" y="691.0" width="42.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="761.7" y="702.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (60 samples, 3.59%)</title><rect x="758.7" y="675.0" width="42.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="761.7" y="686.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (27 samples, 1.62%)</title><rect x="761.6" y="659.0" width="19.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="764.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (27 samples, 1.62%)</title><rect x="761.6" y="643.0" width="19.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="764.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (27 samples, 1.62%)</title><rect x="761.6" y="627.0" width="19.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="764.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (27 samples, 1.62%)</title><rect x="761.6" y="611.0" width="19.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="764.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (27 samples, 1.62%)</title><rect x="761.6" y="595.0" width="19.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="764.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (22 samples, 1.32%)</title><rect x="762.3" y="579.0" width="15.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="765.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (22 samples, 1.32%)</title><rect x="762.3" y="563.0" width="15.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="765.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$BiRelay.tryFire (1 samples, 0.06%)</title><rect x="762.3" y="547.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="765.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeNull (1 samples, 0.06%)</title><rect x="762.3" y="531.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="765.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.06%)</title><rect x="762.3" y="515.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="765.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="762.3" y="499.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (13 samples, 0.78%)</title><rect x="763.0" y="547.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$168/198651204.accept (13 samples, 0.78%)</title><rect x="763.0" y="531.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="766.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$sendToReplicas$0 (12 samples, 0.72%)</title><rect x="763.7" y="515.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="766.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.trySendResponse (11 samples, 0.66%)</title><rect x="763.7" y="499.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="766.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (11 samples, 0.66%)</title><rect x="763.7" y="483.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="766.7" y="494.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.06%)</title><rect x="763.7" y="467.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="763.7" y="451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="766.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="763.7" y="435.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="766.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 0.48%)</title><rect x="764.4" y="467.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="767.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.12%)</title><rect x="764.4" y="451.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="767.4" y="462.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.12%)</title><rect x="764.4" y="435.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="767.4" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.12%)</title><rect x="764.4" y="419.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="767.4" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.36%)</title><rect x="765.8" y="451.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="768.8" y="462.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="765.8" y="435.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="768.8" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="765.8" y="419.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="768.8" y="430.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="765.8" y="403.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="768.8" y="414.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="765.8" y="387.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="768.8" y="398.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.06%)</title><rect x="765.8" y="371.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="768.8" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.30%)</title><rect x="766.5" y="435.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.5" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.24%)</title><rect x="766.5" y="419.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.5" y="430.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.24%)</title><rect x="766.5" y="403.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.5" y="414.0"></text>
</g>
<g>
<title>__libc_send (3 samples, 0.18%)</title><rect x="766.5" y="387.0" width="2.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="769.5" y="398.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="768.6" y="387.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="771.6" y="398.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="769.3" y="419.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="772.3" y="430.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="769.3" y="403.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="772.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.12%)</title><rect x="770.0" y="467.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="770.7" y="451.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="773.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="770.7" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ReplicasResponseComposer.getComposedResponse (1 samples, 0.06%)</title><rect x="771.4" y="499.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="774.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (1 samples, 0.06%)</title><rect x="771.4" y="483.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="774.4" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.06%)</title><rect x="771.4" y="467.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="774.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (6 samples, 0.36%)</title><rect x="772.2" y="547.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding$$Lambda$156/636945562.apply (5 samples, 0.30%)</title><rect x="772.9" y="531.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ResponseConverter.convert (5 samples, 0.30%)</title><rect x="772.9" y="515.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="775.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (4 samples, 0.24%)</title><rect x="773.6" y="499.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.6" y="510.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (4 samples, 0.24%)</title><rect x="773.6" y="483.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.6" y="494.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="773.6" y="467.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="776.6" y="478.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (1 samples, 0.06%)</title><rect x="773.6" y="451.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="776.6" y="462.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="774.3" y="467.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="777.3" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="774.3" y="451.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="777.3" y="462.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="774.3" y="435.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="777.3" y="446.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="774.3" y="419.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="777.3" y="430.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="774.3" y="403.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="777.3" y="414.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="774.3" y="387.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="777.3" y="398.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.06%)</title><rect x="774.3" y="371.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="777.3" y="382.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (1 samples, 0.06%)</title><rect x="775.0" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="778.0" y="478.0"></text>
</g>
<g>
<title>_new_array_Java (1 samples, 0.06%)</title><rect x="775.0" y="451.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="778.0" y="462.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="775.7" y="467.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="778.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (1 samples, 0.06%)</title><rect x="776.4" y="547.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="776.4" y="531.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="779.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="776.4" y="515.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="779.4" y="526.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="777.1" y="547.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="780.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.24%)</title><rect x="777.8" y="579.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="780.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.18%)</title><rect x="778.5" y="563.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="781.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.18%)</title><rect x="778.5" y="547.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="781.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3 samples, 0.18%)</title><rect x="778.5" y="531.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="781.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.18%)</title><rect x="778.5" y="515.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.18%)</title><rect x="778.5" y="499.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.18%)</title><rect x="778.5" y="483.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="781.5" y="494.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.12%)</title><rect x="778.5" y="467.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="781.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$154/704106972.accept (1 samples, 0.06%)</title><rect x="779.9" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (14 samples, 0.84%)</title><rect x="780.6" y="659.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1 samples, 0.06%)</title><rect x="780.6" y="643.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.78%)</title><rect x="781.3" y="643.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="784.3" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.06%)</title><rect x="782.1" y="627.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="785.1" y="638.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.36%)</title><rect x="782.8" y="627.0" width="4.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="785.8" y="638.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.12%)</title><rect x="782.8" y="611.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="785.8" y="622.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.06%)</title><rect x="782.8" y="595.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="785.8" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.06%)</title><rect x="783.5" y="595.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="786.5" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.18%)</title><rect x="784.2" y="611.0" width="2.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="787.2" y="622.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.06%)</title><rect x="786.3" y="611.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="789.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.30%)</title><rect x="787.0" y="627.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="790.0" y="638.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="787.0" y="611.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="790.0" y="622.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (4 samples, 0.24%)</title><rect x="787.7" y="611.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="790.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (15 samples, 0.90%)</title><rect x="790.5" y="659.0" width="10.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="793.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (15 samples, 0.90%)</title><rect x="790.5" y="643.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="793.5" y="654.0"></text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.60%)</title><rect x="790.5" y="627.0" width="7.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="793.5" y="638.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.06%)</title><rect x="790.5" y="611.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="793.5" y="622.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="791.2" y="611.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="794.2" y="622.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.06%)</title><rect x="792.0" y="611.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="795.0" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (7 samples, 0.42%)</title><rect x="792.7" y="611.0" width="4.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="795.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.24%)</title><rect x="797.6" y="627.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="800.6" y="638.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="797.6" y="611.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="800.6" y="622.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (3 samples, 0.18%)</title><rect x="798.3" y="611.0" width="2.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="801.3" y="622.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.06%)</title><rect x="800.4" y="627.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="803.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (243 samples, 14.56%)</title><rect x="801.1" y="691.0" width="171.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="804.1" y="702.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="818.1" y="675.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="821.1" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="818.1" y="659.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="821.1" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (4 samples, 0.24%)</title><rect x="818.8" y="675.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="821.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.06%)</title><rect x="820.9" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="823.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (2 samples, 0.12%)</title><rect x="821.6" y="675.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.6" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (51 samples, 3.06%)</title><rect x="823.1" y="675.0" width="36.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="826.1" y="686.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$378/72598837.accept (45 samples, 2.70%)</title><rect x="823.8" y="659.0" width="31.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.8" y="670.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (45 samples, 2.70%)</title><rect x="823.8" y="643.0" width="31.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.8" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (45 samples, 2.70%)</title><rect x="823.8" y="627.0" width="31.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.8" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (45 samples, 2.70%)</title><rect x="823.8" y="611.0" width="31.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="826.8" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (45 samples, 2.70%)</title><rect x="823.8" y="595.0" width="31.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="826.8" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.12%)</title><rect x="823.8" y="579.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="826.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.12%)</title><rect x="823.8" y="563.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="826.8" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.06%)</title><rect x="824.5" y="547.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="827.5" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.06%)</title><rect x="824.5" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="827.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (43 samples, 2.58%)</title><rect x="825.2" y="579.0" width="30.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.2" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (43 samples, 2.58%)</title><rect x="825.2" y="563.0" width="30.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="828.2" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (43 samples, 2.58%)</title><rect x="825.2" y="547.0" width="30.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="828.2" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (43 samples, 2.58%)</title><rect x="825.2" y="531.0" width="30.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="828.2" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (43 samples, 2.58%)</title><rect x="825.2" y="515.0" width="30.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="828.2" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206/227894635.run (43 samples, 2.58%)</title><rect x="825.2" y="499.0" width="30.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.2" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (43 samples, 2.58%)</title><rect x="825.2" y="483.0" width="30.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.2" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (17 samples, 1.02%)</title><rect x="825.9" y="467.0" width="12.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="828.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (17 samples, 1.02%)</title><rect x="825.9" y="451.0" width="12.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (17 samples, 1.02%)</title><rect x="825.9" y="435.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="828.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.90%)</title><rect x="827.3" y="419.0" width="10.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="830.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.90%)</title><rect x="827.3" y="403.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="830.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.78%)</title><rect x="828.7" y="387.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.78%)</title><rect x="828.7" y="371.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="831.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (12 samples, 0.72%)</title><rect x="829.4" y="355.0" width="8.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="832.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (12 samples, 0.72%)</title><rect x="829.4" y="339.0" width="8.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="832.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (10 samples, 0.60%)</title><rect x="829.4" y="323.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.60%)</title><rect x="829.4" y="307.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="832.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.60%)</title><rect x="829.4" y="291.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="832.4" y="302.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="829.4" y="275.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="832.4" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.24%)</title><rect x="830.1" y="275.0" width="2.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="833.1" y="286.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.06%)</title><rect x="830.1" y="259.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="833.1" y="270.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="830.8" y="259.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="833.8" y="270.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.06%)</title><rect x="831.5" y="259.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="834.5" y="270.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="832.3" y="259.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="835.3" y="270.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.24%)</title><rect x="833.0" y="275.0" width="2.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="836.0" y="286.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="835.8" y="275.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="838.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (2 samples, 0.12%)</title><rect x="836.5" y="323.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.5" y="334.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.06%)</title><rect x="837.2" y="307.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="837.2" y="291.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="840.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (5 samples, 0.30%)</title><rect x="837.9" y="467.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (5 samples, 0.30%)</title><rect x="837.9" y="451.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="840.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 0.30%)</title><rect x="837.9" y="435.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="840.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.24%)</title><rect x="838.6" y="419.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="841.6" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.06%)</title><rect x="839.3" y="403.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="842.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.12%)</title><rect x="840.0" y="403.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.0" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (2 samples, 0.12%)</title><rect x="840.0" y="387.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.0" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.12%)</title><rect x="840.0" y="371.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="843.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (20 samples, 1.20%)</title><rect x="841.4" y="467.0" width="14.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="844.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (19 samples, 1.14%)</title><rect x="842.2" y="451.0" width="13.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="845.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (19 samples, 1.14%)</title><rect x="842.2" y="435.0" width="13.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="845.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (19 samples, 1.14%)</title><rect x="842.2" y="419.0" width="13.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="845.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.06%)</title><rect x="842.9" y="403.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="845.9" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.06%)</title><rect x="842.9" y="387.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="845.9" y="398.0"></text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.06%)</title><rect x="843.6" y="403.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="846.6" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (14 samples, 0.84%)</title><rect x="844.3" y="403.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="847.3" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.06%)</title><rect x="844.3" y="387.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="847.3" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.06%)</title><rect x="844.3" y="371.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="847.3" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="844.3" y="355.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="847.3" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.06%)</title><rect x="844.3" y="339.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (13 samples, 0.78%)</title><rect x="845.0" y="387.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="848.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (13 samples, 0.78%)</title><rect x="845.0" y="371.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.0" y="382.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.06%)</title><rect x="845.7" y="355.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="848.7" y="366.0"></text>
</g>
<g>
<title>__libc_read (10 samples, 0.60%)</title><rect x="846.4" y="355.0" width="7.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="849.4" y="366.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="853.5" y="355.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="856.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.12%)</title><rect x="854.2" y="403.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="857.2" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.12%)</title><rect x="854.2" y="387.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="857.2" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.12%)</title><rect x="854.2" y="371.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="857.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.12%)</title><rect x="854.2" y="355.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="857.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$391/1444661256.accept (5 samples, 0.30%)</title><rect x="855.6" y="659.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="858.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (4 samples, 0.24%)</title><rect x="856.3" y="643.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="859.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$377/1536444579.run (4 samples, 0.24%)</title><rect x="856.3" y="627.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="859.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (4 samples, 0.24%)</title><rect x="856.3" y="611.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="859.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (4 samples, 0.24%)</title><rect x="856.3" y="595.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="859.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.12%)</title><rect x="857.7" y="579.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="860.7" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.12%)</title><rect x="857.7" y="563.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="860.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.12%)</title><rect x="857.7" y="547.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="860.7" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.12%)</title><rect x="857.7" y="531.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="860.7" y="542.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (1 samples, 0.06%)</title><rect x="859.1" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="862.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (5 samples, 0.30%)</title><rect x="859.8" y="675.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="862.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.30%)</title><rect x="859.8" y="659.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="862.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (5 samples, 0.30%)</title><rect x="859.8" y="643.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="862.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (5 samples, 0.30%)</title><rect x="859.8" y="627.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="862.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.30%)</title><rect x="859.8" y="611.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="862.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.24%)</title><rect x="859.8" y="595.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="862.8" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (3 samples, 0.18%)</title><rect x="859.8" y="579.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="862.8" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.12%)</title><rect x="859.8" y="563.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="862.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (1 samples, 0.06%)</title><rect x="859.8" y="547.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="862.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$376/1645928163.accept (1 samples, 0.06%)</title><rect x="859.8" y="531.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="862.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="859.8" y="515.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="862.8" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="859.8" y="499.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="862.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="859.8" y="483.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="862.8" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="859.8" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="862.8" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.06%)</title><rect x="859.8" y="451.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="862.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$375/628055786.test (1 samples, 0.06%)</title><rect x="860.5" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="863.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Sink.begin (1 samples, 0.06%)</title><rect x="861.2" y="563.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="864.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (1 samples, 0.06%)</title><rect x="861.9" y="579.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="864.9" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.06%)</title><rect x="862.7" y="595.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="865.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (38 samples, 2.28%)</title><rect x="863.4" y="675.0" width="26.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="866.4" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$215/107337296.run (14 samples, 0.84%)</title><rect x="863.4" y="659.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="866.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (14 samples, 0.84%)</title><rect x="863.4" y="643.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="866.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.78%)</title><rect x="864.1" y="627.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.78%)</title><rect x="864.1" y="611.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="867.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (13 samples, 0.78%)</title><rect x="864.1" y="595.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (13 samples, 0.78%)</title><rect x="864.1" y="579.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="867.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206/227894635.run (12 samples, 0.72%)</title><rect x="864.1" y="563.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="867.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (12 samples, 0.72%)</title><rect x="864.1" y="547.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (12 samples, 0.72%)</title><rect x="864.1" y="531.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (11 samples, 0.66%)</title><rect x="864.8" y="515.0" width="7.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="867.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (2 samples, 0.12%)</title><rect x="864.8" y="499.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="867.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2 samples, 0.12%)</title><rect x="864.8" y="483.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2 samples, 0.12%)</title><rect x="864.8" y="467.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="867.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.12%)</title><rect x="864.8" y="451.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.12%)</title><rect x="864.8" y="435.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="867.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.12%)</title><rect x="864.8" y="419.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="867.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.12%)</title><rect x="864.8" y="403.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="867.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.06%)</title><rect x="865.5" y="387.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="868.5" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.06%)</title><rect x="865.5" y="371.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="868.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.06%)</title><rect x="865.5" y="355.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="868.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (9 samples, 0.54%)</title><rect x="866.2" y="499.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="869.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.54%)</title><rect x="866.2" y="483.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="869.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.54%)</title><rect x="866.2" y="467.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="869.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.48%)</title><rect x="866.9" y="451.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="869.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.48%)</title><rect x="866.9" y="435.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="869.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (8 samples, 0.48%)</title><rect x="866.9" y="419.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="869.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (8 samples, 0.48%)</title><rect x="866.9" y="403.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="869.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (7 samples, 0.42%)</title><rect x="866.9" y="387.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="869.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.42%)</title><rect x="866.9" y="371.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="869.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.36%)</title><rect x="867.6" y="355.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="870.6" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.24%)</title><rect x="867.6" y="339.0" width="2.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="870.6" y="350.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.06%)</title><rect x="867.6" y="323.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="870.6" y="334.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.06%)</title><rect x="868.3" y="323.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="871.3" y="334.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="869.0" y="323.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="872.0" y="334.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.06%)</title><rect x="869.7" y="323.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="872.7" y="334.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.06%)</title><rect x="870.4" y="339.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="873.4" y="350.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.06%)</title><rect x="871.1" y="339.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="874.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (1 samples, 0.06%)</title><rect x="871.8" y="387.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="874.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.06%)</title><rect x="872.6" y="563.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="875.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$224/1342060978.run (24 samples, 1.44%)</title><rect x="873.3" y="659.0" width="16.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (23 samples, 1.38%)</title><rect x="874.0" y="643.0" width="16.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="877.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (22 samples, 1.32%)</title><rect x="874.0" y="627.0" width="15.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="877.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (22 samples, 1.32%)</title><rect x="874.0" y="611.0" width="15.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="877.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (20 samples, 1.20%)</title><rect x="875.4" y="595.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="878.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (20 samples, 1.20%)</title><rect x="875.4" y="579.0" width="14.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (18 samples, 1.08%)</title><rect x="875.4" y="563.0" width="12.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="878.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 1.08%)</title><rect x="875.4" y="547.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="878.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 1.08%)</title><rect x="875.4" y="531.0" width="12.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="878.4" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (2 samples, 0.12%)</title><rect x="876.1" y="515.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="879.1" y="526.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.54%)</title><rect x="877.5" y="515.0" width="6.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="880.5" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.06%)</title><rect x="877.5" y="499.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="880.5" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.06%)</title><rect x="878.2" y="499.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="881.2" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.18%)</title><rect x="878.9" y="499.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="881.9" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.06%)</title><rect x="881.0" y="499.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="884.0" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="881.7" y="499.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="884.7" y="510.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.06%)</title><rect x="882.5" y="499.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="885.5" y="510.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.06%)</title><rect x="883.2" y="499.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="886.2" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.30%)</title><rect x="883.9" y="515.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="886.9" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="887.4" y="515.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="890.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (2 samples, 0.12%)</title><rect x="888.1" y="563.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="891.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.06%)</title><rect x="889.5" y="627.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="892.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (21 samples, 1.26%)</title><rect x="890.2" y="675.0" width="14.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="893.2" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (7 samples, 0.42%)</title><rect x="890.2" y="659.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="893.2" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (7 samples, 0.42%)</title><rect x="890.2" y="643.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="893.2" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (3 samples, 0.18%)</title><rect x="890.2" y="627.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="893.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (1 samples, 0.06%)</title><rect x="890.2" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="893.2" y="622.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.12%)</title><rect x="890.9" y="611.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="893.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (4 samples, 0.24%)</title><rect x="892.3" y="627.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="895.3" y="638.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.12%)</title><rect x="893.1" y="611.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="896.1" y="622.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="893.1" y="595.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="896.1" y="606.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.06%)</title><rect x="893.8" y="595.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="896.8" y="606.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.06%)</title><rect x="894.5" y="611.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="897.5" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.12%)</title><rect x="895.2" y="659.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (12 samples, 0.72%)</title><rect x="896.6" y="659.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.6" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.12%)</title><rect x="899.4" y="643.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="902.4" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.12%)</title><rect x="899.4" y="627.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="902.4" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="899.4" y="611.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="902.4" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.06%)</title><rect x="899.4" y="595.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="902.4" y="606.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.06%)</title><rect x="900.1" y="611.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="903.1" y="622.0"></text>
</g>
<g>
<title>java/time/Instant.until (1 samples, 0.06%)</title><rect x="900.8" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="903.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (1 samples, 0.06%)</title><rect x="901.5" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.5" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedList.getLast (1 samples, 0.06%)</title><rect x="901.5" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (4 samples, 0.24%)</title><rect x="902.2" y="643.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.&lt;init&gt; (1 samples, 0.06%)</title><rect x="905.1" y="675.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (12 samples, 0.72%)</title><rect x="905.8" y="675.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.8" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (8 samples, 0.48%)</title><rect x="907.2" y="659.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="910.2" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (8 samples, 0.48%)</title><rect x="907.2" y="643.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="910.2" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.12%)</title><rect x="907.2" y="627.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="910.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (1 samples, 0.06%)</title><rect x="907.2" y="611.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="910.2" y="622.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (1 samples, 0.06%)</title><rect x="907.2" y="595.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="910.2" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.06%)</title><rect x="907.9" y="611.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="910.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (6 samples, 0.36%)</title><rect x="908.6" y="627.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="911.6" y="638.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (5 samples, 0.30%)</title><rect x="909.3" y="611.0" width="3.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="912.3" y="622.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="911.4" y="595.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="914.4" y="606.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.06%)</title><rect x="912.1" y="595.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="915.1" y="606.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="912.1" y="579.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="915.1" y="590.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (2 samples, 0.12%)</title><rect x="912.9" y="659.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.12%)</title><rect x="912.9" y="643.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="915.9" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.12%)</title><rect x="912.9" y="627.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="915.9" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (2 samples, 0.12%)</title><rect x="912.9" y="611.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="915.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (72 samples, 4.31%)</title><rect x="914.3" y="675.0" width="50.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="917.3" y="686.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (72 samples, 4.31%)</title><rect x="914.3" y="659.0" width="50.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="917.3" y="670.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (72 samples, 4.31%)</title><rect x="914.3" y="643.0" width="50.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="917.3" y="654.0">sun/n..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="918.5" y="627.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="921.5" y="638.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.06%)</title><rect x="918.5" y="611.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="921.5" y="622.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="919.2" y="627.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="922.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (23 samples, 1.38%)</title><rect x="919.9" y="627.0" width="16.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="922.9" y="638.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (1 samples, 0.06%)</title><rect x="921.3" y="611.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="924.3" y="622.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.06%)</title><rect x="922.0" y="611.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="925.0" y="622.0"></text>
</g>
<g>
<title>epoll_wait (19 samples, 1.14%)</title><rect x="922.8" y="611.0" width="13.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="925.8" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (35 samples, 2.10%)</title><rect x="936.2" y="627.0" width="24.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="939.2" y="638.0">s..</text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.18%)</title><rect x="936.2" y="611.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="939.2" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.18%)</title><rect x="936.2" y="595.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="939.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (26 samples, 1.56%)</title><rect x="938.3" y="611.0" width="18.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="941.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (24 samples, 1.44%)</title><rect x="939.7" y="595.0" width="17.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="942.7" y="606.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (1 samples, 0.06%)</title><rect x="939.7" y="579.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="942.7" y="590.0"></text>
</g>
<g>
<title>__libc_read (22 samples, 1.32%)</title><rect x="940.4" y="579.0" width="15.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="943.4" y="590.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="956.0" y="579.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="959.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (6 samples, 0.36%)</title><rect x="956.7" y="611.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="959.7" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="956.7" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="959.7" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="956.7" y="579.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="959.7" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="956.7" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="959.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (5 samples, 0.30%)</title><rect x="957.4" y="595.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="960.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (5 samples, 0.30%)</title><rect x="957.4" y="579.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="960.4" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.30%)</title><rect x="957.4" y="563.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="960.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (3 samples, 0.18%)</title><rect x="960.9" y="627.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="963.9" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.getFDVal (1 samples, 0.06%)</title><rect x="962.3" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="965.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.06%)</title><rect x="963.0" y="627.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="966.0" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.06%)</title><rect x="963.0" y="611.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="966.0" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.06%)</title><rect x="963.0" y="595.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="966.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (1 samples, 0.06%)</title><rect x="963.8" y="627.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="966.8" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (1 samples, 0.06%)</title><rect x="963.8" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="966.8" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.06%)</title><rect x="963.8" y="595.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="966.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.06%)</title><rect x="964.5" y="627.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="967.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (7 samples, 0.42%)</title><rect x="965.2" y="675.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="968.2" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (7 samples, 0.42%)</title><rect x="965.2" y="659.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="968.2" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (7 samples, 0.42%)</title><rect x="965.2" y="643.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (2 samples, 0.12%)</title><rect x="965.2" y="627.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="968.2" y="638.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.12%)</title><rect x="965.2" y="611.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="968.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (3 samples, 0.18%)</title><rect x="966.6" y="627.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="969.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.12%)</title><rect x="966.6" y="611.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="969.6" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.12%)</title><rect x="966.6" y="595.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="969.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.06%)</title><rect x="968.0" y="611.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="971.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (1 samples, 0.06%)</title><rect x="968.0" y="595.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="971.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (2 samples, 0.12%)</title><rect x="968.7" y="627.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="971.7" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (2 samples, 0.12%)</title><rect x="970.1" y="675.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.1" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (2 samples, 0.12%)</title><rect x="970.1" y="659.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="973.1" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (2 samples, 0.12%)</title><rect x="970.1" y="643.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="973.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2 samples, 0.12%)</title><rect x="971.5" y="675.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="974.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.12%)</title><rect x="971.5" y="659.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="974.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.12%)</title><rect x="971.5" y="643.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="974.5" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="972.2" y="627.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="975.2" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="972.2" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="975.2" y="622.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (301 samples, 18.03%)</title><rect x="972.9" y="691.0" width="212.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="975.9" y="702.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.12%)</title><rect x="972.9" y="675.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="975.9" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.12%)</title><rect x="972.9" y="659.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="975.9" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.12%)</title><rect x="972.9" y="643.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="975.9" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (32 samples, 1.92%)</title><rect x="974.4" y="675.0" width="22.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="977.4" y="686.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (6 samples, 0.36%)</title><rect x="975.1" y="659.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="978.1" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (5 samples, 0.30%)</title><rect x="975.1" y="643.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="978.1" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.access$100 (1 samples, 0.06%)</title><rect x="978.6" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="981.6" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (25 samples, 1.50%)</title><rect x="979.3" y="659.0" width="17.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="982.3" y="670.0"></text>
</g>
<g>
<title>__clock_gettime (6 samples, 0.36%)</title><rect x="982.1" y="643.0" width="4.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="985.1" y="654.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.06%)</title><rect x="986.4" y="643.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="989.4" y="654.0"></text>
</g>
<g>
<title>epoll_wait (14 samples, 0.84%)</title><rect x="987.1" y="643.0" width="9.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="990.1" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (267 samples, 16.00%)</title><rect x="997.0" y="675.0" width="188.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1000.0" y="686.0">one/nio/net/Session.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (265 samples, 15.88%)</title><rect x="998.4" y="659.0" width="187.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1001.4" y="670.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (238 samples, 14.26%)</title><rect x="1000.5" y="643.0" width="168.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1003.5" y="654.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (213 samples, 12.76%)</title><rect x="1010.4" y="627.0" width="150.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1013.4" y="638.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (212 samples, 12.70%)</title><rect x="1011.1" y="611.0" width="149.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1014.1" y="622.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>RequestHandler1_handleEntityRequest.handleRequest (197 samples, 11.80%)</title><rect x="1012.5" y="595.0" width="139.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1015.5" y="606.0">RequestHandler1_h..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.06%)</title><rect x="1013.2" y="579.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1016.2" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.18%)</title><rect x="1014.0" y="579.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1017.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.18%)</title><rect x="1014.0" y="563.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1017.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="1014.0" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1017.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.06%)</title><rect x="1014.0" y="531.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1017.0" y="542.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.06%)</title><rect x="1014.7" y="547.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1017.7" y="558.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.06%)</title><rect x="1015.4" y="547.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1018.4" y="558.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="1015.4" y="531.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1018.4" y="542.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="1015.4" y="515.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1018.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.06%)</title><rect x="1015.4" y="499.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1018.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.handleEntityRequest (192 samples, 11.50%)</title><rect x="1016.1" y="579.0" width="135.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1019.1" y="590.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (30 samples, 1.80%)</title><rect x="1017.5" y="563.0" width="21.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1020.5" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (30 samples, 1.80%)</title><rect x="1017.5" y="547.0" width="21.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1020.5" y="558.0">j..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="1018.2" y="531.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1021.2" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="1018.2" y="515.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1021.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1018.9" y="531.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1021.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (26 samples, 1.56%)</title><rect x="1020.3" y="531.0" width="18.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1023.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.block (26 samples, 1.56%)</title><rect x="1020.3" y="515.0" width="18.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1023.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (26 samples, 1.56%)</title><rect x="1020.3" y="499.0" width="18.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1023.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (25 samples, 1.50%)</title><rect x="1021.0" y="483.0" width="17.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1024.0" y="494.0"></text>
</g>
<g>
<title>Unsafe_Park (18 samples, 1.08%)</title><rect x="1021.0" y="467.0" width="12.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1024.0" y="478.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.12%)</title><rect x="1023.9" y="451.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1026.9" y="462.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.06%)</title><rect x="1024.6" y="435.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1027.6" y="446.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (2 samples, 0.12%)</title><rect x="1025.3" y="451.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1028.3" y="462.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.06%)</title><rect x="1026.7" y="451.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1029.7" y="462.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="1027.4" y="451.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1030.4" y="462.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (8 samples, 0.48%)</title><rect x="1028.1" y="451.0" width="5.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1031.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.36%)</title><rect x="1033.8" y="467.0" width="4.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1036.8" y="478.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.06%)</title><rect x="1033.8" y="451.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1036.8" y="462.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (5 samples, 0.30%)</title><rect x="1034.5" y="451.0" width="3.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1037.5" y="462.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.06%)</title><rect x="1038.0" y="467.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1041.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.processRequest (13 samples, 0.78%)</title><rect x="1038.7" y="563.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1041.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (13 samples, 0.78%)</title><rect x="1038.7" y="547.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1041.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (13 samples, 0.78%)</title><rect x="1038.7" y="531.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1041.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.78%)</title><rect x="1038.7" y="515.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1041.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (12 samples, 0.72%)</title><rect x="1039.4" y="499.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1042.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.06%)</title><rect x="1040.8" y="483.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1043.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.06%)</title><rect x="1040.8" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1043.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.06%)</title><rect x="1040.8" y="451.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1043.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.06%)</title><rect x="1040.8" y="435.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1043.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.06%)</title><rect x="1040.8" y="419.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1043.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.54%)</title><rect x="1041.5" y="483.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1044.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.54%)</title><rect x="1041.5" y="467.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1044.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.54%)</title><rect x="1041.5" y="451.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.54%)</title><rect x="1041.5" y="435.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1044.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.54%)</title><rect x="1041.5" y="419.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.5" y="430.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.24%)</title><rect x="1041.5" y="403.0" width="2.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1044.5" y="414.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (2 samples, 0.12%)</title><rect x="1041.5" y="387.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1044.5" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.06%)</title><rect x="1042.9" y="387.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1045.9" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.06%)</title><rect x="1043.6" y="387.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1046.6" y="398.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.30%)</title><rect x="1044.4" y="403.0" width="3.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1047.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.sendToReplicas (115 samples, 6.89%)</title><rect x="1047.9" y="563.0" width="81.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1050.9" y="574.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.12%)</title><rect x="1059.2" y="547.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1062.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.12%)</title><rect x="1060.6" y="547.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1063.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.allOf (1 samples, 0.06%)</title><rect x="1062.0" y="547.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1065.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (1 samples, 0.06%)</title><rect x="1062.0" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1065.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (1 samples, 0.06%)</title><rect x="1062.0" y="515.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1065.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (1 samples, 0.06%)</title><rect x="1062.7" y="547.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1065.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.addMyselfParamToRequest (1 samples, 0.06%)</title><rect x="1063.4" y="547.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1066.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.06%)</title><rect x="1063.4" y="531.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1066.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.processRequest (3 samples, 0.18%)</title><rect x="1064.2" y="547.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1067.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (3 samples, 0.18%)</title><rect x="1064.2" y="531.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1067.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (3 samples, 0.18%)</title><rect x="1064.2" y="515.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1067.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.18%)</title><rect x="1064.2" y="499.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1067.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.12%)</title><rect x="1064.9" y="483.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1067.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.12%)</title><rect x="1064.9" y="467.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1067.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.12%)</title><rect x="1064.9" y="451.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1067.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.12%)</title><rect x="1064.9" y="435.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1067.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.12%)</title><rect x="1064.9" y="419.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1067.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.12%)</title><rect x="1064.9" y="403.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1067.9" y="414.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="1064.9" y="387.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1067.9" y="398.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="1064.9" y="371.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1067.9" y="382.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.06%)</title><rect x="1065.6" y="387.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1068.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding.getResponsibleNodes (1 samples, 0.06%)</title><rect x="1066.3" y="547.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1069.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding.getNodesCount (1 samples, 0.06%)</title><rect x="1066.3" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding.passOn (88 samples, 5.27%)</title><rect x="1067.0" y="547.0" width="62.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1070.0" y="558.0">ru/mai..</text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.12%)</title><rect x="1067.0" y="531.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1070.0" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.12%)</title><rect x="1067.0" y="515.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1070.0" y="526.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.12%)</title><rect x="1067.0" y="499.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1070.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (65 samples, 3.89%)</title><rect x="1068.4" y="531.0" width="45.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1071.4" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (65 samples, 3.89%)</title><rect x="1068.4" y="515.0" width="45.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1071.4" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (65 samples, 3.89%)</title><rect x="1068.4" y="499.0" width="45.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1071.4" y="510.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (65 samples, 3.89%)</title><rect x="1068.4" y="483.0" width="45.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1071.4" y="494.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="1069.1" y="467.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="1069.1" y="451.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.12%)</title><rect x="1069.8" y="467.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.12%)</title><rect x="1069.8" y="451.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1072.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.06%)</title><rect x="1070.5" y="435.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1073.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (37 samples, 2.22%)</title><rect x="1071.2" y="467.0" width="26.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1074.2" y="478.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.06%)</title><rect x="1071.2" y="451.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1074.2" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.06%)</title><rect x="1071.2" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1074.2" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.06%)</title><rect x="1071.2" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1074.2" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.12%)</title><rect x="1071.9" y="451.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1074.9" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.12%)</title><rect x="1071.9" y="435.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1074.9" y="446.0"></text>
</g>
<g>
<title>java/util/Map.forEach (1 samples, 0.06%)</title><rect x="1072.6" y="419.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1075.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (32 samples, 1.92%)</title><rect x="1073.3" y="451.0" width="22.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1076.3" y="462.0">j..</text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (32 samples, 1.92%)</title><rect x="1073.3" y="435.0" width="22.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1076.3" y="446.0">s..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.06%)</title><rect x="1073.3" y="419.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1076.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="1073.3" y="403.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1076.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="1073.3" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.3" y="398.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.06%)</title><rect x="1074.1" y="419.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1077.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.06%)</title><rect x="1074.1" y="403.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1077.1" y="414.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (30 samples, 1.80%)</title><rect x="1074.8" y="419.0" width="21.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1077.8" y="430.0">j..</text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="1074.8" y="403.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1077.8" y="414.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (18 samples, 1.08%)</title><rect x="1075.5" y="403.0" width="12.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1078.5" y="414.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1076.9" y="387.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1079.9" y="398.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::push(Metadata* const&amp;) (1 samples, 0.06%)</title><rect x="1077.6" y="387.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1080.6" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.12%)</title><rect x="1078.3" y="387.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1081.3" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (2 samples, 0.12%)</title><rect x="1078.3" y="371.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1081.3" y="382.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.30%)</title><rect x="1079.7" y="387.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1082.7" y="398.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.12%)</title><rect x="1081.1" y="371.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1084.1" y="382.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.06%)</title><rect x="1081.8" y="355.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1084.8" y="366.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.06%)</title><rect x="1082.5" y="371.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1085.5" y="382.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="1083.2" y="387.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1086.2" y="398.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.06%)</title><rect x="1083.9" y="387.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1086.9" y="398.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.18%)</title><rect x="1084.7" y="387.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1087.7" y="398.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.12%)</title><rect x="1084.7" y="371.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1087.7" y="382.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="1084.7" y="355.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1087.7" y="366.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="1084.7" y="339.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1087.7" y="350.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="1085.4" y="355.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1088.4" y="366.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.06%)</title><rect x="1086.1" y="371.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1089.1" y="382.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.12%)</title><rect x="1086.8" y="387.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1089.8" y="398.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.06%)</title><rect x="1087.5" y="371.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1090.5" y="382.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="1088.2" y="403.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1091.2" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (9 samples, 0.54%)</title><rect x="1088.9" y="403.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1091.9" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (8 samples, 0.48%)</title><rect x="1089.6" y="387.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1092.6" y="398.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.18%)</title><rect x="1089.6" y="371.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1092.6" y="382.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.18%)</title><rect x="1089.6" y="355.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.18%)</title><rect x="1089.6" y="339.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.6" y="350.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (5 samples, 0.30%)</title><rect x="1091.7" y="371.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1094.7" y="382.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.06%)</title><rect x="1091.7" y="355.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1094.7" y="366.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.06%)</title><rect x="1091.7" y="339.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1094.7" y="350.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.06%)</title><rect x="1091.7" y="323.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1094.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="1091.7" y="307.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1094.7" y="318.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.24%)</title><rect x="1092.4" y="355.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1095.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.24%)</title><rect x="1092.4" y="339.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1095.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.24%)</title><rect x="1092.4" y="323.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1095.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.24%)</title><rect x="1092.4" y="307.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1095.4" y="318.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="1095.3" y="403.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1098.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1096.0" y="451.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1099.0" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1096.0" y="435.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1099.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (1 samples, 0.06%)</title><rect x="1096.7" y="419.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1099.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (9 samples, 0.54%)</title><rect x="1097.4" y="467.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1100.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1 samples, 0.06%)</title><rect x="1097.4" y="451.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1100.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (8 samples, 0.48%)</title><rect x="1098.1" y="451.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1101.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (8 samples, 0.48%)</title><rect x="1098.1" y="435.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1101.1" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (3 samples, 0.18%)</title><rect x="1098.1" y="419.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1101.1" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (2 samples, 0.12%)</title><rect x="1098.1" y="403.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1101.1" y="414.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (2 samples, 0.12%)</title><rect x="1098.1" y="387.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1101.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (1 samples, 0.06%)</title><rect x="1098.8" y="371.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1101.8" y="382.0"></text>
</g>
<g>
<title>java/lang/Class.newReflectionData (1 samples, 0.06%)</title><rect x="1098.8" y="355.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1101.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (1 samples, 0.06%)</title><rect x="1099.5" y="403.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1102.5" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (1 samples, 0.06%)</title><rect x="1099.5" y="387.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1102.5" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (1 samples, 0.06%)</title><rect x="1099.5" y="371.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1102.5" y="382.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="1099.5" y="355.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1102.5" y="366.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="1099.5" y="339.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1102.5" y="350.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="1099.5" y="323.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1102.5" y="334.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1099.5" y="307.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1102.5" y="318.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1099.5" y="291.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1102.5" y="302.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.06%)</title><rect x="1099.5" y="275.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1102.5" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.12%)</title><rect x="1100.2" y="419.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1103.2" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.06%)</title><rect x="1100.2" y="403.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1103.2" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.06%)</title><rect x="1100.2" y="387.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1103.2" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (1 samples, 0.06%)</title><rect x="1100.2" y="371.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1103.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.06%)</title><rect x="1100.9" y="403.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1103.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor11.newInstance (1 samples, 0.06%)</title><rect x="1100.9" y="387.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1103.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor11.newInstance (1 samples, 0.06%)</title><rect x="1101.6" y="419.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1104.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (1 samples, 0.06%)</title><rect x="1102.3" y="419.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1105.3" y="430.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="1103.0" y="419.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1106.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (15 samples, 0.90%)</title><rect x="1103.7" y="467.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1106.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (13 samples, 0.78%)</title><rect x="1103.7" y="451.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1106.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.78%)</title><rect x="1103.7" y="435.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1106.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (12 samples, 0.72%)</title><rect x="1104.5" y="419.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1107.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (11 samples, 0.66%)</title><rect x="1105.2" y="403.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1108.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (11 samples, 0.66%)</title><rect x="1105.2" y="387.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1108.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.66%)</title><rect x="1105.2" y="371.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1108.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.66%)</title><rect x="1105.2" y="355.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1108.2" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.24%)</title><rect x="1105.2" y="339.0" width="2.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1108.2" y="350.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.06%)</title><rect x="1105.2" y="323.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1108.2" y="334.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.06%)</title><rect x="1105.9" y="323.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1108.9" y="334.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="1106.6" y="323.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1109.6" y="334.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.06%)</title><rect x="1107.3" y="323.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1110.3" y="334.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.36%)</title><rect x="1108.0" y="339.0" width="4.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1111.0" y="350.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1112.2" y="339.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1115.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (2 samples, 0.12%)</title><rect x="1112.9" y="451.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1115.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.12%)</title><rect x="1112.9" y="435.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1115.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.12%)</title><rect x="1112.9" y="419.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1115.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$135/69462153.apply (1 samples, 0.06%)</title><rect x="1112.9" y="403.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1115.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (1 samples, 0.06%)</title><rect x="1112.9" y="387.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1115.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (1 samples, 0.06%)</title><rect x="1112.9" y="371.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1115.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (1 samples, 0.06%)</title><rect x="1112.9" y="355.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1115.9" y="366.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.06%)</title><rect x="1112.9" y="339.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1115.9" y="350.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1112.9" y="323.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1115.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1112.9" y="307.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1115.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$142/558125001.apply (1 samples, 0.06%)</title><rect x="1113.6" y="403.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1116.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RequestConverter.convert (21 samples, 1.26%)</title><rect x="1114.3" y="531.0" width="14.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1117.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.30%)</title><rect x="1114.3" y="515.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1117.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1402433372.invoke (5 samples, 0.30%)</title><rect x="1114.3" y="499.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1117.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.30%)</title><rect x="1114.3" y="483.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.3" y="494.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.06%)</title><rect x="1115.1" y="467.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1118.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.06%)</title><rect x="1115.8" y="467.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="1115.8" y="451.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1118.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="1115.8" y="435.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1118.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.06%)</title><rect x="1115.8" y="419.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1118.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.internalMemberName (1 samples, 0.06%)</title><rect x="1116.5" y="467.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1119.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.06%)</title><rect x="1117.2" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1120.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.06%)</title><rect x="1117.2" y="451.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.06%)</title><rect x="1117.2" y="435.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1120.2" y="446.0"></text>
</g>
<g>
<title>java/net/URI.create (10 samples, 0.60%)</title><rect x="1117.9" y="515.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.9" y="526.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (10 samples, 0.60%)</title><rect x="1117.9" y="499.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1120.9" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (10 samples, 0.60%)</title><rect x="1117.9" y="483.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.9" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (10 samples, 0.60%)</title><rect x="1117.9" y="467.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1120.9" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (3 samples, 0.18%)</title><rect x="1117.9" y="451.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1120.9" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (3 samples, 0.18%)</title><rect x="1117.9" y="435.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1120.9" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (3 samples, 0.18%)</title><rect x="1117.9" y="419.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1120.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.12%)</title><rect x="1117.9" y="403.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1120.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.12%)</title><rect x="1117.9" y="387.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.9" y="398.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="1118.6" y="371.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1121.6" y="382.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.06%)</title><rect x="1119.3" y="403.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1122.3" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.42%)</title><rect x="1120.0" y="451.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1123.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.42%)</title><rect x="1120.0" y="435.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1123.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.42%)</title><rect x="1120.0" y="419.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1123.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.06%)</title><rect x="1120.7" y="403.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1123.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.30%)</title><rect x="1121.4" y="403.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1124.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (4 samples, 0.24%)</title><rect x="1125.0" y="515.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (4 samples, 0.24%)</title><rect x="1125.0" y="499.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1128.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (4 samples, 0.24%)</title><rect x="1125.0" y="483.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1128.0" y="494.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="1125.0" y="467.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1128.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.18%)</title><rect x="1125.7" y="467.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1128.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (3 samples, 0.18%)</title><rect x="1125.7" y="451.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (2 samples, 0.12%)</title><rect x="1127.8" y="515.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1130.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1128.5" y="499.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1131.5" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1 samples, 0.06%)</title><rect x="1128.5" y="483.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1131.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.06%)</title><rect x="1128.5" y="467.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1131.5" y="478.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="1128.5" y="451.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1131.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.trySendResponse (32 samples, 1.92%)</title><rect x="1129.2" y="563.0" width="22.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1132.2" y="574.0">r..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (1 samples, 0.06%)</title><rect x="1129.2" y="547.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1132.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (31 samples, 1.86%)</title><rect x="1129.9" y="547.0" width="21.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1132.9" y="558.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.12%)</title><rect x="1132.0" y="531.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1135.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.12%)</title><rect x="1132.0" y="515.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1135.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.12%)</title><rect x="1132.0" y="499.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1135.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.06%)</title><rect x="1132.7" y="483.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1135.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (21 samples, 1.26%)</title><rect x="1133.4" y="531.0" width="14.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1136.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.30%)</title><rect x="1133.4" y="515.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1136.4" y="526.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.24%)</title><rect x="1134.1" y="499.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1137.1" y="510.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.12%)</title><rect x="1135.6" y="483.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1138.6" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (16 samples, 0.96%)</title><rect x="1137.0" y="515.0" width="11.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1140.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (16 samples, 0.96%)</title><rect x="1137.0" y="499.0" width="11.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1140.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1137.0" y="483.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1140.0" y="494.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="1137.0" y="467.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1140.0" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (15 samples, 0.90%)</title><rect x="1137.7" y="483.0" width="10.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1140.7" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (15 samples, 0.90%)</title><rect x="1137.7" y="467.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1140.7" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.36%)</title><rect x="1139.8" y="451.0" width="4.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1142.8" y="462.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="1141.9" y="435.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1144.9" y="446.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.12%)</title><rect x="1142.6" y="435.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1145.6" y="446.0"></text>
</g>
<g>
<title>__libc_send (4 samples, 0.24%)</title><rect x="1144.0" y="451.0" width="2.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1147.0" y="462.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="1146.9" y="451.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1149.9" y="462.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.06%)</title><rect x="1147.6" y="451.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1150.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.18%)</title><rect x="1148.3" y="531.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1151.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="1149.7" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1152.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="1149.7" y="499.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1152.7" y="510.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="1149.7" y="483.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1152.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (1 samples, 0.06%)</title><rect x="1150.4" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1153.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.06%)</title><rect x="1150.4" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1153.4" y="526.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.06%)</title><rect x="1151.1" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (9 samples, 0.54%)</title><rect x="1151.8" y="595.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1154.8" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.54%)</title><rect x="1151.8" y="579.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1154.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.48%)</title><rect x="1151.8" y="563.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1154.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.equals (8 samples, 0.48%)</title><rect x="1151.8" y="547.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1154.8" y="558.0"></text>
</g>
<g>
<title>RequestHandler1_handleEntityRequest.handleRequest (2 samples, 0.12%)</title><rect x="1153.2" y="531.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1156.2" y="542.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="1154.6" y="531.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1157.6" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.18%)</title><rect x="1155.4" y="531.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1158.4" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="1157.5" y="563.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1160.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="1157.5" y="547.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1160.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="1157.5" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.24%)</title><rect x="1158.2" y="595.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1161.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.24%)</title><rect x="1158.2" y="579.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1161.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.18%)</title><rect x="1158.9" y="563.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.9" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1159.6" y="547.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1162.6" y="558.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1159.6" y="531.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1162.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="1160.3" y="547.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1163.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.24%)</title><rect x="1161.0" y="627.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1164.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.18%)</title><rect x="1161.0" y="611.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1164.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.18%)</title><rect x="1161.0" y="595.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1164.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.18%)</title><rect x="1161.0" y="579.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1164.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.18%)</title><rect x="1161.0" y="563.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1164.0" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="1163.1" y="611.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1166.1" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="1163.1" y="595.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1166.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.06%)</title><rect x="1163.8" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1166.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="1163.8" y="611.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1166.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="1163.8" y="595.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1166.8" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="1163.8" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1166.8" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="1163.8" y="563.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.8" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1163.8" y="547.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1166.8" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1163.8" y="531.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.8" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1163.8" y="515.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.8" y="526.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1163.8" y="499.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.8" y="510.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1163.8" y="483.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.8" y="494.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.06%)</title><rect x="1163.8" y="467.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.8" y="478.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.06%)</title><rect x="1163.8" y="451.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.8" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.36%)</title><rect x="1164.5" y="627.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1167.5" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.36%)</title><rect x="1164.5" y="611.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1167.5" y="622.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="1166.0" y="595.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.0" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="1166.0" y="579.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1169.0" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="1166.0" y="563.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.0" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1166.0" y="547.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1169.0" y="558.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1166.0" y="531.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1169.0" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1166.0" y="515.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1169.0" y="526.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.06%)</title><rect x="1166.0" y="499.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.0" y="510.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.06%)</title><rect x="1166.0" y="483.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1169.0" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.18%)</title><rect x="1166.7" y="595.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1169.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.18%)</title><rect x="1166.7" y="579.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1169.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.18%)</title><rect x="1166.7" y="563.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1169.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (24 samples, 1.44%)</title><rect x="1168.8" y="643.0" width="17.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1171.8" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (24 samples, 1.44%)</title><rect x="1168.8" y="627.0" width="17.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1171.8" y="638.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.36%)</title><rect x="1170.9" y="611.0" width="4.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1173.9" y="622.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.06%)</title><rect x="1171.6" y="595.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1174.6" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.24%)</title><rect x="1172.3" y="595.0" width="2.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1175.3" y="606.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.06%)</title><rect x="1173.0" y="579.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.0" y="590.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.12%)</title><rect x="1173.7" y="579.0" width="1.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1176.7" y="590.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (2 samples, 0.12%)</title><rect x="1173.7" y="563.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.7" y="574.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="1175.2" y="611.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1178.2" y="622.0"></text>
</g>
<g>
<title>__recv (13 samples, 0.78%)</title><rect x="1175.9" y="611.0" width="9.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1178.9" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.06%)</title><rect x="1185.1" y="611.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1188.1" y="622.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.36%)</title><rect x="1185.8" y="691.0" width="4.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1188.8" y="702.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.36%)</title><rect x="1185.8" y="675.0" width="4.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1188.8" y="686.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.36%)</title><rect x="1185.8" y="659.0" width="4.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.8" y="670.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.36%)</title><rect x="1185.8" y="643.0" width="4.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.8" y="654.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.36%)</title><rect x="1185.8" y="627.0" width="4.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.8" y="638.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.30%)</title><rect x="1185.8" y="611.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.8" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.06%)</title><rect x="1185.8" y="595.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.8" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.06%)</title><rect x="1185.8" y="579.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.8" y="590.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.24%)</title><rect x="1186.5" y="595.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1189.5" y="606.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.06%)</title><rect x="1189.3" y="611.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.3" y="622.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.06%)</title><rect x="1189.3" y="595.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.3" y="606.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.06%)</title><rect x="1189.3" y="579.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.3" y="590.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (1 samples, 0.06%)</title><rect x="1189.3" y="563.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.3" y="574.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.06%)</title><rect x="1189.3" y="547.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.3" y="558.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.06%)</title><rect x="1189.3" y="531.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.3" y="542.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.06%)</title><rect x="1189.3" y="515.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.3" y="526.0"></text>
</g>
</g>
</svg>
