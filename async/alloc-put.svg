<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="309"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="309"> </text>
<g id="frames">
<g>
<title>all (1,563 samples, 100.00%)</title><rect x="10.0" y="275.0" width="1180.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="286.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=240091] (100 samples, 6.40%)</title><rect x="10.0" y="259.0" width="75.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.0" y="270.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (100 samples, 6.40%)</title><rect x="10.0" y="243.0" width="75.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (100 samples, 6.40%)</title><rect x="10.0" y="227.0" width="75.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (100 samples, 6.40%)</title><rect x="10.0" y="211.0" width="75.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (100 samples, 6.40%)</title><rect x="10.0" y="195.0" width="75.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (22 samples, 1.41%)</title><rect x="10.0" y="179.0" width="16.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (22 samples, 1.41%)</title><rect x="10.0" y="163.0" width="16.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (14 samples, 0.90%)</title><rect x="10.0" y="147.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (12 samples, 0.77%)</title><rect x="10.0" y="131.0" width="9.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.77%)</title><rect x="10.0" y="115.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.77%)</title><rect x="10.0" y="99.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.77%)</title><rect x="10.0" y="83.0" width="9.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.45%)</title><rect x="10.0" y="67.0" width="5.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.32%)</title><rect x="15.3" y="67.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.3" y="78.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.32%)</title><rect x="15.3" y="51.0" width="3.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="18.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (2 samples, 0.13%)</title><rect x="19.1" y="131.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.1" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.13%)</title><rect x="19.1" y="115.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.1" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.13%)</title><rect x="19.1" y="99.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.get$Lambda (2 samples, 0.13%)</title><rect x="19.1" y="83.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.1" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$68 (2 samples, 0.13%)</title><rect x="19.1" y="67.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="22.1" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.51%)</title><rect x="20.6" y="147.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.51%)</title><rect x="20.6" y="131.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.51%)</title><rect x="20.6" y="115.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.6" y="126.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.13%)</title><rect x="20.6" y="99.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="23.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.38%)</title><rect x="22.1" y="99.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.1" y="110.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.38%)</title><rect x="22.1" y="83.0" width="4.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="25.1" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (40 samples, 2.56%)</title><rect x="26.6" y="179.0" width="30.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.6" y="190.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (8 samples, 0.51%)</title><rect x="26.6" y="163.0" width="6.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="29.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.70%)</title><rect x="32.6" y="163.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="35.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.70%)</title><rect x="32.6" y="147.0" width="8.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="35.6" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 1.34%)</title><rect x="41.0" y="163.0" width="15.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="44.0" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 1.34%)</title><rect x="41.0" y="147.0" width="15.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="44.0" y="158.0"></text>
</g>
<g>
<title>char[] (13 samples, 0.83%)</title><rect x="41.0" y="131.0" width="9.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="44.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.26%)</title><rect x="50.8" y="131.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="53.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.26%)</title><rect x="53.8" y="131.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.26%)</title><rect x="53.8" y="115.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.26%)</title><rect x="53.8" y="99.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.8" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="53.8" y="83.0" width="3.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="56.8" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.26%)</title><rect x="56.8" y="179.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="59.8" y="190.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="56.8" y="163.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="59.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.58%)</title><rect x="59.8" y="179.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="62.8" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.58%)</title><rect x="59.8" y="163.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.8" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.58%)</title><rect x="59.8" y="147.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.13%)</title><rect x="59.8" y="131.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="62.8" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.45%)</title><rect x="61.3" y="131.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.3" y="142.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.45%)</title><rect x="61.3" y="115.0" width="5.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="64.3" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 1.60%)</title><rect x="66.6" y="179.0" width="18.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.6" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 1.60%)</title><rect x="66.6" y="163.0" width="18.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.6" y="174.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.70%)</title><rect x="66.6" y="147.0" width="8.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="69.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.45%)</title><rect x="74.9" y="147.0" width="5.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="77.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.45%)</title><rect x="80.2" y="147.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.45%)</title><rect x="80.2" y="131.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.45%)</title><rect x="80.2" y="115.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.2" y="126.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.45%)</title><rect x="80.2" y="99.0" width="5.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="83.2" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=240092] (98 samples, 6.27%)</title><rect x="85.5" y="259.0" width="74.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="88.5" y="270.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (98 samples, 6.27%)</title><rect x="85.5" y="243.0" width="74.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.5" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (98 samples, 6.27%)</title><rect x="85.5" y="227.0" width="74.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.5" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (98 samples, 6.27%)</title><rect x="85.5" y="211.0" width="74.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.5" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (98 samples, 6.27%)</title><rect x="85.5" y="195.0" width="74.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.5" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (19 samples, 1.22%)</title><rect x="85.5" y="179.0" width="14.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (19 samples, 1.22%)</title><rect x="85.5" y="163.0" width="14.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.5" y="174.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (16 samples, 1.02%)</title><rect x="85.5" y="147.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="88.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (13 samples, 0.83%)</title><rect x="85.5" y="131.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.83%)</title><rect x="85.5" y="115.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.83%)</title><rect x="85.5" y="99.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="88.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.83%)</title><rect x="85.5" y="83.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.58%)</title><rect x="85.5" y="67.0" width="6.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="88.5" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.26%)</title><rect x="92.3" y="67.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.3" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="92.3" y="51.0" width="3.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="95.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (3 samples, 0.19%)</title><rect x="95.3" y="131.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="98.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.19%)</title><rect x="95.3" y="115.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="98.3" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.19%)</title><rect x="95.3" y="99.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.get$Lambda (3 samples, 0.19%)</title><rect x="95.3" y="83.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="98.3" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$68 (3 samples, 0.19%)</title><rect x="95.3" y="67.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="98.3" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.19%)</title><rect x="97.6" y="147.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.19%)</title><rect x="97.6" y="131.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.19%)</title><rect x="97.6" y="115.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.6" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.19%)</title><rect x="97.6" y="99.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.6" y="110.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.19%)</title><rect x="97.6" y="83.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="100.6" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (40 samples, 2.56%)</title><rect x="99.8" y="179.0" width="30.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.8" y="190.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (9 samples, 0.58%)</title><rect x="99.8" y="163.0" width="6.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="102.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (12 samples, 0.77%)</title><rect x="106.6" y="163.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="109.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (12 samples, 0.77%)</title><rect x="106.6" y="147.0" width="9.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="109.6" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 1.22%)</title><rect x="115.7" y="163.0" width="14.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.7" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 1.22%)</title><rect x="115.7" y="147.0" width="14.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.7" y="158.0"></text>
</g>
<g>
<title>char[] (12 samples, 0.77%)</title><rect x="115.7" y="131.0" width="9.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="118.7" y="142.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.19%)</title><rect x="124.8" y="131.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="127.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.26%)</title><rect x="127.0" y="131.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.26%)</title><rect x="127.0" y="115.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="130.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.26%)</title><rect x="127.0" y="99.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.0" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="127.0" y="83.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="130.0" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.13%)</title><rect x="130.0" y="179.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.0" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.13%)</title><rect x="130.0" y="163.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="133.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.32%)</title><rect x="131.5" y="179.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="134.5" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.32%)</title><rect x="131.5" y="163.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.5" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.32%)</title><rect x="131.5" y="147.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.5" y="158.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.13%)</title><rect x="131.5" y="131.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="134.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.19%)</title><rect x="133.1" y="131.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.1" y="142.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.19%)</title><rect x="133.1" y="115.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="136.1" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 2.05%)</title><rect x="135.3" y="179.0" width="24.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.3" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 2.05%)</title><rect x="135.3" y="163.0" width="24.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.3" y="174.0">o..</text>
</g>
<g>
<title>char[] (13 samples, 0.83%)</title><rect x="135.3" y="147.0" width="9.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="138.3" y="158.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.51%)</title><rect x="145.1" y="147.0" width="6.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="148.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.70%)</title><rect x="151.2" y="147.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.70%)</title><rect x="151.2" y="131.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11 samples, 0.70%)</title><rect x="151.2" y="115.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.2" y="126.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.70%)</title><rect x="151.2" y="99.0" width="8.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="154.2" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=240093] (97 samples, 6.21%)</title><rect x="159.5" y="259.0" width="73.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="162.5" y="270.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (97 samples, 6.21%)</title><rect x="159.5" y="243.0" width="73.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.5" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.26%)</title><rect x="159.5" y="227.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.5" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (4 samples, 0.26%)</title><rect x="159.5" y="211.0" width="3.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="162.5" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (93 samples, 5.95%)</title><rect x="162.5" y="227.0" width="70.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="165.5" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (93 samples, 5.95%)</title><rect x="162.5" y="211.0" width="70.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.5" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (93 samples, 5.95%)</title><rect x="162.5" y="195.0" width="70.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="165.5" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (22 samples, 1.41%)</title><rect x="162.5" y="179.0" width="16.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="165.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (22 samples, 1.41%)</title><rect x="162.5" y="163.0" width="16.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="165.5" y="174.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (9 samples, 0.58%)</title><rect x="162.5" y="147.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.45%)</title><rect x="162.5" y="131.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="165.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.45%)</title><rect x="162.5" y="115.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.45%)</title><rect x="162.5" y="99.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="165.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.45%)</title><rect x="162.5" y="83.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="165.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="162.5" y="67.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="165.5" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.38%)</title><rect x="163.3" y="67.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.3" y="78.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.38%)</title><rect x="163.3" y="51.0" width="4.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="166.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (2 samples, 0.13%)</title><rect x="167.8" y="131.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.8" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.13%)</title><rect x="167.8" y="115.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="170.8" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.13%)</title><rect x="167.8" y="99.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="170.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.get$Lambda (2 samples, 0.13%)</title><rect x="167.8" y="83.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="170.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$68 (2 samples, 0.13%)</title><rect x="167.8" y="67.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="170.8" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (13 samples, 0.83%)</title><rect x="169.3" y="147.0" width="9.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="172.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.83%)</title><rect x="169.3" y="131.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="172.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.83%)</title><rect x="169.3" y="115.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.3" y="126.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.26%)</title><rect x="169.3" y="99.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="172.3" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.58%)</title><rect x="172.3" y="99.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="175.3" y="110.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.58%)</title><rect x="172.3" y="83.0" width="6.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="175.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (31 samples, 1.98%)</title><rect x="179.1" y="179.0" width="23.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.1" y="190.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 0.26%)</title><rect x="179.1" y="163.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="182.1" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (15 samples, 0.96%)</title><rect x="182.1" y="163.0" width="11.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.1" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 0.96%)</title><rect x="182.1" y="147.0" width="11.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="185.1" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.77%)</title><rect x="193.5" y="163.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="196.5" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.77%)</title><rect x="193.5" y="147.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="196.5" y="158.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.26%)</title><rect x="193.5" y="131.0" width="3.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="196.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.51%)</title><rect x="196.5" y="131.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="199.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.51%)</title><rect x="196.5" y="115.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.51%)</title><rect x="196.5" y="99.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.5" y="110.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.51%)</title><rect x="196.5" y="83.0" width="6.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="199.5" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.06%)</title><rect x="202.5" y="179.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="205.5" y="190.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="202.5" y="163.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="205.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.19%)</title><rect x="203.3" y="179.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.3" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.19%)</title><rect x="203.3" y="163.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="206.3" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.19%)</title><rect x="203.3" y="147.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.3" y="158.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.13%)</title><rect x="203.3" y="131.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="206.3" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="204.8" y="131.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.8" y="142.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="204.8" y="115.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="207.8" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 2.30%)</title><rect x="205.5" y="179.0" width="27.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.5" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 2.30%)</title><rect x="205.5" y="163.0" width="27.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.5" y="174.0">o..</text>
</g>
<g>
<title>char[] (17 samples, 1.09%)</title><rect x="205.5" y="147.0" width="12.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="208.5" y="158.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.38%)</title><rect x="218.4" y="147.0" width="4.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="221.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.83%)</title><rect x="222.9" y="147.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="225.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.83%)</title><rect x="222.9" y="131.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="225.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (13 samples, 0.83%)</title><rect x="222.9" y="115.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="225.9" y="126.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.83%)</title><rect x="222.9" y="99.0" width="9.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="225.9" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=240094] (100 samples, 6.40%)</title><rect x="232.7" y="259.0" width="75.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="235.7" y="270.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (100 samples, 6.40%)</title><rect x="232.7" y="243.0" width="75.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.7" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 0.58%)</title><rect x="232.7" y="227.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="235.7" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (9 samples, 0.58%)</title><rect x="232.7" y="211.0" width="6.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="235.7" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (91 samples, 5.82%)</title><rect x="239.5" y="227.0" width="68.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.5" y="238.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (91 samples, 5.82%)</title><rect x="239.5" y="211.0" width="68.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="242.5" y="222.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (91 samples, 5.82%)</title><rect x="239.5" y="195.0" width="68.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.5" y="206.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (14 samples, 0.90%)</title><rect x="239.5" y="179.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (14 samples, 0.90%)</title><rect x="239.5" y="163.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="242.5" y="174.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (10 samples, 0.64%)</title><rect x="239.5" y="147.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="242.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 0.38%)</title><rect x="239.5" y="131.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="242.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.38%)</title><rect x="239.5" y="115.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="242.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.38%)</title><rect x="239.5" y="99.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="242.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.38%)</title><rect x="239.5" y="83.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="242.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.19%)</title><rect x="239.5" y="67.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="242.5" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.19%)</title><rect x="241.8" y="67.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="244.8" y="78.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.19%)</title><rect x="241.8" y="51.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="244.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (4 samples, 0.26%)</title><rect x="244.0" y="131.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.0" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.26%)</title><rect x="244.0" y="115.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.0" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.26%)</title><rect x="244.0" y="99.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="247.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.get$Lambda (4 samples, 0.26%)</title><rect x="244.0" y="83.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="247.0" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$68 (4 samples, 0.26%)</title><rect x="244.0" y="67.0" width="3.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="247.0" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.26%)</title><rect x="247.1" y="147.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="250.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.26%)</title><rect x="247.1" y="131.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="250.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.26%)</title><rect x="247.1" y="115.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="250.1" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.26%)</title><rect x="247.1" y="99.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.1" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="247.1" y="83.0" width="3.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="250.1" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (37 samples, 2.37%)</title><rect x="250.1" y="179.0" width="27.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.1" y="190.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (5 samples, 0.32%)</title><rect x="250.1" y="163.0" width="3.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="253.1" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (14 samples, 0.90%)</title><rect x="253.9" y="163.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.90%)</title><rect x="253.9" y="147.0" width="10.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="256.9" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 1.15%)</title><rect x="264.4" y="163.0" width="13.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="267.4" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 1.15%)</title><rect x="264.4" y="147.0" width="13.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="267.4" y="158.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.64%)</title><rect x="264.4" y="131.0" width="7.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="267.4" y="142.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.26%)</title><rect x="272.0" y="131.0" width="3.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="275.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.26%)</title><rect x="275.0" y="131.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.26%)</title><rect x="275.0" y="115.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.26%)</title><rect x="275.0" y="99.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="278.0" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="275.0" y="83.0" width="3.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="278.0" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.13%)</title><rect x="278.0" y="179.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.0" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.13%)</title><rect x="278.0" y="163.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="281.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.51%)</title><rect x="279.5" y="179.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="282.5" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.51%)</title><rect x="279.5" y="163.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="282.5" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.51%)</title><rect x="279.5" y="147.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="282.5" y="158.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.26%)</title><rect x="279.5" y="131.0" width="3.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="282.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.26%)</title><rect x="282.5" y="131.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="285.5" y="142.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="282.5" y="115.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="285.5" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (30 samples, 1.92%)</title><rect x="285.6" y="179.0" width="22.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="288.6" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (30 samples, 1.92%)</title><rect x="285.6" y="163.0" width="22.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="288.6" y="174.0">o..</text>
</g>
<g>
<title>char[] (14 samples, 0.90%)</title><rect x="285.6" y="147.0" width="10.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="288.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.64%)</title><rect x="296.1" y="147.0" width="7.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="299.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.38%)</title><rect x="303.7" y="147.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.38%)</title><rect x="303.7" y="131.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="306.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.38%)</title><rect x="303.7" y="115.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="306.7" y="126.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.38%)</title><rect x="303.7" y="99.0" width="4.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="306.7" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=240095] (102 samples, 6.53%)</title><rect x="308.2" y="259.0" width="77.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="311.2" y="270.0">[NIO Sele..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (102 samples, 6.53%)</title><rect x="308.2" y="243.0" width="77.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.2" y="254.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/Session.process (102 samples, 6.53%)</title><rect x="308.2" y="227.0" width="77.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.2" y="238.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (102 samples, 6.53%)</title><rect x="308.2" y="211.0" width="77.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.2" y="222.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (102 samples, 6.53%)</title><rect x="308.2" y="195.0" width="77.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.2" y="206.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (21 samples, 1.34%)</title><rect x="308.2" y="179.0" width="15.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (21 samples, 1.34%)</title><rect x="308.2" y="163.0" width="15.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.2" y="174.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (14 samples, 0.90%)</title><rect x="308.2" y="147.0" width="10.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="311.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (11 samples, 0.70%)</title><rect x="308.2" y="131.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.2" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.70%)</title><rect x="308.2" y="115.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="311.2" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.70%)</title><rect x="308.2" y="99.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.2" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.70%)</title><rect x="308.2" y="83.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="311.2" y="94.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.26%)</title><rect x="308.2" y="67.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="311.2" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.45%)</title><rect x="311.2" y="67.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="314.2" y="78.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.45%)</title><rect x="311.2" y="51.0" width="5.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="314.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (3 samples, 0.19%)</title><rect x="316.5" y="131.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="319.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.13%)</title><rect x="316.5" y="115.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.5" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.13%)</title><rect x="316.5" y="99.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="319.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.get$Lambda (2 samples, 0.13%)</title><rect x="316.5" y="83.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="319.5" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$68 (2 samples, 0.13%)</title><rect x="316.5" y="67.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="319.5" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="318.0" y="115.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="321.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.06%)</title><rect x="318.0" y="99.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="318.0" y="83.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="321.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="318.0" y="67.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.0" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.06%)</title><rect x="318.0" y="51.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="321.0" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.06%)</title><rect x="318.0" y="35.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="321.0" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 0.45%)</title><rect x="318.8" y="147.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="321.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.45%)</title><rect x="318.8" y="131.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="321.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.45%)</title><rect x="318.8" y="115.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.8" y="126.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.19%)</title><rect x="318.8" y="99.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="321.8" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.26%)</title><rect x="321.0" y="99.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="324.0" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="321.0" y="83.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="324.0" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (45 samples, 2.88%)</title><rect x="324.1" y="179.0" width="33.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="327.1" y="190.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (9 samples, 0.58%)</title><rect x="324.1" y="163.0" width="6.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="327.1" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (12 samples, 0.77%)</title><rect x="330.9" y="163.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (12 samples, 0.77%)</title><rect x="330.9" y="147.0" width="9.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="333.9" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 1.54%)</title><rect x="339.9" y="163.0" width="18.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="342.9" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 1.54%)</title><rect x="339.9" y="147.0" width="18.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="342.9" y="158.0"></text>
</g>
<g>
<title>char[] (12 samples, 0.77%)</title><rect x="339.9" y="131.0" width="9.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="342.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.38%)</title><rect x="349.0" y="131.0" width="4.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="352.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.38%)</title><rect x="353.5" y="131.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="356.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.38%)</title><rect x="353.5" y="115.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="356.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.38%)</title><rect x="353.5" y="99.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="356.5" y="110.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.38%)</title><rect x="353.5" y="83.0" width="4.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="356.5" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.26%)</title><rect x="358.0" y="179.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="361.0" y="190.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="358.0" y="163.0" width="3.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="361.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.58%)</title><rect x="361.1" y="179.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="364.1" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.58%)</title><rect x="361.1" y="163.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="364.1" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.58%)</title><rect x="361.1" y="147.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.1" y="158.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.32%)</title><rect x="361.1" y="131.0" width="3.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="364.1" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.26%)</title><rect x="364.8" y="131.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="367.8" y="142.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="364.8" y="115.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="367.8" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 1.47%)</title><rect x="367.9" y="179.0" width="17.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="370.9" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 1.47%)</title><rect x="367.9" y="163.0" width="17.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="370.9" y="174.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.58%)</title><rect x="367.9" y="147.0" width="6.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="370.9" y="158.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.70%)</title><rect x="374.6" y="147.0" width="8.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="377.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.19%)</title><rect x="382.9" y="147.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="385.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.19%)</title><rect x="382.9" y="131.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.19%)</title><rect x="382.9" y="115.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="385.9" y="126.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.19%)</title><rect x="382.9" y="99.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="385.9" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=240096] (94 samples, 6.01%)</title><rect x="385.2" y="259.0" width="71.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="388.2" y="270.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (94 samples, 6.01%)</title><rect x="385.2" y="243.0" width="71.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="388.2" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 0.45%)</title><rect x="385.2" y="227.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="388.2" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (7 samples, 0.45%)</title><rect x="385.2" y="211.0" width="5.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="388.2" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (87 samples, 5.57%)</title><rect x="390.5" y="227.0" width="65.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.5" y="238.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (87 samples, 5.57%)</title><rect x="390.5" y="211.0" width="65.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="393.5" y="222.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (87 samples, 5.57%)</title><rect x="390.5" y="195.0" width="65.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="393.5" y="206.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (22 samples, 1.41%)</title><rect x="390.5" y="179.0" width="16.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="393.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (22 samples, 1.41%)</title><rect x="390.5" y="163.0" width="16.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="393.5" y="174.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (16 samples, 1.02%)</title><rect x="390.5" y="147.0" width="12.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="393.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (9 samples, 0.58%)</title><rect x="390.5" y="131.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.58%)</title><rect x="390.5" y="115.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="393.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.58%)</title><rect x="390.5" y="99.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="393.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.58%)</title><rect x="390.5" y="83.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="393.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.26%)</title><rect x="390.5" y="67.0" width="3.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="393.5" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.32%)</title><rect x="393.5" y="67.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="396.5" y="78.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.32%)</title><rect x="393.5" y="51.0" width="3.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="396.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (7 samples, 0.45%)</title><rect x="397.3" y="131.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="400.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.45%)</title><rect x="397.3" y="115.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="400.3" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.45%)</title><rect x="397.3" y="99.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.get$Lambda (7 samples, 0.45%)</title><rect x="397.3" y="83.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.3" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$68 (7 samples, 0.45%)</title><rect x="397.3" y="67.0" width="5.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="400.3" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6 samples, 0.38%)</title><rect x="402.6" y="147.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="405.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.38%)</title><rect x="402.6" y="131.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="405.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.38%)</title><rect x="402.6" y="115.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="405.6" y="126.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.19%)</title><rect x="402.6" y="99.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="405.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.19%)</title><rect x="404.8" y="99.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.8" y="110.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.19%)</title><rect x="404.8" y="83.0" width="2.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="407.8" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (25 samples, 1.60%)</title><rect x="407.1" y="179.0" width="18.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="410.1" y="190.0"></text>
</g>
<g>
<title>one.nio.http.Request (6 samples, 0.38%)</title><rect x="407.1" y="163.0" width="4.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="410.1" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (8 samples, 0.51%)</title><rect x="411.6" y="163.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="414.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.51%)</title><rect x="411.6" y="147.0" width="6.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="414.6" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.70%)</title><rect x="417.7" y="163.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.7" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.70%)</title><rect x="417.7" y="147.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.7" y="158.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.32%)</title><rect x="417.7" y="131.0" width="3.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="420.7" y="142.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="421.5" y="131.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="424.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.32%)</title><rect x="422.2" y="131.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="425.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.32%)</title><rect x="422.2" y="115.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.32%)</title><rect x="422.2" y="99.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="425.2" y="110.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.32%)</title><rect x="422.2" y="83.0" width="3.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="425.2" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.13%)</title><rect x="426.0" y="179.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="429.0" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.13%)</title><rect x="426.0" y="163.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="429.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.38%)</title><rect x="427.5" y="179.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.5" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.38%)</title><rect x="427.5" y="163.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="430.5" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.38%)</title><rect x="427.5" y="147.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.5" y="158.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.19%)</title><rect x="427.5" y="131.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="430.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.19%)</title><rect x="429.8" y="131.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="432.8" y="142.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.19%)</title><rect x="429.8" y="115.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="432.8" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 2.05%)</title><rect x="432.0" y="179.0" width="24.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="435.0" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 2.05%)</title><rect x="432.0" y="163.0" width="24.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.0" y="174.0">o..</text>
</g>
<g>
<title>char[] (16 samples, 1.02%)</title><rect x="432.0" y="147.0" width="12.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="435.0" y="158.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.32%)</title><rect x="444.1" y="147.0" width="3.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="447.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.70%)</title><rect x="447.9" y="147.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="450.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.70%)</title><rect x="447.9" y="131.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="450.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11 samples, 0.70%)</title><rect x="447.9" y="115.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="450.9" y="126.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.70%)</title><rect x="447.9" y="99.0" width="8.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="450.9" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=240097] (95 samples, 6.08%)</title><rect x="456.2" y="259.0" width="71.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="459.2" y="270.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (95 samples, 6.08%)</title><rect x="456.2" y="243.0" width="71.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="459.2" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 0.51%)</title><rect x="456.2" y="227.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="459.2" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (8 samples, 0.51%)</title><rect x="456.2" y="211.0" width="6.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="459.2" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (87 samples, 5.57%)</title><rect x="462.2" y="227.0" width="65.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.2" y="238.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (87 samples, 5.57%)</title><rect x="462.2" y="211.0" width="65.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="465.2" y="222.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (87 samples, 5.57%)</title><rect x="462.2" y="195.0" width="65.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="465.2" y="206.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (24 samples, 1.54%)</title><rect x="462.2" y="179.0" width="18.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="465.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (24 samples, 1.54%)</title><rect x="462.2" y="163.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.2" y="174.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (15 samples, 0.96%)</title><rect x="462.2" y="147.0" width="11.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="465.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (8 samples, 0.51%)</title><rect x="462.2" y="131.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.2" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.51%)</title><rect x="462.2" y="115.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="465.2" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.51%)</title><rect x="462.2" y="99.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="465.2" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.51%)</title><rect x="462.2" y="83.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.2" y="94.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.32%)</title><rect x="462.2" y="67.0" width="3.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="465.2" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.19%)</title><rect x="466.0" y="67.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.0" y="78.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.19%)</title><rect x="466.0" y="51.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="469.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (7 samples, 0.45%)</title><rect x="468.3" y="131.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.45%)</title><rect x="468.3" y="115.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.3" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.45%)</title><rect x="468.3" y="99.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="471.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.get$Lambda (7 samples, 0.45%)</title><rect x="468.3" y="83.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="471.3" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$68 (7 samples, 0.45%)</title><rect x="468.3" y="67.0" width="5.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="471.3" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9 samples, 0.58%)</title><rect x="473.5" y="147.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.5" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.58%)</title><rect x="473.5" y="131.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.5" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.58%)</title><rect x="473.5" y="115.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.5" y="126.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.32%)</title><rect x="473.5" y="99.0" width="3.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="476.5" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.26%)</title><rect x="477.3" y="99.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.3" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="477.3" y="83.0" width="3.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="480.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (25 samples, 1.60%)</title><rect x="480.3" y="179.0" width="18.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="483.3" y="190.0"></text>
</g>
<g>
<title>one.nio.http.Request (5 samples, 0.32%)</title><rect x="480.3" y="163.0" width="3.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="483.3" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.38%)</title><rect x="484.1" y="163.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.1" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.38%)</title><rect x="484.1" y="147.0" width="4.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="487.1" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.90%)</title><rect x="488.6" y="163.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.6" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.90%)</title><rect x="488.6" y="147.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.6" y="158.0"></text>
</g>
<g>
<title>char[] (7 samples, 0.45%)</title><rect x="488.6" y="131.0" width="5.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="491.6" y="142.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="493.9" y="131.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="496.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.38%)</title><rect x="494.7" y="131.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.38%)</title><rect x="494.7" y="115.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.38%)</title><rect x="494.7" y="99.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="497.7" y="110.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.38%)</title><rect x="494.7" y="83.0" width="4.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="497.7" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.13%)</title><rect x="499.2" y="179.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="502.2" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.13%)</title><rect x="499.2" y="163.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="502.2" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.19%)</title><rect x="500.7" y="179.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="503.7" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.19%)</title><rect x="500.7" y="163.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="503.7" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.19%)</title><rect x="500.7" y="147.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="503.7" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.19%)</title><rect x="500.7" y="131.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.7" y="142.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.19%)</title><rect x="500.7" y="115.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="503.7" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (33 samples, 2.11%)</title><rect x="503.0" y="179.0" width="24.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.0" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (33 samples, 2.11%)</title><rect x="503.0" y="163.0" width="24.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="506.0" y="174.0">o..</text>
</g>
<g>
<title>char[] (11 samples, 0.70%)</title><rect x="503.0" y="147.0" width="8.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="506.0" y="158.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.83%)</title><rect x="511.3" y="147.0" width="9.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="514.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.58%)</title><rect x="521.1" y="147.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="524.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.58%)</title><rect x="521.1" y="131.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.58%)</title><rect x="521.1" y="115.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="524.1" y="126.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.58%)</title><rect x="521.1" y="99.0" width="6.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="524.1" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=240098] (97 samples, 6.21%)</title><rect x="527.9" y="259.0" width="73.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="530.9" y="270.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (97 samples, 6.21%)</title><rect x="527.9" y="243.0" width="73.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="530.9" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.26%)</title><rect x="527.9" y="227.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="530.9" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (4 samples, 0.26%)</title><rect x="527.9" y="211.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="530.9" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (93 samples, 5.95%)</title><rect x="530.9" y="227.0" width="70.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.9" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (93 samples, 5.95%)</title><rect x="530.9" y="211.0" width="70.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="533.9" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (93 samples, 5.95%)</title><rect x="530.9" y="195.0" width="70.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.9" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (16 samples, 1.02%)</title><rect x="530.9" y="179.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (16 samples, 1.02%)</title><rect x="530.9" y="163.0" width="12.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.9" y="174.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (9 samples, 0.58%)</title><rect x="530.9" y="147.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="533.9" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.45%)</title><rect x="530.9" y="131.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="533.9" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.45%)</title><rect x="530.9" y="115.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="533.9" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.45%)</title><rect x="530.9" y="99.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.45%)</title><rect x="530.9" y="83.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="533.9" y="94.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.32%)</title><rect x="530.9" y="67.0" width="3.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="533.9" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.13%)</title><rect x="534.7" y="67.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="537.7" y="78.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.13%)</title><rect x="534.7" y="51.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="537.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (2 samples, 0.13%)</title><rect x="536.2" y="131.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="539.2" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.13%)</title><rect x="536.2" y="115.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="539.2" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.13%)</title><rect x="536.2" y="99.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="539.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.get$Lambda (2 samples, 0.13%)</title><rect x="536.2" y="83.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="539.2" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$68 (2 samples, 0.13%)</title><rect x="536.2" y="67.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="539.2" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 0.45%)</title><rect x="537.7" y="147.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.45%)</title><rect x="537.7" y="131.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="540.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.45%)</title><rect x="537.7" y="115.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="540.7" y="126.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.19%)</title><rect x="537.7" y="99.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="540.7" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.26%)</title><rect x="540.0" y="99.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.0" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="540.0" y="83.0" width="3.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="543.0" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (42 samples, 2.69%)</title><rect x="543.0" y="179.0" width="31.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="546.0" y="190.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (7 samples, 0.45%)</title><rect x="543.0" y="163.0" width="5.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="546.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (14 samples, 0.90%)</title><rect x="548.3" y="163.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="551.3" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.90%)</title><rect x="548.3" y="147.0" width="10.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="551.3" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 1.34%)</title><rect x="558.9" y="163.0" width="15.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="561.9" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 1.34%)</title><rect x="558.9" y="147.0" width="15.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="561.9" y="158.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.70%)</title><rect x="558.9" y="131.0" width="8.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="561.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.38%)</title><rect x="567.2" y="131.0" width="4.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="570.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.26%)</title><rect x="571.7" y="131.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.26%)</title><rect x="571.7" y="115.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="574.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.26%)</title><rect x="571.7" y="99.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="574.7" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="571.7" y="83.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="574.7" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.13%)</title><rect x="574.7" y="179.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.7" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.13%)</title><rect x="574.7" y="163.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="577.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.13%)</title><rect x="576.2" y="179.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="579.2" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.13%)</title><rect x="576.2" y="163.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="579.2" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.13%)</title><rect x="576.2" y="147.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="579.2" y="158.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.13%)</title><rect x="576.2" y="131.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="579.2" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 1.98%)</title><rect x="577.7" y="179.0" width="23.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="580.7" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 1.98%)</title><rect x="577.7" y="163.0" width="23.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="580.7" y="174.0">o..</text>
</g>
<g>
<title>char[] (13 samples, 0.83%)</title><rect x="577.7" y="147.0" width="9.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="580.7" y="158.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.45%)</title><rect x="587.5" y="147.0" width="5.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="590.5" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.70%)</title><rect x="592.8" y="147.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="595.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.70%)</title><rect x="592.8" y="131.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11 samples, 0.70%)</title><rect x="592.8" y="115.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.8" y="126.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.70%)</title><rect x="592.8" y="99.0" width="8.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="595.8" y="110.0"></text>
</g>
<g>
<title>[async_workers-0 tid=240137] (98 samples, 6.27%)</title><rect x="601.1" y="259.0" width="74.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="604.1" y="270.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (98 samples, 6.27%)</title><rect x="601.1" y="243.0" width="74.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.1" y="254.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (98 samples, 6.27%)</title><rect x="601.1" y="227.0" width="74.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="604.1" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (98 samples, 6.27%)</title><rect x="601.1" y="211.0" width="74.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.1" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.06%)</title><rect x="601.1" y="195.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="604.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.06%)</title><rect x="601.1" y="179.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.06%)</title><rect x="601.1" y="163.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="604.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.06%)</title><rect x="601.1" y="147.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.1" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.06%)</title><rect x="601.1" y="131.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="604.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.run (97 samples, 6.21%)</title><rect x="601.9" y="195.0" width="73.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="604.9" y="206.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (97 samples, 6.21%)</title><rect x="601.9" y="179.0" width="73.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="604.9" y="190.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.putInternal (97 samples, 6.21%)</title><rect x="601.9" y="163.0" width="73.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.9" y="174.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.32%)</title><rect x="601.9" y="147.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="604.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 0.32%)</title><rect x="601.9" y="131.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="604.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (5 samples, 0.32%)</title><rect x="601.9" y="115.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="604.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.32%)</title><rect x="601.9" y="99.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="604.9" y="110.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.32%)</title><rect x="601.9" y="83.0" width="3.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="604.9" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (26 samples, 1.66%)</title><rect x="605.7" y="147.0" width="19.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (26 samples, 1.66%)</title><rect x="605.7" y="131.0" width="19.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="608.7" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (17 samples, 1.09%)</title><rect x="605.7" y="115.0" width="12.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="608.7" y="126.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (17 samples, 1.09%)</title><rect x="605.7" y="99.0" width="12.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.7" y="110.0"></text>
</g>
<g>
<title>byte[] (17 samples, 1.09%)</title><rect x="605.7" y="83.0" width="12.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="608.7" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 0.58%)</title><rect x="618.5" y="115.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="621.5" y="126.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (9 samples, 0.58%)</title><rect x="618.5" y="99.0" width="6.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="621.5" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.ZeroResponse (4 samples, 0.26%)</title><rect x="625.3" y="147.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="628.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (19 samples, 1.22%)</title><rect x="628.3" y="147.0" width="14.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="631.3" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 1.22%)</title><rect x="628.3" y="131.0" width="14.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 1.22%)</title><rect x="628.3" y="115.0" width="14.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="631.3" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 1.22%)</title><rect x="628.3" y="99.0" width="14.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="631.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (32 samples, 2.05%)</title><rect x="642.7" y="147.0" width="24.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.7" y="158.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (14 samples, 0.90%)</title><rect x="642.7" y="131.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.7" y="142.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.38%)</title><rect x="642.7" y="115.0" width="4.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="645.7" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.51%)</title><rect x="647.2" y="115.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="650.2" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.51%)</title><rect x="647.2" y="99.0" width="6.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="650.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (18 samples, 1.15%)</title><rect x="653.2" y="131.0" width="13.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="656.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (18 samples, 1.15%)</title><rect x="653.2" y="115.0" width="13.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.2" y="126.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.32%)</title><rect x="653.2" y="99.0" width="3.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="656.2" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.83%)</title><rect x="657.0" y="99.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.83%)</title><rect x="657.0" y="83.0" width="9.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="660.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (11 samples, 0.70%)</title><rect x="666.8" y="147.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11 samples, 0.70%)</title><rect x="666.8" y="131.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.70%)</title><rect x="666.8" y="115.0" width="8.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="669.8" y="126.0"></text>
</g>
<g>
<title>[async_workers-1 tid=240136] (100 samples, 6.40%)</title><rect x="675.1" y="259.0" width="75.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="678.1" y="270.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (100 samples, 6.40%)</title><rect x="675.1" y="243.0" width="75.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.1" y="254.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (100 samples, 6.40%)</title><rect x="675.1" y="227.0" width="75.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="678.1" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (100 samples, 6.40%)</title><rect x="675.1" y="211.0" width="75.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="678.1" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.19%)</title><rect x="675.1" y="195.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="678.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.19%)</title><rect x="675.1" y="179.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.19%)</title><rect x="675.1" y="163.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="678.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.19%)</title><rect x="675.1" y="147.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="678.1" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.19%)</title><rect x="675.1" y="131.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="678.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.run (97 samples, 6.21%)</title><rect x="677.4" y="195.0" width="73.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.4" y="206.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (97 samples, 6.21%)</title><rect x="677.4" y="179.0" width="73.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="680.4" y="190.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.putInternal (97 samples, 6.21%)</title><rect x="677.4" y="163.0" width="73.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.4" y="174.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.51%)</title><rect x="677.4" y="147.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.51%)</title><rect x="677.4" y="131.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (8 samples, 0.51%)</title><rect x="677.4" y="115.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="680.4" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.51%)</title><rect x="677.4" y="99.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="680.4" y="110.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.51%)</title><rect x="677.4" y="83.0" width="6.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="680.4" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (22 samples, 1.41%)</title><rect x="683.4" y="147.0" width="16.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.4" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (22 samples, 1.41%)</title><rect x="683.4" y="131.0" width="16.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.4" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (16 samples, 1.02%)</title><rect x="683.4" y="115.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.4" y="126.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (16 samples, 1.02%)</title><rect x="683.4" y="99.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.4" y="110.0"></text>
</g>
<g>
<title>byte[] (16 samples, 1.02%)</title><rect x="683.4" y="83.0" width="12.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="686.4" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.38%)</title><rect x="695.5" y="115.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="698.5" y="126.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.38%)</title><rect x="695.5" y="99.0" width="4.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="698.5" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.ZeroResponse (4 samples, 0.26%)</title><rect x="700.0" y="147.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="703.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (32 samples, 2.05%)</title><rect x="703.1" y="147.0" width="24.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.1" y="158.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 2.05%)</title><rect x="703.1" y="131.0" width="24.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="706.1" y="142.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 2.05%)</title><rect x="703.1" y="115.0" width="24.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="706.1" y="126.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 2.05%)</title><rect x="703.1" y="99.0" width="24.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="706.1" y="110.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (27 samples, 1.73%)</title><rect x="727.2" y="147.0" width="20.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="730.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (12 samples, 0.77%)</title><rect x="727.2" y="131.0" width="9.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="730.2" y="142.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.32%)</title><rect x="727.2" y="115.0" width="3.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="730.2" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.45%)</title><rect x="731.0" y="115.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.0" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.45%)</title><rect x="731.0" y="99.0" width="5.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="734.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (15 samples, 0.96%)</title><rect x="736.3" y="131.0" width="11.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="739.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (15 samples, 0.96%)</title><rect x="736.3" y="115.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.3" y="126.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.38%)</title><rect x="736.3" y="99.0" width="4.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="739.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.58%)</title><rect x="740.8" y="99.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.58%)</title><rect x="740.8" y="83.0" width="6.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="743.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (4 samples, 0.26%)</title><rect x="747.6" y="147.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.26%)</title><rect x="747.6" y="131.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="750.6" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.26%)</title><rect x="747.6" y="115.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="750.6" y="126.0"></text>
</g>
<g>
<title>[async_workers-2 tid=240142] (99 samples, 6.33%)</title><rect x="750.6" y="259.0" width="74.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="753.6" y="270.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (99 samples, 6.33%)</title><rect x="750.6" y="243.0" width="74.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.6" y="254.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (99 samples, 6.33%)</title><rect x="750.6" y="227.0" width="74.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="753.6" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (99 samples, 6.33%)</title><rect x="750.6" y="211.0" width="74.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="753.6" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.51%)</title><rect x="750.6" y="195.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 0.51%)</title><rect x="750.6" y="179.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.51%)</title><rect x="750.6" y="163.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.51%)</title><rect x="750.6" y="147.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="753.6" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.51%)</title><rect x="750.6" y="131.0" width="6.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="753.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.run (91 samples, 5.82%)</title><rect x="756.7" y="195.0" width="68.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.7" y="206.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (91 samples, 5.82%)</title><rect x="756.7" y="179.0" width="68.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.7" y="190.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.putInternal (91 samples, 5.82%)</title><rect x="756.7" y="163.0" width="68.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="759.7" y="174.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.38%)</title><rect x="756.7" y="147.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="759.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.38%)</title><rect x="756.7" y="131.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="759.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.38%)</title><rect x="756.7" y="115.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="759.7" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.38%)</title><rect x="756.7" y="99.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.7" y="110.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.38%)</title><rect x="756.7" y="83.0" width="4.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="759.7" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (24 samples, 1.54%)</title><rect x="761.2" y="147.0" width="18.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="764.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (24 samples, 1.54%)</title><rect x="761.2" y="131.0" width="18.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="764.2" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 1.22%)</title><rect x="761.2" y="115.0" width="14.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="764.2" y="126.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (19 samples, 1.22%)</title><rect x="761.2" y="99.0" width="14.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.2" y="110.0"></text>
</g>
<g>
<title>byte[] (19 samples, 1.22%)</title><rect x="761.2" y="83.0" width="14.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="764.2" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.32%)</title><rect x="775.5" y="115.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="778.5" y="126.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.32%)</title><rect x="775.5" y="99.0" width="3.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="778.5" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.ZeroResponse (8 samples, 0.51%)</title><rect x="779.3" y="147.0" width="6.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="782.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (19 samples, 1.22%)</title><rect x="785.3" y="147.0" width="14.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.3" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 1.22%)</title><rect x="785.3" y="131.0" width="14.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="788.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 1.22%)</title><rect x="785.3" y="115.0" width="14.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.3" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 1.22%)</title><rect x="785.3" y="99.0" width="14.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="788.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (27 samples, 1.73%)</title><rect x="799.7" y="147.0" width="20.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="802.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (12 samples, 0.77%)</title><rect x="799.7" y="131.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="802.7" y="142.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="799.7" y="115.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="802.7" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.51%)</title><rect x="802.7" y="115.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.51%)</title><rect x="802.7" y="99.0" width="6.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="805.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (15 samples, 0.96%)</title><rect x="808.7" y="131.0" width="11.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="811.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (15 samples, 0.96%)</title><rect x="808.7" y="115.0" width="11.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="811.7" y="126.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.38%)</title><rect x="808.7" y="99.0" width="4.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="811.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.58%)</title><rect x="813.3" y="99.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.58%)</title><rect x="813.3" y="83.0" width="6.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="816.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (7 samples, 0.45%)</title><rect x="820.1" y="147.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="823.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.45%)</title><rect x="820.1" y="131.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.45%)</title><rect x="820.1" y="115.0" width="5.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="823.1" y="126.0"></text>
</g>
<g>
<title>[async_workers-3 tid=240135] (99 samples, 6.33%)</title><rect x="825.4" y="259.0" width="74.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="828.4" y="270.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (99 samples, 6.33%)</title><rect x="825.4" y="243.0" width="74.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.4" y="254.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (99 samples, 6.33%)</title><rect x="825.4" y="227.0" width="74.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="828.4" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (99 samples, 6.33%)</title><rect x="825.4" y="211.0" width="74.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.4" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.38%)</title><rect x="825.4" y="195.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.38%)</title><rect x="825.4" y="179.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.38%)</title><rect x="825.4" y="163.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.38%)</title><rect x="825.4" y="147.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.4" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.38%)</title><rect x="825.4" y="131.0" width="4.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="828.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.run (93 samples, 5.95%)</title><rect x="829.9" y="195.0" width="70.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="832.9" y="206.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (93 samples, 5.95%)</title><rect x="829.9" y="179.0" width="70.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="832.9" y="190.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.putInternal (93 samples, 5.95%)</title><rect x="829.9" y="163.0" width="70.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="832.9" y="174.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.58%)</title><rect x="829.9" y="147.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="832.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 0.58%)</title><rect x="829.9" y="131.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="832.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (9 samples, 0.58%)</title><rect x="829.9" y="115.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.58%)</title><rect x="829.9" y="99.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="832.9" y="110.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.58%)</title><rect x="829.9" y="83.0" width="6.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="832.9" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (30 samples, 1.92%)</title><rect x="836.7" y="147.0" width="22.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="839.7" y="158.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (30 samples, 1.92%)</title><rect x="836.7" y="131.0" width="22.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="839.7" y="142.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (24 samples, 1.54%)</title><rect x="836.7" y="115.0" width="18.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="839.7" y="126.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (24 samples, 1.54%)</title><rect x="836.7" y="99.0" width="18.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.7" y="110.0"></text>
</g>
<g>
<title>byte[] (24 samples, 1.54%)</title><rect x="836.7" y="83.0" width="18.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="839.7" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.38%)</title><rect x="854.8" y="115.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="857.8" y="126.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.38%)</title><rect x="854.8" y="99.0" width="4.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="857.8" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.ZeroResponse (5 samples, 0.32%)</title><rect x="859.3" y="147.0" width="3.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="862.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (11 samples, 0.70%)</title><rect x="863.1" y="147.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="866.1" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.70%)</title><rect x="863.1" y="131.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="866.1" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.70%)</title><rect x="863.1" y="115.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="866.1" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.70%)</title><rect x="863.1" y="99.0" width="8.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="866.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (28 samples, 1.79%)</title><rect x="871.4" y="147.0" width="21.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="874.4" y="158.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (16 samples, 1.02%)</title><rect x="871.4" y="131.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="874.4" y="142.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.45%)</title><rect x="871.4" y="115.0" width="5.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="874.4" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.58%)</title><rect x="876.7" y="115.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="879.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.58%)</title><rect x="876.7" y="99.0" width="6.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="879.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (12 samples, 0.77%)</title><rect x="883.5" y="131.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="886.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (12 samples, 0.77%)</title><rect x="883.5" y="115.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="886.5" y="126.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.51%)</title><rect x="883.5" y="99.0" width="6.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="886.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.26%)</title><rect x="889.5" y="99.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="892.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.26%)</title><rect x="889.5" y="83.0" width="3.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="892.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (10 samples, 0.64%)</title><rect x="892.5" y="147.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="895.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (10 samples, 0.64%)</title><rect x="892.5" y="131.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="895.5" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.64%)</title><rect x="892.5" y="115.0" width="7.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="895.5" y="126.0"></text>
</g>
<g>
<title>[async_workers-4 tid=240138] (96 samples, 6.14%)</title><rect x="900.1" y="259.0" width="72.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="903.1" y="270.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (96 samples, 6.14%)</title><rect x="900.1" y="243.0" width="72.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="903.1" y="254.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (96 samples, 6.14%)</title><rect x="900.1" y="227.0" width="72.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="903.1" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (96 samples, 6.14%)</title><rect x="900.1" y="211.0" width="72.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="903.1" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.38%)</title><rect x="900.1" y="195.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="903.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.38%)</title><rect x="900.1" y="179.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.38%)</title><rect x="900.1" y="163.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="903.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.38%)</title><rect x="900.1" y="147.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="903.1" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.38%)</title><rect x="900.1" y="131.0" width="4.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="903.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.run (90 samples, 5.76%)</title><rect x="904.6" y="195.0" width="68.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="907.6" y="206.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (90 samples, 5.76%)</title><rect x="904.6" y="179.0" width="68.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.6" y="190.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.putInternal (90 samples, 5.76%)</title><rect x="904.6" y="163.0" width="68.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="907.6" y="174.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.38%)</title><rect x="904.6" y="147.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="907.6" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.38%)</title><rect x="904.6" y="131.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.38%)</title><rect x="904.6" y="115.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="907.6" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.38%)</title><rect x="904.6" y="99.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.6" y="110.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.38%)</title><rect x="904.6" y="83.0" width="4.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="907.6" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (28 samples, 1.79%)</title><rect x="909.2" y="147.0" width="21.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="912.2" y="158.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (28 samples, 1.79%)</title><rect x="909.2" y="131.0" width="21.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="912.2" y="142.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (24 samples, 1.54%)</title><rect x="909.2" y="115.0" width="18.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="912.2" y="126.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (24 samples, 1.54%)</title><rect x="909.2" y="99.0" width="18.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="912.2" y="110.0"></text>
</g>
<g>
<title>byte[] (24 samples, 1.54%)</title><rect x="909.2" y="83.0" width="18.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="912.2" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.26%)</title><rect x="927.3" y="115.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="930.3" y="126.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (4 samples, 0.26%)</title><rect x="927.3" y="99.0" width="3.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="930.3" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.ZeroResponse (6 samples, 0.38%)</title><rect x="930.3" y="147.0" width="4.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="933.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (19 samples, 1.22%)</title><rect x="934.8" y="147.0" width="14.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="937.8" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 1.22%)</title><rect x="934.8" y="131.0" width="14.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="937.8" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 1.22%)</title><rect x="934.8" y="115.0" width="14.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="937.8" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 1.22%)</title><rect x="934.8" y="99.0" width="14.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="937.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (24 samples, 1.54%)</title><rect x="949.2" y="147.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="952.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (13 samples, 0.83%)</title><rect x="949.2" y="131.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="952.2" y="142.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.19%)</title><rect x="949.2" y="115.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="952.2" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.64%)</title><rect x="951.4" y="115.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.4" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.64%)</title><rect x="951.4" y="99.0" width="7.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="954.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (11 samples, 0.70%)</title><rect x="959.0" y="131.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="962.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (11 samples, 0.70%)</title><rect x="959.0" y="115.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="962.0" y="126.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.32%)</title><rect x="959.0" y="99.0" width="3.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="962.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.38%)</title><rect x="962.8" y="99.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="965.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.38%)</title><rect x="962.8" y="83.0" width="4.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="965.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (7 samples, 0.45%)</title><rect x="967.3" y="147.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="970.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.45%)</title><rect x="967.3" y="131.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="970.3" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.45%)</title><rect x="967.3" y="115.0" width="5.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="970.3" y="126.0"></text>
</g>
<g>
<title>[async_workers-5 tid=240139] (96 samples, 6.14%)</title><rect x="972.6" y="259.0" width="72.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="975.6" y="270.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (96 samples, 6.14%)</title><rect x="972.6" y="243.0" width="72.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="975.6" y="254.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (96 samples, 6.14%)</title><rect x="972.6" y="227.0" width="72.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="975.6" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (96 samples, 6.14%)</title><rect x="972.6" y="211.0" width="72.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="975.6" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (7 samples, 0.45%)</title><rect x="972.6" y="195.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="975.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (7 samples, 0.45%)</title><rect x="972.6" y="179.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="975.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.45%)</title><rect x="972.6" y="163.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="975.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (7 samples, 0.45%)</title><rect x="972.6" y="147.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="975.6" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (7 samples, 0.45%)</title><rect x="972.6" y="131.0" width="5.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="975.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.run (89 samples, 5.69%)</title><rect x="977.9" y="195.0" width="67.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="980.9" y="206.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (89 samples, 5.69%)</title><rect x="977.9" y="179.0" width="67.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="980.9" y="190.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.putInternal (89 samples, 5.69%)</title><rect x="977.9" y="163.0" width="67.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="980.9" y="174.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.19%)</title><rect x="977.9" y="147.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="980.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.19%)</title><rect x="977.9" y="131.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="980.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.19%)</title><rect x="977.9" y="115.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="980.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.19%)</title><rect x="977.9" y="99.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="980.9" y="110.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.19%)</title><rect x="977.9" y="83.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="980.9" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (24 samples, 1.54%)</title><rect x="980.1" y="147.0" width="18.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="983.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (24 samples, 1.54%)</title><rect x="980.1" y="131.0" width="18.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="983.1" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 1.22%)</title><rect x="980.1" y="115.0" width="14.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="983.1" y="126.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (19 samples, 1.22%)</title><rect x="980.1" y="99.0" width="14.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="983.1" y="110.0"></text>
</g>
<g>
<title>byte[] (19 samples, 1.22%)</title><rect x="980.1" y="83.0" width="14.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="983.1" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.32%)</title><rect x="994.5" y="115.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="997.5" y="126.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.32%)</title><rect x="994.5" y="99.0" width="3.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="997.5" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.ZeroResponse (1 samples, 0.06%)</title><rect x="998.2" y="147.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1001.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (16 samples, 1.02%)</title><rect x="999.0" y="147.0" width="12.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1002.0" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 1.02%)</title><rect x="999.0" y="131.0" width="12.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1002.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 1.02%)</title><rect x="999.0" y="115.0" width="12.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1002.0" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 1.02%)</title><rect x="999.0" y="99.0" width="12.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1002.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (35 samples, 2.24%)</title><rect x="1011.1" y="147.0" width="26.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1014.1" y="158.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (18 samples, 1.15%)</title><rect x="1011.1" y="131.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1014.1" y="142.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.45%)</title><rect x="1011.1" y="115.0" width="5.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1014.1" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.70%)</title><rect x="1016.4" y="115.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1019.4" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.70%)</title><rect x="1016.4" y="99.0" width="8.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1019.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (17 samples, 1.09%)</title><rect x="1024.7" y="131.0" width="12.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1027.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (17 samples, 1.09%)</title><rect x="1024.7" y="115.0" width="12.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1027.7" y="126.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.51%)</title><rect x="1024.7" y="99.0" width="6.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1027.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.58%)</title><rect x="1030.7" y="99.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1033.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.58%)</title><rect x="1030.7" y="83.0" width="6.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1033.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (10 samples, 0.64%)</title><rect x="1037.5" y="147.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1040.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (10 samples, 0.64%)</title><rect x="1037.5" y="131.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1040.5" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.64%)</title><rect x="1037.5" y="115.0" width="7.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1040.5" y="126.0"></text>
</g>
<g>
<title>[async_workers-6 tid=240141] (99 samples, 6.33%)</title><rect x="1045.0" y="259.0" width="74.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1048.0" y="270.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (99 samples, 6.33%)</title><rect x="1045.0" y="243.0" width="74.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1048.0" y="254.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (99 samples, 6.33%)</title><rect x="1045.0" y="227.0" width="74.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1048.0" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (99 samples, 6.33%)</title><rect x="1045.0" y="211.0" width="74.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.0" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.38%)</title><rect x="1045.0" y="195.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1048.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.38%)</title><rect x="1045.0" y="179.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.32%)</title><rect x="1045.0" y="163.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1048.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.32%)</title><rect x="1045.0" y="147.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.0" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.32%)</title><rect x="1045.0" y="131.0" width="3.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1048.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.06%)</title><rect x="1048.8" y="163.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1051.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.06%)</title><rect x="1048.8" y="147.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1051.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.06%)</title><rect x="1048.8" y="131.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1051.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.06%)</title><rect x="1048.8" y="115.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1051.8" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.06%)</title><rect x="1048.8" y="99.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1051.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.run (93 samples, 5.95%)</title><rect x="1049.6" y="195.0" width="70.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1052.6" y="206.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (93 samples, 5.95%)</title><rect x="1049.6" y="179.0" width="70.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1052.6" y="190.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.putInternal (93 samples, 5.95%)</title><rect x="1049.6" y="163.0" width="70.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1052.6" y="174.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.51%)</title><rect x="1049.6" y="147.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1052.6" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.51%)</title><rect x="1049.6" y="131.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1052.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (8 samples, 0.51%)</title><rect x="1049.6" y="115.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1052.6" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.51%)</title><rect x="1049.6" y="99.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1052.6" y="110.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.51%)</title><rect x="1049.6" y="83.0" width="6.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1052.6" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (17 samples, 1.09%)</title><rect x="1055.6" y="147.0" width="12.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1058.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (17 samples, 1.09%)</title><rect x="1055.6" y="131.0" width="12.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1058.6" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.90%)</title><rect x="1055.6" y="115.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1058.6" y="126.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (14 samples, 0.90%)</title><rect x="1055.6" y="99.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1058.6" y="110.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.90%)</title><rect x="1055.6" y="83.0" width="10.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1058.6" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.19%)</title><rect x="1066.2" y="115.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1069.2" y="126.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.19%)</title><rect x="1066.2" y="99.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1069.2" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.ZeroResponse (6 samples, 0.38%)</title><rect x="1068.5" y="147.0" width="4.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1071.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (22 samples, 1.41%)</title><rect x="1073.0" y="147.0" width="16.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1076.0" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 1.41%)</title><rect x="1073.0" y="131.0" width="16.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1076.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 1.41%)</title><rect x="1073.0" y="115.0" width="16.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1076.0" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 1.41%)</title><rect x="1073.0" y="99.0" width="16.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1076.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (35 samples, 2.24%)</title><rect x="1089.6" y="147.0" width="26.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1092.6" y="158.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (13 samples, 0.83%)</title><rect x="1089.6" y="131.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.6" y="142.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.38%)</title><rect x="1089.6" y="115.0" width="4.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1092.6" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.45%)</title><rect x="1094.1" y="115.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1097.1" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.45%)</title><rect x="1094.1" y="99.0" width="5.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1097.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (22 samples, 1.41%)</title><rect x="1099.4" y="131.0" width="16.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1102.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (22 samples, 1.41%)</title><rect x="1099.4" y="115.0" width="16.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1102.4" y="126.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.64%)</title><rect x="1099.4" y="99.0" width="7.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1102.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.77%)</title><rect x="1107.0" y="99.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1110.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.77%)</title><rect x="1107.0" y="83.0" width="9.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1110.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (5 samples, 0.32%)</title><rect x="1116.0" y="147.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1119.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.32%)</title><rect x="1116.0" y="131.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1119.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.32%)</title><rect x="1116.0" y="115.0" width="3.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1119.0" y="126.0"></text>
</g>
<g>
<title>[async_workers-7 tid=240140] (93 samples, 5.95%)</title><rect x="1119.8" y="259.0" width="70.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1122.8" y="270.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (93 samples, 5.95%)</title><rect x="1119.8" y="243.0" width="70.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.8" y="254.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (93 samples, 5.95%)</title><rect x="1119.8" y="227.0" width="70.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1122.8" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (93 samples, 5.95%)</title><rect x="1119.8" y="211.0" width="70.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1122.8" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.26%)</title><rect x="1119.8" y="195.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1122.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4 samples, 0.26%)</title><rect x="1119.8" y="179.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1122.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.19%)</title><rect x="1119.8" y="163.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1122.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.19%)</title><rect x="1119.8" y="147.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.8" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.19%)</title><rect x="1119.8" y="131.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1122.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.06%)</title><rect x="1122.1" y="163.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1125.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.06%)</title><rect x="1122.1" y="147.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1125.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.06%)</title><rect x="1122.1" y="131.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.06%)</title><rect x="1122.1" y="115.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.1" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.06%)</title><rect x="1122.1" y="99.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1125.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.run (89 samples, 5.69%)</title><rect x="1122.8" y="195.0" width="67.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.8" y="206.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (89 samples, 5.69%)</title><rect x="1122.8" y="179.0" width="67.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.8" y="190.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.putInternal (89 samples, 5.69%)</title><rect x="1122.8" y="163.0" width="67.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1125.8" y="174.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.58%)</title><rect x="1122.8" y="147.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1125.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 0.58%)</title><rect x="1122.8" y="131.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1125.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (9 samples, 0.58%)</title><rect x="1122.8" y="115.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1125.8" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.58%)</title><rect x="1122.8" y="99.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.8" y="110.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.58%)</title><rect x="1122.8" y="83.0" width="6.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1125.8" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (26 samples, 1.66%)</title><rect x="1129.6" y="147.0" width="19.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1132.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (26 samples, 1.66%)</title><rect x="1129.6" y="131.0" width="19.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1132.6" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 1.22%)</title><rect x="1129.6" y="115.0" width="14.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1132.6" y="126.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (19 samples, 1.22%)</title><rect x="1129.6" y="99.0" width="14.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1132.6" y="110.0"></text>
</g>
<g>
<title>byte[] (19 samples, 1.22%)</title><rect x="1129.6" y="83.0" width="14.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1132.6" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.45%)</title><rect x="1143.9" y="115.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1146.9" y="126.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.45%)</title><rect x="1143.9" y="99.0" width="5.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1146.9" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.ZeroResponse (3 samples, 0.19%)</title><rect x="1149.2" y="147.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1152.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (21 samples, 1.34%)</title><rect x="1151.5" y="147.0" width="15.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1154.5" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 1.34%)</title><rect x="1151.5" y="131.0" width="15.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1154.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 1.34%)</title><rect x="1151.5" y="115.0" width="15.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1154.5" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 1.34%)</title><rect x="1151.5" y="99.0" width="15.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1154.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (26 samples, 1.66%)</title><rect x="1167.4" y="147.0" width="19.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1170.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (11 samples, 0.70%)</title><rect x="1167.4" y="131.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1170.4" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.13%)</title><rect x="1167.4" y="115.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1170.4" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.58%)</title><rect x="1168.9" y="115.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1171.9" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.58%)</title><rect x="1168.9" y="99.0" width="6.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1171.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (15 samples, 0.96%)</title><rect x="1175.7" y="131.0" width="11.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1178.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (15 samples, 0.96%)</title><rect x="1175.7" y="115.0" width="11.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1178.7" y="126.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="1175.7" y="99.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1178.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.70%)</title><rect x="1178.7" y="99.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1181.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.70%)</title><rect x="1178.7" y="83.0" width="8.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1181.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (4 samples, 0.26%)</title><rect x="1187.0" y="147.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1190.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.26%)</title><rect x="1187.0" y="131.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.26%)</title><rect x="1187.0" y="115.0" width="3.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1190.0" y="126.0"></text>
</g>
</g>
</svg>
