<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="357"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="357"> </text>
<g id="frames">
<g>
<title>all (43,191 samples, 100.00%)</title><rect x="10.0" y="323.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="334.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (26,980 samples, 62.47%)</title><rect x="10.0" y="307.0" width="737.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="318.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (26,980 samples, 62.47%)</title><rect x="10.0" y="291.0" width="737.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="302.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (26,980 samples, 62.47%)</title><rect x="10.0" y="275.0" width="737.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="286.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (25,683 samples, 59.46%)</title><rect x="10.0" y="259.0" width="701.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="270.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$65/632463387.call (12,642 samples, 29.27%)</title><rect x="10.0" y="243.0" width="345.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="254.0">ru/mail/polis/service/mariarheon/AsyncServiceIm..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$passOn$1 (12,642 samples, 29.27%)</title><rect x="10.0" y="227.0" width="345.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="238.0">ru/mail/polis/service/mariarheon/AsyncServiceIm..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.passOnInternal (12,642 samples, 29.27%)</title><rect x="10.0" y="211.0" width="345.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="222.0">ru/mail/polis/service/mariarheon/AsyncServiceIm..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.addMyselfParamToRequest (193 samples, 0.45%)</title><rect x="10.0" y="195.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (109 samples, 0.25%)</title><rect x="10.0" y="179.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/112049309.invoke (109 samples, 0.25%)</title><rect x="10.0" y="163.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (109 samples, 0.25%)</title><rect x="10.0" y="147.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (18 samples, 0.04%)</title><rect x="10.0" y="131.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.04%)</title><rect x="10.0" y="115.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (91 samples, 0.21%)</title><rect x="10.5" y="131.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (91 samples, 0.21%)</title><rect x="10.5" y="115.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.5" y="126.0"></text>
</g>
<g>
<title>byte[] (91 samples, 0.21%)</title><rect x="10.5" y="99.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="13.5" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (84 samples, 0.19%)</title><rect x="13.0" y="179.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.0" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (84 samples, 0.19%)</title><rect x="13.0" y="163.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="16.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding.passOn (12,449 samples, 28.82%)</title><rect x="15.3" y="195.0" width="340.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.3" y="206.0">ru/mail/polis/service/mariarheon/RendezvousSha..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (12,449 samples, 28.82%)</title><rect x="15.3" y="179.0" width="340.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.3" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (12,449 samples, 28.82%)</title><rect x="15.3" y="163.0" width="340.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.3" y="174.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (37 samples, 0.09%)</title><rect x="15.3" y="147.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="18.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (11,398 samples, 26.39%)</title><rect x="16.3" y="147.0" width="311.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.3" y="158.0">one/nio/http/HttpClient$ResponseReader.&lt;in..</text>
</g>
<g>
<title>byte[] (4,934 samples, 11.42%)</title><rect x="16.3" y="131.0" width="134.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="19.3" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (6,464 samples, 14.97%)</title><rect x="151.1" y="131.0" width="176.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="154.1" y="142.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (823 samples, 1.91%)</title><rect x="327.7" y="147.0" width="22.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.7" y="158.0">o..</text>
</g>
<g>
<title>byte[] (17 samples, 0.04%)</title><rect x="327.7" y="131.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="330.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (57 samples, 0.13%)</title><rect x="328.1" y="131.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="331.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (57 samples, 0.13%)</title><rect x="328.1" y="115.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.1" y="126.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.06%)</title><rect x="328.1" y="99.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="331.1" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.07%)</title><rect x="328.8" y="99.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="331.8" y="110.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.07%)</title><rect x="328.8" y="83.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="331.8" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (25 samples, 0.06%)</title><rect x="329.7" y="131.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="332.7" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (636 samples, 1.47%)</title><rect x="330.4" y="131.0" width="17.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.4" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (636 samples, 1.47%)</title><rect x="330.4" y="115.0" width="17.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="333.4" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (636 samples, 1.47%)</title><rect x="330.4" y="99.0" width="17.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="333.4" y="110.0"></text>
</g>
<g>
<title>char[] (450 samples, 1.04%)</title><rect x="330.4" y="83.0" width="12.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="333.4" y="94.0"></text>
</g>
<g>
<title>java.lang.String (85 samples, 0.20%)</title><rect x="342.7" y="83.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="345.7" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (101 samples, 0.23%)</title><rect x="345.0" y="83.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="348.0" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (101 samples, 0.23%)</title><rect x="345.0" y="67.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="348.0" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (101 samples, 0.23%)</title><rect x="345.0" y="51.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="348.0" y="62.0"></text>
</g>
<g>
<title>byte[] (101 samples, 0.23%)</title><rect x="345.0" y="35.0" width="2.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="348.0" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (35 samples, 0.08%)</title><rect x="347.8" y="131.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (35 samples, 0.08%)</title><rect x="347.8" y="115.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="350.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (53 samples, 0.12%)</title><rect x="348.7" y="131.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="351.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (53 samples, 0.12%)</title><rect x="348.7" y="115.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="351.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (53 samples, 0.12%)</title><rect x="348.7" y="99.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="351.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.05%)</title><rect x="348.7" y="83.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="351.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.07%)</title><rect x="349.3" y="83.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="352.3" y="94.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.07%)</title><rect x="349.3" y="67.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="352.3" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (109 samples, 0.25%)</title><rect x="350.2" y="147.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="353.2" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (109 samples, 0.25%)</title><rect x="350.2" y="131.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="353.2" y="142.0"></text>
</g>
<g>
<title>byte[] (109 samples, 0.25%)</title><rect x="350.2" y="115.0" width="2.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="353.2" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (63 samples, 0.15%)</title><rect x="353.1" y="147.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="356.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (63 samples, 0.15%)</title><rect x="353.1" y="131.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (63 samples, 0.15%)</title><rect x="353.1" y="115.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="356.1" y="126.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.07%)</title><rect x="353.1" y="99.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="356.1" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (31 samples, 0.07%)</title><rect x="354.0" y="99.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.0" y="110.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.07%)</title><rect x="354.0" y="83.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="357.0" y="94.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (19 samples, 0.04%)</title><rect x="354.9" y="147.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="357.9" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (19 samples, 0.04%)</title><rect x="354.9" y="131.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="357.9" y="142.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (19 samples, 0.04%)</title><rect x="354.9" y="115.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.9" y="126.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (19 samples, 0.04%)</title><rect x="354.9" y="99.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="357.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$71/656783190.call (13,041 samples, 30.19%)</title><rect x="355.4" y="243.0" width="356.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="358.4" y="254.0">ru/mail/polis/service/mariarheon/AsyncServiceImp..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$processRequest$0 (13,041 samples, 30.19%)</title><rect x="355.4" y="227.0" width="356.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.4" y="238.0">ru/mail/polis/service/mariarheon/AsyncServiceImp..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (13,041 samples, 30.19%)</title><rect x="355.4" y="211.0" width="356.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.4" y="222.0">ru/mail/polis/service/mariarheon/AsyncServiceImp..</text>
</g>
<g>
<title>java/lang/String.getBytes (1,114 samples, 2.58%)</title><rect x="355.4" y="195.0" width="30.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="358.4" y="206.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,114 samples, 2.58%)</title><rect x="355.4" y="179.0" width="30.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="358.4" y="190.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,114 samples, 2.58%)</title><rect x="355.4" y="163.0" width="30.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="358.4" y="174.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,114 samples, 2.58%)</title><rect x="355.4" y="147.0" width="30.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="358.4" y="158.0">ja..</text>
</g>
<g>
<title>byte[] (1,114 samples, 2.58%)</title><rect x="355.4" y="131.0" width="30.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="358.4" y="142.0">by..</text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.ZeroResponse (1,027 samples, 2.38%)</title><rect x="385.8" y="195.0" width="28.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="388.8" y="206.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (3,781 samples, 8.75%)</title><rect x="413.9" y="195.0" width="103.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.9" y="206.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,781 samples, 8.75%)</title><rect x="413.9" y="179.0" width="103.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="416.9" y="190.0">java/nio/Byt..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,781 samples, 8.75%)</title><rect x="413.9" y="163.0" width="103.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="416.9" y="174.0">java/nio/Byt..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,781 samples, 8.75%)</title><rect x="413.9" y="147.0" width="103.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="416.9" y="158.0">java.nio.Hea..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (5,823 samples, 13.48%)</title><rect x="517.2" y="195.0" width="159.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="520.2" y="206.0">ru/mail/polis/dao/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (2,905 samples, 6.73%)</title><rect x="517.2" y="179.0" width="79.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="520.2" y="190.0">ru/mail/p..</text>
</g>
<g>
<title>byte[] (908 samples, 2.10%)</title><rect x="517.2" y="163.0" width="24.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="520.2" y="174.0">b..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1,997 samples, 4.62%)</title><rect x="542.0" y="163.0" width="54.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.0" y="174.0">java/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,997 samples, 4.62%)</title><rect x="542.0" y="147.0" width="54.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="545.0" y="158.0">java...</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (2,918 samples, 6.76%)</title><rect x="596.5" y="179.0" width="79.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.5" y="190.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (2,918 samples, 6.76%)</title><rect x="596.5" y="163.0" width="79.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="599.5" y="174.0">ru/mail/p..</text>
</g>
<g>
<title>byte[] (1,028 samples, 2.38%)</title><rect x="596.5" y="147.0" width="28.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="599.5" y="158.0">by..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1,890 samples, 4.38%)</title><rect x="624.6" y="147.0" width="51.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="627.6" y="158.0">java/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,890 samples, 4.38%)</title><rect x="624.6" y="131.0" width="51.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="627.6" y="142.0">java...</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (1,296 samples, 3.00%)</title><rect x="676.3" y="195.0" width="35.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.3" y="206.0">ru/..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,296 samples, 3.00%)</title><rect x="676.3" y="179.0" width="35.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="679.3" y="190.0">one..</text>
</g>
<g>
<title>java.lang.String[] (1,296 samples, 3.00%)</title><rect x="676.3" y="163.0" width="35.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="679.3" y="174.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,297 samples, 3.00%)</title><rect x="711.7" y="259.0" width="35.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="714.7" y="270.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,297 samples, 3.00%)</title><rect x="711.7" y="243.0" width="35.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="714.7" y="254.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,284 samples, 2.97%)</title><rect x="711.7" y="227.0" width="35.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="714.7" y="238.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1,284 samples, 2.97%)</title><rect x="711.7" y="211.0" width="35.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="714.7" y="222.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,284 samples, 2.97%)</title><rect x="711.7" y="195.0" width="35.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="714.7" y="206.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (13 samples, 0.03%)</title><rect x="746.8" y="227.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (13 samples, 0.03%)</title><rect x="746.8" y="211.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (13 samples, 0.03%)</title><rect x="746.8" y="195.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (13 samples, 0.03%)</title><rect x="746.8" y="179.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.8" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (13 samples, 0.03%)</title><rect x="746.8" y="163.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="749.8" y="174.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (16,211 samples, 37.53%)</title><rect x="747.1" y="307.0" width="442.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.1" y="318.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (459 samples, 1.06%)</title><rect x="747.1" y="291.0" width="12.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="750.1" y="302.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (459 samples, 1.06%)</title><rect x="747.1" y="275.0" width="12.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="750.1" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (15,752 samples, 36.47%)</title><rect x="759.6" y="291.0" width="430.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="762.6" y="302.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (15,752 samples, 36.47%)</title><rect x="759.6" y="275.0" width="430.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="762.6" y="286.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (15,752 samples, 36.47%)</title><rect x="759.6" y="259.0" width="430.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="762.6" y="270.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7,047 samples, 16.32%)</title><rect x="759.6" y="243.0" width="192.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="762.6" y="254.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7,047 samples, 16.32%)</title><rect x="759.6" y="227.0" width="192.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.6" y="238.0">one/nio/http/HttpServer.h..</text>
</g>
<g>
<title>RequestHandler0_handleEntityRequest.handleRequest (6,206 samples, 14.37%)</title><rect x="759.6" y="211.0" width="169.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="762.6" y="222.0">RequestHandler0_handle..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (400 samples, 0.93%)</title><rect x="759.6" y="195.0" width="11.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (400 samples, 0.93%)</title><rect x="759.6" y="179.0" width="11.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (400 samples, 0.93%)</title><rect x="759.6" y="163.0" width="11.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String (257 samples, 0.60%)</title><rect x="759.6" y="147.0" width="7.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="762.6" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (143 samples, 0.33%)</title><rect x="766.7" y="147.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.7" y="158.0"></text>
</g>
<g>
<title>byte[] (143 samples, 0.33%)</title><rect x="766.7" y="131.0" width="3.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="769.7" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (660 samples, 1.53%)</title><rect x="770.6" y="195.0" width="18.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="773.6" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (660 samples, 1.53%)</title><rect x="770.6" y="179.0" width="18.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.6" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (660 samples, 1.53%)</title><rect x="770.6" y="163.0" width="18.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="773.6" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (660 samples, 1.53%)</title><rect x="770.6" y="147.0" width="18.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="773.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (314 samples, 0.73%)</title><rect x="770.6" y="131.0" width="8.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="773.6" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (346 samples, 0.80%)</title><rect x="779.2" y="131.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="782.2" y="142.0"></text>
</g>
<g>
<title>byte[] (346 samples, 0.80%)</title><rect x="779.2" y="115.0" width="9.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="782.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.handleEntityRequest (5,146 samples, 11.91%)</title><rect x="788.6" y="195.0" width="140.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="791.6" y="206.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.get (239 samples, 0.55%)</title><rect x="788.6" y="179.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="791.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.awaitDone (239 samples, 0.55%)</title><rect x="788.6" y="163.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="791.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask$WaitNode (239 samples, 0.55%)</title><rect x="788.6" y="147.0" width="6.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="791.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.processRequest (557 samples, 1.29%)</title><rect x="795.1" y="179.0" width="15.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="798.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (252 samples, 0.58%)</title><rect x="795.1" y="163.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="798.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (252 samples, 0.58%)</title><rect x="795.1" y="147.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$71/656783190.get$Lambda (252 samples, 0.58%)</title><rect x="795.1" y="131.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="798.1" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$71 (252 samples, 0.58%)</title><rect x="795.1" y="115.0" width="6.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="798.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (305 samples, 0.71%)</title><rect x="802.0" y="163.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="805.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (301 samples, 0.70%)</title><rect x="802.0" y="147.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="805.0" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (301 samples, 0.70%)</title><rect x="802.0" y="131.0" width="8.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="805.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.sendToReplicas (2,917 samples, 6.75%)</title><rect x="810.4" y="179.0" width="79.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.4" y="190.0">ru/mail/p..</text>
</g>
<g>
<title>java.util.ArrayList (88 samples, 0.20%)</title><rect x="810.4" y="163.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="813.4" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (155 samples, 0.36%)</title><rect x="812.8" y="163.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="815.8" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (155 samples, 0.36%)</title><rect x="812.8" y="147.0" width="4.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="815.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.get (185 samples, 0.43%)</title><rect x="817.0" y="163.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="820.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.awaitDone (185 samples, 0.43%)</title><rect x="817.0" y="147.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="820.0" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask$WaitNode (185 samples, 0.43%)</title><rect x="817.0" y="131.0" width="5.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="820.0" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.ReplicasResponseComposer (139 samples, 0.32%)</title><rect x="822.0" y="163.0" width="3.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="825.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.passOn (603 samples, 1.40%)</title><rect x="825.8" y="163.0" width="16.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (281 samples, 0.65%)</title><rect x="825.8" y="147.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.8" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (281 samples, 0.65%)</title><rect x="825.8" y="131.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$65/632463387.get$Lambda (281 samples, 0.65%)</title><rect x="825.8" y="115.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.8" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$65 (281 samples, 0.65%)</title><rect x="825.8" y="99.0" width="7.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="828.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (322 samples, 0.75%)</title><rect x="833.5" y="147.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="836.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (317 samples, 0.73%)</title><rect x="833.5" y="131.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="836.5" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (317 samples, 0.73%)</title><rect x="833.5" y="115.0" width="8.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="836.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.processRequest (279 samples, 0.65%)</title><rect x="842.3" y="163.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="845.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (134 samples, 0.31%)</title><rect x="842.3" y="147.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="845.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (134 samples, 0.31%)</title><rect x="842.3" y="131.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="845.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$71/656783190.get$Lambda (134 samples, 0.31%)</title><rect x="842.3" y="115.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="845.3" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$71 (134 samples, 0.31%)</title><rect x="842.3" y="99.0" width="3.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="845.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (145 samples, 0.34%)</title><rect x="846.0" y="147.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (142 samples, 0.33%)</title><rect x="846.0" y="131.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="849.0" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (142 samples, 0.33%)</title><rect x="846.0" y="115.0" width="3.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="849.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.trySendResponse (789 samples, 1.83%)</title><rect x="849.9" y="163.0" width="21.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="852.9" y="174.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (789 samples, 1.83%)</title><rect x="849.9" y="147.0" width="21.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="852.9" y="158.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (789 samples, 1.83%)</title><rect x="849.9" y="131.0" width="21.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="852.9" y="142.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (583 samples, 1.35%)</title><rect x="849.9" y="115.0" width="16.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="852.9" y="126.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (583 samples, 1.35%)</title><rect x="849.9" y="99.0" width="16.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="852.9" y="110.0"></text>
</g>
<g>
<title>byte[] (583 samples, 1.35%)</title><rect x="849.9" y="83.0" width="16.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="852.9" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (206 samples, 0.48%)</title><rect x="865.9" y="115.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="868.9" y="126.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (206 samples, 0.48%)</title><rect x="865.9" y="99.0" width="5.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="868.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding.getResponsibleNodes (679 samples, 1.57%)</title><rect x="871.5" y="163.0" width="18.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.5" y="174.0"></text>
</g>
<g>
<title>java.util.ArrayList (99 samples, 0.23%)</title><rect x="871.5" y="147.0" width="2.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="874.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (238 samples, 0.55%)</title><rect x="874.2" y="147.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="877.2" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (238 samples, 0.55%)</title><rect x="874.2" y="131.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="877.2" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (238 samples, 0.55%)</title><rect x="874.2" y="115.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="877.2" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (238 samples, 0.55%)</title><rect x="874.2" y="99.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="877.2" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (238 samples, 0.55%)</title><rect x="874.2" y="83.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="877.2" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (238 samples, 0.55%)</title><rect x="874.2" y="67.0" width="6.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="877.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding.getResponsibleNodeIndex (342 samples, 0.79%)</title><rect x="880.7" y="147.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="883.7" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (342 samples, 0.79%)</title><rect x="880.7" y="131.0" width="9.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="883.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.trySendResponse (1,433 samples, 3.32%)</title><rect x="890.0" y="179.0" width="39.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="893.0" y="190.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,433 samples, 3.32%)</title><rect x="890.0" y="163.0" width="39.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="893.0" y="174.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,433 samples, 3.32%)</title><rect x="890.0" y="147.0" width="39.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="893.0" y="158.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,034 samples, 2.39%)</title><rect x="890.0" y="131.0" width="28.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="893.0" y="142.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,034 samples, 2.39%)</title><rect x="890.0" y="115.0" width="28.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="893.0" y="126.0">on..</text>
</g>
<g>
<title>byte[] (953 samples, 2.21%)</title><rect x="890.0" y="99.0" width="26.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="893.0" y="110.0">b..</text>
</g>
<g>
<title>byte[] (81 samples, 0.19%)</title><rect x="916.1" y="99.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="919.1" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (399 samples, 0.92%)</title><rect x="918.3" y="131.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="921.3" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (399 samples, 0.92%)</title><rect x="918.3" y="115.0" width="10.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="921.3" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (841 samples, 1.95%)</title><rect x="929.2" y="211.0" width="23.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="932.2" y="222.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (841 samples, 1.95%)</title><rect x="929.2" y="195.0" width="23.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="932.2" y="206.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (841 samples, 1.95%)</title><rect x="929.2" y="179.0" width="23.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="932.2" y="190.0">j..</text>
</g>
<g>
<title>java.lang.String (335 samples, 0.78%)</title><rect x="929.2" y="163.0" width="9.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="932.2" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (506 samples, 1.17%)</title><rect x="938.4" y="163.0" width="13.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="941.4" y="174.0"></text>
</g>
<g>
<title>byte[] (506 samples, 1.17%)</title><rect x="938.4" y="147.0" width="13.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="941.4" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3,908 samples, 9.05%)</title><rect x="952.2" y="243.0" width="106.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="955.2" y="254.0">one/nio/http/..</text>
</g>
<g>
<title>one.nio.http.Request (617 samples, 1.43%)</title><rect x="952.2" y="227.0" width="16.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="955.2" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,116 samples, 2.58%)</title><rect x="969.0" y="227.0" width="30.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="972.0" y="238.0">on..</text>
</g>
<g>
<title>java.lang.String[] (1,110 samples, 2.57%)</title><rect x="969.0" y="211.0" width="30.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="972.0" y="222.0">ja..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,175 samples, 5.04%)</title><rect x="999.5" y="227.0" width="59.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1002.5" y="238.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,175 samples, 5.04%)</title><rect x="999.5" y="211.0" width="59.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1002.5" y="222.0">one/ni..</text>
</g>
<g>
<title>char[] (1,132 samples, 2.62%)</title><rect x="999.5" y="195.0" width="30.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1002.5" y="206.0">ch..</text>
</g>
<g>
<title>java.lang.String (394 samples, 0.91%)</title><rect x="1030.6" y="195.0" width="10.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1033.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (643 samples, 1.49%)</title><rect x="1041.4" y="195.0" width="17.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1044.4" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (643 samples, 1.49%)</title><rect x="1041.4" y="179.0" width="17.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1044.4" y="190.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (643 samples, 1.49%)</title><rect x="1041.4" y="163.0" width="17.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1044.4" y="174.0"></text>
</g>
<g>
<title>byte[] (643 samples, 1.49%)</title><rect x="1041.4" y="147.0" width="17.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1044.4" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (415 samples, 0.96%)</title><rect x="1058.9" y="243.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1061.9" y="254.0"></text>
</g>
<g>
<title>byte[] (415 samples, 0.96%)</title><rect x="1058.9" y="227.0" width="11.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1061.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (738 samples, 1.71%)</title><rect x="1070.3" y="243.0" width="20.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1073.3" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (738 samples, 1.71%)</title><rect x="1070.3" y="227.0" width="20.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1073.3" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (738 samples, 1.71%)</title><rect x="1070.3" y="211.0" width="20.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1073.3" y="222.0"></text>
</g>
<g>
<title>java.lang.String (345 samples, 0.80%)</title><rect x="1070.3" y="195.0" width="9.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1073.3" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (393 samples, 0.91%)</title><rect x="1079.7" y="195.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1082.7" y="206.0"></text>
</g>
<g>
<title>byte[] (393 samples, 0.91%)</title><rect x="1079.7" y="179.0" width="10.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1082.7" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,644 samples, 8.44%)</title><rect x="1090.4" y="243.0" width="99.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1093.4" y="254.0">one/nio/util..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,644 samples, 8.44%)</title><rect x="1090.4" y="227.0" width="99.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.4" y="238.0">one/nio/util..</text>
</g>
<g>
<title>char[] (1,631 samples, 3.78%)</title><rect x="1090.4" y="211.0" width="44.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1093.4" y="222.0">char[]</text>
</g>
<g>
<title>java.lang.String (710 samples, 1.64%)</title><rect x="1135.0" y="211.0" width="19.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1138.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,303 samples, 3.02%)</title><rect x="1154.4" y="211.0" width="35.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1157.4" y="222.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,303 samples, 3.02%)</title><rect x="1154.4" y="195.0" width="35.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.4" y="206.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,303 samples, 3.02%)</title><rect x="1154.4" y="179.0" width="35.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1157.4" y="190.0">jav..</text>
</g>
<g>
<title>byte[] (1,303 samples, 3.02%)</title><rect x="1154.4" y="163.0" width="35.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1157.4" y="174.0">byt..</text>
</g>
</g>
</svg>
