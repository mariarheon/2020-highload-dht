<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="358" onload="init(evt)" viewBox="0 0 1200 358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="341"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="341"> </text>
<g id="frames">
<g>
<title>all (15,151 samples, 100.00%)</title><rect x="10.0" y="307.0" width="1180.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="13.0" y="318.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (9,130 samples, 60.26%)</title><rect x="10.0" y="291.0" width="711.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="302.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9,130 samples, 60.26%)</title><rect x="10.0" y="275.0" width="711.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="286.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9,130 samples, 60.26%)</title><rect x="10.0" y="259.0" width="711.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="270.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (299 samples, 1.97%)</title><rect x="10.0" y="243.0" width="23.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="254.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (299 samples, 1.97%)</title><rect x="10.0" y="227.0" width="23.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="238.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (295 samples, 1.95%)</title><rect x="10.0" y="211.0" width="23.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="222.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (295 samples, 1.95%)</title><rect x="10.0" y="195.0" width="23.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="206.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (295 samples, 1.95%)</title><rect x="10.0" y="179.0" width="23.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.0" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.03%)</title><rect x="33.0" y="211.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.03%)</title><rect x="33.0" y="195.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (4 samples, 0.03%)</title><rect x="33.0" y="179.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="36.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (4 samples, 0.03%)</title><rect x="33.0" y="163.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.0" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4 samples, 0.03%)</title><rect x="33.0" y="147.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="36.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$66/1991441571.run (5,822 samples, 38.43%)</title><rect x="33.3" y="243.0" width="453.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="36.3" y="254.0">ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$66/1..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$passOn$1 (5,822 samples, 38.43%)</title><rect x="33.3" y="227.0" width="453.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.3" y="238.0">ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$passO..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.passOnInternal (5,822 samples, 38.43%)</title><rect x="33.3" y="211.0" width="453.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="36.3" y="222.0">ru/mail/polis/service/mariarheon/AsyncServiceImpl.passOnInternal</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.trySendResponse (15 samples, 0.10%)</title><rect x="33.3" y="195.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="36.3" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 0.10%)</title><rect x="33.3" y="179.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (15 samples, 0.10%)</title><rect x="33.3" y="163.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="36.3" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.07%)</title><rect x="33.3" y="147.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="36.3" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (11 samples, 0.07%)</title><rect x="33.3" y="131.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.3" y="142.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.07%)</title><rect x="33.3" y="115.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="36.3" y="126.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.03%)</title><rect x="34.1" y="147.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.1" y="158.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (4 samples, 0.03%)</title><rect x="34.1" y="131.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="37.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding.passOn (5,807 samples, 38.33%)</title><rect x="34.5" y="195.0" width="452.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.5" y="206.0">ru/mail/polis/service/mariarheon/RendezvousSharding.passOn</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,807 samples, 38.33%)</title><rect x="34.5" y="179.0" width="452.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="37.5" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,807 samples, 38.33%)</title><rect x="34.5" y="163.0" width="452.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.5" y="174.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (7 samples, 0.05%)</title><rect x="34.5" y="147.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="37.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (5,549 samples, 36.62%)</title><rect x="35.0" y="147.0" width="432.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="38.0" y="158.0">one/nio/http/HttpClient$ResponseReader.&lt;init&gt;</text>
</g>
<g>
<title>byte[] (2,868 samples, 18.93%)</title><rect x="35.0" y="131.0" width="223.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="38.0" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (2,681 samples, 17.70%)</title><rect x="258.4" y="131.0" width="208.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="261.4" y="142.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (205 samples, 1.35%)</title><rect x="467.2" y="147.0" width="15.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (195 samples, 1.29%)</title><rect x="467.4" y="131.0" width="15.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="470.4" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (195 samples, 1.29%)</title><rect x="467.4" y="115.0" width="15.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.4" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (195 samples, 1.29%)</title><rect x="467.4" y="99.0" width="15.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="470.4" y="110.0"></text>
</g>
<g>
<title>char[] (178 samples, 1.17%)</title><rect x="467.4" y="83.0" width="13.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="470.4" y="94.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.06%)</title><rect x="481.3" y="83.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="484.3" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.05%)</title><rect x="482.0" y="83.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="485.0" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.05%)</title><rect x="482.0" y="67.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.0" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.05%)</title><rect x="482.0" y="51.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="485.0" y="62.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.05%)</title><rect x="482.0" y="35.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="485.0" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.04%)</title><rect x="482.7" y="131.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.04%)</title><rect x="482.7" y="115.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="485.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.04%)</title><rect x="482.7" y="99.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.7" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.03%)</title><rect x="482.7" y="83.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.7" y="94.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.03%)</title><rect x="482.7" y="67.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="485.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (39 samples, 0.26%)</title><rect x="483.1" y="147.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.1" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (39 samples, 0.26%)</title><rect x="483.1" y="131.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.1" y="142.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.26%)</title><rect x="483.1" y="115.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="486.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.04%)</title><rect x="486.2" y="147.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.04%)</title><rect x="486.2" y="131.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="489.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.04%)</title><rect x="486.2" y="115.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="489.2" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.03%)</title><rect x="486.3" y="99.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="489.3" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="486.3" y="83.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="489.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$75/1951744626.run (3,009 samples, 19.86%)</title><rect x="486.7" y="243.0" width="234.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.7" y="254.0">ru/mail/polis/service/mariarheo..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$handleEntityRequest$0 (3,009 samples, 19.86%)</title><rect x="486.7" y="227.0" width="234.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="489.7" y="238.0">ru/mail/polis/service/mariarheo..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (3,009 samples, 19.86%)</title><rect x="486.7" y="211.0" width="234.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="489.7" y="222.0">ru/mail/polis/service/mariarheo..</text>
</g>
<g>
<title>java/lang/String.getBytes (229 samples, 1.51%)</title><rect x="486.7" y="195.0" width="17.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (229 samples, 1.51%)</title><rect x="486.7" y="179.0" width="17.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="489.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (229 samples, 1.51%)</title><rect x="486.7" y="163.0" width="17.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.7" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (229 samples, 1.51%)</title><rect x="486.7" y="147.0" width="17.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="489.7" y="158.0"></text>
</g>
<g>
<title>byte[] (229 samples, 1.51%)</title><rect x="486.7" y="131.0" width="17.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="489.7" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.ZeroResponse (230 samples, 1.52%)</title><rect x="504.6" y="195.0" width="17.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="507.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (797 samples, 5.26%)</title><rect x="522.5" y="195.0" width="62.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="525.5" y="206.0">ru/mai..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (797 samples, 5.26%)</title><rect x="522.5" y="179.0" width="62.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="525.5" y="190.0">java/n..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (797 samples, 5.26%)</title><rect x="522.5" y="163.0" width="62.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.5" y="174.0">java/n..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (797 samples, 5.26%)</title><rect x="522.5" y="147.0" width="62.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="525.5" y="158.0">java.n..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (423 samples, 2.79%)</title><rect x="584.5" y="195.0" width="33.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="587.5" y="206.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (207 samples, 1.37%)</title><rect x="584.5" y="179.0" width="16.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.5" y="190.0"></text>
</g>
<g>
<title>byte[] (207 samples, 1.37%)</title><rect x="584.5" y="163.0" width="16.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="587.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (216 samples, 1.43%)</title><rect x="600.7" y="179.0" width="16.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (216 samples, 1.43%)</title><rect x="600.7" y="163.0" width="16.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="603.7" y="174.0"></text>
</g>
<g>
<title>byte[] (216 samples, 1.43%)</title><rect x="600.7" y="147.0" width="16.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="603.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.trySendResponse (1,077 samples, 7.11%)</title><rect x="617.5" y="195.0" width="83.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="620.5" y="206.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,077 samples, 7.11%)</title><rect x="617.5" y="179.0" width="83.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="620.5" y="190.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,077 samples, 7.11%)</title><rect x="617.5" y="163.0" width="83.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.5" y="174.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (714 samples, 4.71%)</title><rect x="617.5" y="147.0" width="55.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.5" y="158.0">one/n..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (714 samples, 4.71%)</title><rect x="617.5" y="131.0" width="55.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="620.5" y="142.0">one/n..</text>
</g>
<g>
<title>byte[] (714 samples, 4.71%)</title><rect x="617.5" y="115.0" width="55.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="620.5" y="126.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (363 samples, 2.40%)</title><rect x="673.1" y="147.0" width="28.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.1" y="158.0">on..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (363 samples, 2.40%)</title><rect x="673.1" y="131.0" width="28.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="676.1" y="142.0">on..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (253 samples, 1.67%)</title><rect x="701.4" y="195.0" width="19.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="704.4" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (253 samples, 1.67%)</title><rect x="701.4" y="179.0" width="19.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (253 samples, 1.67%)</title><rect x="701.4" y="163.0" width="19.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="704.4" y="174.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (6,021 samples, 39.74%)</title><rect x="721.1" y="291.0" width="468.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="724.1" y="302.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (177 samples, 1.17%)</title><rect x="721.1" y="275.0" width="13.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.1" y="286.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (177 samples, 1.17%)</title><rect x="721.1" y="259.0" width="13.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="724.1" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5,844 samples, 38.57%)</title><rect x="734.9" y="275.0" width="455.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="737.9" y="286.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,844 samples, 38.57%)</title><rect x="734.9" y="259.0" width="455.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="737.9" y="270.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,844 samples, 38.57%)</title><rect x="734.9" y="243.0" width="455.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="737.9" y="254.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,556 samples, 10.27%)</title><rect x="734.9" y="227.0" width="121.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="737.9" y="238.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,556 samples, 10.27%)</title><rect x="734.9" y="211.0" width="121.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.9" y="222.0">one/nio/http/Ht..</text>
</g>
<g>
<title>RequestHandler0_handleEntityRequest.handleRequest (1,121 samples, 7.40%)</title><rect x="734.9" y="195.0" width="87.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="737.9" y="206.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (346 samples, 2.28%)</title><rect x="734.9" y="179.0" width="26.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="737.9" y="190.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (346 samples, 2.28%)</title><rect x="734.9" y="163.0" width="26.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="737.9" y="174.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (346 samples, 2.28%)</title><rect x="734.9" y="147.0" width="26.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="737.9" y="158.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (346 samples, 2.28%)</title><rect x="734.9" y="131.0" width="26.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="737.9" y="142.0">j..</text>
</g>
<g>
<title>java.lang.String (182 samples, 1.20%)</title><rect x="734.9" y="115.0" width="14.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="737.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (164 samples, 1.08%)</title><rect x="749.0" y="115.0" width="12.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="752.0" y="126.0"></text>
</g>
<g>
<title>byte[] (164 samples, 1.08%)</title><rect x="749.0" y="99.0" width="12.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="752.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.handleEntityRequest (775 samples, 5.12%)</title><rect x="761.8" y="179.0" width="60.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="764.8" y="190.0">ru/mai..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (99 samples, 0.65%)</title><rect x="761.8" y="163.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="764.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (99 samples, 0.65%)</title><rect x="761.8" y="147.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="764.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$75/1951744626.get$Lambda (99 samples, 0.65%)</title><rect x="761.8" y="131.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="764.8" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$75 (99 samples, 0.65%)</title><rect x="761.8" y="115.0" width="7.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="764.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.passOn (123 samples, 0.81%)</title><rect x="769.7" y="163.0" width="9.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="772.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (119 samples, 0.79%)</title><rect x="769.7" y="147.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="772.7" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (119 samples, 0.79%)</title><rect x="769.7" y="131.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="772.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$66/1991441571.get$Lambda (119 samples, 0.79%)</title><rect x="769.7" y="115.0" width="9.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.7" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$66 (119 samples, 0.79%)</title><rect x="769.7" y="99.0" width="9.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="772.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.03%)</title><rect x="778.9" y="147.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="781.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.03%)</title><rect x="778.9" y="131.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.03%)</title><rect x="778.9" y="115.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.03%)</title><rect x="778.9" y="99.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (4 samples, 0.03%)</title><rect x="778.9" y="83.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="781.9" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4 samples, 0.03%)</title><rect x="778.9" y="67.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="781.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding.getResponsibleNode (551 samples, 3.64%)</title><rect x="779.2" y="163.0" width="43.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.2" y="174.0">ru/m..</text>
</g>
<g>
<title>java.lang.Object[] (551 samples, 3.64%)</title><rect x="779.2" y="147.0" width="43.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="782.2" y="158.0">java..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (435 samples, 2.87%)</title><rect x="822.2" y="195.0" width="33.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="825.2" y="206.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (435 samples, 2.87%)</title><rect x="822.2" y="179.0" width="33.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="825.2" y="190.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (435 samples, 2.87%)</title><rect x="822.2" y="163.0" width="33.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.2" y="174.0">ja..</text>
</g>
<g>
<title>java.lang.String (191 samples, 1.26%)</title><rect x="822.2" y="147.0" width="14.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="825.2" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (244 samples, 1.61%)</title><rect x="837.0" y="147.0" width="19.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="840.0" y="158.0"></text>
</g>
<g>
<title>byte[] (244 samples, 1.61%)</title><rect x="837.0" y="131.0" width="19.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="840.0" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,942 samples, 12.82%)</title><rect x="856.0" y="227.0" width="151.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="859.0" y="238.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one.nio.http.Request (312 samples, 2.06%)</title><rect x="856.0" y="211.0" width="24.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="859.0" y="222.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (581 samples, 3.83%)</title><rect x="880.3" y="211.0" width="45.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="883.3" y="222.0">one/..</text>
</g>
<g>
<title>java.lang.String[] (581 samples, 3.83%)</title><rect x="880.3" y="195.0" width="45.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="883.3" y="206.0">java..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,049 samples, 6.92%)</title><rect x="925.6" y="211.0" width="81.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="928.6" y="222.0">one/nio/u..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,049 samples, 6.92%)</title><rect x="925.6" y="195.0" width="81.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="928.6" y="206.0">one/nio/u..</text>
</g>
<g>
<title>char[] (556 samples, 3.67%)</title><rect x="925.6" y="179.0" width="43.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="928.6" y="190.0">char[]</text>
</g>
<g>
<title>java.lang.String (196 samples, 1.29%)</title><rect x="968.9" y="179.0" width="15.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="971.9" y="190.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (297 samples, 1.96%)</title><rect x="984.2" y="179.0" width="23.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="987.2" y="190.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (297 samples, 1.96%)</title><rect x="984.2" y="163.0" width="23.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="987.2" y="174.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (297 samples, 1.96%)</title><rect x="984.2" y="147.0" width="23.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="987.2" y="158.0">j..</text>
</g>
<g>
<title>byte[] (297 samples, 1.96%)</title><rect x="984.2" y="131.0" width="23.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="987.2" y="142.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (171 samples, 1.13%)</title><rect x="1007.3" y="227.0" width="13.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1010.3" y="238.0"></text>
</g>
<g>
<title>byte[] (171 samples, 1.13%)</title><rect x="1007.3" y="211.0" width="13.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1010.3" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (356 samples, 2.35%)</title><rect x="1020.6" y="227.0" width="27.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1023.6" y="238.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (356 samples, 2.35%)</title><rect x="1020.6" y="211.0" width="27.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1023.6" y="222.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (356 samples, 2.35%)</title><rect x="1020.6" y="195.0" width="27.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1023.6" y="206.0">j..</text>
</g>
<g>
<title>java.lang.String (184 samples, 1.21%)</title><rect x="1020.6" y="179.0" width="14.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1023.6" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (172 samples, 1.14%)</title><rect x="1034.9" y="179.0" width="13.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1037.9" y="190.0"></text>
</g>
<g>
<title>byte[] (172 samples, 1.14%)</title><rect x="1034.9" y="163.0" width="13.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1037.9" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,819 samples, 12.01%)</title><rect x="1048.3" y="227.0" width="141.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.3" y="238.0">one/nio/util/Utf8...</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,819 samples, 12.01%)</title><rect x="1048.3" y="211.0" width="141.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1051.3" y="222.0">one/nio/util/Utf8...</text>
</g>
<g>
<title>char[] (862 samples, 5.69%)</title><rect x="1048.3" y="195.0" width="67.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1051.3" y="206.0">char[]</text>
</g>
<g>
<title>java.lang.String (378 samples, 2.49%)</title><rect x="1115.5" y="195.0" width="29.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1118.5" y="206.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (579 samples, 3.82%)</title><rect x="1144.9" y="195.0" width="45.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1147.9" y="206.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (579 samples, 3.82%)</title><rect x="1144.9" y="179.0" width="45.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1147.9" y="190.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (579 samples, 3.82%)</title><rect x="1144.9" y="163.0" width="45.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1147.9" y="174.0">java..</text>
</g>
<g>
<title>byte[] (579 samples, 3.82%)</title><rect x="1144.9" y="147.0" width="45.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1147.9" y="158.0">byte[]</text>
</g>
</g>
</svg>
