<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="901"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="901"> </text>
<g id="frames">
<g>
<title>all (32,444 samples, 100.00%)</title><rect x="10.0" y="867.0" width="1180.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="13.0" y="878.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (22,174 samples, 68.35%)</title><rect x="10.0" y="851.0" width="806.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="862.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (22,174 samples, 68.35%)</title><rect x="10.0" y="835.0" width="806.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (22,174 samples, 68.35%)</title><rect x="10.0" y="819.0" width="806.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="830.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (14,044 samples, 43.29%)</title><rect x="10.0" y="803.0" width="510.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9,102 samples, 28.05%)</title><rect x="10.0" y="787.0" width="331.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/CompletableFuture.postCo..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (12 samples, 0.04%)</title><rect x="10.0" y="771.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$168/198651204.accept (12 samples, 0.04%)</title><rect x="10.0" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$sendToReplicas$0 (12 samples, 0.04%)</title><rect x="10.0" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.trySendResponse (12 samples, 0.04%)</title><rect x="10.0" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (12 samples, 0.04%)</title><rect x="10.0" y="707.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (12 samples, 0.04%)</title><rect x="10.0" y="691.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.03%)</title><rect x="10.0" y="675.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (7 samples, 0.02%)</title><rect x="10.1" y="659.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (9,090 samples, 28.02%)</title><rect x="10.4" y="771.0" width="330.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.4" y="782.0">java/util/concurrent/CompletableFuture$UniCom..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (38 samples, 0.12%)</title><rect x="10.4" y="755.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="13.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$135/69462153.apply (9,052 samples, 27.90%)</title><rect x="11.8" y="755.0" width="329.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.8" y="766.0">jdk/internal/net/http/MultiExchange$$Lambda$1..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (9,052 samples, 27.90%)</title><rect x="11.8" y="739.0" width="329.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.8" y="750.0">jdk/internal/net/http/MultiExchange.lambda$re..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (9,052 samples, 27.90%)</title><rect x="11.8" y="723.0" width="329.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.8" y="734.0">jdk/internal/net/http/MultiExchange.responseA..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (62 samples, 0.19%)</title><rect x="11.8" y="707.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="14.8" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (62 samples, 0.19%)</title><rect x="11.8" y="691.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$369/1508220952.get$Lambda (33 samples, 0.10%)</title><rect x="11.8" y="675.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.8" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$369 (33 samples, 0.10%)</title><rect x="11.8" y="659.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="14.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$372/484910400.get$Lambda (29 samples, 0.09%)</title><rect x="13.0" y="675.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.0" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$372 (29 samples, 0.09%)</title><rect x="13.0" y="659.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="16.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (89 samples, 0.27%)</title><rect x="14.1" y="707.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (89 samples, 0.27%)</title><rect x="14.1" y="691.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.1" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (53 samples, 0.16%)</title><rect x="14.1" y="675.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="17.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (36 samples, 0.11%)</title><rect x="16.0" y="675.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (36 samples, 0.11%)</title><rect x="16.0" y="659.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.0" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (36 samples, 0.11%)</title><rect x="16.0" y="643.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="19.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (186 samples, 0.57%)</title><rect x="17.3" y="707.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (186 samples, 0.57%)</title><rect x="17.3" y="691.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.3" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (106 samples, 0.33%)</title><rect x="17.3" y="675.0" width="3.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="20.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (80 samples, 0.25%)</title><rect x="21.2" y="675.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (80 samples, 0.25%)</title><rect x="21.2" y="659.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.2" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (80 samples, 0.25%)</title><rect x="21.2" y="643.0" width="2.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="24.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (8,446 samples, 26.03%)</title><rect x="24.1" y="707.0" width="307.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="27.1" y="718.0">jdk/internal/net/http/Exchange.responseAs..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (8,446 samples, 26.03%)</title><rect x="24.1" y="691.0" width="307.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.1" y="702.0">jdk/internal/net/http/Exchange.responseAs..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (8,446 samples, 26.03%)</title><rect x="24.1" y="675.0" width="307.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.1" y="686.0">jdk/internal/net/http/Exchange.responseAs..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (103 samples, 0.32%)</title><rect x="24.1" y="659.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (103 samples, 0.32%)</title><rect x="24.1" y="643.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="27.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$161/2060274688.get$Lambda (25 samples, 0.08%)</title><rect x="24.1" y="627.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.1" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$161 (25 samples, 0.08%)</title><rect x="24.1" y="611.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="27.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$164/1669924159.get$Lambda (36 samples, 0.11%)</title><rect x="25.0" y="627.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.0" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$164 (36 samples, 0.11%)</title><rect x="25.0" y="611.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="28.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$254/927503844.get$Lambda (42 samples, 0.13%)</title><rect x="26.3" y="627.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.3" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$254 (42 samples, 0.13%)</title><rect x="26.3" y="611.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="29.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (5,310 samples, 16.37%)</title><rect x="27.8" y="659.0" width="193.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.8" y="670.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (5,310 samples, 16.37%)</title><rect x="27.8" y="643.0" width="193.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.8" y="654.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5,266 samples, 16.23%)</title><rect x="27.8" y="627.0" width="191.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.8" y="638.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$254/927503844.apply (5,266 samples, 16.23%)</title><rect x="27.8" y="611.0" width="191.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.8" y="622.0">jdk/internal/net/http/Exc..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (5,266 samples, 16.23%)</title><rect x="27.8" y="595.0" width="191.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.8" y="606.0">jdk/internal/net/http/Exc..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (5,266 samples, 16.23%)</title><rect x="27.8" y="579.0" width="191.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.8" y="590.0">jdk/internal/net/http/Exc..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$164/1669924159.apply (5,266 samples, 16.23%)</title><rect x="27.8" y="563.0" width="191.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="30.8" y="574.0">jdk/internal/net/http/Exc..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (5,266 samples, 16.23%)</title><rect x="27.8" y="547.0" width="191.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.8" y="558.0">jdk/internal/net/http/Exc..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (59 samples, 0.18%)</title><rect x="27.8" y="531.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="30.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.18%)</title><rect x="27.8" y="515.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="30.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$364/22668537.get$Lambda (59 samples, 0.18%)</title><rect x="27.8" y="499.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$364 (59 samples, 0.18%)</title><rect x="27.8" y="483.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="30.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (177 samples, 0.55%)</title><rect x="30.0" y="531.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (177 samples, 0.55%)</title><rect x="30.0" y="515.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="33.0" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (47 samples, 0.14%)</title><rect x="30.0" y="499.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="33.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (87 samples, 0.27%)</title><rect x="31.7" y="499.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$364/22668537.apply (87 samples, 0.27%)</title><rect x="31.7" y="483.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="34.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (87 samples, 0.27%)</title><rect x="31.7" y="467.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (87 samples, 0.27%)</title><rect x="31.7" y="451.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$161/2060274688.apply (87 samples, 0.27%)</title><rect x="31.7" y="435.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="34.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (87 samples, 0.27%)</title><rect x="31.7" y="419.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (16 samples, 0.05%)</title><rect x="31.7" y="403.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (16 samples, 0.05%)</title><rect x="31.7" y="387.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="34.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.02%)</title><rect x="32.0" y="371.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.02%)</title><rect x="32.0" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="35.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.02%)</title><rect x="32.0" y="339.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="35.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (7 samples, 0.02%)</title><rect x="32.3" y="403.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (64 samples, 0.20%)</title><rect x="32.5" y="403.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="35.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (27 samples, 0.08%)</title><rect x="32.5" y="387.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="35.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (27 samples, 0.08%)</title><rect x="32.5" y="371.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (27 samples, 0.08%)</title><rect x="32.5" y="355.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="35.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$409/1599422888.accept (16 samples, 0.05%)</title><rect x="32.7" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (16 samples, 0.05%)</title><rect x="32.7" y="323.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="35.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (16 samples, 0.05%)</title><rect x="32.7" y="307.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="35.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (16 samples, 0.05%)</title><rect x="32.7" y="291.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="35.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (16 samples, 0.05%)</title><rect x="32.7" y="275.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="35.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (16 samples, 0.05%)</title><rect x="32.7" y="259.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="35.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (16 samples, 0.05%)</title><rect x="32.7" y="243.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (16 samples, 0.05%)</title><rect x="32.7" y="227.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="35.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (16 samples, 0.05%)</title><rect x="32.7" y="211.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (16 samples, 0.05%)</title><rect x="32.7" y="195.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (10 samples, 0.03%)</title><rect x="32.9" y="179.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="35.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (10 samples, 0.03%)</title><rect x="32.9" y="163.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="35.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (9 samples, 0.03%)</title><rect x="32.9" y="147.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="35.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (8 samples, 0.02%)</title><rect x="33.0" y="131.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.02%)</title><rect x="33.0" y="115.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="36.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.02%)</title><rect x="33.0" y="99.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="36.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8 samples, 0.02%)</title><rect x="33.0" y="83.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8 samples, 0.02%)</title><rect x="33.0" y="67.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="36.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8 samples, 0.02%)</title><rect x="33.0" y="51.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.0" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (8 samples, 0.02%)</title><rect x="33.0" y="35.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="36.0" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (37 samples, 0.11%)</title><rect x="33.5" y="387.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="36.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (31 samples, 0.10%)</title><rect x="33.7" y="371.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (11 samples, 0.03%)</title><rect x="33.8" y="355.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="36.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (17 samples, 0.05%)</title><rect x="34.2" y="355.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.04%)</title><rect x="34.4" y="339.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.04%)</title><rect x="34.4" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="37.4" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.04%)</title><rect x="34.4" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.4" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.04%)</title><rect x="34.4" y="291.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.04%)</title><rect x="34.4" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.04%)</title><rect x="34.4" y="259.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="37.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.13%)</title><rect x="34.8" y="499.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.13%)</title><rect x="34.8" y="483.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (43 samples, 0.13%)</title><rect x="34.8" y="467.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="37.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (83 samples, 0.26%)</title><rect x="36.4" y="531.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (83 samples, 0.26%)</title><rect x="36.4" y="515.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.4" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (54 samples, 0.17%)</title><rect x="36.4" y="499.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="39.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.08%)</title><rect x="38.4" y="499.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.08%)</title><rect x="38.4" y="483.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="41.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.08%)</title><rect x="38.4" y="467.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="41.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (4,947 samples, 15.25%)</title><rect x="39.4" y="531.0" width="179.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.4" y="542.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (47 samples, 0.14%)</title><rect x="39.4" y="515.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.14%)</title><rect x="39.4" y="499.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$359/49379817.get$Lambda (18 samples, 0.06%)</title><rect x="39.4" y="483.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$359 (18 samples, 0.06%)</title><rect x="39.4" y="467.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="42.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$362/262015866.get$Lambda (29 samples, 0.09%)</title><rect x="40.1" y="483.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$362 (29 samples, 0.09%)</title><rect x="40.1" y="467.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="43.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4,241 samples, 13.07%)</title><rect x="41.1" y="515.0" width="154.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="44.1" y="526.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4,241 samples, 13.07%)</title><rect x="41.1" y="499.0" width="154.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="44.1" y="510.0">java/util/concurrent..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (49 samples, 0.15%)</title><rect x="41.1" y="483.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="44.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$359/49379817.apply (4,099 samples, 12.63%)</title><rect x="42.9" y="483.0" width="149.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.9" y="494.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (4,099 samples, 12.63%)</title><rect x="42.9" y="467.0" width="149.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.9" y="478.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.05%)</title><rect x="42.9" y="451.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.05%)</title><rect x="42.9" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$381/2096716423.get$Lambda (17 samples, 0.05%)</title><rect x="42.9" y="419.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$381 (17 samples, 0.05%)</title><rect x="42.9" y="403.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="45.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (88 samples, 0.27%)</title><rect x="43.5" y="451.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="46.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (88 samples, 0.27%)</title><rect x="43.5" y="435.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (46 samples, 0.14%)</title><rect x="43.5" y="419.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="46.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.13%)</title><rect x="45.2" y="419.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.13%)</title><rect x="45.2" y="403.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.13%)</title><rect x="45.2" y="387.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="48.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (45 samples, 0.14%)</title><rect x="46.7" y="451.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="49.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (98 samples, 0.30%)</title><rect x="48.4" y="451.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (30 samples, 0.09%)</title><rect x="48.4" y="435.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="51.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (68 samples, 0.21%)</title><rect x="49.5" y="435.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="52.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (41 samples, 0.13%)</title><rect x="49.5" y="419.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (41 samples, 0.13%)</title><rect x="49.5" y="403.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (41 samples, 0.13%)</title><rect x="49.5" y="387.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (41 samples, 0.13%)</title><rect x="49.5" y="371.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (41 samples, 0.13%)</title><rect x="49.5" y="355.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="52.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (27 samples, 0.08%)</title><rect x="51.0" y="419.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (27 samples, 0.08%)</title><rect x="51.0" y="403.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (27 samples, 0.08%)</title><rect x="51.0" y="387.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (27 samples, 0.08%)</title><rect x="51.0" y="371.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (27 samples, 0.08%)</title><rect x="51.0" y="355.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="54.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (27 samples, 0.08%)</title><rect x="51.0" y="339.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (8 samples, 0.02%)</title><rect x="51.0" y="323.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="54.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (19 samples, 0.06%)</title><rect x="51.2" y="323.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="54.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (19 samples, 0.06%)</title><rect x="51.2" y="307.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (19 samples, 0.06%)</title><rect x="51.2" y="291.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (19 samples, 0.06%)</title><rect x="51.2" y="275.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (19 samples, 0.06%)</title><rect x="51.2" y="259.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.2" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (19 samples, 0.06%)</title><rect x="51.2" y="243.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.2" y="254.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (7 samples, 0.02%)</title><rect x="51.2" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.2" y="238.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (7 samples, 0.02%)</title><rect x="51.2" y="211.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="54.2" y="222.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (12 samples, 0.04%)</title><rect x="51.5" y="227.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="54.5" y="238.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (12 samples, 0.04%)</title><rect x="51.5" y="211.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="54.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (87 samples, 0.27%)</title><rect x="51.9" y="451.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (87 samples, 0.27%)</title><rect x="51.9" y="435.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (17 samples, 0.05%)</title><rect x="51.9" y="419.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (17 samples, 0.05%)</title><rect x="51.9" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (17 samples, 0.05%)</title><rect x="51.9" y="387.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (17 samples, 0.05%)</title><rect x="51.9" y="371.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="54.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (70 samples, 0.22%)</title><rect x="52.6" y="419.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (70 samples, 0.22%)</title><rect x="52.6" y="403.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (47 samples, 0.14%)</title><rect x="52.6" y="387.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="55.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (23 samples, 0.07%)</title><rect x="54.3" y="387.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (23 samples, 0.07%)</title><rect x="54.3" y="371.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="57.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (3,764 samples, 11.60%)</title><rect x="55.1" y="451.0" width="136.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.1" y="462.0">jdk/internal/net/..</text>
</g>
<g>
<title>java.lang.StringBuilder (27 samples, 0.08%)</title><rect x="55.1" y="435.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="58.1" y="446.0"></text>
</g>
<g>
<title>java/lang/Long.toString (62 samples, 0.19%)</title><rect x="56.1" y="435.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="59.1" y="446.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.10%)</title><rect x="56.1" y="419.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="59.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.09%)</title><rect x="57.3" y="419.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="60.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (359 samples, 1.11%)</title><rect x="58.3" y="435.0" width="13.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (359 samples, 1.11%)</title><rect x="58.3" y="419.0" width="13.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (359 samples, 1.11%)</title><rect x="58.3" y="403.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="61.3" y="414.0"></text>
</g>
<g>
<title>byte[] (277 samples, 0.85%)</title><rect x="58.3" y="387.0" width="10.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="61.3" y="398.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.25%)</title><rect x="68.4" y="387.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="71.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (97 samples, 0.30%)</title><rect x="71.4" y="435.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.4" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (97 samples, 0.30%)</title><rect x="71.4" y="419.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="74.4" y="430.0"></text>
</g>
<g>
<title>byte[] (96 samples, 0.30%)</title><rect x="71.4" y="403.0" width="3.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="74.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (390 samples, 1.20%)</title><rect x="74.9" y="435.0" width="14.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (390 samples, 1.20%)</title><rect x="74.9" y="419.0" width="14.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.11%)</title><rect x="74.9" y="403.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="77.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (355 samples, 1.09%)</title><rect x="76.2" y="403.0" width="12.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.2" y="414.0"></text>
</g>
<g>
<title>byte[] (306 samples, 0.94%)</title><rect x="76.2" y="387.0" width="11.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="79.2" y="398.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.15%)</title><rect x="87.3" y="387.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="90.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (72 samples, 0.22%)</title><rect x="89.1" y="435.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.1" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (72 samples, 0.22%)</title><rect x="89.1" y="419.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.1" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (72 samples, 0.22%)</title><rect x="89.1" y="403.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="92.1" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (32 samples, 0.10%)</title><rect x="91.7" y="435.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.7" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (32 samples, 0.10%)</title><rect x="91.7" y="419.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="94.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (2,372 samples, 7.31%)</title><rect x="92.9" y="435.0" width="86.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="95.9" y="446.0">jdk/intern..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (28 samples, 0.09%)</title><rect x="92.9" y="419.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.09%)</title><rect x="92.9" y="403.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="95.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.09%)</title><rect x="92.9" y="387.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="95.9" y="398.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$386/1190358281.get$Lambda (28 samples, 0.09%)</title><rect x="92.9" y="371.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="95.9" y="382.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$386 (28 samples, 0.09%)</title><rect x="92.9" y="355.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="95.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1,093 samples, 3.37%)</title><rect x="93.9" y="419.0" width="39.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.9" y="430.0">jdk..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (596 samples, 1.84%)</title><rect x="93.9" y="403.0" width="21.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.9" y="414.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (596 samples, 1.84%)</title><rect x="93.9" y="387.0" width="21.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.9" y="398.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (596 samples, 1.84%)</title><rect x="93.9" y="371.0" width="21.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.9" y="382.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (596 samples, 1.84%)</title><rect x="93.9" y="355.0" width="21.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.9" y="366.0">j..</text>
</g>
<g>
<title>byte[] (528 samples, 1.63%)</title><rect x="93.9" y="339.0" width="19.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="96.9" y="350.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.21%)</title><rect x="113.1" y="339.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="116.1" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (81 samples, 0.25%)</title><rect x="115.6" y="403.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.6" y="414.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 (29 samples, 0.09%)</title><rect x="115.6" y="387.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="118.6" y="398.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (52 samples, 0.16%)</title><rect x="116.6" y="387.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.6" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (52 samples, 0.16%)</title><rect x="116.6" y="371.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.6" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (52 samples, 0.16%)</title><rect x="116.6" y="355.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="119.6" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (39 samples, 0.12%)</title><rect x="118.5" y="403.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.5" y="414.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (9 samples, 0.03%)</title><rect x="118.5" y="387.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="121.5" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (30 samples, 0.09%)</title><rect x="118.9" y="387.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.9" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (30 samples, 0.09%)</title><rect x="118.9" y="371.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="121.9" y="382.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN$1.iterator (40 samples, 0.12%)</title><rect x="119.9" y="403.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.9" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$MapN$MapNIterator (40 samples, 0.12%)</title><rect x="119.9" y="387.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="122.9" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN.entrySet (33 samples, 0.10%)</title><rect x="121.4" y="403.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.4" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$MapN$1 (33 samples, 0.10%)</title><rect x="121.4" y="387.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="124.4" y="398.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$386/1190358281.test (304 samples, 0.94%)</title><rect x="122.6" y="403.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.6" y="414.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (304 samples, 0.94%)</title><rect x="122.6" y="387.0" width="11.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$38/90205195.test (304 samples, 0.94%)</title><rect x="122.6" y="371.0" width="11.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (304 samples, 0.94%)</title><rect x="122.6" y="355.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.6" y="366.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$27/24606376.test (304 samples, 0.94%)</title><rect x="122.6" y="339.0" width="11.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.6" y="350.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (304 samples, 0.94%)</title><rect x="122.6" y="323.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$26/688766789.test (304 samples, 0.94%)</title><rect x="122.6" y="307.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (304 samples, 0.94%)</title><rect x="122.6" y="291.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.6" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (304 samples, 0.94%)</title><rect x="122.6" y="275.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="125.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (304 samples, 0.94%)</title><rect x="122.6" y="259.0" width="11.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="125.6" y="270.0"></text>
</g>
<g>
<title>java.lang.String (131 samples, 0.40%)</title><rect x="122.6" y="243.0" width="4.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="125.6" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (173 samples, 0.53%)</title><rect x="127.4" y="243.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.4" y="254.0"></text>
</g>
<g>
<title>byte[] (173 samples, 0.53%)</title><rect x="127.4" y="227.0" width="6.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="130.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (1,251 samples, 3.86%)</title><rect x="133.7" y="419.0" width="45.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.7" y="430.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,251 samples, 3.86%)</title><rect x="133.7" y="403.0" width="45.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.7" y="414.0">java..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,251 samples, 3.86%)</title><rect x="133.7" y="387.0" width="45.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.7" y="398.0">java..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (17 samples, 0.05%)</title><rect x="133.7" y="371.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="136.7" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (21 samples, 0.06%)</title><rect x="134.3" y="371.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="137.3" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap (68 samples, 0.21%)</title><rect x="135.0" y="371.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="138.0" y="382.0"></text>
</g>
<g>
<title>java.util.TreeSet (25 samples, 0.08%)</title><rect x="137.5" y="371.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="140.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.13%)</title><rect x="138.4" y="371.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="141.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.13%)</title><rect x="138.4" y="355.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="141.4" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/1260444598.get$Lambda (41 samples, 0.13%)</title><rect x="138.4" y="339.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.4" y="350.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$113 (41 samples, 0.13%)</title><rect x="138.4" y="323.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="141.4" y="334.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (39 samples, 0.12%)</title><rect x="139.9" y="371.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.9" y="382.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (39 samples, 0.12%)</title><rect x="139.9" y="355.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="142.9" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (956 samples, 2.95%)</title><rect x="141.3" y="371.0" width="34.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.3" y="382.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/1260444598.accept (956 samples, 2.95%)</title><rect x="141.3" y="355.0" width="34.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="144.3" y="366.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (956 samples, 2.95%)</title><rect x="141.3" y="339.0" width="34.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="144.3" y="350.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (187 samples, 0.58%)</title><rect x="141.3" y="323.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="144.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (187 samples, 0.58%)</title><rect x="141.3" y="307.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.3" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$394/1894267442.get$Lambda (187 samples, 0.58%)</title><rect x="141.3" y="291.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="144.3" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$394 (187 samples, 0.58%)</title><rect x="141.3" y="275.0" width="6.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="144.3" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (61 samples, 0.19%)</title><rect x="148.1" y="323.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.1" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$394/1894267442.accept (61 samples, 0.19%)</title><rect x="148.1" y="307.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.1" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (61 samples, 0.19%)</title><rect x="148.1" y="291.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (61 samples, 0.19%)</title><rect x="148.1" y="275.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.1" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (61 samples, 0.19%)</title><rect x="148.1" y="259.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.1" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (61 samples, 0.19%)</title><rect x="148.1" y="243.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.1" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (61 samples, 0.19%)</title><rect x="148.1" y="227.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="151.1" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (61 samples, 0.19%)</title><rect x="148.1" y="211.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.1" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (61 samples, 0.19%)</title><rect x="148.1" y="195.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="151.1" y="206.0"></text>
</g>
<g>
<title>java/util/List.copyOf (378 samples, 1.17%)</title><rect x="150.4" y="323.0" width="13.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="153.4" y="334.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (378 samples, 1.17%)</title><rect x="150.4" y="307.0" width="13.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.4" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (175 samples, 0.54%)</title><rect x="150.4" y="291.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (175 samples, 0.54%)</title><rect x="150.4" y="275.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (175 samples, 0.54%)</title><rect x="150.4" y="259.0" width="6.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="153.4" y="270.0"></text>
</g>
<g>
<title>java/util/List.of (203 samples, 0.63%)</title><rect x="156.7" y="291.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.7" y="302.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (203 samples, 0.63%)</title><rect x="156.7" y="275.0" width="7.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="159.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (330 samples, 1.02%)</title><rect x="164.1" y="323.0" width="12.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="167.1" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (330 samples, 1.02%)</title><rect x="164.1" y="307.0" width="12.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="167.1" y="318.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (84 samples, 0.26%)</title><rect x="176.1" y="371.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="179.1" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap (84 samples, 0.26%)</title><rect x="176.1" y="355.0" width="3.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="179.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (91 samples, 0.28%)</title><rect x="179.2" y="435.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="182.2" y="446.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (34 samples, 0.10%)</title><rect x="179.2" y="419.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="182.2" y="430.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.10%)</title><rect x="179.2" y="403.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="182.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.18%)</title><rect x="180.4" y="419.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (57 samples, 0.18%)</title><rect x="180.4" y="403.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="183.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/726181440.invoke (57 samples, 0.18%)</title><rect x="180.4" y="387.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="183.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.18%)</title><rect x="180.4" y="371.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="183.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (22 samples, 0.07%)</title><rect x="180.4" y="355.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.07%)</title><rect x="180.4" y="339.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="183.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (35 samples, 0.11%)</title><rect x="181.2" y="355.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="184.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (35 samples, 0.11%)</title><rect x="181.2" y="339.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="184.2" y="350.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.11%)</title><rect x="181.2" y="323.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="184.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (62 samples, 0.19%)</title><rect x="182.5" y="435.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (62 samples, 0.19%)</title><rect x="182.5" y="419.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="185.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (62 samples, 0.19%)</title><rect x="182.5" y="403.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="185.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (62 samples, 0.19%)</title><rect x="182.5" y="387.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/726181440.invoke (62 samples, 0.19%)</title><rect x="182.5" y="371.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="185.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (62 samples, 0.19%)</title><rect x="182.5" y="355.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (62 samples, 0.19%)</title><rect x="182.5" y="339.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="185.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (62 samples, 0.19%)</title><rect x="182.5" y="323.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="185.5" y="334.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.19%)</title><rect x="182.5" y="307.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="185.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (200 samples, 0.62%)</title><rect x="184.7" y="435.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.7" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (59 samples, 0.18%)</title><rect x="184.7" y="419.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="187.7" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (58 samples, 0.18%)</title><rect x="186.9" y="419.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="189.9" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (58 samples, 0.18%)</title><rect x="186.9" y="403.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="189.9" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (83 samples, 0.26%)</title><rect x="189.0" y="419.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.0" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (83 samples, 0.26%)</title><rect x="189.0" y="403.0" width="3.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="192.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (93 samples, 0.29%)</title><rect x="192.0" y="483.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (93 samples, 0.29%)</title><rect x="192.0" y="467.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="195.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (93 samples, 0.29%)</title><rect x="192.0" y="451.0" width="3.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="195.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (117 samples, 0.36%)</title><rect x="195.4" y="515.0" width="4.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="198.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (7 samples, 0.02%)</title><rect x="199.6" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="202.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (37 samples, 0.11%)</title><rect x="199.9" y="515.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="202.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (498 samples, 1.53%)</title><rect x="201.2" y="515.0" width="18.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="204.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.14%)</title><rect x="201.2" y="499.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="204.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.14%)</title><rect x="201.2" y="483.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$264/884570996.get$Lambda (23 samples, 0.07%)</title><rect x="201.2" y="467.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$264 (23 samples, 0.07%)</title><rect x="201.2" y="451.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="204.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$265/1675404960.get$Lambda (21 samples, 0.06%)</title><rect x="202.1" y="467.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="205.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$265 (21 samples, 0.06%)</title><rect x="202.1" y="451.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="205.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (59 samples, 0.18%)</title><rect x="202.8" y="499.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="205.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (44 samples, 0.14%)</title><rect x="205.0" y="499.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="208.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (44 samples, 0.14%)</title><rect x="206.6" y="499.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="209.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (139 samples, 0.43%)</title><rect x="208.2" y="499.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="211.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (139 samples, 0.43%)</title><rect x="208.2" y="483.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (139 samples, 0.43%)</title><rect x="208.2" y="467.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="211.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (139 samples, 0.43%)</title><rect x="208.2" y="451.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (139 samples, 0.43%)</title><rect x="208.2" y="435.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (139 samples, 0.43%)</title><rect x="208.2" y="419.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.run (139 samples, 0.43%)</title><rect x="208.2" y="403.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (139 samples, 0.43%)</title><rect x="208.2" y="387.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (139 samples, 0.43%)</title><rect x="208.2" y="371.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="211.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.15%)</title><rect x="208.2" y="355.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="211.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.15%)</title><rect x="208.2" y="339.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$276/1663239432.get$Lambda (13 samples, 0.04%)</title><rect x="208.2" y="323.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$276 (13 samples, 0.04%)</title><rect x="208.2" y="307.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="211.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$345/806691753.get$Lambda (36 samples, 0.11%)</title><rect x="208.7" y="323.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="211.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$345 (36 samples, 0.11%)</title><rect x="208.7" y="307.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="211.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (49 samples, 0.15%)</title><rect x="210.0" y="355.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="213.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (41 samples, 0.13%)</title><rect x="211.7" y="355.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="214.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (41 samples, 0.13%)</title><rect x="211.7" y="339.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (15 samples, 0.05%)</title><rect x="211.7" y="323.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="214.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (26 samples, 0.08%)</title><rect x="212.3" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="215.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (26 samples, 0.08%)</title><rect x="212.3" y="307.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="215.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (138 samples, 0.43%)</title><rect x="213.2" y="499.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="216.2" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (32 samples, 0.10%)</title><rect x="213.2" y="483.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="216.2" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap (60 samples, 0.18%)</title><rect x="214.4" y="483.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="217.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (46 samples, 0.14%)</title><rect x="216.6" y="483.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.6" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (46 samples, 0.14%)</title><rect x="216.6" y="467.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="219.6" y="478.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.14%)</title><rect x="216.6" y="451.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="219.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (30 samples, 0.09%)</title><rect x="218.3" y="499.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.09%)</title><rect x="218.3" y="483.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="221.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.14%)</title><rect x="219.3" y="627.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="222.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.14%)</title><rect x="219.3" y="611.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.14%)</title><rect x="219.3" y="595.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="222.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (77 samples, 0.24%)</title><rect x="220.9" y="659.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="223.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (77 samples, 0.24%)</title><rect x="220.9" y="643.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="223.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (51 samples, 0.16%)</title><rect x="220.9" y="627.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="223.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.08%)</title><rect x="222.8" y="627.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="225.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.08%)</title><rect x="222.8" y="611.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="225.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.08%)</title><rect x="222.8" y="595.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="225.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (2,956 samples, 9.11%)</title><rect x="223.7" y="659.0" width="107.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="226.7" y="670.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.17%)</title><rect x="223.7" y="643.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="226.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.17%)</title><rect x="223.7" y="627.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="226.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$248/76633096.get$Lambda (28 samples, 0.09%)</title><rect x="223.7" y="611.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="226.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$248 (28 samples, 0.09%)</title><rect x="223.7" y="595.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="226.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$251/863438674.get$Lambda (27 samples, 0.08%)</title><rect x="224.8" y="611.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="227.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$251 (27 samples, 0.08%)</title><rect x="224.8" y="595.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="227.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (75 samples, 0.23%)</title><rect x="225.7" y="643.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="228.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (75 samples, 0.23%)</title><rect x="225.7" y="627.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="228.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$251/863438674.apply (42 samples, 0.13%)</title><rect x="225.7" y="611.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="228.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (42 samples, 0.13%)</title><rect x="225.7" y="595.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="228.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (42 samples, 0.13%)</title><rect x="225.7" y="579.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="228.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.13%)</title><rect x="225.7" y="563.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="228.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.10%)</title><rect x="227.3" y="611.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="230.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.10%)</title><rect x="227.3" y="595.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.10%)</title><rect x="227.3" y="579.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="230.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (41 samples, 0.13%)</title><rect x="228.5" y="643.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="231.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (41 samples, 0.13%)</title><rect x="228.5" y="627.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="231.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.13%)</title><rect x="228.5" y="611.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.13%)</title><rect x="228.5" y="595.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="231.5" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.13%)</title><rect x="228.5" y="579.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="231.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (2,785 samples, 8.58%)</title><rect x="230.0" y="643.0" width="101.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="233.0" y="654.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.10%)</title><rect x="230.0" y="627.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="233.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.10%)</title><rect x="230.0" y="611.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="233.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$171/1166121287.get$Lambda (31 samples, 0.10%)</title><rect x="230.0" y="595.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$171 (31 samples, 0.10%)</title><rect x="230.0" y="579.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="233.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,604 samples, 8.03%)</title><rect x="231.1" y="627.0" width="94.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="234.1" y="638.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,604 samples, 8.03%)</title><rect x="231.1" y="611.0" width="94.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="234.1" y="622.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,560 samples, 7.89%)</title><rect x="231.1" y="595.0" width="93.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="234.1" y="606.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$171/1166121287.apply (2,560 samples, 7.89%)</title><rect x="231.1" y="579.0" width="93.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="234.1" y="590.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (2,560 samples, 7.89%)</title><rect x="231.1" y="563.0" width="93.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.1" y="574.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (2,560 samples, 7.89%)</title><rect x="231.1" y="547.0" width="93.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="234.1" y="558.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.06%)</title><rect x="231.1" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="234.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.06%)</title><rect x="231.1" y="515.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="234.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$239/1117950874.get$Lambda (18 samples, 0.06%)</title><rect x="231.1" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="234.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$239 (18 samples, 0.06%)</title><rect x="231.1" y="483.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="234.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1,074 samples, 3.31%)</title><rect x="231.8" y="531.0" width="39.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="234.8" y="542.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1,074 samples, 3.31%)</title><rect x="231.8" y="515.0" width="39.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="234.8" y="526.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (1,074 samples, 3.31%)</title><rect x="231.8" y="499.0" width="39.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="234.8" y="510.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$239/1117950874.apply (1,035 samples, 3.19%)</title><rect x="231.8" y="483.0" width="37.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.8" y="494.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (1,035 samples, 3.19%)</title><rect x="231.8" y="467.0" width="37.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="234.8" y="478.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (1,035 samples, 3.19%)</title><rect x="231.8" y="451.0" width="37.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="234.8" y="462.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (1,035 samples, 3.19%)</title><rect x="231.8" y="435.0" width="37.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.8" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (654 samples, 2.02%)</title><rect x="231.8" y="419.0" width="23.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="234.8" y="430.0">j..</text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (186 samples, 0.57%)</title><rect x="231.8" y="403.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="234.8" y="414.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.08%)</title><rect x="231.8" y="387.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="234.8" y="398.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (85 samples, 0.26%)</title><rect x="232.7" y="387.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.7" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (85 samples, 0.26%)</title><rect x="232.7" y="371.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="235.7" y="382.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.26%)</title><rect x="232.7" y="355.0" width="3.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="235.7" y="366.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (74 samples, 0.23%)</title><rect x="235.8" y="387.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.8" y="398.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.22%)</title><rect x="235.8" y="371.0" width="2.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="238.8" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (24 samples, 0.07%)</title><rect x="238.5" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="241.5" y="414.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (24 samples, 0.07%)</title><rect x="238.5" y="387.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="241.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (327 samples, 1.01%)</title><rect x="239.4" y="403.0" width="11.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (39 samples, 0.12%)</title><rect x="239.4" y="387.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="242.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (234 samples, 0.72%)</title><rect x="240.8" y="387.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="243.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (234 samples, 0.72%)</title><rect x="240.8" y="371.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="243.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2007331442.linkToTargetMethod (158 samples, 0.49%)</title><rect x="240.8" y="355.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="243.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (158 samples, 0.49%)</title><rect x="240.8" y="339.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="243.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$22/1176735295.get$Lambda (158 samples, 0.49%)</title><rect x="240.8" y="323.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="243.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$22 (158 samples, 0.49%)</title><rect x="240.8" y="307.0" width="5.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="243.8" y="318.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (76 samples, 0.23%)</title><rect x="246.6" y="355.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$22/1176735295.run (76 samples, 0.23%)</title><rect x="246.6" y="339.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="249.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (76 samples, 0.23%)</title><rect x="246.6" y="323.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.6" y="334.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (76 samples, 0.23%)</title><rect x="246.6" y="307.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="249.6" y="318.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (76 samples, 0.23%)</title><rect x="246.6" y="291.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.6" y="302.0"></text>
</g>
<g>
<title>java.lang.Integer (76 samples, 0.23%)</title><rect x="246.6" y="275.0" width="2.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="249.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (54 samples, 0.17%)</title><rect x="249.3" y="387.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="252.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (54 samples, 0.17%)</title><rect x="249.3" y="371.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.3" y="382.0"></text>
</g>
<g>
<title>int[] (54 samples, 0.17%)</title><rect x="249.3" y="355.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="252.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (117 samples, 0.36%)</title><rect x="251.3" y="403.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="254.3" y="414.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.19%)</title><rect x="251.3" y="387.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="254.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (54 samples, 0.17%)</title><rect x="253.6" y="387.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (54 samples, 0.17%)</title><rect x="253.6" y="371.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="256.6" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (54 samples, 0.17%)</title><rect x="253.6" y="355.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="256.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (381 samples, 1.17%)</title><rect x="255.5" y="419.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.5" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (90 samples, 0.28%)</title><rect x="255.5" y="403.0" width="3.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="258.5" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (107 samples, 0.33%)</title><rect x="258.8" y="403.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="261.8" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (107 samples, 0.33%)</title><rect x="258.8" y="387.0" width="3.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="261.8" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (184 samples, 0.57%)</title><rect x="262.7" y="403.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="265.7" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (184 samples, 0.57%)</title><rect x="262.7" y="387.0" width="6.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="265.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.12%)</title><rect x="269.4" y="483.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="272.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.12%)</title><rect x="269.4" y="467.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="272.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (39 samples, 0.12%)</title><rect x="269.4" y="451.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="272.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,468 samples, 4.52%)</title><rect x="270.8" y="531.0" width="53.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.8" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (117 samples, 0.36%)</title><rect x="270.8" y="515.0" width="4.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="273.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (11 samples, 0.03%)</title><rect x="275.1" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="278.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,290 samples, 3.98%)</title><rect x="275.5" y="515.0" width="46.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="278.5" y="526.0">jdk/..</text>
</g>
<g>
<title>java.lang.Object (19 samples, 0.06%)</title><rect x="275.5" y="499.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="278.5" y="510.0"></text>
</g>
<g>
<title>java.util.LinkedList (31 samples, 0.10%)</title><rect x="276.2" y="499.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="279.2" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (30 samples, 0.09%)</title><rect x="277.3" y="499.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="280.3" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (60 samples, 0.18%)</title><rect x="278.4" y="499.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.4" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (60 samples, 0.18%)</title><rect x="278.4" y="483.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="281.4" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (60 samples, 0.18%)</title><rect x="278.4" y="467.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="281.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (33 samples, 0.10%)</title><rect x="280.6" y="499.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="283.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (33 samples, 0.10%)</title><rect x="280.6" y="483.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="283.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (88 samples, 0.27%)</title><rect x="281.8" y="499.0" width="3.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="284.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (67 samples, 0.21%)</title><rect x="285.0" y="499.0" width="2.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="288.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (74 samples, 0.23%)</title><rect x="287.5" y="499.0" width="2.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="290.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (96 samples, 0.30%)</title><rect x="290.2" y="499.0" width="3.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="293.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (398 samples, 1.23%)</title><rect x="293.7" y="499.0" width="14.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.7" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (33 samples, 0.10%)</title><rect x="293.7" y="483.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="296.7" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (16 samples, 0.05%)</title><rect x="294.9" y="483.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="297.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (37 samples, 0.11%)</title><rect x="295.5" y="483.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="298.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (19 samples, 0.06%)</title><rect x="296.8" y="483.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="299.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.11%)</title><rect x="297.5" y="483.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="300.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.11%)</title><rect x="297.5" y="467.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="300.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.get$Lambda (35 samples, 0.11%)</title><rect x="297.5" y="451.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$235 (35 samples, 0.11%)</title><rect x="297.5" y="435.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="300.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (23 samples, 0.07%)</title><rect x="298.8" y="483.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (23 samples, 0.07%)</title><rect x="298.8" y="467.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="301.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (32 samples, 0.10%)</title><rect x="299.6" y="483.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="302.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.14%)</title><rect x="300.8" y="483.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="303.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (157 samples, 0.48%)</title><rect x="302.5" y="483.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (32 samples, 0.10%)</title><rect x="302.5" y="467.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="305.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (48 samples, 0.15%)</title><rect x="303.6" y="467.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="306.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (21 samples, 0.06%)</title><rect x="305.4" y="467.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.4" y="478.0"></text>
</g>
<g>
<title>java.lang.Object (21 samples, 0.06%)</title><rect x="305.4" y="451.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="308.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (56 samples, 0.17%)</title><rect x="306.1" y="467.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="309.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (19 samples, 0.06%)</title><rect x="306.1" y="451.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="309.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (20 samples, 0.06%)</title><rect x="306.8" y="451.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="309.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (17 samples, 0.05%)</title><rect x="307.5" y="451.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="310.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (245 samples, 0.76%)</title><rect x="308.2" y="499.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="311.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (21 samples, 0.06%)</title><rect x="308.2" y="483.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="311.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (26 samples, 0.08%)</title><rect x="308.9" y="483.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="311.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (17 samples, 0.05%)</title><rect x="309.9" y="483.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="312.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (33 samples, 0.10%)</title><rect x="310.5" y="483.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="313.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (33 samples, 0.10%)</title><rect x="310.5" y="467.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="313.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (148 samples, 0.46%)</title><rect x="311.7" y="483.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="314.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (36 samples, 0.11%)</title><rect x="311.7" y="467.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="314.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (24 samples, 0.07%)</title><rect x="313.0" y="467.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="316.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (20 samples, 0.06%)</title><rect x="313.9" y="467.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.9" y="478.0"></text>
</g>
<g>
<title>java.lang.Object (20 samples, 0.06%)</title><rect x="313.9" y="451.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="316.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (68 samples, 0.21%)</title><rect x="314.6" y="467.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="317.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (24 samples, 0.07%)</title><rect x="314.6" y="451.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="317.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (23 samples, 0.07%)</title><rect x="315.5" y="451.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="318.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (21 samples, 0.06%)</title><rect x="316.3" y="451.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="319.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (23 samples, 0.07%)</title><rect x="317.1" y="499.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="320.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (23 samples, 0.07%)</title><rect x="317.1" y="483.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="320.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (23 samples, 0.07%)</title><rect x="317.1" y="467.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="320.1" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.get (23 samples, 0.07%)</title><rect x="317.1" y="451.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="320.1" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (23 samples, 0.07%)</title><rect x="317.1" y="435.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="320.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (23 samples, 0.07%)</title><rect x="317.1" y="419.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.1" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (23 samples, 0.07%)</title><rect x="317.1" y="403.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="320.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (123 samples, 0.38%)</title><rect x="317.9" y="499.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="320.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2007331442.linkToTargetMethod (39 samples, 0.12%)</title><rect x="317.9" y="483.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="320.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.12%)</title><rect x="317.9" y="467.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="320.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$177/1022977529.get$Lambda (39 samples, 0.12%)</title><rect x="317.9" y="451.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="320.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$177 (39 samples, 0.12%)</title><rect x="317.9" y="435.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="320.9" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (84 samples, 0.26%)</title><rect x="319.3" y="483.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="322.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$177/1022977529.run (84 samples, 0.26%)</title><rect x="319.3" y="467.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="322.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (84 samples, 0.26%)</title><rect x="319.3" y="451.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="322.3" y="462.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (23 samples, 0.07%)</title><rect x="319.3" y="435.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="322.3" y="446.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (61 samples, 0.19%)</title><rect x="320.2" y="435.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="323.2" y="446.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (36 samples, 0.11%)</title><rect x="320.2" y="419.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="323.2" y="430.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (25 samples, 0.08%)</title><rect x="321.5" y="419.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.5" y="430.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (25 samples, 0.08%)</title><rect x="321.5" y="403.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="324.5" y="414.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (25 samples, 0.08%)</title><rect x="321.5" y="387.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="324.5" y="398.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (25 samples, 0.08%)</title><rect x="321.5" y="371.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.5" y="382.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (25 samples, 0.08%)</title><rect x="321.5" y="355.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="324.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (50 samples, 0.15%)</title><rect x="322.4" y="515.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="325.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.15%)</title><rect x="322.4" y="499.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="325.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.14%)</title><rect x="324.2" y="595.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="327.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.14%)</title><rect x="324.2" y="579.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="327.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.14%)</title><rect x="324.2" y="563.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="327.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (41 samples, 0.13%)</title><rect x="325.8" y="627.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="328.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (41 samples, 0.13%)</title><rect x="325.8" y="611.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.13%)</title><rect x="325.8" y="595.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="328.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.13%)</title><rect x="325.8" y="579.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="328.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.13%)</title><rect x="325.8" y="563.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="328.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (109 samples, 0.34%)</title><rect x="327.3" y="627.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="330.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (51 samples, 0.16%)</title><rect x="327.3" y="611.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="330.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (51 samples, 0.16%)</title><rect x="327.3" y="595.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="330.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1026084144.linkToTargetMethod (51 samples, 0.16%)</title><rect x="327.3" y="579.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="330.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1999192409.invoke (51 samples, 0.16%)</title><rect x="327.3" y="563.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="330.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1032641801.invoke (51 samples, 0.16%)</title><rect x="327.3" y="547.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="330.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.16%)</title><rect x="327.3" y="531.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (51 samples, 0.16%)</title><rect x="327.3" y="515.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="330.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (51 samples, 0.16%)</title><rect x="327.3" y="499.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="330.3" y="510.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.16%)</title><rect x="327.3" y="483.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="330.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (58 samples, 0.18%)</title><rect x="329.1" y="611.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="332.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (58 samples, 0.18%)</title><rect x="329.1" y="595.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="332.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (49 samples, 0.15%)</title><rect x="331.3" y="707.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="334.3" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (49 samples, 0.15%)</title><rect x="331.3" y="691.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="334.3" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (49 samples, 0.15%)</title><rect x="331.3" y="675.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.3" y="686.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (49 samples, 0.15%)</title><rect x="331.3" y="659.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="334.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (220 samples, 0.68%)</title><rect x="333.0" y="707.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="336.0" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (150 samples, 0.46%)</title><rect x="333.0" y="691.0" width="5.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="336.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (70 samples, 0.22%)</title><rect x="338.5" y="691.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="341.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (70 samples, 0.22%)</title><rect x="338.5" y="675.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="341.5" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (38 samples, 0.12%)</title><rect x="338.5" y="659.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="341.5" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (38 samples, 0.12%)</title><rect x="338.5" y="643.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="341.5" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (38 samples, 0.12%)</title><rect x="338.5" y="627.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="341.5" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (38 samples, 0.12%)</title><rect x="338.5" y="611.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.5" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (38 samples, 0.12%)</title><rect x="338.5" y="595.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="341.5" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (32 samples, 0.10%)</title><rect x="339.9" y="659.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="342.9" y="670.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (32 samples, 0.10%)</title><rect x="339.9" y="643.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="342.9" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.plus (32 samples, 0.10%)</title><rect x="339.9" y="627.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="342.9" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (32 samples, 0.10%)</title><rect x="339.9" y="611.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.9" y="622.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (32 samples, 0.10%)</title><rect x="339.9" y="595.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="342.9" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (32 samples, 0.10%)</title><rect x="339.9" y="579.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="342.9" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (32 samples, 0.10%)</title><rect x="339.9" y="563.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="342.9" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.create (32 samples, 0.10%)</title><rect x="339.9" y="547.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="342.9" y="558.0"></text>
</g>
<g>
<title>java.time.Instant (32 samples, 0.10%)</title><rect x="339.9" y="531.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="342.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$160/1885655202.get (4,942 samples, 15.23%)</title><rect x="341.0" y="787.0" width="179.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="344.0" y="798.0">ru/mail/polis/service/m..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$processRequest$2 (4,942 samples, 15.23%)</title><rect x="341.0" y="771.0" width="179.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="344.0" y="782.0">ru/mail/polis/service/m..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (4,942 samples, 15.23%)</title><rect x="341.0" y="755.0" width="179.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.0" y="766.0">ru/mail/polis/service/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (599 samples, 1.85%)</title><rect x="341.0" y="739.0" width="21.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="344.0" y="750.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (599 samples, 1.85%)</title><rect x="341.0" y="723.0" width="21.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="344.0" y="734.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (599 samples, 1.85%)</title><rect x="341.0" y="707.0" width="21.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="344.0" y="718.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (599 samples, 1.85%)</title><rect x="341.0" y="691.0" width="21.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="344.0" y="702.0">j..</text>
</g>
<g>
<title>byte[] (599 samples, 1.85%)</title><rect x="341.0" y="675.0" width="21.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="344.0" y="686.0">b..</text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.ZeroResponse (432 samples, 1.33%)</title><rect x="362.8" y="739.0" width="15.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="365.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (2,052 samples, 6.32%)</title><rect x="378.5" y="739.0" width="74.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="381.5" y="750.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,052 samples, 6.32%)</title><rect x="378.5" y="723.0" width="74.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="381.5" y="734.0">java/nio..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,052 samples, 6.32%)</title><rect x="378.5" y="707.0" width="74.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="381.5" y="718.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,052 samples, 6.32%)</title><rect x="378.5" y="691.0" width="74.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="381.5" y="702.0">java.nio..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (1,213 samples, 3.74%)</title><rect x="453.2" y="739.0" width="44.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="456.2" y="750.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (568 samples, 1.75%)</title><rect x="453.2" y="723.0" width="20.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="456.2" y="734.0"></text>
</g>
<g>
<title>byte[] (568 samples, 1.75%)</title><rect x="453.2" y="707.0" width="20.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="456.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (645 samples, 1.99%)</title><rect x="473.8" y="723.0" width="23.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="476.8" y="734.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (645 samples, 1.99%)</title><rect x="473.8" y="707.0" width="23.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.8" y="718.0">r..</text>
</g>
<g>
<title>byte[] (645 samples, 1.99%)</title><rect x="473.8" y="691.0" width="23.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="476.8" y="702.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (646 samples, 1.99%)</title><rect x="497.3" y="739.0" width="23.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.3" y="750.0">r..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (646 samples, 1.99%)</title><rect x="497.3" y="723.0" width="23.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="500.3" y="734.0">o..</text>
</g>
<g>
<title>java.lang.String[] (646 samples, 1.99%)</title><rect x="497.3" y="707.0" width="23.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="500.3" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (979 samples, 3.02%)</title><rect x="520.8" y="803.0" width="35.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="523.8" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (738 samples, 2.27%)</title><rect x="520.8" y="787.0" width="26.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="523.8" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (736 samples, 2.27%)</title><rect x="520.8" y="771.0" width="26.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="523.8" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (736 samples, 2.27%)</title><rect x="520.8" y="755.0" width="26.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.8" y="766.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (736 samples, 2.27%)</title><rect x="520.8" y="739.0" width="26.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="523.8" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (241 samples, 0.74%)</title><rect x="547.6" y="787.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (241 samples, 0.74%)</title><rect x="547.6" y="771.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (241 samples, 0.74%)</title><rect x="547.6" y="755.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="550.6" y="766.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (241 samples, 0.74%)</title><rect x="547.6" y="739.0" width="8.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="550.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$399/1148631027.run (1,712 samples, 5.28%)</title><rect x="556.4" y="803.0" width="62.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="559.4" y="814.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,712 samples, 5.28%)</title><rect x="556.4" y="787.0" width="62.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="559.4" y="798.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,712 samples, 5.28%)</title><rect x="556.4" y="771.0" width="62.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.4" y="782.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,712 samples, 5.28%)</title><rect x="556.4" y="755.0" width="62.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.4" y="766.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,712 samples, 5.28%)</title><rect x="556.4" y="739.0" width="62.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="559.4" y="750.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,712 samples, 5.28%)</title><rect x="556.4" y="723.0" width="62.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.4" y="734.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,712 samples, 5.28%)</title><rect x="556.4" y="707.0" width="62.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.4" y="718.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,712 samples, 5.28%)</title><rect x="556.4" y="691.0" width="62.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="559.4" y="702.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,712 samples, 5.28%)</title><rect x="556.4" y="675.0" width="62.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.4" y="686.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,712 samples, 5.28%)</title><rect x="556.4" y="659.0" width="62.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="559.4" y="670.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,712 samples, 5.28%)</title><rect x="556.4" y="643.0" width="62.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.4" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1,572 samples, 4.85%)</title><rect x="556.4" y="627.0" width="57.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.4" y="638.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (125 samples, 0.39%)</title><rect x="556.4" y="611.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="559.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (125 samples, 0.39%)</title><rect x="556.4" y="595.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="559.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$401/671449820.get$Lambda (82 samples, 0.25%)</title><rect x="556.4" y="579.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="559.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$401 (82 samples, 0.25%)</title><rect x="556.4" y="563.0" width="3.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="559.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$416/783689259.get$Lambda (19 samples, 0.06%)</title><rect x="559.4" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$416 (19 samples, 0.06%)</title><rect x="559.4" y="563.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="562.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$419/1903244934.get$Lambda (24 samples, 0.07%)</title><rect x="560.1" y="579.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="563.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$419 (24 samples, 0.07%)</title><rect x="560.1" y="563.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="563.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1,447 samples, 4.46%)</title><rect x="560.9" y="611.0" width="52.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.9" y="622.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (67 samples, 0.21%)</title><rect x="560.9" y="595.0" width="2.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="563.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,380 samples, 4.25%)</title><rect x="563.4" y="595.0" width="50.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="566.4" y="606.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,380 samples, 4.25%)</title><rect x="563.4" y="579.0" width="50.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="566.4" y="590.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,380 samples, 4.25%)</title><rect x="563.4" y="563.0" width="50.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="566.4" y="574.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (210 samples, 0.65%)</title><rect x="563.4" y="547.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="566.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (84 samples, 0.26%)</title><rect x="563.4" y="531.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="566.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$411/2132316026.apply (122 samples, 0.38%)</title><rect x="566.4" y="531.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="569.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (122 samples, 0.38%)</title><rect x="566.4" y="515.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="569.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (122 samples, 0.38%)</title><rect x="566.4" y="499.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="569.4" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (26 samples, 0.08%)</title><rect x="566.4" y="483.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="569.4" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (26 samples, 0.08%)</title><rect x="566.4" y="467.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="569.4" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (26 samples, 0.08%)</title><rect x="566.4" y="451.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="569.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (96 samples, 0.30%)</title><rect x="567.4" y="483.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.05%)</title><rect x="567.4" y="467.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.05%)</title><rect x="567.4" y="451.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$420/992012201.get$Lambda (17 samples, 0.05%)</title><rect x="567.4" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$420 (17 samples, 0.05%)</title><rect x="567.4" y="419.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="570.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (79 samples, 0.24%)</title><rect x="568.0" y="467.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="571.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (79 samples, 0.24%)</title><rect x="568.0" y="451.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="571.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (42 samples, 0.13%)</title><rect x="568.0" y="435.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="571.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.11%)</title><rect x="569.5" y="435.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.11%)</title><rect x="569.5" y="419.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (37 samples, 0.11%)</title><rect x="569.5" y="403.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="572.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,170 samples, 3.61%)</title><rect x="571.0" y="547.0" width="42.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.0" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,170 samples, 3.61%)</title><rect x="571.0" y="531.0" width="42.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.0" y="542.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$364/22668537.apply (1,170 samples, 3.61%)</title><rect x="571.0" y="515.0" width="42.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="574.0" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1,170 samples, 3.61%)</title><rect x="571.0" y="499.0" width="42.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.0" y="510.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,170 samples, 3.61%)</title><rect x="571.0" y="483.0" width="42.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.0" y="494.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$161/2060274688.apply (1,170 samples, 3.61%)</title><rect x="571.0" y="467.0" width="42.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="574.0" y="478.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1,170 samples, 3.61%)</title><rect x="571.0" y="451.0" width="42.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.0" y="462.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.08%)</title><rect x="571.0" y="435.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.08%)</title><rect x="571.0" y="419.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="574.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$411/2132316026.get$Lambda (26 samples, 0.08%)</title><rect x="571.0" y="403.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$411 (26 samples, 0.08%)</title><rect x="571.0" y="387.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="574.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (93 samples, 0.29%)</title><rect x="572.0" y="435.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="575.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (93 samples, 0.29%)</title><rect x="572.0" y="419.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (62 samples, 0.19%)</title><rect x="572.0" y="403.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="575.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.10%)</title><rect x="574.2" y="403.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.10%)</title><rect x="574.2" y="387.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="577.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (31 samples, 0.10%)</title><rect x="574.2" y="371.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="577.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (109 samples, 0.34%)</title><rect x="575.3" y="435.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="578.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.08%)</title><rect x="575.3" y="419.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.08%)</title><rect x="575.3" y="403.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="578.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$414/1488698859.get$Lambda (25 samples, 0.08%)</title><rect x="575.3" y="387.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="578.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$414 (25 samples, 0.08%)</title><rect x="575.3" y="371.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="578.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (84 samples, 0.26%)</title><rect x="576.3" y="419.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="579.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (84 samples, 0.26%)</title><rect x="576.3" y="403.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="579.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (43 samples, 0.13%)</title><rect x="576.3" y="387.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="579.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.13%)</title><rect x="577.8" y="387.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="580.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.13%)</title><rect x="577.8" y="371.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="580.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.13%)</title><rect x="577.8" y="355.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="580.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (942 samples, 2.90%)</title><rect x="579.3" y="435.0" width="34.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.3" y="446.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.09%)</title><rect x="579.3" y="419.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.09%)</title><rect x="579.3" y="403.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="582.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$405/244253741.get$Lambda (16 samples, 0.05%)</title><rect x="579.3" y="387.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="582.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$405 (16 samples, 0.05%)</title><rect x="579.3" y="371.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="582.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$409/1599422888.get$Lambda (13 samples, 0.04%)</title><rect x="579.9" y="387.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="582.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$409 (13 samples, 0.04%)</title><rect x="579.9" y="371.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="582.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (354 samples, 1.09%)</title><rect x="580.4" y="419.0" width="12.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="583.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (354 samples, 1.09%)</title><rect x="580.4" y="403.0" width="12.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (354 samples, 1.09%)</title><rect x="580.4" y="387.0" width="12.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="583.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$405/244253741.accept (127 samples, 0.39%)</title><rect x="580.4" y="371.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="583.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (127 samples, 0.39%)</title><rect x="580.4" y="355.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="583.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (127 samples, 0.39%)</title><rect x="580.4" y="339.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="583.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.11%)</title><rect x="580.4" y="323.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="583.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.11%)</title><rect x="580.4" y="307.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$407/900877439.get$Lambda (37 samples, 0.11%)</title><rect x="580.4" y="291.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="583.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$407 (37 samples, 0.11%)</title><rect x="580.4" y="275.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="583.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (90 samples, 0.28%)</title><rect x="581.7" y="323.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (90 samples, 0.28%)</title><rect x="581.7" y="307.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="584.7" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (47 samples, 0.14%)</title><rect x="581.7" y="291.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="584.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.13%)</title><rect x="583.4" y="291.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="586.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.13%)</title><rect x="583.4" y="275.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="586.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (43 samples, 0.13%)</title><rect x="583.4" y="259.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="586.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$409/1599422888.accept (152 samples, 0.47%)</title><rect x="585.0" y="371.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="588.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (152 samples, 0.47%)</title><rect x="585.0" y="355.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (152 samples, 0.47%)</title><rect x="585.0" y="339.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (152 samples, 0.47%)</title><rect x="585.0" y="323.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (152 samples, 0.47%)</title><rect x="585.0" y="307.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="588.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (152 samples, 0.47%)</title><rect x="585.0" y="291.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="588.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (152 samples, 0.47%)</title><rect x="585.0" y="275.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="588.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (152 samples, 0.47%)</title><rect x="585.0" y="259.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="588.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (152 samples, 0.47%)</title><rect x="585.0" y="243.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="588.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (152 samples, 0.47%)</title><rect x="585.0" y="227.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (58 samples, 0.18%)</title><rect x="585.0" y="211.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (58 samples, 0.18%)</title><rect x="585.0" y="195.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="588.0" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (26 samples, 0.08%)</title><rect x="585.0" y="179.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="588.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (32 samples, 0.10%)</title><rect x="585.9" y="179.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (32 samples, 0.10%)</title><rect x="585.9" y="163.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="588.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (32 samples, 0.10%)</title><rect x="585.9" y="147.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (32 samples, 0.10%)</title><rect x="585.9" y="131.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="588.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (32 samples, 0.10%)</title><rect x="585.9" y="115.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="588.9" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (32 samples, 0.10%)</title><rect x="585.9" y="99.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="588.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (94 samples, 0.29%)</title><rect x="587.1" y="211.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="590.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (94 samples, 0.29%)</title><rect x="587.1" y="195.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="590.1" y="206.0"></text>
</g>
<g>
<title>java/util/List.of (32 samples, 0.10%)</title><rect x="587.1" y="179.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="590.1" y="190.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (32 samples, 0.10%)</title><rect x="587.1" y="163.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="590.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (62 samples, 0.19%)</title><rect x="588.3" y="179.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="591.3" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (31 samples, 0.10%)</title><rect x="588.3" y="163.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="591.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (31 samples, 0.10%)</title><rect x="589.4" y="163.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="592.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (31 samples, 0.10%)</title><rect x="589.4" y="147.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (31 samples, 0.10%)</title><rect x="589.4" y="131.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (31 samples, 0.10%)</title><rect x="589.4" y="115.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="592.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (31 samples, 0.10%)</title><rect x="589.4" y="99.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.4" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (31 samples, 0.10%)</title><rect x="589.4" y="83.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="592.4" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (75 samples, 0.23%)</title><rect x="590.5" y="371.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="593.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (75 samples, 0.23%)</title><rect x="590.5" y="355.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (75 samples, 0.23%)</title><rect x="590.5" y="339.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="593.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (559 samples, 1.72%)</title><rect x="593.2" y="419.0" width="20.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="596.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (53 samples, 0.16%)</title><rect x="593.2" y="403.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="596.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (40 samples, 0.12%)</title><rect x="595.2" y="403.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="598.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (40 samples, 0.12%)</title><rect x="595.2" y="387.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="598.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.12%)</title><rect x="595.2" y="371.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="598.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (466 samples, 1.44%)</title><rect x="596.6" y="403.0" width="17.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="599.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (23 samples, 0.07%)</title><rect x="596.6" y="387.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="599.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (278 samples, 0.86%)</title><rect x="597.5" y="387.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="600.5" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (45 samples, 0.14%)</title><rect x="597.5" y="371.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.5" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (45 samples, 0.14%)</title><rect x="597.5" y="355.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="600.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (54 samples, 0.17%)</title><rect x="599.1" y="371.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="602.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (179 samples, 0.55%)</title><rect x="601.1" y="371.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="604.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (19 samples, 0.06%)</title><rect x="601.1" y="355.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="604.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (22 samples, 0.07%)</title><rect x="601.7" y="355.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="604.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (38 samples, 0.12%)</title><rect x="602.5" y="355.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="605.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (32 samples, 0.10%)</title><rect x="603.9" y="355.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (32 samples, 0.10%)</title><rect x="603.9" y="339.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="606.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (68 samples, 0.21%)</title><rect x="605.1" y="355.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (21 samples, 0.06%)</title><rect x="605.1" y="339.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="608.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (26 samples, 0.08%)</title><rect x="605.9" y="339.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="608.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (21 samples, 0.06%)</title><rect x="606.8" y="339.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="609.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (165 samples, 0.51%)</title><rect x="607.6" y="387.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="610.6" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (27 samples, 0.08%)</title><rect x="607.6" y="371.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="610.6" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (78 samples, 0.24%)</title><rect x="608.5" y="371.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.5" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (53 samples, 0.16%)</title><rect x="608.5" y="355.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="611.5" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (25 samples, 0.08%)</title><rect x="610.5" y="355.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="613.5" y="366.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.08%)</title><rect x="610.5" y="339.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="613.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (60 samples, 0.18%)</title><rect x="611.4" y="371.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="614.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (60 samples, 0.18%)</title><rect x="611.4" y="355.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="614.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (60 samples, 0.18%)</title><rect x="611.4" y="339.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="614.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (60 samples, 0.18%)</title><rect x="611.4" y="323.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (60 samples, 0.18%)</title><rect x="611.4" y="307.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="614.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (60 samples, 0.18%)</title><rect x="611.4" y="291.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="614.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (140 samples, 0.43%)</title><rect x="613.6" y="627.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (140 samples, 0.43%)</title><rect x="613.6" y="611.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="616.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (140 samples, 0.43%)</title><rect x="613.6" y="595.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="616.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (140 samples, 0.43%)</title><rect x="613.6" y="579.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="616.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (140 samples, 0.43%)</title><rect x="613.6" y="563.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="616.6" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (140 samples, 0.43%)</title><rect x="613.6" y="547.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="616.6" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (61 samples, 0.19%)</title><rect x="613.6" y="531.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="616.6" y="542.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (61 samples, 0.19%)</title><rect x="613.6" y="515.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="616.6" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (79 samples, 0.24%)</title><rect x="615.8" y="531.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.8" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (79 samples, 0.24%)</title><rect x="615.8" y="515.0" width="2.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="618.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5,439 samples, 16.76%)</title><rect x="618.7" y="803.0" width="197.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="621.7" y="814.0">jdk/internal/net/http/comm..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5,439 samples, 16.76%)</title><rect x="618.7" y="787.0" width="197.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.7" y="798.0">jdk/internal/net/http/comm..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4,642 samples, 14.31%)</title><rect x="618.7" y="771.0" width="168.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="621.7" y="782.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.run (4,642 samples, 14.31%)</title><rect x="618.7" y="755.0" width="168.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="621.7" y="766.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (4,642 samples, 14.31%)</title><rect x="618.7" y="739.0" width="168.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.7" y="750.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (113 samples, 0.35%)</title><rect x="618.7" y="723.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="621.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (113 samples, 0.35%)</title><rect x="618.7" y="707.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="621.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (113 samples, 0.35%)</title><rect x="618.7" y="691.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="621.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (113 samples, 0.35%)</title><rect x="618.7" y="675.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="621.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1059063940.linkToTargetMethod (52 samples, 0.16%)</title><rect x="618.7" y="659.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="621.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1641313620.invoke (52 samples, 0.16%)</title><rect x="618.7" y="643.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.16%)</title><rect x="618.7" y="627.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (52 samples, 0.16%)</title><rect x="618.7" y="611.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (52 samples, 0.16%)</title><rect x="618.7" y="595.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="621.7" y="606.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.16%)</title><rect x="618.7" y="579.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="621.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (61 samples, 0.19%)</title><rect x="620.5" y="659.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="623.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (61 samples, 0.19%)</title><rect x="620.5" y="643.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (61 samples, 0.19%)</title><rect x="620.5" y="627.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="623.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$400/53598621.get$Lambda (61 samples, 0.19%)</title><rect x="620.5" y="611.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$400 (61 samples, 0.19%)</title><rect x="620.5" y="595.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="623.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (4,529 samples, 13.96%)</title><rect x="622.8" y="723.0" width="164.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.8" y="734.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (4,529 samples, 13.96%)</title><rect x="622.8" y="707.0" width="164.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.8" y="718.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4,529 samples, 13.96%)</title><rect x="622.8" y="691.0" width="164.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.8" y="702.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4,529 samples, 13.96%)</title><rect x="622.8" y="675.0" width="164.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.8" y="686.0">jdk/internal/net/http..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2,157 samples, 6.65%)</title><rect x="622.8" y="659.0" width="78.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.8" y="670.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,157 samples, 6.65%)</title><rect x="622.8" y="643.0" width="78.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.8" y="654.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,157 samples, 6.65%)</title><rect x="622.8" y="627.0" width="78.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.8" y="638.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2,157 samples, 6.65%)</title><rect x="622.8" y="611.0" width="78.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="625.8" y="622.0">java/util..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,157 samples, 6.65%)</title><rect x="622.8" y="595.0" width="78.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="625.8" y="606.0">jdk/inter..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2,157 samples, 6.65%)</title><rect x="622.8" y="579.0" width="78.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="625.8" y="590.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,157 samples, 6.65%)</title><rect x="622.8" y="563.0" width="78.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="625.8" y="574.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,084 samples, 6.42%)</title><rect x="622.8" y="547.0" width="75.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.8" y="558.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,084 samples, 6.42%)</title><rect x="622.8" y="531.0" width="75.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="625.8" y="542.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,037 samples, 6.28%)</title><rect x="622.8" y="515.0" width="74.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.8" y="526.0">java/uti..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (57 samples, 0.18%)</title><rect x="622.8" y="499.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="625.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$414/1488698859.apply (41 samples, 0.13%)</title><rect x="624.8" y="499.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (41 samples, 0.13%)</title><rect x="624.8" y="483.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (41 samples, 0.13%)</title><rect x="624.8" y="467.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="627.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (41 samples, 0.13%)</title><rect x="624.8" y="451.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.13%)</title><rect x="624.8" y="435.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="627.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$142/558125001.apply (1,869 samples, 5.76%)</title><rect x="626.3" y="499.0" width="68.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.3" y="510.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1,869 samples, 5.76%)</title><rect x="626.3" y="483.0" width="68.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.3" y="494.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.12%)</title><rect x="626.3" y="467.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="629.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.12%)</title><rect x="626.3" y="451.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$574/1641231001.get$Lambda (38 samples, 0.12%)</title><rect x="626.3" y="435.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$574 (38 samples, 0.12%)</title><rect x="626.3" y="419.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="629.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (105 samples, 0.32%)</title><rect x="627.7" y="467.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (105 samples, 0.32%)</title><rect x="627.7" y="451.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="630.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (53 samples, 0.16%)</title><rect x="627.7" y="435.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="630.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.16%)</title><rect x="629.6" y="435.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.16%)</title><rect x="629.6" y="419.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.16%)</title><rect x="629.6" y="403.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="632.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1,726 samples, 5.32%)</title><rect x="631.5" y="467.0" width="62.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="634.5" y="478.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.04%)</title><rect x="631.5" y="451.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="631.5" y="435.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="634.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$567/756387025.get$Lambda (14 samples, 0.04%)</title><rect x="631.5" y="419.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="634.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$567 (14 samples, 0.04%)</title><rect x="631.5" y="403.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="634.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (106 samples, 0.33%)</title><rect x="632.0" y="451.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (106 samples, 0.33%)</title><rect x="632.0" y="435.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (48 samples, 0.15%)</title><rect x="632.0" y="419.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="635.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.18%)</title><rect x="633.8" y="419.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="636.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.18%)</title><rect x="633.8" y="403.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (58 samples, 0.18%)</title><rect x="633.8" y="387.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="636.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1,606 samples, 4.95%)</title><rect x="635.9" y="451.0" width="58.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="638.9" y="462.0">jdk/in..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$120/169726349.apply (115 samples, 0.35%)</title><rect x="635.9" y="435.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="638.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (115 samples, 0.35%)</title><rect x="635.9" y="419.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="638.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (115 samples, 0.35%)</title><rect x="635.9" y="403.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (40 samples, 0.12%)</title><rect x="635.9" y="387.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="638.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (75 samples, 0.23%)</title><rect x="637.4" y="387.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="640.4" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (28 samples, 0.09%)</title><rect x="637.4" y="371.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="640.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.14%)</title><rect x="638.4" y="371.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="641.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1,491 samples, 4.60%)</title><rect x="640.1" y="435.0" width="54.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.1" y="446.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (56 samples, 0.17%)</title><rect x="640.1" y="419.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (56 samples, 0.17%)</title><rect x="640.1" y="403.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$553/735033109.get$Lambda (23 samples, 0.07%)</title><rect x="640.1" y="387.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$553 (23 samples, 0.07%)</title><rect x="640.1" y="371.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="643.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$559/1437695714.get$Lambda (33 samples, 0.10%)</title><rect x="640.9" y="387.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$559 (33 samples, 0.10%)</title><rect x="640.9" y="371.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="643.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1662920402.linkToTargetMethod (53 samples, 0.16%)</title><rect x="642.1" y="419.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/372384247.invokeStatic (53 samples, 0.16%)</title><rect x="642.1" y="403.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$496/855121012.get$Lambda (53 samples, 0.16%)</title><rect x="642.1" y="387.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$496 (53 samples, 0.16%)</title><rect x="642.1" y="371.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="645.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (297 samples, 0.92%)</title><rect x="644.0" y="419.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.0" y="430.0"></text>
</g>
<g>
<title>java/util/Collection.stream (127 samples, 0.39%)</title><rect x="644.0" y="403.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.0" y="414.0"></text>
</g>
<g>
<title>java/util/List.spliterator (42 samples, 0.13%)</title><rect x="644.0" y="387.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.0" y="398.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (42 samples, 0.13%)</title><rect x="644.0" y="371.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="647.0" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (85 samples, 0.26%)</title><rect x="645.6" y="387.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.6" y="398.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (84 samples, 0.26%)</title><rect x="645.6" y="371.0" width="3.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="648.6" y="382.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (96 samples, 0.30%)</title><rect x="648.7" y="403.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.7" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (96 samples, 0.30%)</title><rect x="648.7" y="387.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="651.7" y="398.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (96 samples, 0.30%)</title><rect x="648.7" y="371.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="651.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (40 samples, 0.12%)</title><rect x="648.7" y="355.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="651.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (40 samples, 0.12%)</title><rect x="648.7" y="339.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="651.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (40 samples, 0.12%)</title><rect x="648.7" y="323.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="651.7" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (40 samples, 0.12%)</title><rect x="648.7" y="307.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="651.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$477/1139294474.get (27 samples, 0.08%)</title><rect x="650.1" y="355.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="653.1" y="366.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (27 samples, 0.08%)</title><rect x="650.1" y="339.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="653.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (29 samples, 0.09%)</title><rect x="651.1" y="355.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (29 samples, 0.09%)</title><rect x="651.1" y="339.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.1" y="350.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (29 samples, 0.09%)</title><rect x="651.1" y="323.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.1" y="334.0"></text>
</g>
<g>
<title>java.util.OptionalLong (29 samples, 0.09%)</title><rect x="651.1" y="307.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="654.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (74 samples, 0.23%)</title><rect x="652.2" y="403.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.2" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (73 samples, 0.23%)</title><rect x="652.2" y="387.0" width="2.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="655.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (176 samples, 0.54%)</title><rect x="654.8" y="419.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (93 samples, 0.29%)</title><rect x="654.8" y="403.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.8" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (56 samples, 0.17%)</title><rect x="654.8" y="387.0" width="2.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="657.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.11%)</title><rect x="656.9" y="387.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="659.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.11%)</title><rect x="656.9" y="371.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (37 samples, 0.11%)</title><rect x="656.9" y="355.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="659.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (83 samples, 0.26%)</title><rect x="658.2" y="403.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (83 samples, 0.26%)</title><rect x="658.2" y="387.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (50 samples, 0.15%)</title><rect x="658.2" y="371.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="661.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.10%)</title><rect x="660.0" y="371.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.10%)</title><rect x="660.0" y="355.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="663.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.10%)</title><rect x="660.0" y="339.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="663.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (33 samples, 0.10%)</title><rect x="661.2" y="419.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="664.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (37 samples, 0.11%)</title><rect x="662.4" y="419.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="665.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.15%)</title><rect x="663.8" y="419.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="666.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (20 samples, 0.06%)</title><rect x="665.6" y="419.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="668.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (20 samples, 0.06%)</title><rect x="665.6" y="403.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="668.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (770 samples, 2.37%)</title><rect x="666.3" y="419.0" width="28.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.3" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$496/855121012.run (770 samples, 2.37%)</title><rect x="666.3" y="403.0" width="28.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="669.3" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (770 samples, 2.37%)</title><rect x="666.3" y="387.0" width="28.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="669.3" y="398.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (98 samples, 0.30%)</title><rect x="666.3" y="371.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (98 samples, 0.30%)</title><rect x="666.3" y="355.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$502/1814071412.get$Lambda (16 samples, 0.05%)</title><rect x="666.3" y="339.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="669.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$502 (16 samples, 0.05%)</title><rect x="666.3" y="323.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="669.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$530/1618478091.get$Lambda (36 samples, 0.11%)</title><rect x="666.9" y="339.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$530 (36 samples, 0.11%)</title><rect x="666.9" y="323.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="669.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$541/52399997.get$Lambda (46 samples, 0.14%)</title><rect x="668.2" y="339.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="671.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$541 (46 samples, 0.14%)</title><rect x="668.2" y="323.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="671.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (102 samples, 0.31%)</title><rect x="669.9" y="371.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="672.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (102 samples, 0.31%)</title><rect x="669.9" y="355.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (58 samples, 0.18%)</title><rect x="669.9" y="339.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="672.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.14%)</title><rect x="672.0" y="339.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="675.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.14%)</title><rect x="672.0" y="323.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="675.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.14%)</title><rect x="672.0" y="307.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="675.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (65 samples, 0.20%)</title><rect x="673.6" y="371.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="676.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (30 samples, 0.09%)</title><rect x="675.9" y="371.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="678.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.09%)</title><rect x="675.9" y="355.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="678.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (127 samples, 0.39%)</title><rect x="677.0" y="371.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="680.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (127 samples, 0.39%)</title><rect x="677.0" y="355.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="680.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.07%)</title><rect x="677.0" y="339.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.07%)</title><rect x="677.0" y="323.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$547/987248172.get$Lambda (24 samples, 0.07%)</title><rect x="677.0" y="307.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="680.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$547 (24 samples, 0.07%)</title><rect x="677.0" y="291.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="680.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (103 samples, 0.32%)</title><rect x="677.9" y="339.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (103 samples, 0.32%)</title><rect x="677.9" y="323.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (103 samples, 0.32%)</title><rect x="677.9" y="307.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (54 samples, 0.17%)</title><rect x="677.9" y="291.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="680.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.15%)</title><rect x="679.9" y="291.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="682.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.15%)</title><rect x="679.9" y="275.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="682.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.15%)</title><rect x="679.9" y="259.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="682.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (115 samples, 0.35%)</title><rect x="681.7" y="371.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (115 samples, 0.35%)</title><rect x="681.7" y="355.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/687059528.invoke (115 samples, 0.35%)</title><rect x="681.7" y="339.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="684.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (115 samples, 0.35%)</title><rect x="681.7" y="323.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (30 samples, 0.09%)</title><rect x="681.7" y="307.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="684.7" y="318.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.09%)</title><rect x="681.7" y="291.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="684.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (85 samples, 0.26%)</title><rect x="682.7" y="307.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="685.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (85 samples, 0.26%)</title><rect x="682.7" y="291.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.7" y="302.0"></text>
</g>
<g>
<title>byte[] (85 samples, 0.26%)</title><rect x="682.7" y="275.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="685.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (233 samples, 0.72%)</title><rect x="685.8" y="371.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="688.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (71 samples, 0.22%)</title><rect x="685.8" y="355.0" width="2.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="688.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (162 samples, 0.50%)</title><rect x="688.4" y="355.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (162 samples, 0.50%)</title><rect x="688.4" y="339.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/687059528.invoke (162 samples, 0.50%)</title><rect x="688.4" y="323.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (162 samples, 0.50%)</title><rect x="688.4" y="307.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (32 samples, 0.10%)</title><rect x="688.4" y="291.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.4" y="302.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.10%)</title><rect x="688.4" y="275.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="691.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (130 samples, 0.40%)</title><rect x="689.6" y="291.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="692.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (130 samples, 0.40%)</title><rect x="689.6" y="275.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="692.6" y="286.0"></text>
</g>
<g>
<title>byte[] (126 samples, 0.39%)</title><rect x="689.6" y="259.0" width="4.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="692.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$369/1508220952.apply (70 samples, 0.22%)</title><rect x="694.3" y="499.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (70 samples, 0.22%)</title><rect x="694.3" y="483.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (28 samples, 0.09%)</title><rect x="694.3" y="467.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.3" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (28 samples, 0.09%)</title><rect x="694.3" y="451.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="697.3" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (28 samples, 0.09%)</title><rect x="694.3" y="435.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="697.3" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (28 samples, 0.09%)</title><rect x="694.3" y="419.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="697.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (42 samples, 0.13%)</title><rect x="695.3" y="467.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="698.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.13%)</title><rect x="695.3" y="451.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="698.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (47 samples, 0.14%)</title><rect x="696.9" y="515.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (47 samples, 0.14%)</title><rect x="696.9" y="499.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$372/484910400.apply (47 samples, 0.14%)</title><rect x="696.9" y="483.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (47 samples, 0.14%)</title><rect x="696.9" y="467.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (47 samples, 0.14%)</title><rect x="696.9" y="451.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.14%)</title><rect x="696.9" y="435.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="699.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$420/992012201.apply (73 samples, 0.23%)</title><rect x="698.6" y="547.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (73 samples, 0.23%)</title><rect x="698.6" y="531.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="701.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (73 samples, 0.23%)</title><rect x="698.6" y="515.0" width="2.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="701.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (2,372 samples, 7.31%)</title><rect x="701.2" y="659.0" width="86.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="704.2" y="670.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (167 samples, 0.51%)</title><rect x="701.2" y="643.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="704.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (167 samples, 0.51%)</title><rect x="701.2" y="627.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.2" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (167 samples, 0.51%)</title><rect x="701.2" y="611.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.2" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (167 samples, 0.51%)</title><rect x="701.2" y="595.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="704.2" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (167 samples, 0.51%)</title><rect x="701.2" y="579.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="704.2" y="590.0"></text>
</g>
<g>
<title>byte[] (165 samples, 0.51%)</title><rect x="701.2" y="563.0" width="6.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="704.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (57 samples, 0.18%)</title><rect x="707.3" y="643.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.3" y="654.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (57 samples, 0.18%)</title><rect x="707.3" y="627.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.3" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (57 samples, 0.18%)</title><rect x="707.3" y="611.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="710.3" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (57 samples, 0.18%)</title><rect x="707.3" y="595.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.3" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (57 samples, 0.18%)</title><rect x="707.3" y="579.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="710.3" y="590.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.18%)</title><rect x="707.3" y="563.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="710.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (193 samples, 0.59%)</title><rect x="709.4" y="643.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.4" y="654.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (34 samples, 0.10%)</title><rect x="709.4" y="627.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="712.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.09%)</title><rect x="710.6" y="627.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="713.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.09%)</title><rect x="710.6" y="611.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.6" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.09%)</title><rect x="710.6" y="595.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="713.6" y="606.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.09%)</title><rect x="710.6" y="579.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="713.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (47 samples, 0.14%)</title><rect x="711.6" y="627.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="714.6" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (47 samples, 0.14%)</title><rect x="711.6" y="611.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="714.6" y="622.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.14%)</title><rect x="711.6" y="595.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="714.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (84 samples, 0.26%)</title><rect x="713.3" y="627.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (84 samples, 0.26%)</title><rect x="713.3" y="611.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.3" y="622.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.10%)</title><rect x="713.3" y="595.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="716.3" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (50 samples, 0.15%)</title><rect x="714.6" y="595.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.6" y="606.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.15%)</title><rect x="714.6" y="579.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="717.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (667 samples, 2.06%)</title><rect x="716.4" y="643.0" width="24.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.4" y="654.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (667 samples, 2.06%)</title><rect x="716.4" y="627.0" width="24.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.4" y="638.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (667 samples, 2.06%)</title><rect x="716.4" y="611.0" width="24.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.4" y="622.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (26 samples, 0.08%)</title><rect x="716.4" y="595.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="719.4" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (41 samples, 0.13%)</title><rect x="717.3" y="595.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="720.3" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (66 samples, 0.20%)</title><rect x="718.8" y="595.0" width="2.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="721.8" y="606.0"></text>
</g>
<g>
<title>java.util.TreeSet (25 samples, 0.08%)</title><rect x="721.2" y="595.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="724.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.13%)</title><rect x="722.1" y="595.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.13%)</title><rect x="722.1" y="579.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.1" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/1260444598.get$Lambda (41 samples, 0.13%)</title><rect x="722.1" y="563.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.1" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$113 (41 samples, 0.13%)</title><rect x="722.1" y="547.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="725.1" y="558.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (46 samples, 0.14%)</title><rect x="723.6" y="595.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="726.6" y="606.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (46 samples, 0.14%)</title><rect x="723.6" y="579.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="726.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (362 samples, 1.12%)</title><rect x="725.3" y="595.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="728.3" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/1260444598.accept (362 samples, 1.12%)</title><rect x="725.3" y="579.0" width="13.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="728.3" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (362 samples, 1.12%)</title><rect x="725.3" y="563.0" width="13.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="728.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (65 samples, 0.20%)</title><rect x="725.3" y="547.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="728.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (65 samples, 0.20%)</title><rect x="725.3" y="531.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="728.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$394/1894267442.get$Lambda (65 samples, 0.20%)</title><rect x="725.3" y="515.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="728.3" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$394 (65 samples, 0.20%)</title><rect x="725.3" y="499.0" width="2.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="728.3" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (79 samples, 0.24%)</title><rect x="727.7" y="547.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.7" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$394/1894267442.accept (79 samples, 0.24%)</title><rect x="727.7" y="531.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.7" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (79 samples, 0.24%)</title><rect x="727.7" y="515.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.7" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (79 samples, 0.24%)</title><rect x="727.7" y="499.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.7" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (79 samples, 0.24%)</title><rect x="727.7" y="483.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="730.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (79 samples, 0.24%)</title><rect x="727.7" y="467.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (79 samples, 0.24%)</title><rect x="727.7" y="451.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.7" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (79 samples, 0.24%)</title><rect x="727.7" y="435.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="730.7" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (76 samples, 0.23%)</title><rect x="727.7" y="419.0" width="2.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="730.7" y="430.0"></text>
</g>
<g>
<title>java/util/List.copyOf (134 samples, 0.41%)</title><rect x="730.5" y="547.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.5" y="558.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (134 samples, 0.41%)</title><rect x="730.5" y="531.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (65 samples, 0.20%)</title><rect x="730.5" y="515.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (65 samples, 0.20%)</title><rect x="730.5" y="499.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.5" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (65 samples, 0.20%)</title><rect x="730.5" y="483.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="733.5" y="494.0"></text>
</g>
<g>
<title>java/util/List.of (69 samples, 0.21%)</title><rect x="732.9" y="515.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.9" y="526.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (69 samples, 0.21%)</title><rect x="732.9" y="499.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="735.9" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (84 samples, 0.26%)</title><rect x="735.4" y="547.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="738.4" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (84 samples, 0.26%)</title><rect x="735.4" y="531.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="738.4" y="542.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (60 samples, 0.18%)</title><rect x="738.5" y="595.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="741.5" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (60 samples, 0.18%)</title><rect x="738.5" y="579.0" width="2.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="741.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (1,288 samples, 3.97%)</title><rect x="740.6" y="643.0" width="46.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.6" y="654.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (74 samples, 0.23%)</title><rect x="740.6" y="627.0" width="2.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="743.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (77 samples, 0.24%)</title><rect x="743.3" y="627.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="746.3" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (77 samples, 0.24%)</title><rect x="743.3" y="611.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="746.3" y="622.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.24%)</title><rect x="743.3" y="595.0" width="2.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="746.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (135 samples, 0.42%)</title><rect x="746.1" y="627.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (135 samples, 0.42%)</title><rect x="746.1" y="611.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="749.1" y="622.0"></text>
</g>
<g>
<title>java.lang.String (59 samples, 0.18%)</title><rect x="746.1" y="595.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="749.1" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (76 samples, 0.23%)</title><rect x="748.3" y="595.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.3" y="606.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.23%)</title><rect x="748.3" y="579.0" width="2.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="751.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1,002 samples, 3.09%)</title><rect x="751.0" y="627.0" width="36.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.0" y="638.0">jdk..</text>
</g>
<g>
<title>java/lang/String.substring (273 samples, 0.84%)</title><rect x="751.0" y="611.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="754.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (273 samples, 0.84%)</title><rect x="751.0" y="595.0" width="10.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.0" y="606.0"></text>
</g>
<g>
<title>java.lang.String (118 samples, 0.36%)</title><rect x="751.0" y="579.0" width="4.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="754.0" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (155 samples, 0.48%)</title><rect x="755.3" y="579.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="758.3" y="590.0"></text>
</g>
<g>
<title>byte[] (155 samples, 0.48%)</title><rect x="755.3" y="563.0" width="5.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="758.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (156 samples, 0.48%)</title><rect x="761.0" y="611.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="764.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (156 samples, 0.48%)</title><rect x="761.0" y="595.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.0" y="606.0"></text>
</g>
<g>
<title>byte[] (95 samples, 0.29%)</title><rect x="761.0" y="579.0" width="3.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="764.0" y="590.0"></text>
</g>
<g>
<title>java.lang.String (61 samples, 0.19%)</title><rect x="764.4" y="579.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="767.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.trim (150 samples, 0.46%)</title><rect x="766.6" y="611.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="769.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (150 samples, 0.46%)</title><rect x="766.6" y="595.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (150 samples, 0.46%)</title><rect x="766.6" y="579.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="769.6" y="590.0"></text>
</g>
<g>
<title>java.lang.String (72 samples, 0.22%)</title><rect x="766.6" y="563.0" width="2.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="769.6" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (78 samples, 0.24%)</title><rect x="769.3" y="563.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.3" y="574.0"></text>
</g>
<g>
<title>byte[] (78 samples, 0.24%)</title><rect x="769.3" y="547.0" width="2.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="772.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (150 samples, 0.46%)</title><rect x="772.1" y="611.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="775.1" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (150 samples, 0.46%)</title><rect x="772.1" y="595.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.1" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (150 samples, 0.46%)</title><rect x="772.1" y="579.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="775.1" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (150 samples, 0.46%)</title><rect x="772.1" y="563.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.1" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (150 samples, 0.46%)</title><rect x="772.1" y="547.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="775.1" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (142 samples, 0.44%)</title><rect x="772.1" y="531.0" width="5.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="775.1" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.02%)</title><rect x="777.3" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="780.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (273 samples, 0.84%)</title><rect x="777.6" y="611.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.6" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (91 samples, 0.28%)</title><rect x="777.6" y="595.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.6" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (91 samples, 0.28%)</title><rect x="777.6" y="579.0" width="3.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="780.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (118 samples, 0.36%)</title><rect x="780.9" y="595.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="783.9" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (114 samples, 0.35%)</title><rect x="780.9" y="579.0" width="4.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="783.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$443/1513688448.apply (64 samples, 0.20%)</title><rect x="785.2" y="595.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="788.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (64 samples, 0.20%)</title><rect x="785.2" y="579.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.2" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (64 samples, 0.20%)</title><rect x="785.2" y="563.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="788.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (797 samples, 2.46%)</title><rect x="787.5" y="771.0" width="29.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="790.5" y="782.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (797 samples, 2.46%)</title><rect x="787.5" y="755.0" width="29.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.5" y="766.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (797 samples, 2.46%)</title><rect x="787.5" y="739.0" width="29.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.5" y="750.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.run (797 samples, 2.46%)</title><rect x="787.5" y="723.0" width="29.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="790.5" y="734.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (797 samples, 2.46%)</title><rect x="787.5" y="707.0" width="29.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="790.5" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (791 samples, 2.44%)</title><rect x="787.5" y="691.0" width="28.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.5" y="702.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.18%)</title><rect x="787.5" y="675.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.18%)</title><rect x="787.5" y="659.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="790.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$276/1663239432.get$Lambda (22 samples, 0.07%)</title><rect x="787.5" y="643.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="790.5" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$276 (22 samples, 0.07%)</title><rect x="787.5" y="627.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="790.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$345/806691753.get$Lambda (35 samples, 0.11%)</title><rect x="788.3" y="643.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.3" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$345 (35 samples, 0.11%)</title><rect x="788.3" y="627.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="791.3" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (42 samples, 0.13%)</title><rect x="789.6" y="675.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="792.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (57 samples, 0.18%)</title><rect x="791.1" y="675.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (57 samples, 0.18%)</title><rect x="791.1" y="659.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.1" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (24 samples, 0.07%)</title><rect x="791.1" y="643.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="794.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (33 samples, 0.10%)</title><rect x="792.0" y="643.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="795.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (33 samples, 0.10%)</title><rect x="792.0" y="627.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="795.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (635 samples, 1.96%)</title><rect x="793.2" y="675.0" width="23.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="796.2" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (635 samples, 1.96%)</title><rect x="793.2" y="659.0" width="23.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="796.2" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$502/1814071412.run (554 samples, 1.71%)</title><rect x="793.2" y="643.0" width="20.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="796.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (554 samples, 1.71%)</title><rect x="793.2" y="627.0" width="20.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (554 samples, 1.71%)</title><rect x="793.2" y="611.0" width="20.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="796.2" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (186 samples, 0.57%)</title><rect x="793.2" y="595.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="796.2" y="606.0"></text>
</g>
<g>
<title>java/util/Collection.stream (134 samples, 0.41%)</title><rect x="793.2" y="579.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.2" y="590.0"></text>
</g>
<g>
<title>java/util/List.spliterator (46 samples, 0.14%)</title><rect x="793.2" y="563.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="796.2" y="574.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (46 samples, 0.14%)</title><rect x="793.2" y="547.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="796.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (88 samples, 0.27%)</title><rect x="794.8" y="563.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="797.8" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (78 samples, 0.24%)</title><rect x="794.8" y="547.0" width="2.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="797.8" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (10 samples, 0.03%)</title><rect x="797.7" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="800.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (52 samples, 0.16%)</title><rect x="798.0" y="579.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.0" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (52 samples, 0.16%)</title><rect x="798.0" y="563.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="801.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (52 samples, 0.16%)</title><rect x="798.0" y="547.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="801.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$102/1947896119.get (26 samples, 0.08%)</title><rect x="798.0" y="531.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.0" y="542.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (26 samples, 0.08%)</title><rect x="798.0" y="515.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="801.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (26 samples, 0.08%)</title><rect x="799.0" y="531.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="802.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (26 samples, 0.08%)</title><rect x="799.0" y="515.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.0" y="526.0"></text>
</g>
<g>
<title>java/util/Optional.of (26 samples, 0.08%)</title><rect x="799.0" y="499.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="802.0" y="510.0"></text>
</g>
<g>
<title>java.util.Optional (26 samples, 0.08%)</title><rect x="799.0" y="483.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="802.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (368 samples, 1.13%)</title><rect x="799.9" y="595.0" width="13.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="802.9" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.now (45 samples, 0.14%)</title><rect x="799.9" y="579.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="802.9" y="590.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (45 samples, 0.14%)</title><rect x="799.9" y="563.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="802.9" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (45 samples, 0.14%)</title><rect x="799.9" y="547.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="802.9" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.create (45 samples, 0.14%)</title><rect x="799.9" y="531.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="802.9" y="542.0"></text>
</g>
<g>
<title>java.time.Instant (45 samples, 0.14%)</title><rect x="799.9" y="515.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="802.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (323 samples, 1.00%)</title><rect x="801.6" y="579.0" width="11.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="804.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (105 samples, 0.32%)</title><rect x="801.6" y="563.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.6" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plus (28 samples, 0.09%)</title><rect x="801.6" y="547.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="804.6" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (28 samples, 0.09%)</title><rect x="801.6" y="531.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.6" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.plus (28 samples, 0.09%)</title><rect x="801.6" y="515.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.6" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (28 samples, 0.09%)</title><rect x="801.6" y="499.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="804.6" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (28 samples, 0.09%)</title><rect x="801.6" y="483.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.6" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (28 samples, 0.09%)</title><rect x="801.6" y="467.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="804.6" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (26 samples, 0.08%)</title><rect x="802.6" y="547.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="805.6" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (26 samples, 0.08%)</title><rect x="802.6" y="531.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="805.6" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.plus (26 samples, 0.08%)</title><rect x="802.6" y="515.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="805.6" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (26 samples, 0.08%)</title><rect x="802.6" y="499.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="805.6" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (26 samples, 0.08%)</title><rect x="802.6" y="483.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.6" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (26 samples, 0.08%)</title><rect x="802.6" y="467.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="805.6" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (30 samples, 0.09%)</title><rect x="803.5" y="547.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="806.5" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (30 samples, 0.09%)</title><rect x="803.5" y="531.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="806.5" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (30 samples, 0.09%)</title><rect x="803.5" y="515.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="806.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (21 samples, 0.06%)</title><rect x="804.6" y="547.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="807.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (88 samples, 0.27%)</title><rect x="805.4" y="563.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="808.4" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.get (30 samples, 0.09%)</title><rect x="805.4" y="547.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.4" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (30 samples, 0.09%)</title><rect x="805.4" y="531.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="808.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (30 samples, 0.09%)</title><rect x="805.4" y="515.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="808.4" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 0.09%)</title><rect x="805.4" y="499.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="808.4" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (25 samples, 0.08%)</title><rect x="806.5" y="547.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.5" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (25 samples, 0.08%)</title><rect x="806.5" y="531.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="809.5" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (25 samples, 0.08%)</title><rect x="806.5" y="515.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="809.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (33 samples, 0.10%)</title><rect x="807.4" y="547.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="810.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (33 samples, 0.10%)</title><rect x="807.4" y="531.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="810.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (130 samples, 0.40%)</title><rect x="808.6" y="563.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="811.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (33 samples, 0.10%)</title><rect x="808.6" y="547.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="811.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (97 samples, 0.30%)</title><rect x="809.8" y="547.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="812.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (28 samples, 0.09%)</title><rect x="809.8" y="531.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (28 samples, 0.09%)</title><rect x="809.8" y="515.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="812.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (28 samples, 0.09%)</title><rect x="809.8" y="499.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="812.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (28 samples, 0.09%)</title><rect x="809.8" y="483.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="812.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (69 samples, 0.21%)</title><rect x="810.8" y="531.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (69 samples, 0.21%)</title><rect x="810.8" y="515.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (54 samples, 0.17%)</title><rect x="810.8" y="499.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="813.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (15 samples, 0.05%)</title><rect x="812.8" y="499.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="815.8" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (15 samples, 0.05%)</title><rect x="812.8" y="483.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="815.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (81 samples, 0.25%)</title><rect x="813.3" y="643.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="816.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (81 samples, 0.25%)</title><rect x="813.3" y="627.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="816.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (81 samples, 0.25%)</title><rect x="813.3" y="611.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="816.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (64 samples, 0.20%)</title><rect x="813.3" y="595.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="816.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (64 samples, 0.20%)</title><rect x="813.3" y="579.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="816.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (64 samples, 0.20%)</title><rect x="813.3" y="563.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="816.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (64 samples, 0.20%)</title><rect x="813.3" y="547.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="816.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$553/735033109.accept (64 samples, 0.20%)</title><rect x="813.3" y="531.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="816.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (64 samples, 0.20%)</title><rect x="813.3" y="515.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="816.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (64 samples, 0.20%)</title><rect x="813.3" y="499.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="816.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (64 samples, 0.20%)</title><rect x="813.3" y="483.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="816.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (64 samples, 0.20%)</title><rect x="813.3" y="467.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="816.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$574/1641231001.apply (64 samples, 0.20%)</title><rect x="813.3" y="451.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="816.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (64 samples, 0.20%)</title><rect x="813.3" y="435.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (63 samples, 0.19%)</title><rect x="813.3" y="419.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="816.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (17 samples, 0.05%)</title><rect x="815.6" y="595.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="818.6" y="606.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.05%)</title><rect x="815.6" y="579.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="818.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (2,500 samples, 7.71%)</title><rect x="816.5" y="851.0" width="90.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="819.5" y="862.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (2,500 samples, 7.71%)</title><rect x="816.5" y="835.0" width="90.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.5" y="846.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (2,500 samples, 7.71%)</title><rect x="816.5" y="819.0" width="90.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="819.5" y="830.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (2,500 samples, 7.71%)</title><rect x="816.5" y="803.0" width="90.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="819.5" y="814.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (2,500 samples, 7.71%)</title><rect x="816.5" y="787.0" width="90.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="819.5" y="798.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (2,500 samples, 7.71%)</title><rect x="816.5" y="771.0" width="90.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="819.5" y="782.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2,500 samples, 7.71%)</title><rect x="816.5" y="755.0" width="90.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="819.5" y="766.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,500 samples, 7.71%)</title><rect x="816.5" y="739.0" width="90.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="819.5" y="750.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,500 samples, 7.71%)</title><rect x="816.5" y="723.0" width="90.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.5" y="734.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (699 samples, 2.15%)</title><rect x="816.5" y="707.0" width="25.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="819.5" y="718.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$168/198651204.accept (699 samples, 2.15%)</title><rect x="816.5" y="691.0" width="25.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="819.5" y="702.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$sendToReplicas$0 (699 samples, 2.15%)</title><rect x="816.5" y="675.0" width="25.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.5" y="686.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.trySendResponse (699 samples, 2.15%)</title><rect x="816.5" y="659.0" width="25.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="819.5" y="670.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (699 samples, 2.15%)</title><rect x="816.5" y="643.0" width="25.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="819.5" y="654.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (699 samples, 2.15%)</title><rect x="816.5" y="627.0" width="25.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="819.5" y="638.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (497 samples, 1.53%)</title><rect x="816.5" y="611.0" width="18.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="819.5" y="622.0"></text>
</g>
<g>
<title>one.nio.util.ByteArrayBuilder (103 samples, 0.32%)</title><rect x="816.5" y="595.0" width="3.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="819.5" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (394 samples, 1.21%)</title><rect x="820.2" y="595.0" width="14.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.2" y="606.0"></text>
</g>
<g>
<title>byte[] (276 samples, 0.85%)</title><rect x="820.2" y="579.0" width="10.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="823.2" y="590.0"></text>
</g>
<g>
<title>byte[] (118 samples, 0.36%)</title><rect x="830.3" y="579.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="833.3" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (202 samples, 0.62%)</title><rect x="834.6" y="611.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="837.6" y="622.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (202 samples, 0.62%)</title><rect x="834.6" y="595.0" width="7.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="837.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,801 samples, 5.55%)</title><rect x="841.9" y="707.0" width="65.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="844.9" y="718.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding$$Lambda$156/636945562.apply (1,801 samples, 5.55%)</title><rect x="841.9" y="691.0" width="65.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="844.9" y="702.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ResponseConverter.convert (1,801 samples, 5.55%)</title><rect x="841.9" y="675.0" width="65.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="844.9" y="686.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.valueOf (634 samples, 1.95%)</title><rect x="841.9" y="659.0" width="23.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="844.9" y="670.0">j..</text>
</g>
<g>
<title>java/lang/Integer.toString (634 samples, 1.95%)</title><rect x="841.9" y="643.0" width="23.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.9" y="654.0">j..</text>
</g>
<g>
<title>byte[] (336 samples, 1.04%)</title><rect x="841.9" y="627.0" width="12.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="844.9" y="638.0"></text>
</g>
<g>
<title>java.lang.String (298 samples, 0.92%)</title><rect x="854.1" y="627.0" width="10.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="857.1" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Response (215 samples, 0.66%)</title><rect x="865.0" y="659.0" width="7.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="868.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (952 samples, 2.93%)</title><rect x="872.8" y="659.0" width="34.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.8" y="670.0">on..</text>
</g>
<g>
<title>byte[] (405 samples, 1.25%)</title><rect x="872.8" y="643.0" width="14.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="875.8" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (283 samples, 0.87%)</title><rect x="887.5" y="643.0" width="10.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="890.5" y="654.0"></text>
</g>
<g>
<title>java.lang.String (264 samples, 0.81%)</title><rect x="897.8" y="643.0" width="9.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="900.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (657 samples, 2.03%)</title><rect x="907.4" y="851.0" width="23.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="910.4" y="862.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="907.4" y="835.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="910.4" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="907.4" y="819.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="910.4" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (112 samples, 0.35%)</title><rect x="908.1" y="835.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="911.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$378/72598837.accept (91 samples, 0.28%)</title><rect x="908.1" y="819.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="911.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (91 samples, 0.28%)</title><rect x="908.1" y="803.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="911.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (91 samples, 0.28%)</title><rect x="908.1" y="787.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="911.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (91 samples, 0.28%)</title><rect x="908.1" y="771.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (91 samples, 0.28%)</title><rect x="908.1" y="755.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="911.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (91 samples, 0.28%)</title><rect x="908.1" y="739.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="911.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (91 samples, 0.28%)</title><rect x="908.1" y="723.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="911.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (91 samples, 0.28%)</title><rect x="908.1" y="707.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="911.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (91 samples, 0.28%)</title><rect x="908.1" y="691.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="911.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (91 samples, 0.28%)</title><rect x="908.1" y="675.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="911.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206/227894635.run (91 samples, 0.28%)</title><rect x="908.1" y="659.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="911.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (91 samples, 0.28%)</title><rect x="908.1" y="643.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="911.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (15 samples, 0.05%)</title><rect x="908.1" y="627.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="911.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (15 samples, 0.05%)</title><rect x="908.1" y="611.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="911.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (15 samples, 0.05%)</title><rect x="908.1" y="595.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="911.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (8 samples, 0.02%)</title><rect x="908.1" y="579.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="911.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (8 samples, 0.02%)</title><rect x="908.1" y="563.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="911.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (8 samples, 0.02%)</title><rect x="908.1" y="547.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="911.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (8 samples, 0.02%)</title><rect x="908.1" y="531.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="911.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (8 samples, 0.02%)</title><rect x="908.1" y="515.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="911.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.02%)</title><rect x="908.3" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="911.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.02%)</title><rect x="908.3" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="911.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.02%)</title><rect x="908.3" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="911.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.02%)</title><rect x="908.3" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="911.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (7 samples, 0.02%)</title><rect x="908.3" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="911.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (7 samples, 0.02%)</title><rect x="908.3" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="911.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (7 samples, 0.02%)</title><rect x="908.3" y="483.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="911.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (7 samples, 0.02%)</title><rect x="908.3" y="467.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="911.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (7 samples, 0.02%)</title><rect x="908.6" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="911.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.02%)</title><rect x="908.6" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="911.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.02%)</title><rect x="908.6" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$400/53598621.get$Lambda (7 samples, 0.02%)</title><rect x="908.6" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$400 (7 samples, 0.02%)</title><rect x="908.6" y="563.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="911.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (68 samples, 0.21%)</title><rect x="908.9" y="627.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="911.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (40 samples, 0.12%)</title><rect x="908.9" y="611.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.9" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.04%)</title><rect x="908.9" y="595.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="911.9" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.04%)</title><rect x="908.9" y="579.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="911.9" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.slice (16 samples, 0.05%)</title><rect x="909.3" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="912.3" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.05%)</title><rect x="909.3" y="579.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="912.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (12 samples, 0.04%)</title><rect x="909.9" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="912.9" y="606.0"></text>
</g>
<g>
<title>java/util/List.of (12 samples, 0.04%)</title><rect x="909.9" y="579.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="912.9" y="590.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (12 samples, 0.04%)</title><rect x="909.9" y="563.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="912.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (28 samples, 0.09%)</title><rect x="910.3" y="611.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="913.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$196/2112893675.get (28 samples, 0.09%)</title><rect x="910.3" y="595.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="913.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (28 samples, 0.09%)</title><rect x="910.3" y="579.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="913.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (28 samples, 0.09%)</title><rect x="910.3" y="563.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="913.3" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (28 samples, 0.09%)</title><rect x="910.3" y="547.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.3" y="558.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.08%)</title><rect x="910.5" y="531.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="913.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$391/1444661256.accept (21 samples, 0.06%)</title><rect x="911.4" y="819.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="914.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (21 samples, 0.06%)</title><rect x="911.4" y="803.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$377/1536444579.run (21 samples, 0.06%)</title><rect x="911.4" y="787.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="914.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (21 samples, 0.06%)</title><rect x="911.4" y="771.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (21 samples, 0.06%)</title><rect x="911.4" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="914.4" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (21 samples, 0.06%)</title><rect x="911.4" y="739.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.4" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (21 samples, 0.06%)</title><rect x="911.4" y="723.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.4" y="734.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (21 samples, 0.06%)</title><rect x="911.4" y="707.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="914.4" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (136 samples, 0.42%)</title><rect x="912.1" y="835.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="915.1" y="846.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (136 samples, 0.42%)</title><rect x="912.1" y="819.0" width="5.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="915.1" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (19 samples, 0.06%)</title><rect x="917.1" y="835.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="920.1" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (16 samples, 0.05%)</title><rect x="917.1" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="920.1" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (16 samples, 0.05%)</title><rect x="917.1" y="803.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="920.1" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (16 samples, 0.05%)</title><rect x="917.1" y="787.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="920.1" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (16 samples, 0.05%)</title><rect x="917.1" y="771.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="920.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (16 samples, 0.05%)</title><rect x="917.1" y="755.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.1" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (16 samples, 0.05%)</title><rect x="917.1" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="920.1" y="750.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (16 samples, 0.05%)</title><rect x="917.1" y="723.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="920.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (66 samples, 0.20%)</title><rect x="917.8" y="835.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="920.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$215/107337296.run (31 samples, 0.10%)</title><rect x="917.8" y="819.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="920.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (31 samples, 0.10%)</title><rect x="917.8" y="803.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="920.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (31 samples, 0.10%)</title><rect x="917.8" y="787.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="920.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (31 samples, 0.10%)</title><rect x="917.8" y="771.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (31 samples, 0.10%)</title><rect x="917.8" y="755.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (31 samples, 0.10%)</title><rect x="917.8" y="739.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206/227894635.run (31 samples, 0.10%)</title><rect x="917.8" y="723.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="920.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (31 samples, 0.10%)</title><rect x="917.8" y="707.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="920.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (31 samples, 0.10%)</title><rect x="917.8" y="691.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="920.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (31 samples, 0.10%)</title><rect x="917.8" y="675.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (19 samples, 0.06%)</title><rect x="917.8" y="659.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="920.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (19 samples, 0.06%)</title><rect x="917.8" y="643.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (19 samples, 0.06%)</title><rect x="917.8" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="920.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1059063940.linkToTargetMethod (15 samples, 0.05%)</title><rect x="917.8" y="611.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="920.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1641313620.invoke (15 samples, 0.05%)</title><rect x="917.8" y="595.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="920.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.05%)</title><rect x="917.8" y="579.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (15 samples, 0.05%)</title><rect x="917.8" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (15 samples, 0.05%)</title><rect x="917.8" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="920.8" y="558.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.05%)</title><rect x="917.8" y="531.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="920.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (12 samples, 0.04%)</title><rect x="918.5" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="921.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.04%)</title><rect x="918.5" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="921.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.04%)</title><rect x="918.5" y="627.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="921.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12 samples, 0.04%)</title><rect x="918.5" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="921.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.04%)</title><rect x="918.5" y="595.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="921.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (12 samples, 0.04%)</title><rect x="918.5" y="579.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="921.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (12 samples, 0.04%)</title><rect x="918.5" y="563.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="921.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (12 samples, 0.04%)</title><rect x="918.5" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="921.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (12 samples, 0.04%)</title><rect x="918.5" y="531.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="921.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$224/1342060978.run (35 samples, 0.11%)</title><rect x="918.9" y="819.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="921.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (35 samples, 0.11%)</title><rect x="918.9" y="803.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="921.9" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.04%)</title><rect x="918.9" y="787.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="921.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="918.9" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="921.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$399/1148631027.get$Lambda (14 samples, 0.04%)</title><rect x="918.9" y="755.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="921.9" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$399 (14 samples, 0.04%)</title><rect x="918.9" y="739.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="921.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (21 samples, 0.06%)</title><rect x="919.4" y="787.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="922.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 0.06%)</title><rect x="919.4" y="771.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="922.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (21 samples, 0.06%)</title><rect x="919.4" y="755.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="922.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (21 samples, 0.06%)</title><rect x="919.4" y="739.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (21 samples, 0.06%)</title><rect x="919.4" y="723.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="922.4" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (21 samples, 0.06%)</title><rect x="919.4" y="707.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="922.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (134 samples, 0.41%)</title><rect x="920.2" y="835.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="923.2" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.now (24 samples, 0.07%)</title><rect x="920.2" y="819.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="923.2" y="830.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (24 samples, 0.07%)</title><rect x="920.2" y="803.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="923.2" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (24 samples, 0.07%)</title><rect x="920.2" y="787.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="923.2" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.create (24 samples, 0.07%)</title><rect x="920.2" y="771.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.2" y="782.0"></text>
</g>
<g>
<title>java.time.Instant (24 samples, 0.07%)</title><rect x="920.2" y="755.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="923.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (110 samples, 0.34%)</title><rect x="921.0" y="819.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="924.0" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.06%)</title><rect x="921.0" y="803.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="924.0" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.06%)</title><rect x="921.0" y="787.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="924.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$587/1971024820.get$Lambda (21 samples, 0.06%)</title><rect x="921.0" y="771.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="924.0" y="782.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$587 (21 samples, 0.06%)</title><rect x="921.0" y="755.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="924.0" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (23 samples, 0.07%)</title><rect x="921.8" y="803.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="924.8" y="814.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (23 samples, 0.07%)</title><rect x="921.8" y="787.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="924.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (22 samples, 0.07%)</title><rect x="922.6" y="803.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="925.6" y="814.0"></text>
</g>
<g>
<title>java/util/Optional.of (22 samples, 0.07%)</title><rect x="922.6" y="787.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="925.6" y="798.0"></text>
</g>
<g>
<title>java.util.Optional (22 samples, 0.07%)</title><rect x="922.6" y="771.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="925.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (44 samples, 0.14%)</title><rect x="923.4" y="803.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="926.4" y="814.0"></text>
</g>
<g>
<title>java.util.ArrayList (16 samples, 0.05%)</title><rect x="923.4" y="787.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="926.4" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (28 samples, 0.09%)</title><rect x="924.0" y="787.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="927.0" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (28 samples, 0.09%)</title><rect x="924.0" y="771.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="927.0" y="782.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (28 samples, 0.09%)</title><rect x="924.0" y="755.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="927.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (59 samples, 0.18%)</title><rect x="925.0" y="835.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="928.0" y="846.0"></text>
</g>
<g>
<title>java/util/Collection.stream (31 samples, 0.10%)</title><rect x="925.2" y="819.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="928.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (17 samples, 0.05%)</title><rect x="925.2" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="928.2" y="814.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (17 samples, 0.05%)</title><rect x="925.2" y="787.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="928.2" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (14 samples, 0.04%)</title><rect x="925.8" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="928.8" y="814.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (14 samples, 0.04%)</title><rect x="925.8" y="787.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="928.8" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (23 samples, 0.07%)</title><rect x="926.4" y="819.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="929.4" y="830.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (23 samples, 0.07%)</title><rect x="926.4" y="803.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="929.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (85 samples, 0.26%)</title><rect x="927.2" y="835.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="930.2" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.now (34 samples, 0.10%)</title><rect x="927.2" y="819.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="930.2" y="830.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (34 samples, 0.10%)</title><rect x="927.2" y="803.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="930.2" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (34 samples, 0.10%)</title><rect x="927.2" y="787.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="930.2" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.create (34 samples, 0.10%)</title><rect x="927.2" y="771.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="930.2" y="782.0"></text>
</g>
<g>
<title>java.time.Instant (34 samples, 0.10%)</title><rect x="927.2" y="755.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="930.2" y="766.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (51 samples, 0.16%)</title><rect x="928.4" y="819.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="931.4" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (51 samples, 0.16%)</title><rect x="928.4" y="803.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="931.4" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (51 samples, 0.16%)</title><rect x="928.4" y="787.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="931.4" y="798.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (51 samples, 0.16%)</title><rect x="928.4" y="771.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="931.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (15 samples, 0.05%)</title><rect x="930.3" y="835.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.3" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (15 samples, 0.05%)</title><rect x="930.3" y="819.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="933.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (15 samples, 0.05%)</title><rect x="930.3" y="803.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="933.3" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (15 samples, 0.05%)</title><rect x="930.3" y="787.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="933.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (9 samples, 0.03%)</title><rect x="930.5" y="771.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="933.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (9 samples, 0.03%)</title><rect x="930.5" y="755.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="933.5" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 0.03%)</title><rect x="930.5" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="933.5" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (9 samples, 0.03%)</title><rect x="930.5" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="933.5" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (9 samples, 0.03%)</title><rect x="930.5" y="707.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="933.5" y="718.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (9 samples, 0.03%)</title><rect x="930.5" y="691.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="933.5" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (7 samples, 0.02%)</title><rect x="931.0" y="835.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="934.0" y="846.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (7 samples, 0.02%)</title><rect x="931.0" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="934.0" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (7 samples, 0.02%)</title><rect x="931.0" y="803.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="934.0" y="814.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (7 samples, 0.02%)</title><rect x="931.0" y="787.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="934.0" y="798.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (7,112 samples, 21.92%)</title><rect x="931.3" y="851.0" width="258.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="934.3" y="862.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (194 samples, 0.60%)</title><rect x="931.3" y="835.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="934.3" y="846.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (194 samples, 0.60%)</title><rect x="931.3" y="819.0" width="7.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="934.3" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (6,918 samples, 21.32%)</title><rect x="938.4" y="835.0" width="251.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="941.4" y="846.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6,918 samples, 21.32%)</title><rect x="938.4" y="819.0" width="251.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="941.4" y="830.0">one/nio/http/HttpSession.processR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6,918 samples, 21.32%)</title><rect x="938.4" y="803.0" width="251.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="941.4" y="814.0">one/nio/http/HttpSession.processH..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,463 samples, 10.67%)</title><rect x="938.4" y="787.0" width="125.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="941.4" y="798.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,463 samples, 10.67%)</title><rect x="938.4" y="771.0" width="125.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="941.4" y="782.0">one/nio/http/Ht..</text>
</g>
<g>
<title>RequestHandler1_handleEntityRequest.handleRequest (3,293 samples, 10.15%)</title><rect x="938.4" y="755.0" width="119.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="941.4" y="766.0">RequestHandler1..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (92 samples, 0.28%)</title><rect x="938.4" y="739.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="941.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (92 samples, 0.28%)</title><rect x="938.4" y="723.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="941.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (92 samples, 0.28%)</title><rect x="938.4" y="707.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="941.4" y="718.0"></text>
</g>
<g>
<title>java.lang.String (54 samples, 0.17%)</title><rect x="938.4" y="691.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="941.4" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (38 samples, 0.12%)</title><rect x="940.4" y="691.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="943.4" y="702.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.12%)</title><rect x="940.4" y="675.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="943.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (157 samples, 0.48%)</title><rect x="941.7" y="739.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="944.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (157 samples, 0.48%)</title><rect x="941.7" y="723.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="944.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (157 samples, 0.48%)</title><rect x="941.7" y="707.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="944.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (157 samples, 0.48%)</title><rect x="941.7" y="691.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="944.7" y="702.0"></text>
</g>
<g>
<title>java.lang.String (81 samples, 0.25%)</title><rect x="941.7" y="675.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="944.7" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (76 samples, 0.23%)</title><rect x="944.7" y="675.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="947.7" y="686.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.23%)</title><rect x="944.7" y="659.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="947.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.handleEntityRequest (3,044 samples, 9.38%)</title><rect x="947.4" y="739.0" width="110.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="950.4" y="750.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (122 samples, 0.38%)</title><rect x="947.4" y="723.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="950.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (122 samples, 0.38%)</title><rect x="947.4" y="707.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="950.4" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (122 samples, 0.38%)</title><rect x="947.4" y="691.0" width="4.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="950.4" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.Replicas (10 samples, 0.03%)</title><rect x="951.9" y="723.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="954.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.processRequest (197 samples, 0.61%)</title><rect x="952.2" y="723.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="955.2" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 0.23%)</title><rect x="952.2" y="707.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="955.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 0.23%)</title><rect x="952.2" y="691.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="955.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$160/1885655202.get$Lambda (76 samples, 0.23%)</title><rect x="952.2" y="675.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="955.2" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$160 (76 samples, 0.23%)</title><rect x="952.2" y="659.0" width="2.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="955.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (121 samples, 0.37%)</title><rect x="955.0" y="707.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="958.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (121 samples, 0.37%)</title><rect x="955.0" y="691.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="958.0" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (56 samples, 0.17%)</title><rect x="955.0" y="675.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="958.0" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (65 samples, 0.20%)</title><rect x="957.0" y="675.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="960.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.sendToReplicas (2,121 samples, 6.54%)</title><rect x="959.4" y="723.0" width="77.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="962.4" y="734.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.05%)</title><rect x="959.6" y="707.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="962.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.05%)</title><rect x="959.6" y="691.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="962.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$168/198651204.get$Lambda (8 samples, 0.02%)</title><rect x="959.6" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="962.6" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$168 (8 samples, 0.02%)</title><rect x="959.6" y="659.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="962.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$169/607934019.get$Lambda (7 samples, 0.02%)</title><rect x="959.9" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="962.9" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mariarheon.AsyncServiceImpl$$Lambda$169 (7 samples, 0.02%)</title><rect x="959.9" y="659.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="962.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (13 samples, 0.04%)</title><rect x="960.2" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="963.2" y="718.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (13 samples, 0.04%)</title><rect x="960.2" y="691.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="963.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.allOf (47 samples, 0.14%)</title><rect x="960.6" y="707.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="963.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (47 samples, 0.14%)</title><rect x="960.6" y="691.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="963.6" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (12 samples, 0.04%)</title><rect x="960.6" y="675.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="963.6" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (7 samples, 0.02%)</title><rect x="961.1" y="675.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="964.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (22 samples, 0.07%)</title><rect x="961.3" y="675.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="964.3" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (7 samples, 0.02%)</title><rect x="961.3" y="659.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="964.3" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (10 samples, 0.03%)</title><rect x="961.6" y="659.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="964.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (25 samples, 0.08%)</title><rect x="962.4" y="707.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="965.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (25 samples, 0.08%)</title><rect x="962.4" y="691.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="965.4" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (18 samples, 0.06%)</title><rect x="962.4" y="675.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="965.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (7 samples, 0.02%)</title><rect x="963.0" y="675.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="966.0" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (7 samples, 0.02%)</title><rect x="963.0" y="659.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="966.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (25 samples, 0.08%)</title><rect x="963.3" y="707.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="966.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (25 samples, 0.08%)</title><rect x="963.3" y="691.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="966.3" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (15 samples, 0.05%)</title><rect x="963.3" y="675.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="966.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (10 samples, 0.03%)</title><rect x="963.8" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="966.8" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (10 samples, 0.03%)</title><rect x="963.8" y="659.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="966.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.addMyselfParamToRequest (149 samples, 0.46%)</title><rect x="964.2" y="707.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="967.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.13%)</title><rect x="964.2" y="691.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/687059528.invoke (42 samples, 0.13%)</title><rect x="964.2" y="675.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="967.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.13%)</title><rect x="964.2" y="659.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="967.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (11 samples, 0.03%)</title><rect x="964.2" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="967.2" y="654.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.03%)</title><rect x="964.2" y="627.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="967.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (31 samples, 0.10%)</title><rect x="964.6" y="643.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="967.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (31 samples, 0.10%)</title><rect x="964.6" y="627.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.6" y="638.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.10%)</title><rect x="964.6" y="611.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="967.6" y="622.0"></text>
</g>
<g>
<title>one.nio.http.Request (36 samples, 0.11%)</title><rect x="965.7" y="691.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="968.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (71 samples, 0.22%)</title><rect x="967.0" y="691.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.0" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (71 samples, 0.22%)</title><rect x="967.0" y="675.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="970.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.processRequest (24 samples, 0.07%)</title><rect x="969.6" y="707.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="972.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (18 samples, 0.06%)</title><rect x="969.8" y="691.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="972.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (18 samples, 0.06%)</title><rect x="969.8" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="972.8" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (7 samples, 0.02%)</title><rect x="969.8" y="659.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="972.8" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (11 samples, 0.03%)</title><rect x="970.1" y="659.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="973.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding.getResponsibleNodes (37 samples, 0.11%)</title><rect x="970.5" y="707.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="973.5" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.04%)</title><rect x="970.7" y="691.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="973.7" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.04%)</title><rect x="970.7" y="675.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="973.7" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.04%)</title><rect x="970.7" y="659.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="973.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.04%)</title><rect x="970.7" y="643.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="973.7" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.04%)</title><rect x="970.7" y="627.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.7" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.04%)</title><rect x="970.7" y="611.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="973.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding.getResponsibleNodeIndex (17 samples, 0.05%)</title><rect x="971.2" y="691.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="974.2" y="702.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.05%)</title><rect x="971.2" y="675.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="974.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding.passOn (1,780 samples, 5.49%)</title><rect x="971.8" y="707.0" width="64.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="974.8" y="718.0">ru/mail..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (38 samples, 0.12%)</title><rect x="971.8" y="691.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="974.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (38 samples, 0.12%)</title><rect x="971.8" y="675.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="974.8" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (25 samples, 0.08%)</title><rect x="971.8" y="659.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="974.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="972.7" y="659.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="975.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="972.7" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="975.7" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="972.7" y="627.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="975.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (38 samples, 0.12%)</title><rect x="973.2" y="691.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="976.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (38 samples, 0.12%)</title><rect x="973.2" y="675.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="976.2" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (13 samples, 0.04%)</title><rect x="973.2" y="659.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="976.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.08%)</title><rect x="973.7" y="659.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="976.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.08%)</title><rect x="973.7" y="643.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="976.7" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.08%)</title><rect x="973.7" y="627.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="976.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (1,177 samples, 3.63%)</title><rect x="974.6" y="691.0" width="42.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="977.6" y="702.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,177 samples, 3.63%)</title><rect x="974.6" y="675.0" width="42.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="977.6" y="686.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,177 samples, 3.63%)</title><rect x="974.6" y="659.0" width="42.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="977.6" y="670.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,177 samples, 3.63%)</title><rect x="974.6" y="643.0" width="42.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="977.6" y="654.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.03%)</title><rect x="974.6" y="627.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="977.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="974.6" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="977.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$151/105436391.get$Lambda (10 samples, 0.03%)</title><rect x="974.6" y="595.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="977.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$151 (10 samples, 0.03%)</title><rect x="974.6" y="579.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="977.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (44 samples, 0.14%)</title><rect x="974.9" y="627.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="977.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (44 samples, 0.14%)</title><rect x="974.9" y="611.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="977.9" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (27 samples, 0.08%)</title><rect x="974.9" y="595.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="977.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="975.9" y="595.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="978.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="975.9" y="579.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="978.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.05%)</title><rect x="975.9" y="563.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="978.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (34 samples, 0.10%)</title><rect x="976.5" y="627.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="979.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (34 samples, 0.10%)</title><rect x="976.5" y="611.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="979.5" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (17 samples, 0.05%)</title><rect x="976.5" y="595.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="979.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="977.2" y="595.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="980.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="977.2" y="579.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="980.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.05%)</title><rect x="977.2" y="563.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="980.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (51 samples, 0.16%)</title><rect x="977.8" y="627.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="980.8" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (70 samples, 0.22%)</title><rect x="979.6" y="627.0" width="2.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="982.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (458 samples, 1.41%)</title><rect x="982.2" y="627.0" width="16.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="985.2" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (66 samples, 0.20%)</title><rect x="982.2" y="611.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="985.2" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (57 samples, 0.18%)</title><rect x="982.2" y="595.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="985.2" y="606.0"></text>
</g>
<g>
<title>java/util/List.spliterator (22 samples, 0.07%)</title><rect x="982.2" y="579.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="985.2" y="590.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (22 samples, 0.07%)</title><rect x="982.2" y="563.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="985.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (35 samples, 0.11%)</title><rect x="983.0" y="579.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="986.0" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (35 samples, 0.11%)</title><rect x="983.0" y="563.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="986.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (9 samples, 0.03%)</title><rect x="984.3" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="987.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.03%)</title><rect x="984.3" y="579.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="987.3" y="590.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (9 samples, 0.03%)</title><rect x="984.3" y="563.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="987.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$102/1947896119.get (9 samples, 0.03%)</title><rect x="984.3" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="987.3" y="558.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (9 samples, 0.03%)</title><rect x="984.3" y="531.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="987.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (109 samples, 0.34%)</title><rect x="984.6" y="611.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="987.6" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (109 samples, 0.34%)</title><rect x="984.6" y="595.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="987.6" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (24 samples, 0.07%)</title><rect x="984.6" y="579.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="987.6" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (33 samples, 0.10%)</title><rect x="985.5" y="579.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="988.5" y="590.0"></text>
</g>
<g>
<title>java.util.TreeSet (15 samples, 0.05%)</title><rect x="986.7" y="579.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="989.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="987.2" y="579.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="990.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="987.2" y="563.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="990.2" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/1260444598.get$Lambda (12 samples, 0.04%)</title><rect x="987.2" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="990.2" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$113 (12 samples, 0.04%)</title><rect x="987.2" y="531.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="990.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (25 samples, 0.08%)</title><rect x="987.6" y="579.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="990.6" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (25 samples, 0.08%)</title><rect x="987.6" y="563.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="990.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (9 samples, 0.03%)</title><rect x="988.5" y="611.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="991.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (218 samples, 0.67%)</title><rect x="988.9" y="611.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="991.9" y="622.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (218 samples, 0.67%)</title><rect x="988.9" y="595.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="991.9" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (204 samples, 0.63%)</title><rect x="988.9" y="579.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="991.9" y="590.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (204 samples, 0.63%)</title><rect x="988.9" y="563.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="991.9" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (204 samples, 0.63%)</title><rect x="988.9" y="547.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="991.9" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (39 samples, 0.12%)</title><rect x="988.9" y="531.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="991.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (53 samples, 0.16%)</title><rect x="990.3" y="531.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="993.3" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (53 samples, 0.16%)</title><rect x="990.3" y="515.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="993.3" y="526.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.16%)</title><rect x="990.3" y="499.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="993.3" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (112 samples, 0.35%)</title><rect x="992.2" y="531.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="995.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (112 samples, 0.35%)</title><rect x="992.2" y="515.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="995.2" y="526.0"></text>
</g>
<g>
<title>java.lang.String (46 samples, 0.14%)</title><rect x="992.2" y="499.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="995.2" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (66 samples, 0.20%)</title><rect x="993.9" y="499.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="996.9" y="510.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.20%)</title><rect x="993.9" y="483.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="996.9" y="494.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (14 samples, 0.04%)</title><rect x="996.3" y="579.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="999.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (21 samples, 0.06%)</title><rect x="996.8" y="611.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="999.8" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (21 samples, 0.06%)</title><rect x="996.8" y="595.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="999.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (35 samples, 0.11%)</title><rect x="997.6" y="611.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1000.6" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (14 samples, 0.04%)</title><rect x="997.7" y="595.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1000.7" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.04%)</title><rect x="997.7" y="579.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1000.7" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (16 samples, 0.05%)</title><rect x="998.3" y="595.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1001.3" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (16 samples, 0.05%)</title><rect x="998.3" y="579.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1001.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (352 samples, 1.08%)</title><rect x="998.8" y="627.0" width="12.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1001.8" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (15 samples, 0.05%)</title><rect x="998.8" y="611.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1001.8" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.map (25 samples, 0.08%)</title><rect x="999.4" y="611.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1002.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/2108427967.apply (25 samples, 0.08%)</title><rect x="999.4" y="595.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1002.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (14 samples, 0.04%)</title><rect x="999.4" y="579.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1002.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (11 samples, 0.03%)</title><rect x="999.9" y="579.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1002.9" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (11 samples, 0.03%)</title><rect x="999.9" y="563.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1002.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (33 samples, 0.10%)</title><rect x="1000.3" y="611.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1003.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (13 samples, 0.04%)</title><rect x="1001.5" y="611.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1004.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (13 samples, 0.04%)</title><rect x="1001.5" y="595.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1004.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (14 samples, 0.04%)</title><rect x="1002.0" y="611.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1005.0" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (14 samples, 0.04%)</title><rect x="1002.0" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1005.0" y="606.0"></text>
</g>
<g>
<title>java/util/Optional.of (14 samples, 0.04%)</title><rect x="1002.0" y="579.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1005.0" y="590.0"></text>
</g>
<g>
<title>java.util.Optional (14 samples, 0.04%)</title><rect x="1002.0" y="563.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1005.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (252 samples, 0.78%)</title><rect x="1002.5" y="611.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1005.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (252 samples, 0.78%)</title><rect x="1002.5" y="595.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1005.5" y="606.0"></text>
</g>
<g>
<title>java.lang.Class[] (29 samples, 0.09%)</title><rect x="1002.5" y="579.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1005.5" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.06%)</title><rect x="1003.5" y="579.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1006.5" y="590.0"></text>
</g>
<g>
<title>java.util.LinkedList (23 samples, 0.07%)</title><rect x="1004.2" y="579.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1007.2" y="590.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (107 samples, 0.33%)</title><rect x="1005.0" y="579.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1008.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (107 samples, 0.33%)</title><rect x="1005.0" y="563.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1008.0" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (107 samples, 0.33%)</title><rect x="1005.0" y="547.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1008.0" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (107 samples, 0.33%)</title><rect x="1005.0" y="531.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1008.0" y="542.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (107 samples, 0.33%)</title><rect x="1005.0" y="515.0" width="3.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1008.0" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (43 samples, 0.13%)</title><rect x="1008.9" y="579.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1011.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (43 samples, 0.13%)</title><rect x="1008.9" y="563.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1011.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor11.newInstance (32 samples, 0.10%)</title><rect x="1008.9" y="547.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1011.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (32 samples, 0.10%)</title><rect x="1008.9" y="531.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1011.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (11 samples, 0.03%)</title><rect x="1010.1" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1013.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (11 samples, 0.03%)</title><rect x="1010.1" y="531.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1013.1" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (32 samples, 0.10%)</title><rect x="1010.5" y="579.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1013.5" y="590.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (32 samples, 0.10%)</title><rect x="1010.5" y="563.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1013.5" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (32 samples, 0.10%)</title><rect x="1010.5" y="547.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1013.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (158 samples, 0.49%)</title><rect x="1011.6" y="627.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (40 samples, 0.12%)</title><rect x="1011.6" y="611.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1014.6" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (15 samples, 0.05%)</title><rect x="1011.6" y="595.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1014.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (25 samples, 0.08%)</title><rect x="1012.2" y="595.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1015.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (25 samples, 0.08%)</title><rect x="1012.2" y="579.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1015.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (25 samples, 0.08%)</title><rect x="1012.2" y="563.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1015.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (25 samples, 0.08%)</title><rect x="1012.2" y="547.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1015.2" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (25 samples, 0.08%)</title><rect x="1012.2" y="531.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1015.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.06%)</title><rect x="1013.1" y="611.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1016.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (97 samples, 0.30%)</title><rect x="1013.9" y="611.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1016.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.03%)</title><rect x="1013.9" y="595.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1016.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.03%)</title><rect x="1013.9" y="579.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1016.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$142/558125001.get$Lambda (7 samples, 0.02%)</title><rect x="1014.0" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1017.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$142 (7 samples, 0.02%)</title><rect x="1014.0" y="547.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1017.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (86 samples, 0.27%)</title><rect x="1014.3" y="595.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1017.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (86 samples, 0.27%)</title><rect x="1014.3" y="579.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1017.3" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (48 samples, 0.15%)</title><rect x="1014.3" y="563.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1017.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.12%)</title><rect x="1016.0" y="563.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1019.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.12%)</title><rect x="1016.0" y="547.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1019.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (38 samples, 0.12%)</title><rect x="1016.0" y="531.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1019.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RequestConverter.convert (527 samples, 1.62%)</title><rect x="1017.4" y="691.0" width="19.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1020.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.12%)</title><rect x="1017.4" y="675.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1020.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1402433372.invoke (40 samples, 0.12%)</title><rect x="1017.4" y="659.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1020.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.12%)</title><rect x="1017.4" y="643.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1020.4" y="654.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (11 samples, 0.03%)</title><rect x="1017.4" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1020.4" y="638.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.03%)</title><rect x="1017.4" y="611.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1020.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (29 samples, 0.09%)</title><rect x="1017.8" y="627.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1020.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (29 samples, 0.09%)</title><rect x="1017.8" y="611.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1020.8" y="622.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.09%)</title><rect x="1017.8" y="595.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1020.8" y="606.0"></text>
</g>
<g>
<title>java/net/URI.create (256 samples, 0.79%)</title><rect x="1018.8" y="675.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1021.8" y="686.0"></text>
</g>
<g>
<title>java.net.URI (43 samples, 0.13%)</title><rect x="1018.8" y="659.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1021.8" y="670.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (213 samples, 0.66%)</title><rect x="1020.4" y="659.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1023.4" y="670.0"></text>
</g>
<g>
<title>java.net.URI$Parser (15 samples, 0.05%)</title><rect x="1020.4" y="643.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1023.4" y="654.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (198 samples, 0.61%)</title><rect x="1021.0" y="643.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1024.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.09%)</title><rect x="1021.0" y="627.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1024.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.09%)</title><rect x="1021.0" y="611.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1024.0" y="622.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.02%)</title><rect x="1021.0" y="595.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1024.0" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.06%)</title><rect x="1021.2" y="595.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1024.2" y="606.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.06%)</title><rect x="1021.2" y="579.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1024.2" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (170 samples, 0.52%)</title><rect x="1022.0" y="627.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1025.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (86 samples, 0.27%)</title><rect x="1022.0" y="611.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1025.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (86 samples, 0.27%)</title><rect x="1022.0" y="595.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1025.0" y="606.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.10%)</title><rect x="1022.0" y="579.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1025.0" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (55 samples, 0.17%)</title><rect x="1023.1" y="579.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1026.1" y="590.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.17%)</title><rect x="1023.1" y="563.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1026.1" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (84 samples, 0.26%)</title><rect x="1025.1" y="611.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1028.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (44 samples, 0.14%)</title><rect x="1025.1" y="595.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1028.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (44 samples, 0.14%)</title><rect x="1025.1" y="579.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1028.1" y="590.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.06%)</title><rect x="1025.1" y="563.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1028.1" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.08%)</title><rect x="1025.8" y="563.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1028.8" y="574.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.08%)</title><rect x="1025.8" y="547.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1028.8" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (40 samples, 0.12%)</title><rect x="1026.7" y="595.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1029.7" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (40 samples, 0.12%)</title><rect x="1026.7" y="579.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1029.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (40 samples, 0.12%)</title><rect x="1026.7" y="563.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1029.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.12%)</title><rect x="1026.7" y="547.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1029.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.04%)</title><rect x="1026.7" y="531.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1029.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.08%)</title><rect x="1027.2" y="531.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1030.2" y="542.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.08%)</title><rect x="1027.2" y="515.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1030.2" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (13 samples, 0.04%)</title><rect x="1028.2" y="675.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1031.2" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (13 samples, 0.04%)</title><rect x="1028.2" y="659.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1031.2" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (65 samples, 0.20%)</title><rect x="1028.6" y="675.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1031.6" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (24 samples, 0.07%)</title><rect x="1028.6" y="659.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1031.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (41 samples, 0.13%)</title><rect x="1029.5" y="659.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1032.5" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (8 samples, 0.02%)</title><rect x="1029.5" y="643.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1032.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (33 samples, 0.10%)</title><rect x="1029.8" y="643.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1032.8" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap (33 samples, 0.10%)</title><rect x="1029.8" y="627.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1032.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (153 samples, 0.47%)</title><rect x="1031.0" y="675.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1034.0" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (26 samples, 0.08%)</title><rect x="1031.0" y="659.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1034.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (127 samples, 0.39%)</title><rect x="1031.9" y="659.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1034.9" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (98 samples, 0.30%)</title><rect x="1031.9" y="643.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1034.9" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (98 samples, 0.30%)</title><rect x="1031.9" y="627.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1034.9" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList (19 samples, 0.06%)</title><rect x="1031.9" y="611.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1034.9" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (33 samples, 0.10%)</title><rect x="1032.6" y="611.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1035.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.05%)</title><rect x="1034.0" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1037.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.05%)</title><rect x="1034.0" y="595.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1037.0" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/1260444598.get$Lambda (16 samples, 0.05%)</title><rect x="1034.0" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1037.0" y="590.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$113 (16 samples, 0.05%)</title><rect x="1034.0" y="563.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1037.0" y="574.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (26 samples, 0.08%)</title><rect x="1034.6" y="611.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1037.6" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (26 samples, 0.08%)</title><rect x="1034.6" y="595.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1037.6" y="606.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (29 samples, 0.09%)</title><rect x="1035.5" y="643.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1038.5" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (29 samples, 0.09%)</title><rect x="1035.5" y="627.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1038.5" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (29 samples, 0.09%)</title><rect x="1035.5" y="611.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1038.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.trySendResponse (594 samples, 1.83%)</title><rect x="1036.6" y="723.0" width="21.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1039.6" y="734.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (594 samples, 1.83%)</title><rect x="1036.6" y="707.0" width="21.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1039.6" y="718.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (388 samples, 1.20%)</title><rect x="1036.6" y="691.0" width="14.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1039.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (298 samples, 0.92%)</title><rect x="1036.6" y="675.0" width="10.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1039.6" y="686.0"></text>
</g>
<g>
<title>one.nio.util.ByteArrayBuilder (70 samples, 0.22%)</title><rect x="1036.6" y="659.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1039.6" y="670.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (228 samples, 0.70%)</title><rect x="1039.1" y="659.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1042.1" y="670.0"></text>
</g>
<g>
<title>byte[] (221 samples, 0.68%)</title><rect x="1039.1" y="643.0" width="8.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1042.1" y="654.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.02%)</title><rect x="1047.1" y="643.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1050.1" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (90 samples, 0.28%)</title><rect x="1047.4" y="675.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1050.4" y="686.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (90 samples, 0.28%)</title><rect x="1047.4" y="659.0" width="3.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1050.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (206 samples, 0.63%)</title><rect x="1050.7" y="691.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1053.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (206 samples, 0.63%)</title><rect x="1050.7" y="675.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1053.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (206 samples, 0.63%)</title><rect x="1050.7" y="659.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1053.7" y="670.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.22%)</title><rect x="1050.7" y="643.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1053.7" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (135 samples, 0.42%)</title><rect x="1053.2" y="643.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1056.2" y="654.0"></text>
</g>
<g>
<title>byte[] (135 samples, 0.42%)</title><rect x="1053.2" y="627.0" width="5.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1056.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (170 samples, 0.52%)</title><rect x="1058.2" y="755.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1061.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (170 samples, 0.52%)</title><rect x="1058.2" y="739.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1061.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (170 samples, 0.52%)</title><rect x="1058.2" y="723.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1061.2" y="734.0"></text>
</g>
<g>
<title>java.lang.String (96 samples, 0.30%)</title><rect x="1058.2" y="707.0" width="3.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1061.2" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (74 samples, 0.23%)</title><rect x="1061.6" y="707.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.6" y="718.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.23%)</title><rect x="1061.6" y="691.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1064.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (839 samples, 2.59%)</title><rect x="1064.3" y="787.0" width="30.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1067.3" y="798.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (97 samples, 0.30%)</title><rect x="1064.3" y="771.0" width="3.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1067.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (219 samples, 0.68%)</title><rect x="1067.9" y="771.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1070.9" y="782.0"></text>
</g>
<g>
<title>java.lang.String[] (219 samples, 0.68%)</title><rect x="1067.9" y="755.0" width="7.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1070.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (523 samples, 1.61%)</title><rect x="1075.8" y="771.0" width="19.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1078.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (523 samples, 1.61%)</title><rect x="1075.8" y="755.0" width="19.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1078.8" y="766.0"></text>
</g>
<g>
<title>char[] (327 samples, 1.01%)</title><rect x="1075.8" y="739.0" width="11.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1078.8" y="750.0"></text>
</g>
<g>
<title>java.lang.String (69 samples, 0.21%)</title><rect x="1087.7" y="739.0" width="2.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1090.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (127 samples, 0.39%)</title><rect x="1090.2" y="739.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1093.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (127 samples, 0.39%)</title><rect x="1090.2" y="723.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1093.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (127 samples, 0.39%)</title><rect x="1090.2" y="707.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1093.2" y="718.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.39%)</title><rect x="1090.2" y="691.0" width="4.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1093.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (66 samples, 0.20%)</title><rect x="1094.9" y="787.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1097.9" y="798.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.20%)</title><rect x="1094.9" y="771.0" width="2.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1097.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (129 samples, 0.40%)</title><rect x="1097.3" y="787.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1100.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (129 samples, 0.40%)</title><rect x="1097.3" y="771.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1100.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (129 samples, 0.40%)</title><rect x="1097.3" y="755.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1100.3" y="766.0"></text>
</g>
<g>
<title>java.lang.String (76 samples, 0.23%)</title><rect x="1097.3" y="739.0" width="2.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1100.3" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (53 samples, 0.16%)</title><rect x="1100.0" y="739.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1103.0" y="750.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.16%)</title><rect x="1100.0" y="723.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1103.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,421 samples, 7.46%)</title><rect x="1101.9" y="787.0" width="88.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1104.9" y="798.0">one/nio/ut..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,421 samples, 7.46%)</title><rect x="1101.9" y="771.0" width="88.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1104.9" y="782.0">one/nio/ut..</text>
</g>
<g>
<title>char[] (1,246 samples, 3.84%)</title><rect x="1101.9" y="755.0" width="45.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1104.9" y="766.0">char[]</text>
</g>
<g>
<title>char[] (30 samples, 0.09%)</title><rect x="1147.3" y="755.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1150.3" y="766.0"></text>
</g>
<g>
<title>java.lang.String (344 samples, 1.06%)</title><rect x="1148.4" y="755.0" width="12.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1151.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (801 samples, 2.47%)</title><rect x="1160.9" y="755.0" width="29.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1163.9" y="766.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (801 samples, 2.47%)</title><rect x="1160.9" y="739.0" width="29.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1163.9" y="750.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (801 samples, 2.47%)</title><rect x="1160.9" y="723.0" width="29.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1163.9" y="734.0">ja..</text>
</g>
<g>
<title>byte[] (800 samples, 2.47%)</title><rect x="1160.9" y="707.0" width="29.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1163.9" y="718.0">by..</text>
</g>
</g>
</svg>
