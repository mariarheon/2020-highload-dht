<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="773"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="773"> </text>
<g id="frames">
<g>
<title>all (1,615 samples, 100.00%)</title><rect x="10.0" y="739.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="750.0">all</text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.06%)</title><rect x="10.0" y="723.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="10.0" y="707.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>JavaCallWrapper::~JavaCallWrapper() (1 samples, 0.06%)</title><rect x="10.0" y="691.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (18 samples, 1.11%)</title><rect x="10.7" y="723.0" width="13.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.7" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (18 samples, 1.11%)</title><rect x="10.7" y="707.0" width="13.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.7" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (16 samples, 0.99%)</title><rect x="12.2" y="691.0" width="11.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="15.2" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (12 samples, 0.74%)</title><rect x="12.9" y="675.0" width="8.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="15.9" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.12%)</title><rect x="20.2" y="659.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="23.2" y="670.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.06%)</title><rect x="21.7" y="675.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="24.7" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.12%)</title><rect x="22.4" y="675.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="25.4" y="686.0"></text>
</g>
<g>
<title>[no_Java_frame] (2 samples, 0.12%)</title><rect x="23.9" y="723.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="26.9" y="734.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.12%)</title><rect x="25.3" y="723.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="28.3" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.12%)</title><rect x="25.3" y="707.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="28.3" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.12%)</title><rect x="25.3" y="691.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="28.3" y="702.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="25.3" y="675.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="28.3" y="686.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="25.3" y="659.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="28.3" y="670.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="26.1" y="675.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="29.1" y="686.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.06%)</title><rect x="26.1" y="659.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="29.1" y="670.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (1 samples, 0.06%)</title><rect x="26.1" y="643.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="29.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.12%)</title><rect x="26.8" y="723.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="29.8" y="734.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="26.8" y="707.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="29.8" y="718.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="27.5" y="707.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="30.5" y="718.0"></text>
</g>
<g>
<title>[unknown_Java] (29 samples, 1.80%)</title><rect x="28.3" y="723.0" width="21.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="31.3" y="734.0">[..</text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.06%)</title><rect x="28.3" y="707.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="31.3" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="29.0" y="707.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="32.0" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (1 samples, 0.06%)</title><rect x="29.0" y="691.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="32.0" y="702.0"></text>
</g>
<g>
<title>__clock_gettime (24 samples, 1.49%)</title><rect x="29.7" y="707.0" width="17.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="32.7" y="718.0"></text>
</g>
<g>
<title>[vdso] (13 samples, 0.80%)</title><rect x="31.9" y="691.0" width="9.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="34.9" y="702.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.50%)</title><rect x="41.4" y="691.0" width="5.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="44.4" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.06%)</title><rect x="47.3" y="707.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="50.3" y="718.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.12%)</title><rect x="48.0" y="707.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="51.0" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,005 samples, 62.23%)</title><rect x="49.5" y="723.0" width="734.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.5" y="734.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,005 samples, 62.23%)</title><rect x="49.5" y="707.0" width="734.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="52.5" y="718.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,005 samples, 62.23%)</title><rect x="49.5" y="691.0" width="734.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.5" y="702.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (3 samples, 0.19%)</title><rect x="50.9" y="675.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="53.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (433 samples, 26.81%)</title><rect x="53.1" y="675.0" width="316.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.1" y="686.0">java/util/concurrent/CompletableFuture$Asyn..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (5 samples, 0.31%)</title><rect x="54.6" y="659.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.6" y="670.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.19%)</title><rect x="55.3" y="643.0" width="2.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="58.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$145/1269260830.get (1 samples, 0.06%)</title><rect x="57.5" y="643.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (247 samples, 15.29%)</title><rect x="58.2" y="659.0" width="180.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.2" y="670.0">java/util/concurrent/Co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (9 samples, 0.56%)</title><rect x="58.2" y="643.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.56%)</title><rect x="58.2" y="627.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.50%)</title><rect x="59.0" y="611.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.0" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.19%)</title><rect x="59.0" y="595.0" width="2.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="62.0" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.06%)</title><rect x="59.0" y="579.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="62.0" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="59.7" y="579.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="62.7" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="60.4" y="579.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="63.4" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.31%)</title><rect x="61.1" y="595.0" width="3.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="64.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (1 samples, 0.06%)</title><rect x="64.8" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$168/198651204.accept (1 samples, 0.06%)</title><rect x="64.8" y="627.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$sendToReplicas$0 (1 samples, 0.06%)</title><rect x="64.8" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="67.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.trySendResponse (1 samples, 0.06%)</title><rect x="64.8" y="595.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.06%)</title><rect x="64.8" y="579.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.06%)</title><rect x="64.8" y="563.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.8" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.06%)</title><rect x="64.8" y="547.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.8" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.06%)</title><rect x="64.8" y="531.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.8" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.06%)</title><rect x="64.8" y="515.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.8" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.06%)</title><rect x="64.8" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.8" y="510.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.06%)</title><rect x="64.8" y="483.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="67.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (237 samples, 14.67%)</title><rect x="65.5" y="643.0" width="173.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.5" y="654.0">java/util/concurrent/C..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.12%)</title><rect x="67.0" y="627.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="70.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.12%)</title><rect x="67.0" y="611.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.12%)</title><rect x="67.0" y="595.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.12%)</title><rect x="67.0" y="579.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.12%)</title><rect x="67.0" y="563.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="70.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.12%)</title><rect x="67.0" y="547.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.0" y="558.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="67.7" y="531.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="70.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$135/69462153.apply (233 samples, 14.43%)</title><rect x="68.5" y="627.0" width="170.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.5" y="638.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (233 samples, 14.43%)</title><rect x="68.5" y="611.0" width="170.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.5" y="622.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (233 samples, 14.43%)</title><rect x="68.5" y="595.0" width="170.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="71.5" y="606.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.06%)</title><rect x="70.6" y="579.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.06%)</title><rect x="70.6" y="563.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.06%)</title><rect x="70.6" y="547.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.06%)</title><rect x="70.6" y="531.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.06%)</title><rect x="71.4" y="579.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.06%)</title><rect x="71.4" y="563.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="74.4" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="71.4" y="547.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="74.4" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="71.4" y="531.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="74.4" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="71.4" y="515.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="74.4" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="71.4" y="499.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="74.4" y="510.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="71.4" y="483.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="74.4" y="494.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="71.4" y="467.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="74.4" y="478.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.06%)</title><rect x="71.4" y="451.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="74.4" y="462.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.06%)</title><rect x="71.4" y="435.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="74.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (202 samples, 12.51%)</title><rect x="72.1" y="579.0" width="147.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.1" y="590.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (202 samples, 12.51%)</title><rect x="72.1" y="563.0" width="147.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.1" y="574.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (202 samples, 12.51%)</title><rect x="72.1" y="547.0" width="147.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="75.1" y="558.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (96 samples, 5.94%)</title><rect x="72.1" y="531.0" width="70.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.1" y="542.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (96 samples, 5.94%)</title><rect x="72.1" y="515.0" width="70.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="75.1" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (95 samples, 5.88%)</title><rect x="72.1" y="499.0" width="69.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.1" y="510.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$254/927503844.apply (95 samples, 5.88%)</title><rect x="72.1" y="483.0" width="69.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.1" y="494.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (95 samples, 5.88%)</title><rect x="72.1" y="467.0" width="69.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.1" y="478.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (95 samples, 5.88%)</title><rect x="72.1" y="451.0" width="69.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="75.1" y="462.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$161/2060274688.apply (1 samples, 0.06%)</title><rect x="72.1" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="75.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.06%)</title><rect x="72.1" y="419.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.06%)</title><rect x="72.1" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (1 samples, 0.06%)</title><rect x="72.1" y="387.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="75.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$164/1669924159.apply (94 samples, 5.82%)</title><rect x="72.8" y="435.0" width="68.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="75.8" y="446.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (94 samples, 5.82%)</title><rect x="72.8" y="419.0" width="68.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.8" y="430.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.06%)</title><rect x="72.8" y="403.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.06%)</title><rect x="72.8" y="387.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (93 samples, 5.76%)</title><rect x="73.6" y="403.0" width="67.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.6" y="414.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="73.6" y="387.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="73.6" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$362/262015866.get$Lambda (1 samples, 0.06%)</title><rect x="73.6" y="355.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.6" y="366.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="73.6" y="339.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="76.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (83 samples, 5.14%)</title><rect x="74.3" y="387.0" width="60.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.3" y="398.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (82 samples, 5.08%)</title><rect x="75.0" y="371.0" width="59.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.0" y="382.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.12%)</title><rect x="75.0" y="355.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$359/49379817.apply (80 samples, 4.95%)</title><rect x="76.5" y="355.0" width="58.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.5" y="366.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (79 samples, 4.89%)</title><rect x="77.2" y="339.0" width="57.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.2" y="350.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.06%)</title><rect x="78.0" y="323.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="81.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.06%)</title><rect x="78.0" y="307.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="78.0" y="291.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="81.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="78.0" y="275.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="81.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1 samples, 0.06%)</title><rect x="78.0" y="259.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (21 samples, 1.30%)</title><rect x="78.7" y="323.0" width="15.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (21 samples, 1.30%)</title><rect x="78.7" y="307.0" width="15.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (5 samples, 0.31%)</title><rect x="78.7" y="291.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5 samples, 0.31%)</title><rect x="78.7" y="275.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5 samples, 0.31%)</title><rect x="78.7" y="259.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.7" y="270.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="78.7" y="243.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="81.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.25%)</title><rect x="79.4" y="243.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.25%)</title><rect x="79.4" y="227.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.4" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.19%)</title><rect x="80.1" y="211.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.06%)</title><rect x="81.6" y="195.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.6" y="206.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="81.6" y="179.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="84.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (16 samples, 0.99%)</title><rect x="82.3" y="291.0" width="11.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="85.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (16 samples, 0.99%)</title><rect x="82.3" y="275.0" width="11.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="85.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (14 samples, 0.87%)</title><rect x="82.3" y="259.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (13 samples, 0.80%)</title><rect x="82.3" y="243.0" width="9.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (13 samples, 0.80%)</title><rect x="82.3" y="227.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.3" y="238.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="82.3" y="211.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="85.3" y="222.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="82.3" y="195.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="85.3" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="82.3" y="179.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="85.3" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.06%)</title><rect x="82.3" y="163.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="85.3" y="174.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (1 samples, 0.06%)</title><rect x="83.1" y="211.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="86.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (11 samples, 0.68%)</title><rect x="83.8" y="211.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.8" y="222.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="86.7" y="195.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="89.7" y="206.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.06%)</title><rect x="86.7" y="179.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="89.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (6 samples, 0.37%)</title><rect x="87.4" y="195.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.4" y="206.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.06%)</title><rect x="87.4" y="179.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="90.4" y="190.0"></text>
</g>
<g>
<title>__libc_write (4 samples, 0.25%)</title><rect x="88.2" y="179.0" width="2.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="91.2" y="190.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="91.1" y="179.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="94.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (1 samples, 0.06%)</title><rect x="91.8" y="243.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.8" y="254.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="91.8" y="227.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="94.8" y="238.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.06%)</title><rect x="91.8" y="211.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="94.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (2 samples, 0.12%)</title><rect x="92.6" y="259.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="95.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (2 samples, 0.12%)</title><rect x="92.6" y="243.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.12%)</title><rect x="92.6" y="227.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="95.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (56 samples, 3.47%)</title><rect x="94.0" y="323.0" width="40.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.0" y="334.0">jdk..</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.19%)</title><rect x="94.0" y="307.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.19%)</title><rect x="94.0" y="291.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (3 samples, 0.19%)</title><rect x="94.0" y="275.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="96.2" y="307.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.12%)</title><rect x="96.9" y="307.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.9" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.12%)</title><rect x="96.9" y="291.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="99.9" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.12%)</title><rect x="96.9" y="275.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.9" y="286.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="97.7" y="259.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="100.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.06%)</title><rect x="98.4" y="307.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="101.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="98.4" y="291.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="98.4" y="275.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.4" y="286.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="98.4" y="259.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="101.4" y="270.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="98.4" y="243.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="101.4" y="254.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="98.4" y="227.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="101.4" y="238.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="98.4" y="211.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="101.4" y="222.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="98.4" y="195.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="101.4" y="206.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::myThread() (1 samples, 0.06%)</title><rect x="98.4" y="179.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="101.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (39 samples, 2.41%)</title><rect x="99.1" y="307.0" width="28.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="102.1" y="318.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (4 samples, 0.25%)</title><rect x="99.1" y="291.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.1" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.25%)</title><rect x="99.1" y="275.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.1" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.25%)</title><rect x="99.1" y="259.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.1" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.25%)</title><rect x="99.1" y="243.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="102.1" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.25%)</title><rect x="99.1" y="227.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.25%)</title><rect x="99.1" y="211.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.1" y="222.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="100.6" y="195.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="103.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="100.6" y="179.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="103.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.06%)</title><rect x="100.6" y="163.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="103.6" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.canEncode (1 samples, 0.06%)</title><rect x="100.6" y="147.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.6" y="158.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="101.3" y="195.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="104.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (15 samples, 0.93%)</title><rect x="102.1" y="291.0" width="10.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.12%)</title><rect x="102.8" y="275.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.8" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.12%)</title><rect x="102.8" y="259.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.8" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.12%)</title><rect x="102.8" y="243.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.8" y="254.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="103.5" y="227.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="106.5" y="238.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext (5 samples, 0.31%)</title><rect x="104.3" y="275.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.3" y="286.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.12%)</title><rect x="106.4" y="259.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="109.4" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getValue (1 samples, 0.06%)</title><rect x="107.9" y="275.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="110.9" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$386/1190358281.test (6 samples, 0.37%)</title><rect x="108.6" y="275.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="111.6" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.hasNext (1 samples, 0.06%)</title><rect x="108.6" y="259.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.6" y="270.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (5 samples, 0.31%)</title><rect x="109.4" y="259.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="112.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$226/542284611.test (1 samples, 0.06%)</title><rect x="110.1" y="243.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$static$0 (1 samples, 0.06%)</title><rect x="110.1" y="227.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.06%)</title><rect x="110.1" y="211.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.1" y="222.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="110.1" y="195.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="110.1" y="179.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$38/90205195.test (3 samples, 0.19%)</title><rect x="110.8" y="243.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (3 samples, 0.19%)</title><rect x="110.8" y="227.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.8" y="238.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$27/24606376.test (3 samples, 0.19%)</title><rect x="110.8" y="211.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.8" y="222.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (3 samples, 0.19%)</title><rect x="110.8" y="195.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$26/688766789.test (3 samples, 0.19%)</title><rect x="110.8" y="179.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (3 samples, 0.19%)</title><rect x="110.8" y="163.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.19%)</title><rect x="110.8" y="147.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.19%)</title><rect x="110.8" y="131.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.19%)</title><rect x="110.8" y="115.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.8" y="126.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="112.3" y="99.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="115.3" y="110.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="112.3" y="83.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.3" y="94.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.06%)</title><rect x="112.3" y="67.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="115.3" y="78.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.06%)</title><rect x="112.3" y="51.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="115.3" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (1 samples, 0.06%)</title><rect x="113.0" y="291.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (1 samples, 0.06%)</title><rect x="113.0" y="275.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.0" y="286.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.06%)</title><rect x="113.0" y="259.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.0" y="270.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="113.0" y="243.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="116.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="113.0" y="227.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (19 samples, 1.18%)</title><rect x="113.8" y="291.0" width="13.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="116.8" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (19 samples, 1.18%)</title><rect x="113.8" y="275.0" width="13.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.8" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (19 samples, 1.18%)</title><rect x="113.8" y="259.0" width="13.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.8" y="270.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="114.5" y="243.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="117.5" y="254.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="114.5" y="227.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="117.5" y="238.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="115.2" y="243.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="118.2" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (16 samples, 0.99%)</title><rect x="115.9" y="243.0" width="11.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="118.9" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/1260444598.accept (14 samples, 0.87%)</title><rect x="116.7" y="227.0" width="10.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.7" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (14 samples, 0.87%)</title><rect x="116.7" y="211.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.7" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.19%)</title><rect x="119.6" y="195.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="122.6" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$394/1894267442.accept (3 samples, 0.19%)</title><rect x="119.6" y="179.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.6" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.12%)</title><rect x="120.3" y="163.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="123.3" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="120.3" y="147.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="123.3" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="120.3" y="131.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.3" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.12%)</title><rect x="120.3" y="115.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.3" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.12%)</title><rect x="120.3" y="99.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="123.3" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.12%)</title><rect x="120.3" y="83.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.3" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.43%)</title><rect x="121.8" y="195.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.8" y="206.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="123.3" y="179.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.3" y="190.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="123.3" y="163.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.3" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.06%)</title><rect x="123.3" y="147.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.3" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (4 samples, 0.25%)</title><rect x="124.0" y="179.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="127.0" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.06%)</title><rect x="126.9" y="227.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (10 samples, 0.62%)</title><rect x="127.6" y="307.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.6" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.62%)</title><rect x="127.6" y="291.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="130.6" y="302.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.19%)</title><rect x="130.6" y="275.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.6" y="286.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.19%)</title><rect x="130.6" y="259.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.19%)</title><rect x="130.6" y="243.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.6" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.19%)</title><rect x="132.7" y="275.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="135.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (9 samples, 0.56%)</title><rect x="134.9" y="387.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (4 samples, 0.25%)</title><rect x="137.9" y="371.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.25%)</title><rect x="137.9" y="355.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.25%)</title><rect x="137.9" y="339.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.25%)</title><rect x="137.9" y="323.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4 samples, 0.25%)</title><rect x="137.9" y="307.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.25%)</title><rect x="137.9" y="291.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.run (4 samples, 0.25%)</title><rect x="137.9" y="275.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (4 samples, 0.25%)</title><rect x="137.9" y="259.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="140.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.19%)</title><rect x="138.6" y="243.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (3 samples, 0.19%)</title><rect x="138.6" y="227.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="141.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (3 samples, 0.19%)</title><rect x="138.6" y="211.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="141.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (3 samples, 0.19%)</title><rect x="138.6" y="195.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="141.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.06%)</title><rect x="140.8" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.06%)</title><rect x="140.8" y="355.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="143.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.06%)</title><rect x="140.8" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.06%)</title><rect x="140.8" y="323.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/logger/AbstractLoggerWrapper.isLoggable (1 samples, 0.06%)</title><rect x="140.8" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.8" y="318.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.06%)</title><rect x="140.8" y="291.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="143.8" y="302.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (1 samples, 0.06%)</title><rect x="140.8" y="275.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="143.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.06%)</title><rect x="141.5" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$161/2060274688.apply (1 samples, 0.06%)</title><rect x="141.5" y="483.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="144.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.06%)</title><rect x="141.5" y="467.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.06%)</title><rect x="141.5" y="451.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (1 samples, 0.06%)</title><rect x="141.5" y="435.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.12%)</title><rect x="142.2" y="531.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.06%)</title><rect x="143.0" y="515.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.06%)</title><rect x="143.0" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.0" y="510.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$83/249034932.apply (1 samples, 0.06%)</title><rect x="143.0" y="483.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (104 samples, 6.44%)</title><rect x="143.7" y="531.0" width="76.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.7" y="542.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="143.7" y="515.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="143.7" y="499.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="143.7" y="483.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.06%)</title><rect x="143.7" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (103 samples, 6.38%)</title><rect x="144.4" y="515.0" width="75.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.4" y="526.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (98 samples, 6.07%)</title><rect x="144.4" y="499.0" width="71.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.4" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (98 samples, 6.07%)</title><rect x="144.4" y="483.0" width="71.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.4" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (98 samples, 6.07%)</title><rect x="144.4" y="467.0" width="71.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.4" y="478.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="144.4" y="451.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="144.4" y="435.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="147.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.06%)</title><rect x="144.4" y="419.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.06%)</title><rect x="144.4" y="403.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="144.4" y="387.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="144.4" y="371.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.4" y="382.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="144.4" y="355.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="147.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$171/1166121287.apply (97 samples, 6.01%)</title><rect x="145.2" y="451.0" width="70.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.2" y="462.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (97 samples, 6.01%)</title><rect x="145.2" y="435.0" width="70.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="148.2" y="446.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (97 samples, 6.01%)</title><rect x="145.2" y="419.0" width="70.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="148.2" y="430.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (51 samples, 3.16%)</title><rect x="145.2" y="403.0" width="37.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.2" y="414.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (50 samples, 3.10%)</title><rect x="145.9" y="387.0" width="36.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="148.9" y="398.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (50 samples, 3.10%)</title><rect x="145.9" y="371.0" width="36.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.9" y="382.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$239/1117950874.apply (50 samples, 3.10%)</title><rect x="145.9" y="355.0" width="36.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.9" y="366.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (50 samples, 3.10%)</title><rect x="145.9" y="339.0" width="36.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="148.9" y="350.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (50 samples, 3.10%)</title><rect x="145.9" y="323.0" width="36.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.9" y="334.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (50 samples, 3.10%)</title><rect x="145.9" y="307.0" width="36.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.9" y="318.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (40 samples, 2.48%)</title><rect x="145.9" y="291.0" width="29.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.9" y="302.0">jd..</text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (1 samples, 0.06%)</title><rect x="145.9" y="275.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.9" y="286.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (1 samples, 0.06%)</title><rect x="145.9" y="259.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="148.9" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (1 samples, 0.06%)</title><rect x="145.9" y="243.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.9" y="254.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeBlock (1 samples, 0.06%)</title><rect x="145.9" y="227.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (33 samples, 2.04%)</title><rect x="146.6" y="275.0" width="24.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.6" y="286.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (32 samples, 1.98%)</title><rect x="146.6" y="259.0" width="23.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.6" y="270.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (32 samples, 1.98%)</title><rect x="146.6" y="243.0" width="23.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.6" y="254.0">j..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (31 samples, 1.92%)</title><rect x="147.4" y="227.0" width="22.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.4" y="238.0">j..</text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="148.1" y="211.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="151.1" y="222.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (22 samples, 1.36%)</title><rect x="148.8" y="211.0" width="16.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="151.8" y="222.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.06%)</title><rect x="150.3" y="195.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="153.3" y="206.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.06%)</title><rect x="151.0" y="195.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="154.0" y="206.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.19%)</title><rect x="151.7" y="195.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="154.7" y="206.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.06%)</title><rect x="152.5" y="179.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="155.5" y="190.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.06%)</title><rect x="153.2" y="179.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="156.2" y="190.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.06%)</title><rect x="153.9" y="195.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="156.9" y="206.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.25%)</title><rect x="154.7" y="195.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="157.7" y="206.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.06%)</title><rect x="155.4" y="179.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="158.4" y="190.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="156.1" y="179.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="159.1" y="190.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="156.1" y="163.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="159.1" y="174.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (1 samples, 0.06%)</title><rect x="156.9" y="179.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="159.9" y="190.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (10 samples, 0.62%)</title><rect x="157.6" y="195.0" width="7.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="160.6" y="206.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.06%)</title><rect x="162.0" y="179.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="165.0" y="190.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.06%)</title><rect x="162.7" y="179.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="165.7" y="190.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="163.4" y="179.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="166.4" y="190.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.06%)</title><rect x="163.4" y="163.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="166.4" y="174.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="163.4" y="147.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="166.4" y="158.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="163.4" y="131.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="166.4" y="142.0"></text>
</g>
<g>
<title>nmethod::metadata_at(int) const (1 samples, 0.06%)</title><rect x="164.2" y="179.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="167.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$22/1176735295.run (6 samples, 0.37%)</title><rect x="164.9" y="211.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="167.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (4 samples, 0.25%)</title><rect x="166.4" y="195.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.4" y="206.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (4 samples, 0.25%)</title><rect x="166.4" y="179.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="169.4" y="190.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (3 samples, 0.19%)</title><rect x="166.4" y="163.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="169.4" y="174.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.06%)</title><rect x="168.6" y="163.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.6" y="174.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.06%)</title><rect x="168.6" y="147.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="171.6" y="158.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.06%)</title><rect x="168.6" y="131.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="168.6" y="115.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="171.6" y="126.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="169.3" y="211.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="172.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.setParameter (1 samples, 0.06%)</title><rect x="170.0" y="259.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (6 samples, 0.37%)</title><rect x="170.7" y="275.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.25%)</title><rect x="170.7" y="259.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="173.7" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.25%)</title><rect x="170.7" y="243.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.7" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.25%)</title><rect x="170.7" y="227.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.25%)</title><rect x="170.7" y="211.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.7" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.25%)</title><rect x="170.7" y="195.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="173.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.25%)</title><rect x="170.7" y="179.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="173.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteBuffer (2 samples, 0.12%)</title><rect x="173.7" y="259.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="176.7" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putInt (2 samples, 0.12%)</title><rect x="173.7" y="243.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putIntUnaligned (2 samples, 0.12%)</title><rect x="173.7" y="227.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="176.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (2 samples, 0.12%)</title><rect x="173.7" y="211.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="176.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (10 samples, 0.62%)</title><rect x="175.1" y="291.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.25%)</title><rect x="175.9" y="275.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.9" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.25%)</title><rect x="175.9" y="259.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.9" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.25%)</title><rect x="175.9" y="243.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="178.9" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.25%)</title><rect x="175.9" y="227.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.9" y="238.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.12%)</title><rect x="177.3" y="211.0" width="1.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="180.3" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.31%)</title><rect x="178.8" y="275.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.8" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.06%)</title><rect x="181.7" y="259.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="184.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (46 samples, 2.85%)</title><rect x="182.4" y="403.0" width="33.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.4" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (45 samples, 2.79%)</title><rect x="182.4" y="387.0" width="32.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="185.4" y="398.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (3 samples, 0.19%)</title><rect x="182.4" y="371.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="185.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (8 samples, 0.50%)</title><rect x="184.6" y="371.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="187.6" y="382.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (1 samples, 0.06%)</title><rect x="184.6" y="355.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="187.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (7 samples, 0.43%)</title><rect x="185.4" y="355.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.4" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.12%)</title><rect x="186.8" y="339.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="189.8" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.12%)</title><rect x="186.8" y="323.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="189.8" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.12%)</title><rect x="186.8" y="307.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="189.8" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.12%)</title><rect x="186.8" y="291.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="189.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (3 samples, 0.19%)</title><rect x="188.3" y="339.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.3" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="188.3" y="323.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.3" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="188.3" y="307.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (2 samples, 0.12%)</title><rect x="189.0" y="323.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.0" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.remove (2 samples, 0.12%)</title><rect x="189.0" y="307.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (34 samples, 2.11%)</title><rect x="190.5" y="371.0" width="24.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="193.5" y="382.0">j..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (34 samples, 2.11%)</title><rect x="190.5" y="355.0" width="24.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.5" y="366.0">j..</text>
</g>
<g>
<title>JVM_DoPrivileged (25 samples, 1.55%)</title><rect x="190.5" y="339.0" width="18.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="193.5" y="350.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (3 samples, 0.19%)</title><rect x="191.9" y="323.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="194.9" y="334.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.06%)</title><rect x="194.1" y="323.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="197.1" y="334.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="194.9" y="323.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="197.9" y="334.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.06%)</title><rect x="194.9" y="307.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="197.9" y="318.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.06%)</title><rect x="195.6" y="323.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="198.6" y="334.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.06%)</title><rect x="196.3" y="323.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="199.3" y="334.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.25%)</title><rect x="197.0" y="323.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="200.0" y="334.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.06%)</title><rect x="197.0" y="307.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="200.0" y="318.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.19%)</title><rect x="197.8" y="307.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="200.8" y="318.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.12%)</title><rect x="197.8" y="291.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="200.8" y="302.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.06%)</title><rect x="199.2" y="291.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="202.2" y="302.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.25%)</title><rect x="200.0" y="323.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="203.0" y="334.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.19%)</title><rect x="200.0" y="307.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="203.0" y="318.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.19%)</title><rect x="200.0" y="291.0" width="2.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="203.0" y="302.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.19%)</title><rect x="200.0" y="275.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="203.0" y="286.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.06%)</title><rect x="202.2" y="307.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="205.2" y="318.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (8 samples, 0.50%)</title><rect x="202.9" y="323.0" width="5.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="205.9" y="334.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.25%)</title><rect x="203.6" y="307.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="206.6" y="318.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.12%)</title><rect x="205.1" y="291.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="208.1" y="302.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.12%)</title><rect x="206.5" y="307.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="209.5" y="318.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.06%)</title><rect x="206.5" y="291.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="209.5" y="302.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.06%)</title><rect x="207.3" y="291.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="210.3" y="302.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="207.3" y="275.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="210.3" y="286.0"></text>
</g>
<g>
<title>nmethod::metadata_at(int) const (1 samples, 0.06%)</title><rect x="208.0" y="307.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="211.0" y="318.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="208.7" y="339.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="211.7" y="350.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (1 samples, 0.06%)</title><rect x="209.5" y="339.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="212.5" y="350.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.12%)</title><rect x="210.2" y="339.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="213.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$177/1022977529.run (4 samples, 0.25%)</title><rect x="211.7" y="339.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="214.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (3 samples, 0.19%)</title><rect x="212.4" y="323.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="215.4" y="334.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (3 samples, 0.19%)</title><rect x="212.4" y="307.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.4" y="318.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (3 samples, 0.19%)</title><rect x="212.4" y="291.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.4" y="302.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.19%)</title><rect x="212.4" y="275.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="215.4" y="286.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.12%)</title><rect x="213.1" y="259.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="216.1" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (2 samples, 0.12%)</title><rect x="213.1" y="243.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="216.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (2 samples, 0.12%)</title><rect x="213.1" y="227.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="216.1" y="238.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.06%)</title><rect x="214.6" y="339.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="217.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.06%)</title><rect x="215.3" y="387.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.06%)</title><rect x="215.3" y="371.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="215.3" y="355.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1 samples, 0.06%)</title><rect x="215.3" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="218.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.12%)</title><rect x="216.0" y="499.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="219.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.12%)</title><rect x="216.0" y="483.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="219.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.12%)</title><rect x="216.0" y="467.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.0" y="478.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.12%)</title><rect x="216.0" y="451.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="219.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (3 samples, 0.19%)</title><rect x="217.5" y="499.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="220.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.19%)</title><rect x="217.5" y="483.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="220.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.19%)</title><rect x="217.5" y="467.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="220.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.19%)</title><rect x="217.5" y="451.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="220.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (14 samples, 0.87%)</title><rect x="219.7" y="579.0" width="10.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.7" y="590.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.31%)</title><rect x="221.2" y="563.0" width="3.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="224.2" y="574.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.31%)</title><rect x="221.2" y="547.0" width="3.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="224.2" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (4 samples, 0.25%)</title><rect x="221.9" y="531.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="224.9" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.12%)</title><rect x="223.3" y="515.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="226.3" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (2 samples, 0.12%)</title><rect x="224.8" y="563.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.8" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.06%)</title><rect x="225.5" y="547.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.5" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.06%)</title><rect x="225.5" y="531.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="228.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.06%)</title><rect x="225.5" y="515.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="228.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (5 samples, 0.31%)</title><rect x="226.3" y="563.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="229.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.31%)</title><rect x="226.3" y="547.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="229.3" y="558.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.12%)</title><rect x="226.3" y="531.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="229.3" y="542.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="226.3" y="515.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="229.3" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="227.0" y="515.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="230.0" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="227.0" y="499.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="230.0" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.06%)</title><rect x="227.0" y="483.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="230.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.19%)</title><rect x="227.7" y="531.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.7" y="542.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.06%)</title><rect x="227.7" y="515.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="230.7" y="526.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.12%)</title><rect x="228.5" y="515.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="231.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (6 samples, 0.37%)</title><rect x="229.9" y="579.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.9" y="590.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (2 samples, 0.12%)</title><rect x="230.7" y="563.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="233.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (3 samples, 0.19%)</title><rect x="232.1" y="563.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="235.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (3 samples, 0.19%)</title><rect x="232.1" y="547.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="235.1" y="558.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (3 samples, 0.19%)</title><rect x="232.1" y="531.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.1" y="542.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (3 samples, 0.19%)</title><rect x="232.1" y="515.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="235.1" y="526.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (3 samples, 0.19%)</title><rect x="232.1" y="499.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.1" y="510.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="232.1" y="483.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="235.1" y="494.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.12%)</title><rect x="232.8" y="483.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="235.8" y="494.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.06%)</title><rect x="232.8" y="467.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="235.8" y="478.0"></text>
</g>
<g>
<title>ReadStableMark(oopDesc*) (1 samples, 0.06%)</title><rect x="233.6" y="467.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="236.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (6 samples, 0.37%)</title><rect x="234.3" y="579.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="237.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (6 samples, 0.37%)</title><rect x="234.3" y="563.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (6 samples, 0.37%)</title><rect x="234.3" y="547.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.3" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.19%)</title><rect x="234.3" y="531.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="237.3" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.19%)</title><rect x="234.3" y="515.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.3" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.06%)</title><rect x="235.8" y="499.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="238.8" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.06%)</title><rect x="235.8" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.&lt;init&gt; (1 samples, 0.06%)</title><rect x="235.8" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="238.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.19%)</title><rect x="236.5" y="531.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="239.5" y="542.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (3 samples, 0.19%)</title><rect x="236.5" y="515.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="239.5" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.19%)</title><rect x="236.5" y="499.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.5" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.19%)</title><rect x="236.5" y="483.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.5" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (2 samples, 0.12%)</title><rect x="236.5" y="467.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.5" y="478.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="237.2" y="451.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="240.2" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (1 samples, 0.06%)</title><rect x="238.0" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="241.0" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.06%)</title><rect x="238.0" y="451.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="241.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$160/1885655202.get (179 samples, 11.08%)</title><rect x="238.7" y="659.0" width="130.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="241.7" y="670.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$processRequest$2 (179 samples, 11.08%)</title><rect x="238.7" y="643.0" width="130.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="241.7" y="654.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (179 samples, 11.08%)</title><rect x="238.7" y="627.0" width="130.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="241.7" y="638.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (7 samples, 0.43%)</title><rect x="240.2" y="611.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="243.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.43%)</title><rect x="240.2" y="595.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.2" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.43%)</title><rect x="240.2" y="579.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.2" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.19%)</title><rect x="240.9" y="563.0" width="2.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="243.9" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.19%)</title><rect x="240.9" y="547.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="243.9" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.19%)</title><rect x="240.9" y="531.0" width="2.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="243.9" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.19%)</title><rect x="240.9" y="515.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="243.9" y="526.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.06%)</title><rect x="240.9" y="499.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="243.9" y="510.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.06%)</title><rect x="240.9" y="483.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="243.9" y="494.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.12%)</title><rect x="241.6" y="499.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="244.6" y="510.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.12%)</title><rect x="241.6" y="483.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="244.6" y="494.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.06%)</title><rect x="241.6" y="467.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="244.6" y="478.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.06%)</title><rect x="242.3" y="467.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="245.3" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.19%)</title><rect x="243.1" y="563.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="246.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.19%)</title><rect x="243.1" y="547.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.1" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.19%)</title><rect x="243.1" y="531.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.12%)</title><rect x="243.1" y="515.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="246.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.12%)</title><rect x="243.1" y="499.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="246.1" y="510.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.12%)</title><rect x="243.1" y="483.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="246.1" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="244.5" y="515.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.5" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="244.5" y="499.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="247.5" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.06%)</title><rect x="244.5" y="483.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="247.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (166 samples, 10.28%)</title><rect x="245.3" y="611.0" width="121.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="248.3" y="622.0">ru/mail/polis/d..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (164 samples, 10.15%)</title><rect x="245.3" y="595.0" width="119.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.3" y="606.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (164 samples, 10.15%)</title><rect x="245.3" y="579.0" width="119.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="248.3" y="590.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (156 samples, 9.66%)</title><rect x="245.3" y="563.0" width="114.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="248.3" y="574.0">Java_org_rocks..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.06%)</title><rect x="245.3" y="547.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="248.3" y="558.0"></text>
</g>
<g>
<title>malloc (2 samples, 0.12%)</title><rect x="246.0" y="547.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="249.0" y="558.0"></text>
</g>
<g>
<title>operator delete[](void*) [clone .plt] (1 samples, 0.06%)</title><rect x="247.5" y="547.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="250.5" y="558.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (3 samples, 0.19%)</title><rect x="248.2" y="547.0" width="2.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="251.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.12%)</title><rect x="250.4" y="547.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="253.4" y="558.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (147 samples, 9.10%)</title><rect x="251.8" y="547.0" width="107.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="254.8" y="558.0">rocksdb_put_h..</text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.25%)</title><rect x="252.6" y="531.0" width="2.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="255.6" y="542.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.06%)</title><rect x="254.8" y="515.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="257.8" y="526.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.06%)</title><rect x="255.5" y="531.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="258.5" y="542.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="255.5" y="515.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="258.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (138 samples, 8.54%)</title><rect x="256.2" y="531.0" width="100.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="259.2" y="542.0">rocksdb::DB:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.06%)</title><rect x="256.2" y="515.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="259.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (137 samples, 8.48%)</title><rect x="257.0" y="515.0" width="100.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="260.0" y="526.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (136 samples, 8.42%)</title><rect x="257.0" y="499.0" width="99.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="260.0" y="510.0">rocksdb::DB:..</text>
</g>
<g>
<title>_int_free (1 samples, 0.06%)</title><rect x="258.4" y="483.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="261.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (2 samples, 0.12%)</title><rect x="259.2" y="483.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="262.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (117 samples, 7.24%)</title><rect x="260.6" y="483.0" width="85.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="263.6" y="494.0">rocksdb::D..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.06%)</title><rect x="260.6" y="467.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="263.6" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="261.3" y="467.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="264.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MemTableInsertStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.06%)</title><rect x="262.1" y="467.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="265.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.06%)</title><rect x="262.8" y="467.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="265.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (107 samples, 6.63%)</title><rect x="263.5" y="467.0" width="78.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="266.5" y="478.0">rocksdb::..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.12%)</title><rect x="268.7" y="451.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="271.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (3 samples, 0.19%)</title><rect x="270.1" y="451.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="273.1" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="271.6" y="435.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="274.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.06%)</title><rect x="272.3" y="451.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="275.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (27 samples, 1.67%)</title><rect x="273.0" y="451.0" width="19.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="276.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (24 samples, 1.49%)</title><rect x="273.8" y="435.0" width="17.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="276.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (23 samples, 1.42%)</title><rect x="273.8" y="419.0" width="16.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="276.8" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (13 samples, 0.80%)</title><rect x="275.2" y="403.0" width="9.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="278.2" y="414.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (3 samples, 0.19%)</title><rect x="275.2" y="387.0" width="2.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="278.2" y="398.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (2 samples, 0.12%)</title><rect x="277.4" y="387.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="280.4" y="398.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (8 samples, 0.50%)</title><rect x="278.9" y="387.0" width="5.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="281.9" y="398.0"></text>
</g>
<g>
<title>__libc_write (6 samples, 0.37%)</title><rect x="278.9" y="371.0" width="4.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="281.9" y="382.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="283.3" y="371.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="286.3" y="382.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="284.0" y="371.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="287.0" y="382.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.06%)</title><rect x="284.7" y="403.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="287.7" y="414.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (7 samples, 0.43%)</title><rect x="285.5" y="403.0" width="5.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="288.5" y="414.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="285.5" y="387.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="288.5" y="398.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.06%)</title><rect x="286.2" y="387.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="289.2" y="398.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (3 samples, 0.19%)</title><rect x="286.9" y="387.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="289.9" y="398.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.06%)</title><rect x="288.4" y="371.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="291.4" y="382.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="289.1" y="387.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="292.1" y="398.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.06%)</title><rect x="289.8" y="387.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="292.8" y="398.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) [clone .plt] (1 samples, 0.06%)</title><rect x="290.6" y="419.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="293.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 0.12%)</title><rect x="291.3" y="435.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="294.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.06%)</title><rect x="292.8" y="451.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="295.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.06%)</title><rect x="293.5" y="451.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="296.5" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="293.5" y="435.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="296.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() [clone .plt] (1 samples, 0.06%)</title><rect x="294.2" y="451.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="297.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (1 samples, 0.06%)</title><rect x="295.0" y="451.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="298.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (49 samples, 3.03%)</title><rect x="295.7" y="451.0" width="35.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="298.7" y="462.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (49 samples, 3.03%)</title><rect x="295.7" y="435.0" width="35.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="298.7" y="446.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.06%)</title><rect x="296.4" y="419.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="299.4" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (47 samples, 2.91%)</title><rect x="297.1" y="419.0" width="34.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="300.1" y="430.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (44 samples, 2.72%)</title><rect x="297.9" y="403.0" width="32.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="300.9" y="414.0">ro..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.06%)</title><rect x="297.9" y="387.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="300.9" y="398.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (43 samples, 2.66%)</title><rect x="298.6" y="387.0" width="31.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="301.6" y="398.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni12529796041065143802.so (1 samples, 0.06%)</title><rect x="300.8" y="371.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="303.8" y="382.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const [clone .plt] (1 samples, 0.06%)</title><rect x="301.5" y="371.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="304.5" y="382.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (36 samples, 2.23%)</title><rect x="302.3" y="371.0" width="26.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="305.3" y="382.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni12529796041065143802.so (5 samples, 0.31%)</title><rect x="303.0" y="355.0" width="3.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="306.0" y="366.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="303.7" y="339.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="306.7" y="350.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.12%)</title><rect x="304.5" y="339.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="307.5" y="350.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.06%)</title><rect x="305.9" y="339.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="308.9" y="350.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (29 samples, 1.80%)</title><rect x="306.6" y="355.0" width="21.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="309.6" y="366.0">b..</text>
</g>
<g>
<title>/tmp/librocksdbjni12529796041065143802.so (28 samples, 1.73%)</title><rect x="307.4" y="339.0" width="20.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="310.4" y="350.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12529796041065143802.so (5 samples, 0.31%)</title><rect x="321.3" y="323.0" width="3.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="324.3" y="334.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12529796041065143802.so (1 samples, 0.06%)</title><rect x="321.3" y="307.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="324.3" y="318.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.25%)</title><rect x="322.0" y="307.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="325.0" y="318.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.12%)</title><rect x="322.7" y="291.0" width="1.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="325.7" y="302.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="324.2" y="291.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="327.2" y="302.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.25%)</title><rect x="324.9" y="323.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="327.9" y="334.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.12%)</title><rect x="326.4" y="307.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="329.4" y="318.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() [clone .plt] (1 samples, 0.06%)</title><rect x="327.8" y="355.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="330.8" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (2 samples, 0.12%)</title><rect x="328.6" y="371.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="331.6" y="382.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.06%)</title><rect x="330.0" y="403.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="333.0" y="414.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.06%)</title><rect x="330.8" y="403.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="333.8" y="414.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (2 samples, 0.12%)</title><rect x="331.5" y="451.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="334.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.06%)</title><rect x="332.2" y="435.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="335.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.06%)</title><rect x="332.2" y="419.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="335.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="332.2" y="403.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="335.2" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.06%)</title><rect x="332.2" y="387.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="335.2" y="398.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.06%)</title><rect x="332.2" y="371.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="335.2" y="382.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.06%)</title><rect x="332.2" y="355.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="335.2" y="366.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.06%)</title><rect x="332.2" y="339.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="335.2" y="350.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12529796041065143802.so (1 samples, 0.06%)</title><rect x="332.2" y="323.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="335.2" y="334.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12529796041065143802.so (1 samples, 0.06%)</title><rect x="332.2" y="307.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="335.2" y="318.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.06%)</title><rect x="332.2" y="291.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="335.2" y="302.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (5 samples, 0.31%)</title><rect x="332.9" y="451.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="335.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.06%)</title><rect x="335.9" y="435.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="338.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (3 samples, 0.19%)</title><rect x="336.6" y="451.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="339.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.19%)</title><rect x="336.6" y="435.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="339.6" y="446.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.12%)</title><rect x="337.3" y="419.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="340.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (3 samples, 0.19%)</title><rect x="338.8" y="451.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="341.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.06%)</title><rect x="341.0" y="451.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="344.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.06%)</title><rect x="341.7" y="467.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="344.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (1 samples, 0.06%)</title><rect x="342.4" y="467.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="345.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.06%)</title><rect x="343.2" y="467.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="346.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.06%)</title><rect x="343.9" y="467.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="346.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.12%)</title><rect x="344.6" y="467.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="347.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (3 samples, 0.19%)</title><rect x="346.1" y="483.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="349.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.19%)</title><rect x="348.3" y="483.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="351.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.12%)</title><rect x="348.3" y="467.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="351.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="349.8" y="467.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="352.8" y="478.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() [clone .plt] (1 samples, 0.06%)</title><rect x="349.8" y="451.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="352.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.06%)</title><rect x="350.5" y="483.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="353.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.12%)</title><rect x="351.2" y="483.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="354.2" y="494.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (2 samples, 0.12%)</title><rect x="352.7" y="483.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="355.7" y="494.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (3 samples, 0.19%)</title><rect x="354.1" y="483.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="357.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.06%)</title><rect x="356.3" y="499.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="359.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (3 samples, 0.19%)</title><rect x="357.1" y="531.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="360.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.25%)</title><rect x="359.3" y="563.0" width="2.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="362.3" y="574.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="359.3" y="547.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="362.3" y="558.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="360.0" y="547.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="363.0" y="558.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.06%)</title><rect x="360.7" y="547.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="363.7" y="558.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.06%)</title><rect x="361.4" y="547.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="364.4" y="558.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.06%)</title><rect x="361.4" y="531.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="364.4" y="542.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.06%)</title><rect x="362.2" y="563.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="365.2" y="574.0"></text>
</g>
<g>
<title>malloc (3 samples, 0.19%)</title><rect x="362.9" y="563.0" width="2.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="365.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.06%)</title><rect x="365.1" y="595.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.1" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="365.1" y="579.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="368.1" y="590.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="365.1" y="563.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="368.1" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="365.1" y="547.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="368.1" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="365.1" y="531.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="368.1" y="542.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="365.1" y="515.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="368.1" y="526.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.06%)</title><rect x="365.1" y="499.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="368.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (1 samples, 0.06%)</title><rect x="365.8" y="595.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.06%)</title><rect x="365.8" y="579.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="368.8" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="365.8" y="563.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="368.8" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="365.8" y="547.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="368.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (4 samples, 0.25%)</title><rect x="366.6" y="611.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="369.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.06%)</title><rect x="366.6" y="595.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="369.6" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="366.6" y="579.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="369.6" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.06%)</title><rect x="366.6" y="563.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="369.6" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="366.6" y="547.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="369.6" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="366.6" y="531.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="369.6" y="542.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="366.6" y="515.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="369.6" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="366.6" y="499.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="369.6" y="510.0"></text>
</g>
<g>
<title>G1ContiguousSpace::free() const (1 samples, 0.06%)</title><rect x="366.6" y="483.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="369.6" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (3 samples, 0.19%)</title><rect x="367.3" y="595.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="370.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (1 samples, 0.06%)</title><rect x="368.7" y="579.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="371.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (3 samples, 0.19%)</title><rect x="369.5" y="675.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="372.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.19%)</title><rect x="369.5" y="659.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="372.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (2 samples, 0.12%)</title><rect x="369.5" y="643.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="372.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (2 samples, 0.12%)</title><rect x="369.5" y="627.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="372.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="370.9" y="643.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="373.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="370.9" y="627.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="373.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (254 samples, 15.73%)</title><rect x="371.7" y="675.0" width="185.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.7" y="686.0">java/util/concurrent/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (50 samples, 3.10%)</title><rect x="374.6" y="659.0" width="36.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.6" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (44 samples, 2.72%)</title><rect x="375.3" y="643.0" width="32.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="378.3" y="654.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.31%)</title><rect x="376.8" y="627.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="379.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.31%)</title><rect x="376.8" y="611.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="379.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.31%)</title><rect x="376.8" y="595.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="379.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (4 samples, 0.25%)</title><rect x="380.4" y="627.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="383.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.25%)</title><rect x="380.4" y="611.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="383.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.25%)</title><rect x="380.4" y="595.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.25%)</title><rect x="380.4" y="579.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="383.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="382.6" y="563.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="385.6" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.06%)</title><rect x="382.6" y="547.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="385.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (33 samples, 2.04%)</title><rect x="383.4" y="627.0" width="24.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="386.4" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (33 samples, 2.04%)</title><rect x="383.4" y="611.0" width="24.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="386.4" y="622.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.06%)</title><rect x="383.4" y="595.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="386.4" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park (22 samples, 1.36%)</title><rect x="384.1" y="595.0" width="16.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="387.1" y="606.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.06%)</title><rect x="384.8" y="579.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="387.8" y="590.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.06%)</title><rect x="385.6" y="579.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="388.6" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (14 samples, 0.87%)</title><rect x="386.3" y="579.0" width="10.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="389.3" y="590.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.31%)</title><rect x="390.7" y="563.0" width="3.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="393.7" y="574.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.06%)</title><rect x="393.6" y="547.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="396.6" y="558.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.06%)</title><rect x="394.3" y="563.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="397.3" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.12%)</title><rect x="395.1" y="563.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="398.1" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.06%)</title><rect x="396.5" y="579.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="399.5" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.06%)</title><rect x="397.2" y="579.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="400.2" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.12%)</title><rect x="398.0" y="579.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="401.0" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.06%)</title><rect x="399.4" y="579.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="402.4" y="590.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.62%)</title><rect x="400.2" y="595.0" width="7.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="403.2" y="606.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.12%)</title><rect x="400.2" y="579.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="403.2" y="590.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (8 samples, 0.50%)</title><rect x="401.6" y="579.0" width="5.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="404.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.31%)</title><rect x="407.5" y="643.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="410.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.31%)</title><rect x="407.5" y="627.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="410.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.31%)</title><rect x="407.5" y="611.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="410.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.31%)</title><rect x="407.5" y="595.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="410.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.19%)</title><rect x="408.9" y="579.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="411.9" y="590.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="408.9" y="563.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="411.9" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="408.9" y="547.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="411.9" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.06%)</title><rect x="409.7" y="563.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="412.7" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="410.4" y="563.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="413.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (200 samples, 12.38%)</title><rect x="411.1" y="659.0" width="146.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="414.1" y="670.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (199 samples, 12.32%)</title><rect x="411.9" y="643.0" width="145.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="414.9" y="654.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (7 samples, 0.43%)</title><rect x="412.6" y="627.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.43%)</title><rect x="412.6" y="611.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="415.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (191 samples, 11.83%)</title><rect x="417.7" y="627.0" width="139.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="420.7" y="638.0">java/util/concurr..</text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="421.4" y="611.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="424.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (183 samples, 11.33%)</title><rect x="422.1" y="611.0" width="133.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.1" y="622.0">java/util/concurr..</text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="472.5" y="595.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="475.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (111 samples, 6.87%)</title><rect x="473.2" y="595.0" width="81.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="476.2" y="606.0">jdk/inter..</text>
</g>
<g>
<title>Unsafe_Park (62 samples, 3.84%)</title><rect x="474.7" y="579.0" width="45.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="477.7" y="590.0">Unsa..</text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.06%)</title><rect x="479.1" y="563.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="482.1" y="574.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.06%)</title><rect x="479.8" y="563.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="482.8" y="574.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.06%)</title><rect x="480.5" y="563.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="483.5" y="574.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (21 samples, 1.30%)</title><rect x="481.3" y="563.0" width="15.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="484.3" y="574.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.06%)</title><rect x="487.8" y="547.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="490.8" y="558.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (7 samples, 0.43%)</title><rect x="488.6" y="547.0" width="5.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="491.6" y="558.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.06%)</title><rect x="493.0" y="531.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="496.0" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (3 samples, 0.19%)</title><rect x="493.7" y="547.0" width="2.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="496.7" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="495.9" y="547.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="498.9" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (4 samples, 0.25%)</title><rect x="496.6" y="563.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="499.6" y="574.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (24 samples, 1.49%)</title><rect x="499.5" y="563.0" width="17.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="502.5" y="574.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.19%)</title><rect x="517.1" y="563.0" width="2.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="520.1" y="574.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@plt (1 samples, 0.06%)</title><rect x="519.3" y="563.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="522.3" y="574.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 2.85%)</title><rect x="520.0" y="579.0" width="33.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="523.0" y="590.0">[u..</text>
</g>
<g>
<title>__condvar_confirm_wakeup (1 samples, 0.06%)</title><rect x="520.0" y="563.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="523.0" y="574.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.06%)</title><rect x="520.7" y="563.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="523.7" y="574.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="521.5" y="563.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="524.5" y="574.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (3 samples, 0.19%)</title><rect x="522.2" y="563.0" width="2.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="525.2" y="574.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (40 samples, 2.48%)</title><rect x="524.4" y="563.0" width="29.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="527.4" y="574.0">pt..</text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.06%)</title><rect x="553.6" y="579.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="556.6" y="590.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.12%)</title><rect x="554.3" y="595.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="557.3" y="606.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.12%)</title><rect x="555.8" y="611.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="558.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$399/1148631027.run (80 samples, 4.95%)</title><rect x="557.3" y="675.0" width="58.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.3" y="686.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (78 samples, 4.83%)</title><rect x="558.7" y="659.0" width="57.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="561.7" y="670.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (78 samples, 4.83%)</title><rect x="558.7" y="643.0" width="57.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="561.7" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (76 samples, 4.71%)</title><rect x="560.2" y="627.0" width="55.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.2" y="638.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (76 samples, 4.71%)</title><rect x="560.2" y="611.0" width="55.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="563.2" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (76 samples, 4.71%)</title><rect x="560.2" y="595.0" width="55.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="563.2" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (76 samples, 4.71%)</title><rect x="560.2" y="579.0" width="55.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="563.2" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (76 samples, 4.71%)</title><rect x="560.2" y="563.0" width="55.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.2" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (76 samples, 4.71%)</title><rect x="560.2" y="547.0" width="55.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.2" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (76 samples, 4.71%)</title><rect x="560.2" y="531.0" width="55.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="563.2" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (76 samples, 4.71%)</title><rect x="560.2" y="515.0" width="55.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="563.2" y="526.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (47 samples, 2.91%)</title><rect x="560.2" y="499.0" width="34.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="563.2" y="510.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (33 samples, 2.04%)</title><rect x="561.6" y="483.0" width="24.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.6" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (33 samples, 2.04%)</title><rect x="561.6" y="467.0" width="24.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="564.6" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (33 samples, 2.04%)</title><rect x="561.6" y="451.0" width="24.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.6" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (33 samples, 2.04%)</title><rect x="561.6" y="435.0" width="24.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.6" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (6 samples, 0.37%)</title><rect x="561.6" y="419.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.12%)</title><rect x="563.1" y="403.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="566.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.12%)</title><rect x="563.1" y="387.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="566.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.12%)</title><rect x="563.1" y="371.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="566.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.12%)</title><rect x="563.1" y="355.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="566.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.12%)</title><rect x="563.1" y="339.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="566.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.12%)</title><rect x="563.1" y="323.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.1" y="334.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.12%)</title><rect x="563.1" y="307.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="566.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$411/2132316026.apply (2 samples, 0.12%)</title><rect x="564.6" y="403.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (2 samples, 0.12%)</title><rect x="564.6" y="387.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (2 samples, 0.12%)</title><rect x="564.6" y="371.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (1 samples, 0.06%)</title><rect x="564.6" y="355.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="564.6" y="339.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="564.6" y="323.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$420/992012201.get$Lambda (1 samples, 0.06%)</title><rect x="564.6" y="307.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.06%)</title><rect x="564.6" y="291.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.wrapForDebug (1 samples, 0.06%)</title><rect x="565.3" y="355.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (23 samples, 1.42%)</title><rect x="566.0" y="419.0" width="16.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="569.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="567.5" y="403.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="567.5" y="387.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="570.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (20 samples, 1.24%)</title><rect x="568.2" y="403.0" width="14.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="568.9" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="571.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="568.9" y="371.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="571.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$364/22668537.apply (18 samples, 1.11%)</title><rect x="569.7" y="387.0" width="13.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="572.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (18 samples, 1.11%)</title><rect x="569.7" y="371.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (18 samples, 1.11%)</title><rect x="569.7" y="355.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$161/2060274688.apply (18 samples, 1.11%)</title><rect x="569.7" y="339.0" width="13.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (18 samples, 1.11%)</title><rect x="569.7" y="323.0" width="13.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.19%)</title><rect x="569.7" y="307.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.19%)</title><rect x="569.7" y="291.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="572.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (3 samples, 0.19%)</title><rect x="569.7" y="275.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (1 samples, 0.06%)</title><rect x="571.9" y="307.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.06%)</title><rect x="571.9" y="291.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.06%)</title><rect x="571.9" y="275.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.06%)</title><rect x="571.9" y="259.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (14 samples, 0.87%)</title><rect x="572.6" y="307.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="575.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (7 samples, 0.43%)</title><rect x="572.6" y="291.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="575.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (7 samples, 0.43%)</title><rect x="572.6" y="275.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (7 samples, 0.43%)</title><rect x="572.6" y="259.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="575.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$409/1599422888.accept (2 samples, 0.12%)</title><rect x="572.6" y="243.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="575.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (2 samples, 0.12%)</title><rect x="572.6" y="227.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (2 samples, 0.12%)</title><rect x="572.6" y="211.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (2 samples, 0.12%)</title><rect x="572.6" y="195.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (2 samples, 0.12%)</title><rect x="572.6" y="179.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.12%)</title><rect x="572.6" y="163.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.12%)</title><rect x="572.6" y="147.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.12%)</title><rect x="572.6" y="131.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="575.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.12%)</title><rect x="572.6" y="115.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (2 samples, 0.12%)</title><rect x="572.6" y="99.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="575.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (1 samples, 0.06%)</title><rect x="572.6" y="83.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="575.6" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.06%)</title><rect x="572.6" y="67.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.6" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.06%)</title><rect x="572.6" y="51.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="575.6" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="572.6" y="35.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.6" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.06%)</title><rect x="573.3" y="83.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.3" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.06%)</title><rect x="573.3" y="67.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="576.3" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.31%)</title><rect x="574.1" y="243.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="577.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.31%)</title><rect x="574.1" y="227.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="577.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$405/244253741.accept (1 samples, 0.06%)</title><rect x="574.8" y="211.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$409/1599422888.accept (3 samples, 0.19%)</title><rect x="575.5" y="211.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="578.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (7 samples, 0.43%)</title><rect x="577.7" y="291.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (5 samples, 0.31%)</title><rect x="579.2" y="275.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="582.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (5 samples, 0.31%)</title><rect x="579.2" y="259.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="582.2" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.06%)</title><rect x="580.6" y="243.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.6" y="254.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="580.6" y="227.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="583.6" y="238.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.06%)</title><rect x="580.6" y="211.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="583.6" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="581.4" y="243.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="584.4" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="581.4" y="227.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="584.4" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.12%)</title><rect x="581.4" y="211.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="584.4" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.12%)</title><rect x="581.4" y="195.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="584.4" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.12%)</title><rect x="581.4" y="179.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="584.4" y="190.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.12%)</title><rect x="581.4" y="163.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="584.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.12%)</title><rect x="582.8" y="419.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="585.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.06%)</title><rect x="583.6" y="403.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.06%)</title><rect x="583.6" y="387.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AltResult.&lt;init&gt; (1 samples, 0.06%)</title><rect x="583.6" y="371.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="586.6" y="382.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.12%)</title><rect x="584.3" y="419.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="587.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (5 samples, 0.31%)</title><rect x="585.8" y="483.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="588.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (3 samples, 0.19%)</title><rect x="587.2" y="467.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="590.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedPredecessors (1 samples, 0.06%)</title><rect x="587.2" y="451.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (2 samples, 0.12%)</title><rect x="587.9" y="451.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="590.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.43%)</title><rect x="589.4" y="483.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$416/783689259.run (7 samples, 0.43%)</title><rect x="589.4" y="467.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (7 samples, 0.43%)</title><rect x="589.4" y="451.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="592.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (7 samples, 0.43%)</title><rect x="589.4" y="435.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (7 samples, 0.43%)</title><rect x="589.4" y="419.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="592.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.43%)</title><rect x="589.4" y="403.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.43%)</title><rect x="589.4" y="387.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="592.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (29 samples, 1.80%)</title><rect x="594.5" y="499.0" width="21.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.5" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (29 samples, 1.80%)</title><rect x="594.5" y="483.0" width="21.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.5" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (29 samples, 1.80%)</title><rect x="594.5" y="467.0" width="21.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="597.5" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (26 samples, 1.61%)</title><rect x="596.7" y="451.0" width="19.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="599.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$402/1839963976.run (3 samples, 0.19%)</title><rect x="596.7" y="435.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="599.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (3 samples, 0.19%)</title><rect x="596.7" y="419.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="599.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (3 samples, 0.19%)</title><rect x="596.7" y="403.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="599.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1 samples, 0.06%)</title><rect x="597.4" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.06%)</title><rect x="597.4" y="371.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.06%)</title><rect x="598.2" y="387.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (21 samples, 1.30%)</title><rect x="598.9" y="435.0" width="15.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.9" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (19 samples, 1.18%)</title><rect x="598.9" y="419.0" width="13.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.9" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (19 samples, 1.18%)</title><rect x="598.9" y="403.0" width="13.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="601.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="598.9" y="387.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="598.9" y="371.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="601.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="598.9" y="355.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="598.9" y="339.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (18 samples, 1.11%)</title><rect x="599.6" y="387.0" width="13.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.6" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (17 samples, 1.05%)</title><rect x="600.4" y="371.0" width="12.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.4" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.12%)</title><rect x="600.4" y="355.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.4" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.12%)</title><rect x="600.4" y="339.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (2 samples, 0.12%)</title><rect x="600.4" y="323.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="603.4" y="334.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="601.1" y="307.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="604.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (14 samples, 0.87%)</title><rect x="601.8" y="355.0" width="10.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="604.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (13 samples, 0.80%)</title><rect x="602.6" y="339.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.6" y="350.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (1 samples, 0.06%)</title><rect x="604.0" y="323.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="607.0" y="334.0"></text>
</g>
<g>
<title>__GI___writev (10 samples, 0.62%)</title><rect x="604.7" y="323.0" width="7.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="607.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="612.1" y="355.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="615.1" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="612.1" y="339.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="615.1" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.06%)</title><rect x="612.1" y="323.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="615.1" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.06%)</title><rect x="612.1" y="307.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="615.1" y="318.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.12%)</title><rect x="612.8" y="419.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (2 samples, 0.12%)</title><rect x="614.2" y="435.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (2 samples, 0.12%)</title><rect x="614.2" y="419.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="617.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (230 samples, 14.24%)</title><rect x="615.7" y="675.0" width="168.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="618.7" y="686.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (228 samples, 14.12%)</title><rect x="617.2" y="659.0" width="166.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.2" y="670.0">jdk/internal/net/http..</text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="617.2" y="643.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="620.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.run (1 samples, 0.06%)</title><rect x="617.9" y="643.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="620.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (144 samples, 8.92%)</title><rect x="618.6" y="643.0" width="105.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.6" y="654.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.run (141 samples, 8.73%)</title><rect x="620.1" y="627.0" width="103.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.1" y="638.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (141 samples, 8.73%)</title><rect x="620.1" y="611.0" width="103.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="623.1" y="622.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (3 samples, 0.19%)</title><rect x="624.5" y="595.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="627.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (13 samples, 0.80%)</title><rect x="626.7" y="595.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (13 samples, 0.80%)</title><rect x="626.7" y="579.0" width="9.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (13 samples, 0.80%)</title><rect x="626.7" y="563.0" width="9.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (13 samples, 0.80%)</title><rect x="626.7" y="547.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="629.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1059063940.linkToTargetMethod (4 samples, 0.25%)</title><rect x="626.7" y="531.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1641313620.invoke (4 samples, 0.25%)</title><rect x="626.7" y="515.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.25%)</title><rect x="626.7" y="499.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="629.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (4 samples, 0.25%)</title><rect x="626.7" y="483.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (4 samples, 0.25%)</title><rect x="626.7" y="467.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="629.7" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.19%)</title><rect x="627.4" y="451.0" width="2.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="630.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (9 samples, 0.56%)</title><rect x="629.6" y="531.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (9 samples, 0.56%)</title><rect x="629.6" y="515.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="632.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (9 samples, 0.56%)</title><rect x="629.6" y="499.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="632.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (7 samples, 0.43%)</title><rect x="631.1" y="483.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="634.1" y="494.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.19%)</title><rect x="632.5" y="467.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="635.5" y="478.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.06%)</title><rect x="632.5" y="451.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="635.5" y="462.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (2 samples, 0.12%)</title><rect x="633.2" y="451.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="636.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.12%)</title><rect x="634.7" y="467.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.7" y="478.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="634.7" y="451.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="637.7" y="462.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="634.7" y="435.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="637.7" y="446.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="634.7" y="419.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="637.7" y="430.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.06%)</title><rect x="634.7" y="403.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="637.7" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.06%)</title><rect x="635.4" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="638.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.06%)</title><rect x="635.4" y="435.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.12%)</title><rect x="636.2" y="595.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="636.2" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="636.2" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$276/1663239432.get$Lambda (1 samples, 0.06%)</title><rect x="636.2" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (1 samples, 0.06%)</title><rect x="636.9" y="579.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="639.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.06%)</title><rect x="636.9" y="563.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.06%)</title><rect x="636.9" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (1 samples, 0.06%)</title><rect x="637.6" y="595.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (116 samples, 7.18%)</title><rect x="638.4" y="595.0" width="84.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.4" y="606.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (116 samples, 7.18%)</title><rect x="638.4" y="579.0" width="84.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="641.4" y="590.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (116 samples, 7.18%)</title><rect x="638.4" y="563.0" width="84.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.4" y="574.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (116 samples, 7.18%)</title><rect x="638.4" y="547.0" width="84.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="641.4" y="558.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (67 samples, 4.15%)</title><rect x="638.4" y="531.0" width="48.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="641.4" y="542.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (67 samples, 4.15%)</title><rect x="638.4" y="515.0" width="48.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="641.4" y="526.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (66 samples, 4.09%)</title><rect x="639.1" y="499.0" width="48.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.1" y="510.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (66 samples, 4.09%)</title><rect x="639.1" y="483.0" width="48.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.1" y="494.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.12%)</title><rect x="639.1" y="467.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.12%)</title><rect x="639.1" y="451.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.12%)</title><rect x="639.1" y="435.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.12%)</title><rect x="639.1" y="419.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$420/992012201.apply (2 samples, 0.12%)</title><rect x="639.1" y="403.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (64 samples, 3.96%)</title><rect x="640.6" y="467.0" width="46.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="643.6" y="478.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (63 samples, 3.90%)</title><rect x="641.3" y="451.0" width="46.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.3" y="462.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (63 samples, 3.90%)</title><rect x="641.3" y="435.0" width="46.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.3" y="446.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (58 samples, 3.59%)</title><rect x="641.3" y="419.0" width="42.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.3" y="430.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (58 samples, 3.59%)</title><rect x="641.3" y="403.0" width="42.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.3" y="414.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (47 samples, 2.91%)</title><rect x="641.3" y="387.0" width="34.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.3" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.19%)</title><rect x="641.3" y="371.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.19%)</title><rect x="641.3" y="355.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.19%)</title><rect x="641.3" y="339.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.19%)</title><rect x="641.3" y="323.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.19%)</title><rect x="641.3" y="307.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.19%)</title><rect x="641.3" y="291.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.3" y="302.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="642.0" y="275.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="645.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$414/1488698859.apply (1 samples, 0.06%)</title><rect x="642.7" y="275.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$142/558125001.apply (32 samples, 1.98%)</title><rect x="643.5" y="371.0" width="23.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.5" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (32 samples, 1.98%)</title><rect x="643.5" y="355.0" width="23.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.5" y="366.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (31 samples, 1.92%)</title><rect x="643.5" y="339.0" width="22.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.5" y="350.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (31 samples, 1.92%)</title><rect x="643.5" y="323.0" width="22.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.5" y="334.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (31 samples, 1.92%)</title><rect x="643.5" y="307.0" width="22.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.5" y="318.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (9 samples, 0.56%)</title><rect x="643.5" y="291.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="646.5" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.12%)</title><rect x="643.5" y="275.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="646.5" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.12%)</title><rect x="643.5" y="259.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.5" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.12%)</title><rect x="643.5" y="243.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.5" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.12%)</title><rect x="643.5" y="227.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="646.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.12%)</title><rect x="643.5" y="211.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.5" y="222.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="644.2" y="195.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="647.2" y="206.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="644.2" y="179.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="647.2" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.06%)</title><rect x="644.2" y="163.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.2" y="174.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.06%)</title><rect x="644.9" y="275.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="647.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.06%)</title><rect x="644.9" y="259.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="647.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.06%)</title><rect x="644.9" y="243.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="647.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.06%)</title><rect x="644.9" y="227.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.06%)</title><rect x="644.9" y="211.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (5 samples, 0.31%)</title><rect x="645.7" y="275.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="648.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.25%)</title><rect x="645.7" y="259.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.25%)</title><rect x="645.7" y="243.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.25%)</title><rect x="645.7" y="227.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.06%)</title><rect x="645.7" y="211.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="648.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.06%)</title><rect x="645.7" y="195.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.06%)</title><rect x="645.7" y="179.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="648.7" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.06%)</title><rect x="645.7" y="163.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (1 samples, 0.06%)</title><rect x="645.7" y="147.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.7" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$446/983674034.applyAsLong (1 samples, 0.06%)</title><rect x="645.7" y="131.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="648.7" y="142.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.06%)</title><rect x="645.7" y="115.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.7" y="126.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.06%)</title><rect x="645.7" y="99.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.7" y="110.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="645.7" y="83.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.7" y="94.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.19%)</title><rect x="646.4" y="211.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="649.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.12%)</title><rect x="647.1" y="195.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.opIsStateful (1 samples, 0.06%)</title><rect x="648.6" y="259.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (1 samples, 0.06%)</title><rect x="649.3" y="275.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="652.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.&lt;init&gt; (1 samples, 0.06%)</title><rect x="649.3" y="259.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="652.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.&lt;init&gt; (1 samples, 0.06%)</title><rect x="649.3" y="243.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.&lt;init&gt; (1 samples, 0.06%)</title><rect x="649.3" y="227.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="652.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.06%)</title><rect x="649.3" y="211.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.combineOpFlags (1 samples, 0.06%)</title><rect x="649.3" y="195.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="652.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.12%)</title><rect x="650.0" y="291.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="650.8" y="275.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="653.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="650.8" y="259.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="650.8" y="243.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="653.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (20 samples, 1.24%)</title><rect x="651.5" y="291.0" width="14.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$496/855121012.run (19 samples, 1.18%)</title><rect x="652.2" y="275.0" width="13.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (19 samples, 1.18%)</title><rect x="652.2" y="259.0" width="13.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="655.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.25%)</title><rect x="653.7" y="243.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="656.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="655.9" y="227.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="658.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="655.9" y="211.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="658.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (8 samples, 0.50%)</title><rect x="656.6" y="243.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="659.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="656.6" y="227.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="659.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (7 samples, 0.43%)</title><rect x="657.4" y="227.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.4" y="238.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (6 samples, 0.37%)</title><rect x="657.4" y="211.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="660.4" y="222.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (4 samples, 0.25%)</title><rect x="658.8" y="195.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.8" y="206.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (4 samples, 0.25%)</title><rect x="658.8" y="179.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.8" y="190.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.19%)</title><rect x="658.8" y="163.0" width="2.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="661.8" y="174.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="660.3" y="147.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="663.3" y="158.0"></text>
</g>
<g>
<title>Java_java_lang_System_identityHashCode (1 samples, 0.06%)</title><rect x="661.0" y="163.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="664.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="661.7" y="211.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="664.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="661.7" y="195.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="664.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (3 samples, 0.19%)</title><rect x="662.5" y="243.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (3 samples, 0.19%)</title><rect x="662.5" y="227.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.5" y="238.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.12%)</title><rect x="663.2" y="211.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="666.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (2 samples, 0.12%)</title><rect x="664.7" y="243.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="667.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (1 samples, 0.06%)</title><rect x="666.1" y="339.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="669.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$369/1508220952.apply (12 samples, 0.74%)</title><rect x="666.9" y="371.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (12 samples, 0.74%)</title><rect x="666.9" y="355.0" width="8.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="669.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (12 samples, 0.74%)</title><rect x="666.9" y="339.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (11 samples, 0.68%)</title><rect x="666.9" y="323.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="669.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (11 samples, 0.68%)</title><rect x="666.9" y="307.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.9" y="318.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="669.8" y="291.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="672.8" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="669.8" y="275.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="672.8" y="286.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="669.8" y="259.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="672.8" y="270.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.06%)</title><rect x="669.8" y="243.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="672.8" y="254.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (6 samples, 0.37%)</title><rect x="670.5" y="291.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="673.5" y="302.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (2 samples, 0.12%)</title><rect x="670.5" y="275.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="673.5" y="286.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (4 samples, 0.25%)</title><rect x="672.0" y="275.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="675.0" y="286.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (3 samples, 0.19%)</title><rect x="672.0" y="259.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="675.0" y="270.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.06%)</title><rect x="672.0" y="243.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="675.0" y="254.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.06%)</title><rect x="672.0" y="227.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="675.0" y="238.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.06%)</title><rect x="672.7" y="243.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="675.7" y="254.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.06%)</title><rect x="673.4" y="243.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="676.4" y="254.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.06%)</title><rect x="674.2" y="259.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="677.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.response (1 samples, 0.06%)</title><rect x="674.9" y="323.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="677.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (8 samples, 0.50%)</title><rect x="675.6" y="387.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="678.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="675.6" y="371.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="678.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="675.6" y="355.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="678.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6 samples, 0.37%)</title><rect x="676.4" y="371.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="679.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="676.4" y="355.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="679.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="676.4" y="339.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.06%)</title><rect x="676.4" y="323.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.06%)</title><rect x="676.4" y="307.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="679.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="676.4" y="291.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="676.4" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.4" y="286.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="676.4" y="259.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="679.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$372/484910400.apply (5 samples, 0.31%)</title><rect x="677.1" y="355.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="680.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (5 samples, 0.31%)</title><rect x="677.1" y="339.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (5 samples, 0.31%)</title><rect x="677.1" y="323.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="680.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (5 samples, 0.31%)</title><rect x="677.1" y="307.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.1" y="318.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.19%)</title><rect x="677.1" y="291.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="680.1" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.19%)</title><rect x="677.1" y="275.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="680.1" y="286.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.19%)</title><rect x="677.1" y="259.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="680.1" y="270.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (3 samples, 0.19%)</title><rect x="677.1" y="243.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="680.1" y="254.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (2 samples, 0.12%)</title><rect x="679.3" y="291.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.3" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (2 samples, 0.12%)</title><rect x="679.3" y="275.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.3" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.06%)</title><rect x="679.3" y="259.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="682.3" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (1 samples, 0.06%)</title><rect x="679.3" y="243.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.3" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.06%)</title><rect x="680.0" y="259.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.06%)</title><rect x="680.0" y="243.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="683.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.compareTo (1 samples, 0.06%)</title><rect x="680.0" y="227.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="683.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$372/484910400.apply (1 samples, 0.06%)</title><rect x="680.7" y="371.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1 samples, 0.06%)</title><rect x="680.7" y="355.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (1 samples, 0.06%)</title><rect x="680.7" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="683.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (1 samples, 0.06%)</title><rect x="680.7" y="323.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.7" y="334.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (1 samples, 0.06%)</title><rect x="680.7" y="307.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="683.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (1 samples, 0.06%)</title><rect x="680.7" y="291.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.7" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.06%)</title><rect x="680.7" y="275.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.06%)</title><rect x="680.7" y="259.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="683.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.12%)</title><rect x="681.5" y="387.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="684.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.06%)</title><rect x="682.2" y="371.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.06%)</title><rect x="682.2" y="355.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AltResult.&lt;init&gt; (1 samples, 0.06%)</title><rect x="682.2" y="339.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.2" y="350.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="682.9" y="387.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="685.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$420/992012201.apply (5 samples, 0.31%)</title><rect x="683.7" y="419.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="686.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (5 samples, 0.31%)</title><rect x="683.7" y="403.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (5 samples, 0.31%)</title><rect x="683.7" y="387.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="686.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (4 samples, 0.25%)</title><rect x="684.4" y="371.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (4 samples, 0.25%)</title><rect x="684.4" y="355.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (47 samples, 2.91%)</title><rect x="687.3" y="531.0" width="34.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.3" y="542.0">jd..</text>
</g>
<g>
<title>java/lang/StringLatin1.canEncode (1 samples, 0.06%)</title><rect x="690.2" y="515.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="693.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (3 samples, 0.19%)</title><rect x="691.0" y="515.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="694.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.12%)</title><rect x="691.7" y="499.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="694.7" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.12%)</title><rect x="691.7" y="483.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="694.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (6 samples, 0.37%)</title><rect x="693.2" y="515.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="696.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.37%)</title><rect x="693.2" y="499.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="696.2" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.37%)</title><rect x="693.2" y="483.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="696.2" y="494.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="696.8" y="467.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="699.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (13 samples, 0.80%)</title><rect x="697.5" y="515.0" width="9.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="700.5" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (13 samples, 0.80%)</title><rect x="697.5" y="499.0" width="9.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="700.5" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (13 samples, 0.80%)</title><rect x="697.5" y="483.0" width="9.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.5" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (9 samples, 0.56%)</title><rect x="699.7" y="467.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="702.7" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/1260444598.accept (9 samples, 0.56%)</title><rect x="699.7" y="451.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="702.7" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8 samples, 0.50%)</title><rect x="700.5" y="435.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="703.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="700.5" y="419.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="703.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="700.5" y="403.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="703.5" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$394/1894267442.get$Lambda (1 samples, 0.06%)</title><rect x="700.5" y="387.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="703.5" y="398.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="700.5" y="371.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="703.5" y="382.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="700.5" y="355.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="703.5" y="366.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="700.5" y="339.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="703.5" y="350.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="700.5" y="323.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="703.5" y="334.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.06%)</title><rect x="700.5" y="307.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="703.5" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.06%)</title><rect x="701.2" y="419.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="704.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.19%)</title><rect x="701.9" y="419.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$394/1894267442.accept (2 samples, 0.12%)</title><rect x="702.7" y="403.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.12%)</title><rect x="702.7" y="387.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="702.7" y="371.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="705.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="702.7" y="355.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.12%)</title><rect x="702.7" y="339.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.12%)</title><rect x="702.7" y="323.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.7" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.12%)</title><rect x="702.7" y="307.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.19%)</title><rect x="704.1" y="419.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="705.6" y="403.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="708.6" y="414.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="705.6" y="387.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.06%)</title><rect x="705.6" y="371.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="708.6" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.06%)</title><rect x="706.3" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.3" y="478.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="706.3" y="451.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="709.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (20 samples, 1.24%)</title><rect x="707.0" y="515.0" width="14.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="707.0" y="499.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.0" y="510.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="707.0" y="483.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="710.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.06%)</title><rect x="707.8" y="499.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.8" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="707.8" y="483.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.8" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="707.8" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.8" y="478.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="707.8" y="451.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="710.8" y="462.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="707.8" y="435.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="710.8" y="446.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="707.8" y="419.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="710.8" y="430.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="707.8" y="403.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="710.8" y="414.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="707.8" y="387.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="710.8" y="398.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="707.8" y="371.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="710.8" y="382.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="707.8" y="355.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="710.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (18 samples, 1.11%)</title><rect x="708.5" y="499.0" width="13.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="711.5" y="510.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="708.5" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="711.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="708.5" y="467.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="711.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.06%)</title><rect x="708.5" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.5" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="708.5" y="435.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="711.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (7 samples, 0.43%)</title><rect x="709.2" y="483.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="712.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.12%)</title><rect x="711.4" y="467.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="714.4" y="478.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.06%)</title><rect x="712.9" y="467.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="715.9" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="713.6" y="467.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="716.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.trim (4 samples, 0.25%)</title><rect x="714.3" y="483.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (4 samples, 0.25%)</title><rect x="714.3" y="467.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="717.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="717.3" y="483.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="720.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="717.3" y="467.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.12%)</title><rect x="717.3" y="451.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="720.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.12%)</title><rect x="717.3" y="435.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.3" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.12%)</title><rect x="717.3" y="419.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="720.3" y="430.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="718.0" y="403.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="721.0" y="414.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.06%)</title><rect x="718.0" y="387.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="721.0" y="398.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="718.0" y="371.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="721.0" y="382.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="718.0" y="355.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="721.0" y="366.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="718.0" y="339.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="721.0" y="350.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="718.0" y="323.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="721.0" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (4 samples, 0.25%)</title><rect x="718.7" y="483.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="721.7" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.12%)</title><rect x="718.7" y="467.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="721.7" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.06%)</title><rect x="720.2" y="467.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="723.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$443/1513688448.apply (1 samples, 0.06%)</title><rect x="720.9" y="467.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (1 samples, 0.06%)</title><rect x="720.9" y="451.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="723.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="720.9" y="435.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="723.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$264/884570996.accept (2 samples, 0.12%)</title><rect x="721.7" y="531.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="724.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (2 samples, 0.12%)</title><rect x="721.7" y="515.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.06%)</title><rect x="722.4" y="499.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="725.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.06%)</title><rect x="723.1" y="627.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="726.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (82 samples, 5.08%)</title><rect x="723.8" y="643.0" width="60.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="726.8" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (81 samples, 5.02%)</title><rect x="724.6" y="627.0" width="59.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.6" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (80 samples, 4.95%)</title><rect x="724.6" y="611.0" width="58.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="727.6" y="622.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.run (79 samples, 4.89%)</title><rect x="725.3" y="595.0" width="57.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="728.3" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (79 samples, 4.89%)</title><rect x="725.3" y="579.0" width="57.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="728.3" y="590.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (79 samples, 4.89%)</title><rect x="725.3" y="563.0" width="57.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.3" y="574.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (78 samples, 4.83%)</title><rect x="726.0" y="547.0" width="57.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="729.0" y="558.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (78 samples, 4.83%)</title><rect x="726.0" y="531.0" width="57.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.0" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$502/1814071412.run (48 samples, 2.97%)</title><rect x="726.0" y="515.0" width="35.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.0" y="526.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (48 samples, 2.97%)</title><rect x="726.0" y="499.0" width="35.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.0" y="510.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (48 samples, 2.97%)</title><rect x="726.0" y="483.0" width="35.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.0" y="494.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (7 samples, 0.43%)</title><rect x="726.0" y="467.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="729.0" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.25%)</title><rect x="726.0" y="451.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="729.0" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.25%)</title><rect x="726.0" y="435.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="729.0" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.25%)</title><rect x="726.0" y="419.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="729.0" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.25%)</title><rect x="726.0" y="403.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.0" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.12%)</title><rect x="727.5" y="387.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="730.5" y="398.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.12%)</title><rect x="727.5" y="371.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.12%)</title><rect x="727.5" y="355.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.12%)</title><rect x="727.5" y="339.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.5" y="350.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.06%)</title><rect x="728.2" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.19%)</title><rect x="729.0" y="451.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="732.0" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.12%)</title><rect x="729.7" y="435.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.06%)</title><rect x="730.4" y="419.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="733.4" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.06%)</title><rect x="730.4" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="733.4" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.06%)</title><rect x="730.4" y="387.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (41 samples, 2.54%)</title><rect x="731.2" y="467.0" width="29.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.2" y="478.0">jd..</text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.12%)</title><rect x="731.2" y="451.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="734.2" y="462.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.12%)</title><rect x="731.2" y="435.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="734.2" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.06%)</title><rect x="731.2" y="419.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="734.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.06%)</title><rect x="731.9" y="419.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="734.9" y="430.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.06%)</title><rect x="731.9" y="403.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="734.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (39 samples, 2.41%)</title><rect x="732.6" y="451.0" width="28.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="735.6" y="462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (15 samples, 0.93%)</title><rect x="733.3" y="435.0" width="11.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.3" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.06%)</title><rect x="743.6" y="419.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.6" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (1 samples, 0.06%)</title><rect x="743.6" y="403.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="746.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (6 samples, 0.37%)</title><rect x="744.3" y="435.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="747.3" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.25%)</title><rect x="744.3" y="419.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.12%)</title><rect x="744.3" y="403.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.06%)</title><rect x="744.3" y="387.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.06%)</title><rect x="745.0" y="387.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.0" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.12%)</title><rect x="745.8" y="403.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.12%)</title><rect x="745.8" y="387.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="748.8" y="398.0"></text>
</g>
<g>
<title>java/util/Objects.hash (2 samples, 0.12%)</title><rect x="745.8" y="371.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="748.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (2 samples, 0.12%)</title><rect x="745.8" y="355.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.8" y="366.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (1 samples, 0.06%)</title><rect x="746.5" y="339.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="749.5" y="350.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.hashCode (1 samples, 0.06%)</title><rect x="746.5" y="323.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="749.5" y="334.0"></text>
</g>
<g>
<title>java/net/Inet4Address.hashCode (1 samples, 0.06%)</title><rect x="746.5" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.5" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.06%)</title><rect x="747.2" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.2" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.06%)</title><rect x="747.2" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.06%)</title><rect x="748.0" y="419.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (17 samples, 1.05%)</title><rect x="748.7" y="435.0" width="12.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (15 samples, 0.93%)</title><rect x="750.1" y="419.0" width="11.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.06%)</title><rect x="750.1" y="403.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.06%)</title><rect x="750.1" y="387.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="753.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.06%)</title><rect x="750.1" y="371.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.06%)</title><rect x="750.1" y="355.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.06%)</title><rect x="750.1" y="339.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1 samples, 0.06%)</title><rect x="750.9" y="403.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="753.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.06%)</title><rect x="750.9" y="387.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="753.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.06%)</title><rect x="750.9" y="371.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (13 samples, 0.80%)</title><rect x="751.6" y="403.0" width="9.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (13 samples, 0.80%)</title><rect x="751.6" y="387.0" width="9.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="754.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (10 samples, 0.62%)</title><rect x="751.6" y="371.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="754.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (8 samples, 0.50%)</title><rect x="751.6" y="355.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (8 samples, 0.50%)</title><rect x="751.6" y="339.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (8 samples, 0.50%)</title><rect x="751.6" y="323.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (6 samples, 0.37%)</title><rect x="753.1" y="307.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.1" y="318.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.06%)</title><rect x="753.1" y="291.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="756.1" y="302.0"></text>
</g>
<g>
<title>__libc_write (5 samples, 0.31%)</title><rect x="753.8" y="291.0" width="3.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="756.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (2 samples, 0.12%)</title><rect x="757.5" y="355.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="760.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (3 samples, 0.19%)</title><rect x="758.9" y="371.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="761.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$530/1618478091.accept (9 samples, 0.56%)</title><rect x="761.1" y="515.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="764.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (9 samples, 0.56%)</title><rect x="761.1" y="499.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (9 samples, 0.56%)</title><rect x="761.1" y="483.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="764.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9 samples, 0.56%)</title><rect x="761.1" y="467.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.56%)</title><rect x="761.1" y="451.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="764.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (8 samples, 0.50%)</title><rect x="761.8" y="435.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="764.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (8 samples, 0.50%)</title><rect x="761.8" y="419.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="764.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.25%)</title><rect x="762.6" y="403.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.25%)</title><rect x="762.6" y="387.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="765.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (4 samples, 0.25%)</title><rect x="762.6" y="371.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.25%)</title><rect x="762.6" y="355.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="765.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.25%)</title><rect x="762.6" y="339.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="765.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.25%)</title><rect x="762.6" y="323.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="765.6" y="334.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.19%)</title><rect x="762.6" y="307.0" width="2.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="765.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$541/52399997.accept (1 samples, 0.06%)</title><rect x="764.8" y="307.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="767.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$541/52399997.accept (1 samples, 0.06%)</title><rect x="765.5" y="403.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="768.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (1 samples, 0.06%)</title><rect x="765.5" y="387.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="768.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (1 samples, 0.06%)</title><rect x="765.5" y="371.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="768.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.06%)</title><rect x="765.5" y="355.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="768.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.06%)</title><rect x="765.5" y="339.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="768.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$547/987248172.accept (2 samples, 0.12%)</title><rect x="766.2" y="403.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="769.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (2 samples, 0.12%)</title><rect x="766.2" y="387.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (2 samples, 0.12%)</title><rect x="766.2" y="371.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.2" y="382.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (2 samples, 0.12%)</title><rect x="766.2" y="355.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.2" y="366.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (1 samples, 0.06%)</title><rect x="767.0" y="339.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (21 samples, 1.30%)</title><rect x="767.7" y="515.0" width="15.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (19 samples, 1.18%)</title><rect x="769.1" y="499.0" width="13.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="772.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (19 samples, 1.18%)</title><rect x="769.1" y="483.0" width="13.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (18 samples, 1.11%)</title><rect x="769.9" y="467.0" width="13.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="772.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (17 samples, 1.05%)</title><rect x="770.6" y="451.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (16 samples, 0.99%)</title><rect x="770.6" y="435.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="771.3" y="419.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="774.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="771.3" y="403.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="774.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (14 samples, 0.87%)</title><rect x="772.1" y="419.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.12%)</title><rect x="772.1" y="403.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.12%)</title><rect x="772.1" y="387.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="775.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.12%)</title><rect x="772.1" y="371.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="775.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.12%)</title><rect x="772.1" y="355.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.12%)</title><rect x="772.1" y="339.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="775.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.12%)</title><rect x="772.1" y="323.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="775.1" y="334.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="772.1" y="307.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="775.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$553/735033109.accept (1 samples, 0.06%)</title><rect x="772.8" y="307.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="775.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$553/735033109.accept (12 samples, 0.74%)</title><rect x="773.5" y="403.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="776.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (12 samples, 0.74%)</title><rect x="773.5" y="387.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="776.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (12 samples, 0.74%)</title><rect x="773.5" y="371.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="776.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.74%)</title><rect x="773.5" y="355.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="776.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (10 samples, 0.62%)</title><rect x="774.3" y="339.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 0.62%)</title><rect x="774.3" y="323.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="777.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10 samples, 0.62%)</title><rect x="774.3" y="307.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="777.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (10 samples, 0.62%)</title><rect x="774.3" y="291.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (10 samples, 0.62%)</title><rect x="774.3" y="275.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (10 samples, 0.62%)</title><rect x="774.3" y="259.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (10 samples, 0.62%)</title><rect x="774.3" y="243.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="777.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.62%)</title><rect x="774.3" y="227.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="777.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.62%)</title><rect x="774.3" y="211.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="777.3" y="222.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.31%)</title><rect x="774.3" y="195.0" width="3.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="777.3" y="206.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.19%)</title><rect x="775.0" y="179.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="778.0" y="190.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.06%)</title><rect x="777.2" y="179.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="780.2" y="190.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.31%)</title><rect x="777.9" y="195.0" width="3.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="780.9" y="206.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="781.6" y="339.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="784.6" y="350.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="782.3" y="435.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="785.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.06%)</title><rect x="783.0" y="611.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="786.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.06%)</title><rect x="783.0" y="595.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="786.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.06%)</title><rect x="783.0" y="579.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="786.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$235/21395621.run (1 samples, 0.06%)</title><rect x="783.0" y="563.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="786.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (49 samples, 3.03%)</title><rect x="783.8" y="723.0" width="35.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="786.8" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (49 samples, 3.03%)</title><rect x="783.8" y="707.0" width="35.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="786.8" y="718.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (21 samples, 1.30%)</title><rect x="784.5" y="691.0" width="15.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="787.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (19 samples, 1.18%)</title><rect x="784.5" y="675.0" width="13.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="787.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (19 samples, 1.18%)</title><rect x="784.5" y="659.0" width="13.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="787.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (19 samples, 1.18%)</title><rect x="784.5" y="643.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="787.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (19 samples, 1.18%)</title><rect x="784.5" y="627.0" width="13.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="787.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (15 samples, 0.93%)</title><rect x="786.0" y="611.0" width="10.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (15 samples, 0.93%)</title><rect x="786.0" y="595.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="789.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (13 samples, 0.80%)</title><rect x="786.0" y="579.0" width="9.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="789.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$168/198651204.accept (12 samples, 0.74%)</title><rect x="786.7" y="563.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$sendToReplicas$0 (12 samples, 0.74%)</title><rect x="786.7" y="547.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.trySendResponse (10 samples, 0.62%)</title><rect x="786.7" y="531.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.62%)</title><rect x="786.7" y="515.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="789.7" y="526.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.06%)</title><rect x="786.7" y="499.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.7" y="510.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="786.7" y="483.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="789.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="786.7" y="467.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 0.50%)</title><rect x="787.4" y="499.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="790.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.06%)</title><rect x="787.4" y="483.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="790.4" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.06%)</title><rect x="787.4" y="467.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="790.4" y="478.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.06%)</title><rect x="787.4" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.4" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.43%)</title><rect x="788.1" y="483.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.1" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.43%)</title><rect x="788.1" y="467.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="791.1" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (7 samples, 0.43%)</title><rect x="788.1" y="451.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.1" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (7 samples, 0.43%)</title><rect x="788.1" y="435.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="791.1" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.19%)</title><rect x="788.1" y="419.0" width="2.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="791.1" y="430.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="788.1" y="403.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="791.1" y="414.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.06%)</title><rect x="788.9" y="403.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="791.9" y="414.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.06%)</title><rect x="788.9" y="387.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="791.9" y="398.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.06%)</title><rect x="789.6" y="403.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="792.6" y="414.0"></text>
</g>
<g>
<title>__libc_send (3 samples, 0.19%)</title><rect x="790.3" y="419.0" width="2.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="793.3" y="430.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.06%)</title><rect x="792.5" y="419.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="795.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.06%)</title><rect x="793.3" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ReplicasResponseComposer.getComposedResponse (2 samples, 0.12%)</title><rect x="794.0" y="531.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="797.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (2 samples, 0.12%)</title><rect x="794.0" y="515.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="797.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (2 samples, 0.12%)</title><rect x="794.0" y="499.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="797.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.12%)</title><rect x="795.4" y="579.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="798.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="795.4" y="563.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="798.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="795.4" y="547.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.06%)</title><rect x="795.4" y="531.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="798.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.06%)</title><rect x="795.4" y="515.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="795.4" y="499.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="795.4" y="483.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="798.4" y="494.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="795.4" y="467.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="798.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding$$Lambda$156/636945562.apply (1 samples, 0.06%)</title><rect x="796.2" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ResponseConverter.convert (1 samples, 0.06%)</title><rect x="796.2" y="547.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="799.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.06%)</title><rect x="796.2" y="531.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.2" y="542.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.06%)</title><rect x="796.2" y="515.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.2" y="526.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="796.2" y="499.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="799.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.12%)</title><rect x="796.9" y="611.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.12%)</title><rect x="796.9" y="595.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="799.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.12%)</title><rect x="796.9" y="579.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.12%)</title><rect x="796.9" y="563.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="799.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.12%)</title><rect x="796.9" y="547.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.12%)</title><rect x="796.9" y="531.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="799.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.12%)</title><rect x="796.9" y="515.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="799.9" y="526.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="796.9" y="499.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="799.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$154/704106972.accept (1 samples, 0.06%)</title><rect x="797.6" y="499.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="800.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.12%)</title><rect x="798.4" y="675.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="801.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.12%)</title><rect x="798.4" y="659.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="801.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="799.1" y="643.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="802.1" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="799.1" y="627.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="802.1" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="799.1" y="611.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="802.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.74%)</title><rect x="799.8" y="691.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="802.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 0.68%)</title><rect x="800.6" y="675.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="803.6" y="686.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.19%)</title><rect x="801.3" y="659.0" width="2.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="804.3" y="670.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.12%)</title><rect x="801.3" y="643.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="804.3" y="654.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.06%)</title><rect x="801.3" y="627.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="804.3" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.06%)</title><rect x="802.0" y="627.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="805.0" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="802.8" y="643.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="805.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.37%)</title><rect x="803.5" y="659.0" width="4.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="806.5" y="670.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (6 samples, 0.37%)</title><rect x="803.5" y="643.0" width="4.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="806.5" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.06%)</title><rect x="807.9" y="659.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="810.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (15 samples, 0.93%)</title><rect x="808.6" y="691.0" width="11.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="811.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (15 samples, 0.93%)</title><rect x="808.6" y="675.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="811.6" y="686.0"></text>
</g>
<g>
<title>Unsafe_Park (9 samples, 0.56%)</title><rect x="809.3" y="659.0" width="6.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="812.3" y="670.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.06%)</title><rect x="809.3" y="643.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="812.3" y="654.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.12%)</title><rect x="810.1" y="643.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="813.1" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.06%)</title><rect x="810.8" y="627.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="813.8" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.06%)</title><rect x="811.5" y="643.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="814.5" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.06%)</title><rect x="812.3" y="643.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="815.3" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.19%)</title><rect x="813.0" y="643.0" width="2.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="816.0" y="654.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="815.2" y="643.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="818.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.25%)</title><rect x="815.9" y="659.0" width="2.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="818.9" y="670.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (4 samples, 0.25%)</title><rect x="815.9" y="643.0" width="2.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="818.9" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.06%)</title><rect x="818.8" y="659.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="821.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (219 samples, 13.56%)</title><rect x="819.6" y="723.0" width="160.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.6" y="734.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="826.9" y="707.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="829.9" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="826.9" y="691.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="829.9" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="826.9" y="675.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="829.9" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.06%)</title><rect x="827.6" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="830.6" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (5 samples, 0.31%)</title><rect x="828.3" y="707.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="831.3" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (43 samples, 2.66%)</title><rect x="832.0" y="707.0" width="31.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="835.0" y="718.0">ja..</text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="832.0" y="691.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="835.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$378/72598837.accept (39 samples, 2.41%)</title><rect x="832.7" y="691.0" width="28.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="835.7" y="702.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (39 samples, 2.41%)</title><rect x="832.7" y="675.0" width="28.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.7" y="686.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (39 samples, 2.41%)</title><rect x="832.7" y="659.0" width="28.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="835.7" y="670.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (39 samples, 2.41%)</title><rect x="832.7" y="643.0" width="28.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.7" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (39 samples, 2.41%)</title><rect x="832.7" y="627.0" width="28.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.7" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.06%)</title><rect x="832.7" y="611.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.06%)</title><rect x="832.7" y="595.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.7" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.06%)</title><rect x="832.7" y="579.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.7" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.06%)</title><rect x="832.7" y="563.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="835.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (38 samples, 2.35%)</title><rect x="833.4" y="611.0" width="27.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="836.4" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (38 samples, 2.35%)</title><rect x="833.4" y="595.0" width="27.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="836.4" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (38 samples, 2.35%)</title><rect x="833.4" y="579.0" width="27.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="836.4" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (38 samples, 2.35%)</title><rect x="833.4" y="563.0" width="27.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="836.4" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (38 samples, 2.35%)</title><rect x="833.4" y="547.0" width="27.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="836.4" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206/227894635.run (37 samples, 2.29%)</title><rect x="833.4" y="531.0" width="27.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="836.4" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (37 samples, 2.29%)</title><rect x="833.4" y="515.0" width="27.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="836.4" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (11 samples, 0.68%)</title><rect x="834.9" y="499.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="837.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (10 samples, 0.62%)</title><rect x="835.6" y="483.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="838.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (10 samples, 0.62%)</title><rect x="835.6" y="467.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="838.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.62%)</title><rect x="835.6" y="451.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="838.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.62%)</title><rect x="835.6" y="435.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="838.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.62%)</title><rect x="835.6" y="419.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="838.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.62%)</title><rect x="835.6" y="403.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="838.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (9 samples, 0.56%)</title><rect x="836.4" y="387.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="839.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (8 samples, 0.50%)</title><rect x="837.1" y="371.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (6 samples, 0.37%)</title><rect x="837.1" y="355.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="840.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.37%)</title><rect x="837.1" y="339.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.37%)</title><rect x="837.1" y="323.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="840.1" y="334.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.06%)</title><rect x="837.1" y="307.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="840.1" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="837.8" y="307.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="840.8" y="318.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="837.8" y="291.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="840.8" y="302.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.25%)</title><rect x="838.6" y="307.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="841.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (2 samples, 0.12%)</title><rect x="841.5" y="355.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="844.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.06%)</title><rect x="842.9" y="499.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="845.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.06%)</title><rect x="843.7" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.06%)</title><rect x="843.7" y="483.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="846.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.06%)</title><rect x="843.7" y="467.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (22 samples, 1.36%)</title><rect x="844.4" y="499.0" width="16.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="847.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (3 samples, 0.19%)</title><rect x="844.4" y="483.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="847.4" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="844.4" y="467.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="847.4" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.06%)</title><rect x="845.1" y="467.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="848.1" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.slice (1 samples, 0.06%)</title><rect x="845.9" y="467.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="848.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (19 samples, 1.18%)</title><rect x="846.6" y="483.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="849.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="846.6" y="467.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="849.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="846.6" y="451.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (18 samples, 1.11%)</title><rect x="847.3" y="467.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="850.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (18 samples, 1.11%)</title><rect x="847.3" y="451.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.3" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.19%)</title><rect x="847.3" y="435.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.3" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.19%)</title><rect x="847.3" y="419.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.3" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (13 samples, 0.80%)</title><rect x="849.5" y="435.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="852.5" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (13 samples, 0.80%)</title><rect x="849.5" y="419.0" width="9.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="852.5" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (13 samples, 0.80%)</title><rect x="849.5" y="403.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="852.5" y="414.0"></text>
</g>
<g>
<title>__libc_read (11 samples, 0.68%)</title><rect x="849.5" y="387.0" width="8.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="852.5" y="398.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="857.6" y="387.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="860.6" y="398.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.06%)</title><rect x="858.3" y="387.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="861.3" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.12%)</title><rect x="859.0" y="435.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="862.0" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.12%)</title><rect x="859.0" y="419.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="862.0" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.12%)</title><rect x="859.0" y="403.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="862.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.12%)</title><rect x="859.0" y="387.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="862.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.06%)</title><rect x="860.5" y="531.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="863.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$391/1444661256.accept (3 samples, 0.19%)</title><rect x="861.2" y="691.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="864.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (3 samples, 0.19%)</title><rect x="861.2" y="675.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="864.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$377/1536444579.run (3 samples, 0.19%)</title><rect x="861.2" y="659.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="864.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (3 samples, 0.19%)</title><rect x="861.2" y="643.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="864.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (3 samples, 0.19%)</title><rect x="861.2" y="627.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="864.2" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (3 samples, 0.19%)</title><rect x="861.2" y="611.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="864.2" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (3 samples, 0.19%)</title><rect x="861.2" y="595.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="864.2" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.06%)</title><rect x="863.4" y="707.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="866.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (5 samples, 0.31%)</title><rect x="864.1" y="707.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="867.1" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.19%)</title><rect x="865.6" y="691.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="868.6" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (3 samples, 0.19%)</title><rect x="865.6" y="675.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="868.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (3 samples, 0.19%)</title><rect x="865.6" y="659.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="868.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.19%)</title><rect x="865.6" y="643.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="868.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.19%)</title><rect x="865.6" y="627.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="868.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (3 samples, 0.19%)</title><rect x="865.6" y="611.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="868.6" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.12%)</title><rect x="866.3" y="595.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="869.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (1 samples, 0.06%)</title><rect x="866.3" y="579.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="869.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$376/1645928163.accept (1 samples, 0.06%)</title><rect x="866.3" y="563.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="869.3" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="866.3" y="547.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="869.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="866.3" y="531.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="869.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="866.3" y="515.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="869.3" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="866.3" y="499.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="869.3" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.06%)</title><rect x="866.3" y="483.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="869.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$375/628055786.test (1 samples, 0.06%)</title><rect x="867.1" y="579.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="870.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (40 samples, 2.48%)</title><rect x="867.8" y="707.0" width="29.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="870.8" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$215/107337296.run (25 samples, 1.55%)</title><rect x="867.8" y="691.0" width="18.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="870.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (25 samples, 1.55%)</title><rect x="867.8" y="675.0" width="18.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="870.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (25 samples, 1.55%)</title><rect x="867.8" y="659.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="870.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (25 samples, 1.55%)</title><rect x="867.8" y="643.0" width="18.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="870.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (25 samples, 1.55%)</title><rect x="867.8" y="627.0" width="18.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="870.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (24 samples, 1.49%)</title><rect x="868.5" y="611.0" width="17.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="871.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206/227894635.run (23 samples, 1.42%)</title><rect x="869.2" y="595.0" width="16.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="872.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (23 samples, 1.42%)</title><rect x="869.2" y="579.0" width="16.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="872.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (21 samples, 1.30%)</title><rect x="870.0" y="563.0" width="15.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="873.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription (1 samples, 0.06%)</title><rect x="872.9" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="875.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (16 samples, 0.99%)</title><rect x="873.6" y="547.0" width="11.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="876.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (4 samples, 0.25%)</title><rect x="873.6" y="531.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="876.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (4 samples, 0.25%)</title><rect x="873.6" y="515.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (4 samples, 0.25%)</title><rect x="873.6" y="499.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="876.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1059063940.linkToTargetMethod (1 samples, 0.06%)</title><rect x="874.4" y="483.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1641313620.invoke (1 samples, 0.06%)</title><rect x="874.4" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="877.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="874.4" y="451.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="877.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.06%)</title><rect x="874.4" y="435.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="877.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.06%)</title><rect x="874.4" y="419.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="877.4" y="430.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="874.4" y="403.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="877.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.12%)</title><rect x="875.1" y="483.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="878.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.12%)</title><rect x="875.1" y="467.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="878.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.12%)</title><rect x="875.1" y="451.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="878.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.06%)</title><rect x="875.8" y="435.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="878.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (12 samples, 0.74%)</title><rect x="876.6" y="531.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="879.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.74%)</title><rect x="876.6" y="515.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="879.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.74%)</title><rect x="876.6" y="499.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="879.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.62%)</title><rect x="878.0" y="483.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="881.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.62%)</title><rect x="878.0" y="467.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="881.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (10 samples, 0.62%)</title><rect x="878.0" y="451.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="881.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (10 samples, 0.62%)</title><rect x="878.0" y="435.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="881.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (8 samples, 0.50%)</title><rect x="878.0" y="419.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="881.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.50%)</title><rect x="878.0" y="403.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="881.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.50%)</title><rect x="878.0" y="387.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="881.0" y="398.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.19%)</title><rect x="878.7" y="371.0" width="2.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="881.7" y="382.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.06%)</title><rect x="878.7" y="355.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="881.7" y="366.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="879.5" y="355.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="882.5" y="366.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="880.2" y="355.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="883.2" y="366.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.19%)</title><rect x="880.9" y="371.0" width="2.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="883.9" y="382.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.06%)</title><rect x="883.1" y="371.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="886.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (2 samples, 0.12%)</title><rect x="883.9" y="419.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="886.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.06%)</title><rect x="885.3" y="563.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="888.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.06%)</title><rect x="885.3" y="547.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="888.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.06%)</title><rect x="885.3" y="531.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="888.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.06%)</title><rect x="885.3" y="515.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="888.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$224/1342060978.run (15 samples, 0.93%)</title><rect x="886.0" y="691.0" width="11.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (15 samples, 0.93%)</title><rect x="886.0" y="675.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="889.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 0.93%)</title><rect x="886.0" y="659.0" width="11.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="889.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.93%)</title><rect x="886.0" y="643.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="889.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (15 samples, 0.93%)</title><rect x="886.0" y="627.0" width="11.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="889.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (15 samples, 0.93%)</title><rect x="886.0" y="611.0" width="11.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="889.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (14 samples, 0.87%)</title><rect x="886.0" y="595.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.87%)</title><rect x="886.0" y="579.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="889.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.87%)</title><rect x="886.0" y="563.0" width="10.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.0" y="574.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.50%)</title><rect x="886.0" y="547.0" width="5.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="889.0" y="558.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.19%)</title><rect x="887.5" y="531.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="890.5" y="542.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.12%)</title><rect x="889.7" y="531.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="892.7" y="542.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="891.2" y="531.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="894.2" y="542.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.37%)</title><rect x="891.9" y="547.0" width="4.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="894.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (1 samples, 0.06%)</title><rect x="896.3" y="595.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="899.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (17 samples, 1.05%)</title><rect x="897.0" y="707.0" width="12.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="900.0" y="718.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.19%)</title><rect x="897.0" y="691.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.0" y="702.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.19%)</title><rect x="897.0" y="675.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.19%)</title><rect x="897.0" y="659.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="900.0" y="670.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.12%)</title><rect x="897.7" y="643.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="900.7" y="654.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="897.7" y="627.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="900.7" y="638.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.06%)</title><rect x="898.5" y="627.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="901.5" y="638.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="898.5" y="611.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="901.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (14 samples, 0.87%)</title><rect x="899.2" y="691.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="902.2" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.19%)</title><rect x="902.1" y="675.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="905.1" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.19%)</title><rect x="902.1" y="659.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="905.1" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.06%)</title><rect x="902.1" y="643.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="905.1" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.12%)</title><rect x="902.9" y="643.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="905.9" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.06%)</title><rect x="903.6" y="627.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="906.6" y="638.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.12%)</title><rect x="904.3" y="675.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="907.3" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.06%)</title><rect x="905.8" y="675.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="908.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (4 samples, 0.25%)</title><rect x="906.5" y="675.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="909.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (22 samples, 1.36%)</title><rect x="909.4" y="707.0" width="16.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="912.4" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.12%)</title><rect x="913.8" y="691.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="916.8" y="702.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.06%)</title><rect x="913.8" y="675.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="916.8" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="914.5" y="675.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="917.5" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="914.5" y="659.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="917.5" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.06%)</title><rect x="914.5" y="643.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="917.5" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.25%)</title><rect x="915.3" y="691.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="918.3" y="702.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.25%)</title><rect x="915.3" y="675.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (4 samples, 0.25%)</title><rect x="915.3" y="659.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="918.3" y="670.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.19%)</title><rect x="915.3" y="643.0" width="2.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="918.3" y="654.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="916.7" y="627.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="919.7" y="638.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.06%)</title><rect x="917.5" y="643.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="920.5" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (3 samples, 0.19%)</title><rect x="918.2" y="691.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="921.2" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.12%)</title><rect x="918.9" y="675.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="921.9" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.12%)</title><rect x="918.9" y="659.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="921.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.hasNext (2 samples, 0.12%)</title><rect x="920.4" y="691.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="923.4" y="702.0"></text>
</g>
<g>
<title>java/util/TreeSet.isEmpty (2 samples, 0.12%)</title><rect x="921.9" y="691.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="924.9" y="702.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (3 samples, 0.19%)</title><rect x="923.3" y="691.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="926.3" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.06%)</title><rect x="924.0" y="675.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="927.0" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.06%)</title><rect x="924.0" y="659.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="927.0" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.06%)</title><rect x="924.0" y="643.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="927.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.06%)</title><rect x="924.8" y="675.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="927.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (63 samples, 3.90%)</title><rect x="925.5" y="707.0" width="46.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="928.5" y="718.0">sun/..</text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="925.5" y="691.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="928.5" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.06%)</title><rect x="926.2" y="691.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="929.2" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (61 samples, 3.78%)</title><rect x="927.0" y="691.0" width="44.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="930.0" y="702.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (59 samples, 3.65%)</title><rect x="928.4" y="675.0" width="43.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="931.4" y="686.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (21 samples, 1.30%)</title><rect x="932.1" y="659.0" width="15.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="935.1" y="670.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.06%)</title><rect x="934.3" y="643.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="937.3" y="654.0"></text>
</g>
<g>
<title>epoll_wait (17 samples, 1.05%)</title><rect x="935.0" y="643.0" width="12.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="938.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (26 samples, 1.61%)</title><rect x="947.4" y="659.0" width="19.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="950.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.37%)</title><rect x="947.4" y="643.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="950.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.37%)</title><rect x="947.4" y="627.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="950.4" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (3 samples, 0.19%)</title><rect x="949.6" y="611.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="952.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (13 samples, 0.80%)</title><rect x="951.8" y="643.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="954.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (12 samples, 0.74%)</title><rect x="952.5" y="627.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="955.5" y="638.0"></text>
</g>
<g>
<title>__libc_read (11 samples, 0.68%)</title><rect x="952.5" y="611.0" width="8.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="955.5" y="622.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="960.6" y="611.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="963.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (7 samples, 0.43%)</title><rect x="961.3" y="643.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="964.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.12%)</title><rect x="961.3" y="627.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="964.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.12%)</title><rect x="961.3" y="611.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="964.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (2 samples, 0.12%)</title><rect x="961.3" y="595.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="964.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (3 samples, 0.19%)</title><rect x="962.8" y="627.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="965.8" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (3 samples, 0.19%)</title><rect x="962.8" y="611.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="965.8" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.12%)</title><rect x="962.8" y="595.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="965.8" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="964.2" y="595.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="967.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (2 samples, 0.12%)</title><rect x="965.0" y="627.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="968.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (3 samples, 0.19%)</title><rect x="966.4" y="659.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="969.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.getFDVal (1 samples, 0.06%)</title><rect x="967.9" y="643.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="970.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (2 samples, 0.12%)</title><rect x="968.6" y="659.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="971.6" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (2 samples, 0.12%)</title><rect x="968.6" y="643.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="971.6" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.06%)</title><rect x="968.6" y="627.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.6" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1 samples, 0.06%)</title><rect x="968.6" y="611.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="971.6" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.06%)</title><rect x="969.3" y="627.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="972.3" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (1 samples, 0.06%)</title><rect x="970.1" y="659.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.1" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (1 samples, 0.06%)</title><rect x="970.1" y="643.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="973.1" y="654.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.06%)</title><rect x="970.1" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="973.1" y="638.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.06%)</title><rect x="970.1" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="973.1" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.06%)</title><rect x="970.1" y="595.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="973.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.06%)</title><rect x="970.8" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (5 samples, 0.31%)</title><rect x="971.5" y="707.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="974.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (5 samples, 0.31%)</title><rect x="971.5" y="691.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="974.5" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (5 samples, 0.31%)</title><rect x="971.5" y="675.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="974.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (2 samples, 0.12%)</title><rect x="971.5" y="659.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="974.5" y="670.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.12%)</title><rect x="971.5" y="643.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="974.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.06%)</title><rect x="973.0" y="659.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="976.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.06%)</title><rect x="973.7" y="659.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="976.7" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.06%)</title><rect x="973.7" y="643.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="976.7" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.06%)</title><rect x="973.7" y="627.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="976.7" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.06%)</title><rect x="974.5" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="977.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (4 samples, 0.25%)</title><rect x="975.2" y="707.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="978.2" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (3 samples, 0.19%)</title><rect x="975.2" y="691.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="978.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (3 samples, 0.19%)</title><rect x="975.2" y="675.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="978.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$378/72598837.accept (1 samples, 0.06%)</title><rect x="977.4" y="691.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="980.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (1 samples, 0.06%)</title><rect x="977.4" y="675.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="980.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (1 samples, 0.06%)</title><rect x="977.4" y="659.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="980.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2 samples, 0.12%)</title><rect x="978.1" y="707.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="981.1" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.12%)</title><rect x="978.1" y="691.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.1" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.12%)</title><rect x="978.1" y="675.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="981.1" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="978.8" y="659.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="981.8" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="978.8" y="643.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="981.8" y="654.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (276 samples, 17.09%)</title><rect x="979.6" y="723.0" width="201.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="982.6" y="734.0">one/nio/server/SelectorThr..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="984.7" y="707.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="987.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.37%)</title><rect x="985.4" y="707.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="988.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.37%)</title><rect x="985.4" y="691.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="988.4" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (6 samples, 0.37%)</title><rect x="985.4" y="675.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.4" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (25 samples, 1.55%)</title><rect x="989.8" y="707.0" width="18.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="992.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (25 samples, 1.55%)</title><rect x="989.8" y="691.0" width="18.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="992.8" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.19%)</title><rect x="994.2" y="675.0" width="2.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="997.2" y="686.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 0.25%)</title><rect x="996.4" y="675.0" width="2.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="999.4" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.12%)</title><rect x="999.3" y="675.0" width="1.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1002.3" y="686.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 0.56%)</title><rect x="1000.8" y="675.0" width="6.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1003.8" y="686.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.06%)</title><rect x="1007.3" y="675.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1010.3" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (236 samples, 14.61%)</title><rect x="1008.1" y="707.0" width="172.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1011.1" y="718.0">one/nio/net/Session.pr..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (236 samples, 14.61%)</title><rect x="1008.1" y="691.0" width="172.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1011.1" y="702.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (207 samples, 12.82%)</title><rect x="1008.8" y="675.0" width="151.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1011.8" y="686.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>RequestHandler1_handleEntityRequest.handleRequest (2 samples, 0.12%)</title><rect x="1022.0" y="659.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1025.0" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="1023.4" y="659.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1026.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (169 samples, 10.46%)</title><rect x="1024.1" y="659.0" width="123.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1027.1" y="670.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (169 samples, 10.46%)</title><rect x="1024.1" y="643.0" width="123.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1027.1" y="654.0">one/nio/http/Ht..</text>
</g>
<g>
<title>RequestHandler1_handleEntityRequest.handleRequest (167 samples, 10.34%)</title><rect x="1024.1" y="627.0" width="122.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1027.1" y="638.0">RequestHandler1..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.31%)</title><rect x="1024.1" y="611.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1027.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="1027.1" y="595.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1030.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="1027.1" y="579.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1030.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5 samples, 0.31%)</title><rect x="1027.8" y="611.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1030.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.31%)</title><rect x="1027.8" y="595.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1030.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.12%)</title><rect x="1028.5" y="579.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.12%)</title><rect x="1028.5" y="563.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1031.5" y="574.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.12%)</title><rect x="1030.0" y="579.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1033.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.12%)</title><rect x="1030.0" y="563.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1033.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.12%)</title><rect x="1030.0" y="547.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1033.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.12%)</title><rect x="1030.0" y="531.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.handleEntityRequest (157 samples, 9.72%)</title><rect x="1031.4" y="611.0" width="114.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1034.4" y="622.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (31 samples, 1.92%)</title><rect x="1032.2" y="595.0" width="22.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1035.2" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.reportGet (1 samples, 0.06%)</title><rect x="1032.2" y="579.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1035.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (29 samples, 1.80%)</title><rect x="1032.9" y="579.0" width="21.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1035.9" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (26 samples, 1.61%)</title><rect x="1035.1" y="563.0" width="19.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1038.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.block (26 samples, 1.61%)</title><rect x="1035.1" y="547.0" width="19.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1038.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (26 samples, 1.61%)</title><rect x="1035.1" y="531.0" width="19.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1038.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (24 samples, 1.49%)</title><rect x="1036.6" y="515.0" width="17.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1039.6" y="526.0"></text>
</g>
<g>
<title>Unsafe_Park (19 samples, 1.18%)</title><rect x="1036.6" y="499.0" width="13.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1039.6" y="510.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.06%)</title><rect x="1037.3" y="483.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1040.3" y="494.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (7 samples, 0.43%)</title><rect x="1038.0" y="483.0" width="5.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1041.0" y="494.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.12%)</title><rect x="1040.2" y="467.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1043.2" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (2 samples, 0.12%)</title><rect x="1041.7" y="467.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1044.7" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.06%)</title><rect x="1043.1" y="483.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1046.1" y="494.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.06%)</title><rect x="1043.9" y="483.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1046.9" y="494.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (7 samples, 0.43%)</title><rect x="1044.6" y="483.0" width="5.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1047.6" y="494.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="1049.7" y="483.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1052.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.25%)</title><rect x="1050.4" y="499.0" width="3.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1053.4" y="510.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="1050.4" y="483.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1053.4" y="494.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.19%)</title><rect x="1051.2" y="483.0" width="2.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1054.2" y="494.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.06%)</title><rect x="1053.4" y="499.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1056.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.06%)</title><rect x="1054.1" y="579.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1057.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.processRequest (9 samples, 0.56%)</title><rect x="1054.8" y="595.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1057.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (9 samples, 0.56%)</title><rect x="1054.8" y="579.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1057.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (9 samples, 0.56%)</title><rect x="1054.8" y="563.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1057.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.50%)</title><rect x="1055.6" y="547.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1058.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (7 samples, 0.43%)</title><rect x="1056.3" y="531.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1059.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.43%)</title><rect x="1056.3" y="515.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1059.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.43%)</title><rect x="1056.3" y="499.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1059.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.43%)</title><rect x="1056.3" y="483.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1059.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.43%)</title><rect x="1056.3" y="467.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1059.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.06%)</title><rect x="1056.3" y="451.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1059.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.37%)</title><rect x="1057.0" y="451.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1060.0" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.06%)</title><rect x="1057.0" y="435.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1060.0" y="446.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.06%)</title><rect x="1057.8" y="435.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1060.8" y="446.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.19%)</title><rect x="1058.5" y="435.0" width="2.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1061.5" y="446.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="1058.5" y="419.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1061.5" y="430.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.12%)</title><rect x="1059.2" y="419.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1062.2" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1060.7" y="435.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1063.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.sendToReplicas (96 samples, 5.94%)</title><rect x="1061.4" y="595.0" width="70.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1064.4" y="606.0">ru/mail/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.allOf (2 samples, 0.12%)</title><rect x="1062.9" y="579.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1065.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (2 samples, 0.12%)</title><rect x="1062.9" y="563.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1065.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (2 samples, 0.12%)</title><rect x="1062.9" y="547.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.addMyselfParamToRequest (3 samples, 0.19%)</title><rect x="1064.3" y="579.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1067.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1064.3" y="563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1067.3" y="574.0"></text>
</g>
<g>
<title>Klass::klass_holder() const (1 samples, 0.06%)</title><rect x="1064.3" y="547.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1067.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.12%)</title><rect x="1065.1" y="563.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1068.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.processRequest (3 samples, 0.19%)</title><rect x="1066.5" y="579.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1069.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (3 samples, 0.19%)</title><rect x="1066.5" y="563.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1069.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (3 samples, 0.19%)</title><rect x="1066.5" y="547.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1069.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.19%)</title><rect x="1066.5" y="531.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1069.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.06%)</title><rect x="1066.5" y="515.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1069.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.12%)</title><rect x="1067.3" y="515.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1070.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.06%)</title><rect x="1067.3" y="499.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1070.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.06%)</title><rect x="1067.3" y="483.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1070.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.06%)</title><rect x="1067.3" y="467.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1070.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.06%)</title><rect x="1067.3" y="451.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1070.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.06%)</title><rect x="1067.3" y="435.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1070.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="1068.0" y="499.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1071.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="1068.0" y="483.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1071.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="1068.0" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1071.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="1068.0" y="451.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1071.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="1068.0" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1071.0" y="446.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="1068.0" y="419.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1071.0" y="430.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.06%)</title><rect x="1068.0" y="403.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1071.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding.getResponsibleNodes (1 samples, 0.06%)</title><rect x="1068.7" y="579.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1071.7" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="1068.7" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1071.7" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="1068.7" y="547.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1071.7" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="1068.7" y="531.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1071.7" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="1068.7" y="515.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1071.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="1068.7" y="499.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1071.7" y="510.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="1068.7" y="483.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1071.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RendezvousSharding.passOn (85 samples, 5.26%)</title><rect x="1069.4" y="579.0" width="62.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1072.4" y="590.0">ru/mai..</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="1070.2" y="563.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1073.2" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="1070.2" y="547.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1073.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="1070.2" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1073.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (1 samples, 0.06%)</title><rect x="1070.9" y="563.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1073.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (1 samples, 0.06%)</title><rect x="1070.9" y="547.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1073.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.06%)</title><rect x="1070.9" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1073.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (1 samples, 0.06%)</title><rect x="1070.9" y="515.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1073.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="1070.9" y="499.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1073.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="1070.9" y="483.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1073.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.12%)</title><rect x="1071.6" y="563.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1074.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.12%)</title><rect x="1071.6" y="547.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1074.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.12%)</title><rect x="1071.6" y="531.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1074.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$239/1117950874.apply (1 samples, 0.06%)</title><rect x="1072.4" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1075.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (1 samples, 0.06%)</title><rect x="1072.4" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1075.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (1 samples, 0.06%)</title><rect x="1072.4" y="483.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1075.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (1 samples, 0.06%)</title><rect x="1072.4" y="467.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1075.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.06%)</title><rect x="1072.4" y="451.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1075.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="1072.4" y="435.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1075.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="1072.4" y="419.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1075.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="1072.4" y="403.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1075.4" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="1072.4" y="387.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1075.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (56 samples, 3.47%)</title><rect x="1073.1" y="563.0" width="40.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1076.1" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (56 samples, 3.47%)</title><rect x="1073.1" y="547.0" width="40.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1076.1" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (56 samples, 3.47%)</title><rect x="1073.1" y="531.0" width="40.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1076.1" y="542.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (56 samples, 3.47%)</title><rect x="1073.1" y="515.0" width="40.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1076.1" y="526.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="1073.1" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="1073.1" y="483.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="1073.1" y="467.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1076.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (37 samples, 2.29%)</title><rect x="1073.8" y="499.0" width="27.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1076.8" y="510.0">j..</text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.06%)</title><rect x="1074.6" y="483.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1077.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (1 samples, 0.06%)</title><rect x="1074.6" y="467.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1077.6" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1 samples, 0.06%)</title><rect x="1075.3" y="483.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1078.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.06%)</title><rect x="1075.3" y="467.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1078.3" y="478.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="1075.3" y="451.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1078.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (31 samples, 1.92%)</title><rect x="1076.0" y="483.0" width="22.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1079.0" y="494.0">j..</text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (31 samples, 1.92%)</title><rect x="1076.0" y="467.0" width="22.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1079.0" y="478.0">s..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.06%)</title><rect x="1076.7" y="451.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1079.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="1076.7" y="435.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1079.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="1076.7" y="419.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1079.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.19%)</title><rect x="1077.5" y="451.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1080.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.19%)</title><rect x="1077.5" y="435.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1080.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.06%)</title><rect x="1078.9" y="419.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1081.9" y="430.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (26 samples, 1.61%)</title><rect x="1079.7" y="451.0" width="19.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1082.7" y="462.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (20 samples, 1.24%)</title><rect x="1079.7" y="435.0" width="14.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1082.7" y="446.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1081.9" y="419.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1084.9" y="430.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.12%)</title><rect x="1082.6" y="419.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1085.6" y="430.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (2 samples, 0.12%)</title><rect x="1082.6" y="403.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1085.6" y="414.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.19%)</title><rect x="1084.1" y="419.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1087.1" y="430.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.06%)</title><rect x="1084.8" y="403.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1087.8" y="414.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.06%)</title><rect x="1085.5" y="403.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1088.5" y="414.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.06%)</title><rect x="1085.5" y="387.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1088.5" y="398.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="1086.2" y="419.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1089.2" y="430.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.06%)</title><rect x="1087.0" y="419.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1090.0" y="430.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.25%)</title><rect x="1087.7" y="419.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1090.7" y="430.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.19%)</title><rect x="1087.7" y="403.0" width="2.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1090.7" y="414.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.12%)</title><rect x="1087.7" y="387.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1090.7" y="398.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="1089.2" y="387.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1092.2" y="398.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (1 samples, 0.06%)</title><rect x="1089.9" y="403.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1092.9" y="414.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.06%)</title><rect x="1089.9" y="387.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1092.9" y="398.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (5 samples, 0.31%)</title><rect x="1090.6" y="419.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1093.6" y="430.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.06%)</title><rect x="1090.6" y="403.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1093.6" y="414.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.12%)</title><rect x="1091.4" y="403.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1094.4" y="414.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.06%)</title><rect x="1092.8" y="403.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1095.8" y="414.0"></text>
</g>
<g>
<title>PcDescCache::find_pc_desc(int, bool) (1 samples, 0.06%)</title><rect x="1092.8" y="387.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1095.8" y="398.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="1093.6" y="403.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1096.6" y="414.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.06%)</title><rect x="1093.6" y="387.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1096.6" y="398.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.06%)</title><rect x="1093.6" y="371.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1096.6" y="382.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.06%)</title><rect x="1094.3" y="435.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1097.3" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (5 samples, 0.31%)</title><rect x="1095.0" y="435.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1098.0" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (5 samples, 0.31%)</title><rect x="1095.0" y="419.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1098.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.06%)</title><rect x="1095.7" y="403.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1098.7" y="414.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="1095.7" y="387.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1098.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="1095.7" y="371.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1098.7" y="382.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (3 samples, 0.19%)</title><rect x="1096.5" y="403.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1099.5" y="414.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.19%)</title><rect x="1096.5" y="387.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1099.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.19%)</title><rect x="1096.5" y="371.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1099.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.19%)</title><rect x="1096.5" y="355.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1099.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.19%)</title><rect x="1096.5" y="339.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1099.5" y="350.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="1097.9" y="323.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1100.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.06%)</title><rect x="1098.7" y="483.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1101.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="1098.7" y="467.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1101.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="1098.7" y="451.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1101.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="1098.7" y="435.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1101.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="1098.7" y="419.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1101.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="1098.7" y="403.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1101.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (2 samples, 0.12%)</title><rect x="1099.4" y="483.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1102.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (8 samples, 0.50%)</title><rect x="1100.9" y="499.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1103.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (2 samples, 0.12%)</title><rect x="1100.9" y="483.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1103.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (6 samples, 0.37%)</title><rect x="1102.3" y="483.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1105.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (5 samples, 0.31%)</title><rect x="1103.1" y="467.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1106.1" y="478.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1 samples, 0.06%)</title><rect x="1103.1" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1106.1" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (1 samples, 0.06%)</title><rect x="1103.1" y="435.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1106.1" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (1 samples, 0.06%)</title><rect x="1103.1" y="419.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1106.1" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (1 samples, 0.06%)</title><rect x="1103.1" y="403.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1106.1" y="414.0"></text>
</g>
<g>
<title>java/lang/Class.newReflectionData (1 samples, 0.06%)</title><rect x="1103.1" y="387.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1106.1" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.06%)</title><rect x="1103.8" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1106.8" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.06%)</title><rect x="1103.8" y="435.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1106.8" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.06%)</title><rect x="1103.8" y="419.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1106.8" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (1 samples, 0.06%)</title><rect x="1103.8" y="403.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1106.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (1 samples, 0.06%)</title><rect x="1103.8" y="387.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1106.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor11.newInstance (1 samples, 0.06%)</title><rect x="1104.5" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1107.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (1 samples, 0.06%)</title><rect x="1105.2" y="451.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1108.2" y="462.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="1106.0" y="451.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1109.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (10 samples, 0.62%)</title><rect x="1106.7" y="499.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1109.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (10 samples, 0.62%)</title><rect x="1106.7" y="483.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1109.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.62%)</title><rect x="1106.7" y="467.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1109.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (8 samples, 0.50%)</title><rect x="1108.2" y="451.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1111.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (7 samples, 0.43%)</title><rect x="1108.9" y="435.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1111.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (7 samples, 0.43%)</title><rect x="1108.9" y="419.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1111.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.43%)</title><rect x="1108.9" y="403.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1111.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.37%)</title><rect x="1109.6" y="387.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1112.6" y="398.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.12%)</title><rect x="1109.6" y="371.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1112.6" y="382.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="1110.4" y="355.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1113.4" y="366.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.25%)</title><rect x="1111.1" y="371.0" width="2.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1114.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/RequestConverter.convert (24 samples, 1.49%)</title><rect x="1114.0" y="563.0" width="17.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1117.0" y="574.0"></text>
</g>
<g>
<title>java/net/URI.create (18 samples, 1.11%)</title><rect x="1115.5" y="547.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1118.5" y="558.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (18 samples, 1.11%)</title><rect x="1115.5" y="531.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1118.5" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (18 samples, 1.11%)</title><rect x="1115.5" y="515.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1118.5" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (2 samples, 0.12%)</title><rect x="1117.7" y="499.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1120.7" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.12%)</title><rect x="1117.7" y="483.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.7" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.12%)</title><rect x="1117.7" y="467.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1120.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.addMyselfParamToRequest (1 samples, 0.06%)</title><rect x="1118.4" y="451.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1121.4" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (13 samples, 0.80%)</title><rect x="1119.1" y="499.0" width="9.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1122.1" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.12%)</title><rect x="1119.1" y="483.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1122.1" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.12%)</title><rect x="1119.1" y="467.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1122.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.canEncode (1 samples, 0.06%)</title><rect x="1119.9" y="451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1122.9" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (9 samples, 0.56%)</title><rect x="1120.6" y="483.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1123.6" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.12%)</title><rect x="1122.0" y="467.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1125.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.12%)</title><rect x="1122.0" y="451.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1122.0" y="435.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1125.0" y="446.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1122.0" y="419.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.0" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (1 samples, 0.06%)</title><rect x="1122.8" y="419.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.8" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (2 samples, 0.12%)</title><rect x="1123.5" y="467.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1126.5" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (2 samples, 0.12%)</title><rect x="1123.5" y="451.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.5" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (2 samples, 0.12%)</title><rect x="1123.5" y="435.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.5" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.12%)</title><rect x="1123.5" y="419.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.5" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.19%)</title><rect x="1125.0" y="467.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1128.0" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.12%)</title><rect x="1127.2" y="483.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1130.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.12%)</title><rect x="1127.2" y="467.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1130.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.12%)</title><rect x="1127.2" y="451.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1130.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.12%)</title><rect x="1127.2" y="435.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1130.2" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (3 samples, 0.19%)</title><rect x="1128.6" y="547.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1131.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (3 samples, 0.19%)</title><rect x="1128.6" y="531.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1131.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.12%)</title><rect x="1128.6" y="515.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1131.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.12%)</title><rect x="1128.6" y="499.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1131.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.06%)</title><rect x="1129.4" y="483.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1132.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1130.1" y="515.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (1 samples, 0.06%)</title><rect x="1130.8" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1133.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1130.8" y="531.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1133.8" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1 samples, 0.06%)</title><rect x="1130.8" y="515.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1133.8" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.06%)</title><rect x="1130.8" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1133.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.trySendResponse (20 samples, 1.24%)</title><rect x="1131.5" y="595.0" width="14.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1134.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (20 samples, 1.24%)</title><rect x="1131.5" y="579.0" width="14.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.19%)</title><rect x="1133.0" y="563.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1136.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="1134.5" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1137.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="1134.5" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1137.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.06%)</title><rect x="1134.5" y="515.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (12 samples, 0.74%)</title><rect x="1135.2" y="563.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1138.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.37%)</title><rect x="1135.2" y="547.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1138.2" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.37%)</title><rect x="1135.2" y="531.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1138.2" y="542.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (3 samples, 0.19%)</title><rect x="1137.4" y="515.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1140.4" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.37%)</title><rect x="1139.6" y="547.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1142.6" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.37%)</title><rect x="1139.6" y="531.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1142.6" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.31%)</title><rect x="1139.6" y="515.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.6" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.25%)</title><rect x="1140.3" y="499.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.3" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.12%)</title><rect x="1141.0" y="483.0" width="1.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1144.0" y="494.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.06%)</title><rect x="1141.0" y="467.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1144.0" y="478.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.06%)</title><rect x="1141.8" y="467.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1144.8" y="478.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.06%)</title><rect x="1141.8" y="451.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1144.8" y="462.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.06%)</title><rect x="1141.8" y="435.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1144.8" y="446.0"></text>
</g>
<g>
<title>send@plt (1 samples, 0.06%)</title><rect x="1142.5" y="483.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1145.5" y="494.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="1143.2" y="515.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1146.2" y="526.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="1143.2" y="499.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1146.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.12%)</title><rect x="1144.0" y="563.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1147.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.12%)</title><rect x="1144.0" y="547.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1147.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.12%)</title><rect x="1144.0" y="531.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1147.0" y="542.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.06%)</title><rect x="1144.7" y="515.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1147.7" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (1 samples, 0.06%)</title><rect x="1145.4" y="563.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1148.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.06%)</title><rect x="1145.4" y="547.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1148.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.12%)</title><rect x="1146.2" y="627.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1149.2" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.12%)</title><rect x="1146.2" y="611.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1149.2" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="1146.2" y="595.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1149.2" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="1146.9" y="595.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1149.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="1146.9" y="579.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1149.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="1146.9" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1149.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.43%)</title><rect x="1147.6" y="659.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1150.6" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.25%)</title><rect x="1147.6" y="643.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1150.6" y="654.0"></text>
</g>
<g>
<title>Klass::klass_holder() const (1 samples, 0.06%)</title><rect x="1147.6" y="627.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1150.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.19%)</title><rect x="1148.4" y="627.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1151.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.19%)</title><rect x="1148.4" y="611.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1151.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.19%)</title><rect x="1148.4" y="595.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1151.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="1150.5" y="643.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1153.5" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="1150.5" y="627.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1153.5" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="1150.5" y="611.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1153.5" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="1150.5" y="595.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.5" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="1150.5" y="579.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1153.5" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1150.5" y="563.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.5" y="574.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1150.5" y="547.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1153.5" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1150.5" y="531.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1153.5" y="542.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.06%)</title><rect x="1150.5" y="515.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.5" y="526.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.06%)</title><rect x="1150.5" y="499.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1153.5" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.12%)</title><rect x="1151.3" y="643.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1154.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.43%)</title><rect x="1152.7" y="659.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1155.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.37%)</title><rect x="1153.5" y="643.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1156.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.37%)</title><rect x="1153.5" y="627.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1156.5" y="638.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.12%)</title><rect x="1156.4" y="611.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1159.4" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.19%)</title><rect x="1157.9" y="659.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1160.9" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.19%)</title><rect x="1157.9" y="643.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1160.9" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="1158.6" y="627.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.6" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1158.6" y="611.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.6" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1158.6" y="595.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.6" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1158.6" y="579.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.6" y="590.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.06%)</title><rect x="1158.6" y="563.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1161.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1159.3" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1162.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1159.3" y="611.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1162.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.06%)</title><rect x="1159.3" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1162.3" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="1159.3" y="579.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.3" y="590.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1159.3" y="563.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.3" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1159.3" y="547.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.3" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1159.3" y="531.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.3" y="542.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1159.3" y="515.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.3" y="526.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.06%)</title><rect x="1159.3" y="499.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1162.3" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (28 samples, 1.73%)</title><rect x="1160.0" y="675.0" width="20.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1163.0" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (22 samples, 1.36%)</title><rect x="1163.0" y="659.0" width="16.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1166.0" y="670.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (13 samples, 0.80%)</title><rect x="1163.7" y="643.0" width="9.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1166.7" y="654.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="1164.4" y="627.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1167.4" y="638.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (2 samples, 0.12%)</title><rect x="1165.2" y="627.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.2" y="638.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.12%)</title><rect x="1166.6" y="627.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1169.6" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.25%)</title><rect x="1168.1" y="627.0" width="2.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1171.1" y="638.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.06%)</title><rect x="1168.1" y="611.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.1" y="622.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.19%)</title><rect x="1168.8" y="611.0" width="2.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1171.8" y="622.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (2 samples, 0.12%)</title><rect x="1171.0" y="627.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.0" y="638.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.06%)</title><rect x="1172.5" y="627.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.5" y="638.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="1173.2" y="643.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1176.2" y="654.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="1173.9" y="643.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1176.9" y="654.0"></text>
</g>
<g>
<title>__recv (6 samples, 0.37%)</title><rect x="1174.7" y="643.0" width="4.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1177.7" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (2 samples, 0.12%)</title><rect x="1179.0" y="659.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1182.0" y="670.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="1179.0" y="643.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1182.0" y="654.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="1179.8" y="643.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.8" y="654.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="1179.8" y="627.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1182.8" y="638.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="1180.5" y="707.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.5" y="718.0"></text>
</g>
<g>
<title>start_thread (11 samples, 0.68%)</title><rect x="1181.2" y="723.0" width="8.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1184.2" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (11 samples, 0.68%)</title><rect x="1181.2" y="707.0" width="8.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1184.2" y="718.0"></text>
</g>
<g>
<title>Thread::call_run() (11 samples, 0.68%)</title><rect x="1181.2" y="691.0" width="8.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.2" y="702.0"></text>
</g>
<g>
<title>GangWorker::loop() (11 samples, 0.68%)</title><rect x="1181.2" y="675.0" width="8.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.2" y="686.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (10 samples, 0.62%)</title><rect x="1181.2" y="659.0" width="7.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.2" y="670.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 0.37%)</title><rect x="1181.2" y="643.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.2" y="654.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.06%)</title><rect x="1181.2" y="627.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.2" y="638.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.06%)</title><rect x="1182.0" y="627.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.0" y="638.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.25%)</title><rect x="1182.7" y="627.0" width="2.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1185.7" y="638.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.12%)</title><rect x="1185.6" y="643.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.6" y="654.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.12%)</title><rect x="1185.6" y="627.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.6" y="638.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.12%)</title><rect x="1185.6" y="611.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.6" y="622.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (2 samples, 0.12%)</title><rect x="1185.6" y="595.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.6" y="606.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.12%)</title><rect x="1185.6" y="579.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.6" y="590.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.06%)</title><rect x="1185.6" y="563.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.6" y="574.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (1 samples, 0.06%)</title><rect x="1185.6" y="547.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.6" y="558.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (1 samples, 0.06%)</title><rect x="1186.3" y="563.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.3" y="574.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.12%)</title><rect x="1187.1" y="643.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.1" y="654.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (2 samples, 0.12%)</title><rect x="1187.1" y="627.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.1" y="638.0"></text>
</g>
<g>
<title>G1ParCopyHelper::trim_queue_partially() (2 samples, 0.12%)</title><rect x="1187.1" y="611.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.1" y="622.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="1188.5" y="659.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.5" y="670.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.06%)</title><rect x="1188.5" y="643.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.5" y="654.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 0.06%)</title><rect x="1188.5" y="627.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.5" y="638.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="1188.5" y="611.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.5" y="622.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.06%)</title><rect x="1188.5" y="595.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.5" y="606.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.06%)</title><rect x="1188.5" y="579.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.5" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.06%)</title><rect x="1189.3" y="723.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.3" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$394/1894267442.accept (1 samples, 0.06%)</title><rect x="1189.3" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.3" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.06%)</title><rect x="1189.3" y="691.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.3" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="1189.3" y="675.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.3" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="1189.3" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.3" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="1189.3" y="643.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.3" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="1189.3" y="627.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.3" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="1189.3" y="611.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.3" y="622.0"></text>
</g>
</g>
</svg>
