<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="517"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="517"> </text>
<g id="frames">
<g>
<title>all (506 samples, 100.00%)</title><rect x="10.0" y="483.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="494.0">all</text>
</g>
<g>
<title>[C2 CompilerThre tid=2907] (3 samples, 0.59%)</title><rect x="10.0" y="467.0" width="7.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.59%)</title><rect x="10.0" y="451.0" width="7.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.59%)</title><rect x="10.0" y="435.0" width="7.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.59%)</title><rect x="10.0" y="419.0" width="7.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (3 samples, 0.59%)</title><rect x="10.0" y="403.0" width="7.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (3 samples, 0.59%)</title><rect x="10.0" y="387.0" width="7.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (3 samples, 0.59%)</title><rect x="10.0" y="371.0" width="7.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (3 samples, 0.59%)</title><rect x="10.0" y="355.0" width="7.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (3 samples, 0.59%)</title><rect x="10.0" y="339.0" width="7.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (2 samples, 0.40%)</title><rect x="10.0" y="323.0" width="4.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (2 samples, 0.40%)</title><rect x="10.0" y="307.0" width="4.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.20%)</title><rect x="10.0" y="291.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.20%)</title><rect x="10.0" y="275.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.20%)</title><rect x="10.0" y="259.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.20%)</title><rect x="12.3" y="291.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.3" y="302.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.20%)</title><rect x="12.3" y="275.0" width="2.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="15.3" y="286.0"></text>
</g>
<g>
<title>Compile::Optimize() (1 samples, 0.20%)</title><rect x="14.7" y="323.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="17.7" y="334.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.20%)</title><rect x="14.7" y="307.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.7" y="318.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.20%)</title><rect x="14.7" y="291.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="17.7" y="302.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.20%)</title><rect x="14.7" y="275.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="17.7" y="286.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.20%)</title><rect x="14.7" y="259.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.7" y="270.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=2979] (1 samples, 0.20%)</title><rect x="17.0" y="467.0" width="2.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="20.0" y="478.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.20%)</title><rect x="17.0" y="451.0" width="2.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="20.0" y="462.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.20%)</title><rect x="17.0" y="435.0" width="2.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="20.0" y="446.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.20%)</title><rect x="17.0" y="419.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="20.0" y="430.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.20%)</title><rect x="17.0" y="403.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="20.0" y="414.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.20%)</title><rect x="17.0" y="387.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="20.0" y="398.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.20%)</title><rect x="17.0" y="371.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="20.0" y="382.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.20%)</title><rect x="17.0" y="355.0" width="2.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="20.0" y="366.0"></text>
</g>
<g>
<title>[GC Thread#5 tid=2981] (1 samples, 0.20%)</title><rect x="19.3" y="467.0" width="2.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="22.3" y="478.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.20%)</title><rect x="19.3" y="451.0" width="2.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="22.3" y="462.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.20%)</title><rect x="19.3" y="435.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="22.3" y="446.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.20%)</title><rect x="19.3" y="419.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="22.3" y="430.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.20%)</title><rect x="19.3" y="403.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="22.3" y="414.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.20%)</title><rect x="19.3" y="387.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.3" y="398.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.20%)</title><rect x="19.3" y="371.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="22.3" y="382.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.20%)</title><rect x="19.3" y="355.0" width="2.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="22.3" y="366.0"></text>
</g>
<g>
<title>[GC Thread#6 tid=2982] (1 samples, 0.20%)</title><rect x="21.7" y="467.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="24.7" y="478.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.20%)</title><rect x="21.7" y="451.0" width="2.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="24.7" y="462.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.20%)</title><rect x="21.7" y="435.0" width="2.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="24.7" y="446.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.20%)</title><rect x="21.7" y="419.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="24.7" y="430.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.20%)</title><rect x="21.7" y="403.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="24.7" y="414.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.20%)</title><rect x="21.7" y="387.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="24.7" y="398.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.20%)</title><rect x="21.7" y="371.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="24.7" y="382.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.20%)</title><rect x="21.7" y="355.0" width="2.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="24.7" y="366.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=2943] (14 samples, 2.77%)</title><rect x="24.0" y="467.0" width="32.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="27.0" y="478.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14 samples, 2.77%)</title><rect x="24.0" y="451.0" width="32.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.0" y="462.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.40%)</title><rect x="24.0" y="435.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.0" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.40%)</title><rect x="24.0" y="419.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.0" y="430.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.20%)</title><rect x="26.3" y="403.0" width="2.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="29.3" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (11 samples, 2.17%)</title><rect x="28.7" y="435.0" width="25.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.7" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (11 samples, 2.17%)</title><rect x="28.7" y="419.0" width="25.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.7" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7 samples, 1.38%)</title><rect x="28.7" y="403.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.59%)</title><rect x="28.7" y="387.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="31.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.59%)</title><rect x="28.7" y="371.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="31.7" y="382.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (3 samples, 0.59%)</title><rect x="28.7" y="355.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (3 samples, 0.59%)</title><rect x="28.7" y="339.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="31.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.59%)</title><rect x="28.7" y="323.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="31.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.59%)</title><rect x="28.7" y="307.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.59%)</title><rect x="28.7" y="291.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.59%)</title><rect x="28.7" y="275.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="31.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.59%)</title><rect x="28.7" y="259.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="31.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.59%)</title><rect x="28.7" y="243.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.40%)</title><rect x="31.0" y="227.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.0" y="238.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.20%)</title><rect x="31.0" y="211.0" width="2.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="34.0" y="222.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.20%)</title><rect x="33.3" y="211.0" width="2.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="36.3" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.40%)</title><rect x="35.7" y="387.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="38.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.20%)</title><rect x="35.7" y="371.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="38.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.20%)</title><rect x="35.7" y="355.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="38.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.20%)</title><rect x="35.7" y="339.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="38.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.20%)</title><rect x="35.7" y="323.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.7" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.20%)</title><rect x="38.0" y="371.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.20%)</title><rect x="40.3" y="387.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.20%)</title><rect x="40.3" y="371.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.20%)</title><rect x="42.6" y="387.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.6" y="398.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.20%)</title><rect x="42.6" y="371.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.20%)</title><rect x="42.6" y="355.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.6" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.79%)</title><rect x="45.0" y="403.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.59%)</title><rect x="47.3" y="387.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="50.3" y="398.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.20%)</title><rect x="49.6" y="371.0" width="2.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="52.6" y="382.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.20%)</title><rect x="52.0" y="371.0" width="2.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="55.0" y="382.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.20%)</title><rect x="54.3" y="435.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="57.3" y="446.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.20%)</title><rect x="54.3" y="419.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="57.3" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=2944] (18 samples, 3.56%)</title><rect x="56.6" y="467.0" width="42.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="59.6" y="478.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (18 samples, 3.56%)</title><rect x="56.6" y="451.0" width="42.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="59.6" y="462.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.99%)</title><rect x="59.0" y="435.0" width="11.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.0" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 0.99%)</title><rect x="59.0" y="419.0" width="11.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.0" y="430.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.40%)</title><rect x="59.0" y="403.0" width="4.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="62.0" y="414.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.20%)</title><rect x="61.3" y="387.0" width="2.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="64.3" y="398.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.59%)</title><rect x="63.6" y="403.0" width="7.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="66.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (12 samples, 2.37%)</title><rect x="70.6" y="435.0" width="28.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.6" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (12 samples, 2.37%)</title><rect x="70.6" y="419.0" width="28.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.6" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8 samples, 1.58%)</title><rect x="70.6" y="403.0" width="18.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4 samples, 0.79%)</title><rect x="70.6" y="387.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.59%)</title><rect x="73.0" y="371.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.0" y="382.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (3 samples, 0.59%)</title><rect x="73.0" y="355.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.40%)</title><rect x="73.0" y="339.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.40%)</title><rect x="73.0" y="323.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.20%)</title><rect x="73.0" y="307.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.20%)</title><rect x="73.0" y="291.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.0" y="302.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.20%)</title><rect x="75.3" y="307.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="78.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.20%)</title><rect x="75.3" y="291.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.3" y="302.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.20%)</title><rect x="75.3" y="275.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.20%)</title><rect x="75.3" y="259.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (1 samples, 0.20%)</title><rect x="77.6" y="339.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.20%)</title><rect x="77.6" y="323.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.59%)</title><rect x="80.0" y="387.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="83.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.59%)</title><rect x="80.0" y="371.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.0" y="382.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.20%)</title><rect x="82.3" y="355.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.20%)</title><rect x="82.3" y="339.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="85.3" y="350.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.20%)</title><rect x="84.6" y="355.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="87.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.20%)</title><rect x="87.0" y="387.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.0" y="398.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.20%)</title><rect x="87.0" y="371.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.0" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.20%)</title><rect x="87.0" y="355.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.79%)</title><rect x="89.3" y="403.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="92.3" y="414.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.59%)</title><rect x="91.6" y="387.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.6" y="398.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.20%)</title><rect x="91.6" y="371.0" width="2.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="94.6" y="382.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.20%)</title><rect x="91.6" y="355.0" width="2.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="94.6" y="366.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.40%)</title><rect x="94.0" y="371.0" width="4.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="97.0" y="382.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=2945] (16 samples, 3.16%)</title><rect x="98.6" y="467.0" width="37.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="101.6" y="478.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (16 samples, 3.16%)</title><rect x="98.6" y="451.0" width="37.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="101.6" y="462.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.79%)</title><rect x="98.6" y="435.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.6" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.79%)</title><rect x="98.6" y="419.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.6" y="430.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.20%)</title><rect x="100.9" y="403.0" width="2.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="103.9" y="414.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.40%)</title><rect x="103.3" y="403.0" width="4.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="106.3" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (11 samples, 2.17%)</title><rect x="107.9" y="435.0" width="25.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.9" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (10 samples, 1.98%)</title><rect x="110.3" y="419.0" width="23.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.3" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6 samples, 1.19%)</title><rect x="110.3" y="403.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2 samples, 0.40%)</title><rect x="110.3" y="387.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2 samples, 0.40%)</title><rect x="110.3" y="371.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.3" y="382.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (2 samples, 0.40%)</title><rect x="110.3" y="355.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (2 samples, 0.40%)</title><rect x="110.3" y="339.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="113.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.40%)</title><rect x="110.3" y="323.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.20%)</title><rect x="112.6" y="307.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.20%)</title><rect x="112.6" y="291.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.20%)</title><rect x="112.6" y="275.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="115.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.20%)</title><rect x="112.6" y="259.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.20%)</title><rect x="112.6" y="243.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.20%)</title><rect x="112.6" y="227.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="115.6" y="238.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.20%)</title><rect x="112.6" y="211.0" width="2.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="115.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.40%)</title><rect x="114.9" y="387.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.9" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.40%)</title><rect x="114.9" y="371.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.9" y="382.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.20%)</title><rect x="117.3" y="355.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="120.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.20%)</title><rect x="119.6" y="387.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="122.6" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.20%)</title><rect x="121.9" y="387.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.9" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.20%)</title><rect x="121.9" y="371.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.79%)</title><rect x="124.3" y="403.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.3" y="414.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.79%)</title><rect x="124.3" y="387.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.3" y="398.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.40%)</title><rect x="124.3" y="371.0" width="4.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="127.3" y="382.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.20%)</title><rect x="124.3" y="355.0" width="2.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="127.3" y="366.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.20%)</title><rect x="126.6" y="355.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="129.6" y="366.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.40%)</title><rect x="128.9" y="371.0" width="4.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="131.9" y="382.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.20%)</title><rect x="133.6" y="435.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="136.6" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=2946] (23 samples, 4.55%)</title><rect x="135.9" y="467.0" width="53.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="138.9" y="478.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (23 samples, 4.55%)</title><rect x="135.9" y="451.0" width="53.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.9" y="462.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 1.78%)</title><rect x="142.9" y="435.0" width="21.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.9" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (8 samples, 1.58%)</title><rect x="145.3" y="419.0" width="18.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.3" y="430.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.20%)</title><rect x="149.9" y="403.0" width="2.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="152.9" y="414.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.20%)</title><rect x="152.3" y="403.0" width="2.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="155.3" y="414.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.20%)</title><rect x="154.6" y="403.0" width="2.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="157.6" y="414.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.59%)</title><rect x="156.9" y="403.0" width="7.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="159.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (11 samples, 2.17%)</title><rect x="163.9" y="435.0" width="25.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="166.9" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (10 samples, 1.98%)</title><rect x="163.9" y="419.0" width="23.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="166.9" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9 samples, 1.78%)</title><rect x="163.9" y="403.0" width="21.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.9" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4 samples, 0.79%)</title><rect x="166.2" y="387.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="169.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4 samples, 0.79%)</title><rect x="166.2" y="371.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.2" y="382.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (4 samples, 0.79%)</title><rect x="166.2" y="355.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.20%)</title><rect x="166.2" y="339.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="169.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.20%)</title><rect x="166.2" y="323.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (3 samples, 0.59%)</title><rect x="168.6" y="339.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.20%)</title><rect x="168.6" y="323.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="171.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.20%)</title><rect x="168.6" y="307.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="171.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/1842484759.get$Lambda (1 samples, 0.20%)</title><rect x="168.6" y="291.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.40%)</title><rect x="170.9" y="323.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="173.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.40%)</title><rect x="170.9" y="307.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="173.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.40%)</title><rect x="170.9" y="291.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.40%)</title><rect x="170.9" y="275.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="173.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.40%)</title><rect x="170.9" y="259.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.40%)</title><rect x="170.9" y="243.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="173.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.40%)</title><rect x="170.9" y="227.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="173.9" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.40%)</title><rect x="170.9" y="211.0" width="4.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="173.9" y="222.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.20%)</title><rect x="173.2" y="195.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="176.2" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.20%)</title><rect x="175.6" y="387.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="178.6" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.20%)</title><rect x="175.6" y="371.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.59%)</title><rect x="177.9" y="387.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="180.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.20%)</title><rect x="184.9" y="403.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.20%)</title><rect x="184.9" y="387.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="187.9" y="398.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.20%)</title><rect x="184.9" y="371.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="187.9" y="382.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.20%)</title><rect x="184.9" y="355.0" width="2.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="187.9" y="366.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.20%)</title><rect x="184.9" y="339.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="187.9" y="350.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.20%)</title><rect x="187.2" y="419.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="190.2" y="430.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.20%)</title><rect x="187.2" y="403.0" width="2.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="190.2" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=2947] (17 samples, 3.36%)</title><rect x="189.6" y="467.0" width="39.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="192.6" y="478.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (17 samples, 3.36%)</title><rect x="189.6" y="451.0" width="39.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.6" y="462.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.99%)</title><rect x="196.6" y="435.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="199.6" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 0.99%)</title><rect x="196.6" y="419.0" width="11.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="199.6" y="430.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.20%)</title><rect x="198.9" y="403.0" width="2.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="201.9" y="414.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.59%)</title><rect x="201.2" y="403.0" width="7.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="204.2" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (9 samples, 1.78%)</title><rect x="208.2" y="435.0" width="21.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="211.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9 samples, 1.78%)</title><rect x="208.2" y="419.0" width="21.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5 samples, 0.99%)</title><rect x="208.2" y="403.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="211.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2 samples, 0.40%)</title><rect x="208.2" y="387.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="211.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2 samples, 0.40%)</title><rect x="208.2" y="371.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.2" y="382.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (2 samples, 0.40%)</title><rect x="208.2" y="355.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="211.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (2 samples, 0.40%)</title><rect x="208.2" y="339.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.40%)</title><rect x="208.2" y="323.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.40%)</title><rect x="208.2" y="307.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="211.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.20%)</title><rect x="208.2" y="291.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.20%)</title><rect x="208.2" y="275.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="211.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.20%)</title><rect x="208.2" y="259.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.20%)</title><rect x="208.2" y="243.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="211.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.20%)</title><rect x="210.6" y="291.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="213.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.20%)</title><rect x="210.6" y="275.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="213.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.20%)</title><rect x="210.6" y="259.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="213.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.20%)</title><rect x="210.6" y="243.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="213.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.20%)</title><rect x="210.6" y="227.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="213.6" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.20%)</title><rect x="210.6" y="211.0" width="2.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="213.6" y="222.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.20%)</title><rect x="210.6" y="195.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="213.6" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.20%)</title><rect x="212.9" y="387.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.9" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.20%)</title><rect x="212.9" y="371.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="215.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.40%)</title><rect x="215.2" y="387.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="218.2" y="398.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.20%)</title><rect x="217.5" y="371.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.20%)</title><rect x="217.5" y="355.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.5" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.79%)</title><rect x="219.9" y="403.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="222.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.79%)</title><rect x="219.9" y="387.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="222.9" y="398.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.40%)</title><rect x="222.2" y="371.0" width="4.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="225.2" y="382.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.20%)</title><rect x="222.2" y="355.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="225.2" y="366.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.20%)</title><rect x="224.5" y="355.0" width="2.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="227.5" y="366.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.20%)</title><rect x="224.5" y="339.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="227.5" y="350.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.20%)</title><rect x="226.9" y="371.0" width="2.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="229.9" y="382.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=2948] (18 samples, 3.56%)</title><rect x="229.2" y="467.0" width="42.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="232.2" y="478.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (18 samples, 3.56%)</title><rect x="229.2" y="451.0" width="42.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.2" y="462.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 1.38%)</title><rect x="229.2" y="435.0" width="16.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.2" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (7 samples, 1.38%)</title><rect x="229.2" y="419.0" width="16.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="232.2" y="430.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.20%)</title><rect x="233.9" y="403.0" width="2.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="236.9" y="414.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.20%)</title><rect x="236.2" y="403.0" width="2.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="239.2" y="414.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.20%)</title><rect x="236.2" y="387.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="239.2" y="398.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.20%)</title><rect x="238.5" y="403.0" width="2.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="241.5" y="414.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.40%)</title><rect x="240.9" y="403.0" width="4.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="243.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (11 samples, 2.17%)</title><rect x="245.5" y="435.0" width="25.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="248.5" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9 samples, 1.78%)</title><rect x="250.2" y="419.0" width="21.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="253.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7 samples, 1.38%)</title><rect x="250.2" y="403.0" width="16.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="253.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7 samples, 1.38%)</title><rect x="250.2" y="387.0" width="16.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="253.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7 samples, 1.38%)</title><rect x="250.2" y="371.0" width="16.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.2" y="382.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (6 samples, 1.19%)</title><rect x="252.5" y="355.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (6 samples, 1.19%)</title><rect x="252.5" y="339.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="255.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 1.19%)</title><rect x="252.5" y="323.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="255.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.99%)</title><rect x="254.9" y="307.0" width="11.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="257.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.59%)</title><rect x="254.9" y="291.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.59%)</title><rect x="254.9" y="275.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.59%)</title><rect x="254.9" y="259.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.59%)</title><rect x="254.9" y="243.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.40%)</title><rect x="261.9" y="291.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="264.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.40%)</title><rect x="261.9" y="275.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="264.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.40%)</title><rect x="261.9" y="259.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="264.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.40%)</title><rect x="261.9" y="243.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.40%)</title><rect x="261.9" y="227.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="264.9" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.20%)</title><rect x="261.9" y="211.0" width="2.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="264.9" y="222.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.20%)</title><rect x="261.9" y="195.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="264.9" y="206.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.20%)</title><rect x="264.2" y="211.0" width="2.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="267.2" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.40%)</title><rect x="266.5" y="403.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="269.5" y="414.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.40%)</title><rect x="266.5" y="387.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="269.5" y="398.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.20%)</title><rect x="266.5" y="371.0" width="2.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="269.5" y="382.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.20%)</title><rect x="268.9" y="371.0" width="2.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="271.9" y="382.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=2949] (13 samples, 2.57%)</title><rect x="271.2" y="467.0" width="30.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="274.2" y="478.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (13 samples, 2.57%)</title><rect x="271.2" y="451.0" width="30.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.2" y="462.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.99%)</title><rect x="273.5" y="435.0" width="11.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="276.5" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 0.99%)</title><rect x="273.5" y="419.0" width="11.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.5" y="430.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.20%)</title><rect x="275.8" y="403.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="278.8" y="414.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.59%)</title><rect x="278.2" y="403.0" width="7.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="281.2" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (7 samples, 1.38%)</title><rect x="285.2" y="435.0" width="16.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (7 samples, 1.38%)</title><rect x="285.2" y="419.0" width="16.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="288.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6 samples, 1.19%)</title><rect x="285.2" y="403.0" width="14.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="288.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.59%)</title><rect x="285.2" y="387.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.59%)</title><rect x="285.2" y="371.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="288.2" y="382.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (3 samples, 0.59%)</title><rect x="285.2" y="355.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.20%)</title><rect x="285.2" y="339.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="288.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.20%)</title><rect x="285.2" y="323.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.2" y="334.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.20%)</title><rect x="285.2" y="307.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="288.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (2 samples, 0.40%)</title><rect x="287.5" y="339.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="290.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.20%)</title><rect x="287.5" y="323.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.20%)</title><rect x="287.5" y="307.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="290.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/1842484759.get$Lambda (1 samples, 0.20%)</title><rect x="287.5" y="291.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.20%)</title><rect x="287.5" y="275.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.20%)</title><rect x="289.8" y="323.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="292.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.20%)</title><rect x="289.8" y="307.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="292.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.20%)</title><rect x="289.8" y="291.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.20%)</title><rect x="289.8" y="275.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="292.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.20%)</title><rect x="289.8" y="259.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="292.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.20%)</title><rect x="289.8" y="243.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="292.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.20%)</title><rect x="289.8" y="227.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="292.8" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.20%)</title><rect x="289.8" y="211.0" width="2.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="292.8" y="222.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.20%)</title><rect x="289.8" y="195.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="292.8" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.20%)</title><rect x="292.2" y="387.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="295.2" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.20%)</title><rect x="292.2" y="371.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.40%)</title><rect x="294.5" y="387.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="297.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.40%)</title><rect x="294.5" y="371.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="297.5" y="382.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.20%)</title><rect x="296.8" y="355.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.20%)</title><rect x="296.8" y="339.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="299.8" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.20%)</title><rect x="299.2" y="403.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="302.2" y="414.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.20%)</title><rect x="299.2" y="387.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="302.2" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=2950] (13 samples, 2.57%)</title><rect x="301.5" y="467.0" width="30.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="304.5" y="478.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (13 samples, 2.57%)</title><rect x="301.5" y="451.0" width="30.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="304.5" y="462.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.59%)</title><rect x="301.5" y="435.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.5" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.20%)</title><rect x="306.2" y="419.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.2" y="430.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.20%)</title><rect x="306.2" y="403.0" width="2.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="309.2" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (10 samples, 1.98%)</title><rect x="308.5" y="435.0" width="23.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.5" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9 samples, 1.78%)</title><rect x="310.8" y="419.0" width="21.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5 samples, 0.99%)</title><rect x="310.8" y="403.0" width="11.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="313.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.20%)</title><rect x="310.8" y="387.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.20%)</title><rect x="310.8" y="371.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.8" y="382.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (1 samples, 0.20%)</title><rect x="310.8" y="355.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="313.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (1 samples, 0.20%)</title><rect x="310.8" y="339.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="313.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.20%)</title><rect x="310.8" y="323.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="313.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.20%)</title><rect x="310.8" y="307.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="313.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.20%)</title><rect x="310.8" y="291.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="313.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.20%)</title><rect x="310.8" y="275.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="313.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.20%)</title><rect x="310.8" y="259.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="313.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.20%)</title><rect x="310.8" y="243.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="313.8" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.20%)</title><rect x="313.2" y="387.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.20%)</title><rect x="313.2" y="371.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="316.2" y="382.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.20%)</title><rect x="313.2" y="355.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.20%)</title><rect x="313.2" y="339.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="316.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.20%)</title><rect x="313.2" y="323.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="316.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.20%)</title><rect x="315.5" y="387.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.20%)</title><rect x="315.5" y="371.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.40%)</title><rect x="317.8" y="387.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="320.8" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.79%)</title><rect x="322.5" y="403.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="325.5" y="414.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.79%)</title><rect x="322.5" y="387.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.5" y="398.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.79%)</title><rect x="322.5" y="371.0" width="9.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="325.5" y="382.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.20%)</title><rect x="322.5" y="355.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="325.5" y="366.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.40%)</title><rect x="324.8" y="355.0" width="4.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="327.8" y="366.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.20%)</title><rect x="327.2" y="339.0" width="2.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="330.2" y="350.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.20%)</title><rect x="327.2" y="323.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="330.2" y="334.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.20%)</title><rect x="329.5" y="355.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="332.5" y="366.0"></text>
</g>
<g>
<title>[async_workers-0 tid=2968] (49 samples, 9.68%)</title><rect x="331.8" y="467.0" width="114.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="334.8" y="478.0">[async_workers..</text>
</g>
<g>
<title>java/lang/Thread.run (49 samples, 9.68%)</title><rect x="331.8" y="451.0" width="114.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.8" y="462.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (49 samples, 9.68%)</title><rect x="331.8" y="435.0" width="114.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="334.8" y="446.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (49 samples, 9.68%)</title><rect x="331.8" y="419.0" width="114.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="334.8" y="430.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.20%)</title><rect x="334.2" y="403.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (13 samples, 2.57%)</title><rect x="336.5" y="403.0" width="30.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.5" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (13 samples, 2.57%)</title><rect x="336.5" y="387.0" width="30.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="339.5" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (12 samples, 2.37%)</title><rect x="336.5" y="371.0" width="28.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="339.5" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.40%)</title><rect x="336.5" y="355.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="339.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (2 samples, 0.40%)</title><rect x="336.5" y="339.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 1.98%)</title><rect x="341.1" y="355.0" width="23.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="344.1" y="366.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 1.98%)</title><rect x="341.1" y="339.0" width="23.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.1" y="350.0">j..</text>
</g>
<g>
<title>Unsafe_Park (6 samples, 1.19%)</title><rect x="343.5" y="323.0" width="14.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="346.5" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.40%)</title><rect x="345.8" y="307.0" width="4.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="348.8" y="318.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.40%)</title><rect x="345.8" y="291.0" width="4.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="348.8" y="302.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.20%)</title><rect x="348.1" y="275.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="351.1" y="286.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.40%)</title><rect x="350.5" y="307.0" width="4.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="353.5" y="318.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.20%)</title><rect x="355.1" y="307.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="358.1" y="318.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.59%)</title><rect x="357.5" y="323.0" width="7.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="360.5" y="334.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.59%)</title><rect x="357.5" y="307.0" width="7.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="360.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.20%)</title><rect x="364.5" y="371.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="367.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.20%)</title><rect x="364.5" y="355.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="367.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.20%)</title><rect x="364.5" y="339.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.20%)</title><rect x="364.5" y="323.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="367.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.20%)</title><rect x="364.5" y="307.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="367.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.20%)</title><rect x="364.5" y="291.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="367.5" y="302.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.20%)</title><rect x="364.5" y="275.0" width="2.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="367.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.20%)</title><rect x="366.8" y="403.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/1842484759.run (33 samples, 6.52%)</title><rect x="369.1" y="403.0" width="77.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="372.1" y="414.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (33 samples, 6.52%)</title><rect x="369.1" y="387.0" width="77.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="372.1" y="398.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.59%)</title><rect x="369.1" y="371.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="372.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.59%)</title><rect x="369.1" y="355.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="372.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.20%)</title><rect x="369.1" y="339.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="372.1" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.20%)</title><rect x="369.1" y="323.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="372.1" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.20%)</title><rect x="369.1" y="307.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="372.1" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.20%)</title><rect x="369.1" y="291.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="372.1" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.20%)</title><rect x="369.1" y="275.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="372.1" y="286.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.20%)</title><rect x="369.1" y="259.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.1" y="270.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.20%)</title><rect x="369.1" y="243.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="372.1" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.40%)</title><rect x="371.5" y="339.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="374.5" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.40%)</title><rect x="371.5" y="323.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.5" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.40%)</title><rect x="371.5" y="307.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="374.5" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.40%)</title><rect x="371.5" y="291.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="374.5" y="302.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.40%)</title><rect x="371.5" y="275.0" width="4.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="374.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (30 samples, 5.93%)</title><rect x="376.1" y="371.0" width="70.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="379.1" y="382.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (30 samples, 5.93%)</title><rect x="376.1" y="355.0" width="70.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="379.1" y="366.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (30 samples, 5.93%)</title><rect x="376.1" y="339.0" width="70.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="379.1" y="350.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (28 samples, 5.53%)</title><rect x="376.1" y="323.0" width="65.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="379.1" y="334.0">Java_or..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (28 samples, 5.53%)</title><rect x="376.1" y="307.0" width="65.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="379.1" y="318.0">rocksdb..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.20%)</title><rect x="376.1" y="291.0" width="2.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="379.1" y="302.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.20%)</title><rect x="376.1" y="275.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="379.1" y="286.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (26 samples, 5.14%)</title><rect x="378.5" y="291.0" width="60.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="381.5" y="302.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (26 samples, 5.14%)</title><rect x="378.5" y="275.0" width="60.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="381.5" y="286.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (26 samples, 5.14%)</title><rect x="378.5" y="259.0" width="60.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="381.5" y="270.0">rocksd..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.20%)</title><rect x="380.8" y="243.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="383.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (23 samples, 4.55%)</title><rect x="383.1" y="243.0" width="53.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="386.1" y="254.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (23 samples, 4.55%)</title><rect x="383.1" y="227.0" width="53.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="386.1" y="238.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.20%)</title><rect x="385.5" y="211.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="388.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (3 samples, 0.59%)</title><rect x="387.8" y="211.0" width="7.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="390.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 0.59%)</title><rect x="387.8" y="195.0" width="7.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="390.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.59%)</title><rect x="387.8" y="179.0" width="7.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="390.8" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="387.8" y="163.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="390.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.40%)</title><rect x="390.1" y="163.0" width="4.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="393.1" y="174.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.20%)</title><rect x="390.1" y="147.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="393.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.20%)</title><rect x="392.5" y="147.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="395.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (7 samples, 1.38%)</title><rect x="394.8" y="211.0" width="16.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="397.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (7 samples, 1.38%)</title><rect x="394.8" y="195.0" width="16.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="397.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (7 samples, 1.38%)</title><rect x="394.8" y="179.0" width="16.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="397.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 1.19%)</title><rect x="394.8" y="163.0" width="14.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="397.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (6 samples, 1.19%)</title><rect x="394.8" y="147.0" width="14.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="397.8" y="158.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="394.8" y="131.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="397.8" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (5 samples, 0.99%)</title><rect x="397.1" y="131.0" width="11.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="400.1" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.59%)</title><rect x="399.4" y="115.0" width="7.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="402.4" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (2 samples, 0.40%)</title><rect x="401.8" y="99.0" width="4.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="404.8" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="404.1" y="83.0" width="2.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="407.1" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.20%)</title><rect x="404.1" y="67.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="407.1" y="78.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.20%)</title><rect x="406.4" y="115.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="409.4" y="126.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.20%)</title><rect x="408.8" y="163.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="411.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (3 samples, 0.59%)</title><rect x="411.1" y="211.0" width="7.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="414.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.59%)</title><rect x="411.1" y="195.0" width="7.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="414.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.59%)</title><rect x="411.1" y="179.0" width="7.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="414.1" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.40%)</title><rect x="413.4" y="163.0" width="4.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="416.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.40%)</title><rect x="413.4" y="147.0" width="4.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="416.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.20%)</title><rect x="413.4" y="131.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="416.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.20%)</title><rect x="415.8" y="131.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="418.8" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.20%)</title><rect x="415.8" y="115.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="418.8" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.20%)</title><rect x="415.8" y="99.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="418.8" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="415.8" y="83.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="418.8" y="94.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (6 samples, 1.19%)</title><rect x="418.1" y="211.0" width="14.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="421.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.20%)</title><rect x="432.1" y="211.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="435.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.20%)</title><rect x="432.1" y="195.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="435.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.20%)</title><rect x="434.4" y="211.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="437.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="436.8" y="243.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="439.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (1 samples, 0.20%)</title><rect x="436.8" y="227.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="439.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.20%)</title><rect x="439.1" y="291.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="442.1" y="302.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.20%)</title><rect x="441.4" y="323.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="444.4" y="334.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.20%)</title><rect x="441.4" y="307.0" width="2.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="444.4" y="318.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.20%)</title><rect x="443.8" y="323.0" width="2.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="446.8" y="334.0"></text>
</g>
<g>
<title>[async_workers-1 tid=2974] (49 samples, 9.68%)</title><rect x="446.1" y="467.0" width="114.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="449.1" y="478.0">[async_workers..</text>
</g>
<g>
<title>java/lang/Thread.run (49 samples, 9.68%)</title><rect x="446.1" y="451.0" width="114.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.1" y="462.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (49 samples, 9.68%)</title><rect x="446.1" y="435.0" width="114.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="449.1" y="446.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (49 samples, 9.68%)</title><rect x="446.1" y="419.0" width="114.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="449.1" y="430.0">java/util/conc..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.20%)</title><rect x="446.1" y="403.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="449.1" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.20%)</title><rect x="446.1" y="387.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="449.1" y="398.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.20%)</title><rect x="446.1" y="371.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="449.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.20%)</title><rect x="448.4" y="403.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="451.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.20%)</title><rect x="448.4" y="387.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="451.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (14 samples, 2.77%)</title><rect x="450.8" y="403.0" width="32.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.8" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (14 samples, 2.77%)</title><rect x="450.8" y="387.0" width="32.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="453.8" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 1.98%)</title><rect x="453.1" y="371.0" width="23.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="456.1" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.40%)</title><rect x="453.1" y="355.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.40%)</title><rect x="453.1" y="339.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.20%)</title><rect x="455.4" y="323.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="458.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.20%)</title><rect x="455.4" y="307.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="458.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.40%)</title><rect x="457.7" y="355.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (2 samples, 0.40%)</title><rect x="457.7" y="339.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="460.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 1.19%)</title><rect x="462.4" y="355.0" width="14.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 1.19%)</title><rect x="462.4" y="339.0" width="14.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.4" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.99%)</title><rect x="462.4" y="323.0" width="11.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="465.4" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.20%)</title><rect x="464.7" y="307.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="467.7" y="318.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.59%)</title><rect x="467.1" y="307.0" width="7.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="470.1" y="318.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.20%)</title><rect x="474.1" y="323.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="477.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.59%)</title><rect x="476.4" y="371.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.59%)</title><rect x="476.4" y="355.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="479.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.59%)</title><rect x="476.4" y="339.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="479.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.59%)</title><rect x="476.4" y="323.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="479.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.40%)</title><rect x="476.4" y="307.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="479.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.20%)</title><rect x="481.1" y="307.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.1" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.20%)</title><rect x="481.1" y="291.0" width="2.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="484.1" y="302.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.20%)</title><rect x="481.1" y="275.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="484.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/1842484759.run (33 samples, 6.52%)</title><rect x="483.4" y="403.0" width="77.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.4" y="414.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (33 samples, 6.52%)</title><rect x="483.4" y="387.0" width="77.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="486.4" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (33 samples, 6.52%)</title><rect x="483.4" y="371.0" width="77.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.4" y="382.0">ru/mail/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (33 samples, 6.52%)</title><rect x="483.4" y="355.0" width="77.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="486.4" y="366.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (33 samples, 6.52%)</title><rect x="483.4" y="339.0" width="77.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.4" y="350.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (33 samples, 6.52%)</title><rect x="483.4" y="323.0" width="77.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="486.4" y="334.0">Java_org..</text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.20%)</title><rect x="483.4" y="307.0" width="2.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="486.4" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (32 samples, 6.32%)</title><rect x="485.7" y="307.0" width="74.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="488.7" y="318.0">rocksdb_..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (30 samples, 5.93%)</title><rect x="488.1" y="291.0" width="69.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="491.1" y="302.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (30 samples, 5.93%)</title><rect x="488.1" y="275.0" width="69.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="491.1" y="286.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (30 samples, 5.93%)</title><rect x="488.1" y="259.0" width="69.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="491.1" y="270.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.20%)</title><rect x="488.1" y="243.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="491.1" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (26 samples, 5.14%)</title><rect x="490.4" y="243.0" width="60.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="493.4" y="254.0">rocksd..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.20%)</title><rect x="490.4" y="227.0" width="2.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="493.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::~ColumnFamilyHandleImpl() (1 samples, 0.20%)</title><rect x="492.7" y="227.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="495.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (23 samples, 4.55%)</title><rect x="495.1" y="227.0" width="53.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="498.1" y="238.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.20%)</title><rect x="495.1" y="211.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="498.1" y="222.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.20%)</title><rect x="495.1" y="195.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="498.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (6 samples, 1.19%)</title><rect x="497.4" y="211.0" width="14.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="500.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (6 samples, 1.19%)</title><rect x="497.4" y="195.0" width="14.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="500.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (4 samples, 0.79%)</title><rect x="499.7" y="179.0" width="9.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="502.7" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (2 samples, 0.40%)</title><rect x="499.7" y="163.0" width="4.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="502.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.40%)</title><rect x="504.4" y="163.0" width="4.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="507.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.20%)</title><rect x="506.7" y="147.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="509.7" y="158.0"></text>
</g>
<g>
<title>write@plt (1 samples, 0.20%)</title><rect x="506.7" y="131.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="509.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.20%)</title><rect x="509.1" y="179.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="512.1" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (1 samples, 0.20%)</title><rect x="511.4" y="211.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="514.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (6 samples, 1.19%)</title><rect x="513.7" y="211.0" width="14.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="516.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 1.19%)</title><rect x="513.7" y="195.0" width="14.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="516.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (6 samples, 1.19%)</title><rect x="513.7" y="179.0" width="14.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="516.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.99%)</title><rect x="513.7" y="163.0" width="11.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="516.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) [clone .plt] (1 samples, 0.20%)</title><rect x="513.7" y="147.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="516.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.79%)</title><rect x="516.0" y="147.0" width="9.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="519.0" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (4 samples, 0.79%)</title><rect x="516.0" y="131.0" width="9.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="519.0" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="516.0" y="115.0" width="2.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="519.0" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.40%)</title><rect x="518.4" y="115.0" width="4.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="521.4" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="520.7" y="99.0" width="2.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="523.7" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.20%)</title><rect x="523.0" y="115.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="526.0" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.20%)</title><rect x="523.0" y="99.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="526.0" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.20%)</title><rect x="525.4" y="163.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="528.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (1 samples, 0.20%)</title><rect x="527.7" y="211.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="530.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.20%)</title><rect x="527.7" y="195.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="530.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.20%)</title><rect x="527.7" y="179.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="530.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="527.7" y="163.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="530.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.20%)</title><rect x="527.7" y="147.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="530.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.20%)</title><rect x="527.7" y="131.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="530.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.20%)</title><rect x="527.7" y="115.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="530.7" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.20%)</title><rect x="527.7" y="99.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="530.7" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="527.7" y="83.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="530.7" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="527.7" y="67.0" width="2.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="530.7" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.20%)</title><rect x="527.7" y="51.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="530.7" y="62.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (6 samples, 1.19%)</title><rect x="530.0" y="211.0" width="14.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="533.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.20%)</title><rect x="544.0" y="211.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="547.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.20%)</title><rect x="544.0" y="195.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="547.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.20%)</title><rect x="546.4" y="211.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="549.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.20%)</title><rect x="546.4" y="195.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="549.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.20%)</title><rect x="548.7" y="227.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="551.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.20%)</title><rect x="551.0" y="243.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="554.0" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="553.4" y="243.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="556.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (1 samples, 0.20%)</title><rect x="553.4" y="227.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="556.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.20%)</title><rect x="555.7" y="243.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="558.7" y="254.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.20%)</title><rect x="558.0" y="291.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="561.0" y="302.0"></text>
</g>
<g>
<title>[async_workers-2 tid=2967] (37 samples, 7.31%)</title><rect x="560.4" y="467.0" width="86.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="563.4" y="478.0">[async_wor..</text>
</g>
<g>
<title>java/lang/Thread.run (37 samples, 7.31%)</title><rect x="560.4" y="451.0" width="86.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="563.4" y="462.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (37 samples, 7.31%)</title><rect x="560.4" y="435.0" width="86.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.4" y="446.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (37 samples, 7.31%)</title><rect x="560.4" y="419.0" width="86.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="563.4" y="430.0">java/util/..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.20%)</title><rect x="560.4" y="403.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.4" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.20%)</title><rect x="560.4" y="387.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.4" y="398.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.20%)</title><rect x="560.4" y="371.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="563.4" y="382.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.20%)</title><rect x="560.4" y="355.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="563.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.20%)</title><rect x="562.7" y="403.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="565.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.20%)</title><rect x="562.7" y="387.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 1.19%)</title><rect x="565.0" y="403.0" width="14.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="568.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 1.19%)</title><rect x="565.0" y="387.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.59%)</title><rect x="565.0" y="371.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.59%)</title><rect x="565.0" y="355.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.59%)</title><rect x="565.0" y="339.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.0" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.59%)</title><rect x="565.0" y="323.0" width="7.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="568.0" y="334.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.20%)</title><rect x="565.0" y="307.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="568.0" y="318.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.40%)</title><rect x="567.4" y="307.0" width="4.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="570.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.20%)</title><rect x="572.0" y="371.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.20%)</title><rect x="572.0" y="355.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.20%)</title><rect x="572.0" y="339.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.20%)</title><rect x="572.0" y="323.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.20%)</title><rect x="572.0" y="307.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.20%)</title><rect x="572.0" y="291.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.0" y="302.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.20%)</title><rect x="572.0" y="275.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="575.0" y="286.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.20%)</title><rect x="572.0" y="259.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="575.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.40%)</title><rect x="574.3" y="371.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="577.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.40%)</title><rect x="574.3" y="355.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="577.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.40%)</title><rect x="574.3" y="339.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.40%)</title><rect x="574.3" y="323.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="577.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.20%)</title><rect x="576.7" y="307.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="579.7" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.20%)</title><rect x="576.7" y="291.0" width="2.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="579.7" y="302.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.20%)</title><rect x="576.7" y="275.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="579.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/1842484759.run (29 samples, 5.73%)</title><rect x="579.0" y="403.0" width="67.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="582.0" y="414.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (29 samples, 5.73%)</title><rect x="579.0" y="387.0" width="67.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="582.0" y="398.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.20%)</title><rect x="579.0" y="371.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="582.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.20%)</title><rect x="579.0" y="355.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="582.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.20%)</title><rect x="579.0" y="339.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="582.0" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.20%)</title><rect x="579.0" y="323.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="582.0" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.20%)</title><rect x="579.0" y="307.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="582.0" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.20%)</title><rect x="579.0" y="291.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="582.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (28 samples, 5.53%)</title><rect x="581.3" y="371.0" width="65.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="584.3" y="382.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (27 samples, 5.34%)</title><rect x="581.3" y="355.0" width="63.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.3" y="366.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (26 samples, 5.14%)</title><rect x="583.7" y="339.0" width="60.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="586.7" y="350.0">org/ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (24 samples, 4.74%)</title><rect x="583.7" y="323.0" width="55.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="586.7" y="334.0">Java_..</text>
</g>
<g>
<title>malloc (1 samples, 0.20%)</title><rect x="586.0" y="307.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="589.0" y="318.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="588.3" y="307.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="591.3" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (21 samples, 4.15%)</title><rect x="590.7" y="307.0" width="48.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="593.7" y="318.0">rock..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (21 samples, 4.15%)</title><rect x="590.7" y="291.0" width="48.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="593.7" y="302.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (20 samples, 3.95%)</title><rect x="593.0" y="275.0" width="46.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="596.0" y="286.0">rock..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (20 samples, 3.95%)</title><rect x="593.0" y="259.0" width="46.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="596.0" y="270.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (19 samples, 3.75%)</title><rect x="593.0" y="243.0" width="44.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="596.0" y="254.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (19 samples, 3.75%)</title><rect x="593.0" y="227.0" width="44.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="596.0" y="238.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (4 samples, 0.79%)</title><rect x="595.3" y="211.0" width="9.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="598.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (4 samples, 0.79%)</title><rect x="595.3" y="195.0" width="9.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="598.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (4 samples, 0.79%)</title><rect x="595.3" y="179.0" width="9.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="598.3" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (2 samples, 0.40%)</title><rect x="595.3" y="163.0" width="4.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="598.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.20%)</title><rect x="600.0" y="163.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="603.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.20%)</title><rect x="600.0" y="147.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="603.0" y="158.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.20%)</title><rect x="600.0" y="131.0" width="2.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="603.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.20%)</title><rect x="602.3" y="163.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="605.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="602.3" y="147.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="605.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (3 samples, 0.59%)</title><rect x="604.7" y="211.0" width="7.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="607.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.59%)</title><rect x="604.7" y="195.0" width="7.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="607.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.59%)</title><rect x="604.7" y="179.0" width="7.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="607.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.59%)</title><rect x="604.7" y="163.0" width="7.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="607.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.59%)</title><rect x="604.7" y="147.0" width="7.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="607.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (3 samples, 0.59%)</title><rect x="604.7" y="131.0" width="7.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="607.7" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.59%)</title><rect x="604.7" y="115.0" width="7.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="607.7" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (2 samples, 0.40%)</title><rect x="604.7" y="99.0" width="4.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="607.7" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (2 samples, 0.40%)</title><rect x="604.7" y="83.0" width="4.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="607.7" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.40%)</title><rect x="604.7" y="67.0" width="4.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="607.7" y="78.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.20%)</title><rect x="607.0" y="51.0" width="2.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="610.0" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.20%)</title><rect x="609.3" y="99.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="612.3" y="110.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.20%)</title><rect x="609.3" y="83.0" width="2.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="612.3" y="94.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.20%)</title><rect x="611.7" y="211.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="614.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (7 samples, 1.38%)</title><rect x="614.0" y="211.0" width="16.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="617.0" y="222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.20%)</title><rect x="628.0" y="195.0" width="2.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="631.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.40%)</title><rect x="630.3" y="211.0" width="4.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="633.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.40%)</title><rect x="630.3" y="195.0" width="4.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="633.3" y="206.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.20%)</title><rect x="632.6" y="179.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="635.6" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) [clone .plt] (1 samples, 0.20%)</title><rect x="635.0" y="211.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="638.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="637.3" y="243.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="640.3" y="254.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.20%)</title><rect x="637.3" y="227.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="640.3" y="238.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.20%)</title><rect x="639.6" y="323.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="642.6" y="334.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.20%)</title><rect x="639.6" y="307.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="642.6" y="318.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.20%)</title><rect x="642.0" y="323.0" width="2.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="645.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArraySpecial (1 samples, 0.20%)</title><rect x="644.3" y="355.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.3" y="366.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.20%)</title><rect x="644.3" y="339.0" width="2.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="647.3" y="350.0"></text>
</g>
<g>
<title>[async_workers-3 tid=2970] (50 samples, 9.88%)</title><rect x="646.6" y="467.0" width="116.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="649.6" y="478.0">[async_workers..</text>
</g>
<g>
<title>java/lang/Thread.run (50 samples, 9.88%)</title><rect x="646.6" y="451.0" width="116.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="649.6" y="462.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (50 samples, 9.88%)</title><rect x="646.6" y="435.0" width="116.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="649.6" y="446.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (50 samples, 9.88%)</title><rect x="646.6" y="419.0" width="116.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.6" y="430.0">java/util/conc..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.40%)</title><rect x="653.6" y="403.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="656.6" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.40%)</title><rect x="653.6" y="387.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.6" y="398.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.20%)</title><rect x="653.6" y="371.0" width="2.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="656.6" y="382.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.20%)</title><rect x="653.6" y="355.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="656.6" y="366.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.20%)</title><rect x="656.0" y="371.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="659.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.20%)</title><rect x="658.3" y="403.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 2.17%)</title><rect x="660.6" y="403.0" width="25.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.6" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (11 samples, 2.17%)</title><rect x="660.6" y="387.0" width="25.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="663.6" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 1.38%)</title><rect x="663.0" y="371.0" width="16.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.20%)</title><rect x="663.0" y="355.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.20%)</title><rect x="663.0" y="339.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.20%)</title><rect x="663.0" y="323.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.20%)</title><rect x="663.0" y="307.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.0" y="318.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.20%)</title><rect x="663.0" y="291.0" width="2.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="666.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.40%)</title><rect x="665.3" y="355.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="668.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.40%)</title><rect x="665.3" y="339.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="668.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.40%)</title><rect x="665.3" y="323.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.40%)</title><rect x="665.3" y="307.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="668.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.20%)</title><rect x="667.6" y="291.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.6" y="302.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.20%)</title><rect x="667.6" y="275.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="670.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.20%)</title><rect x="670.0" y="355.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.20%)</title><rect x="670.0" y="339.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="673.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.59%)</title><rect x="672.3" y="355.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.59%)</title><rect x="672.3" y="339.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="675.3" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.20%)</title><rect x="672.3" y="323.0" width="2.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="675.3" y="334.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.20%)</title><rect x="672.3" y="307.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="675.3" y="318.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.40%)</title><rect x="674.6" y="323.0" width="4.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="677.6" y="334.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.20%)</title><rect x="674.6" y="307.0" width="2.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="677.6" y="318.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.20%)</title><rect x="677.0" y="307.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="680.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.59%)</title><rect x="679.3" y="371.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.59%)</title><rect x="679.3" y="355.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="682.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.59%)</title><rect x="679.3" y="339.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="682.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.59%)</title><rect x="679.3" y="323.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="682.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.40%)</title><rect x="681.6" y="307.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="684.6" y="318.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.40%)</title><rect x="681.6" y="291.0" width="4.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="684.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.20%)</title><rect x="686.3" y="403.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/1842484759.run (32 samples, 6.32%)</title><rect x="688.6" y="403.0" width="74.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.6" y="414.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (32 samples, 6.32%)</title><rect x="688.6" y="387.0" width="74.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="691.6" y="398.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.79%)</title><rect x="688.6" y="371.0" width="9.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.79%)</title><rect x="688.6" y="355.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.6" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.79%)</title><rect x="688.6" y="339.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.6" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.79%)</title><rect x="688.6" y="323.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="691.6" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.79%)</title><rect x="688.6" y="307.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.6" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.79%)</title><rect x="688.6" y="291.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.6" y="302.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.40%)</title><rect x="690.9" y="275.0" width="4.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="693.9" y="286.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.20%)</title><rect x="693.3" y="259.0" width="2.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="696.3" y="270.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.20%)</title><rect x="695.6" y="275.0" width="2.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="698.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (28 samples, 5.53%)</title><rect x="697.9" y="371.0" width="65.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.9" y="382.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (28 samples, 5.53%)</title><rect x="697.9" y="355.0" width="65.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="700.9" y="366.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (28 samples, 5.53%)</title><rect x="697.9" y="339.0" width="65.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="700.9" y="350.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (28 samples, 5.53%)</title><rect x="697.9" y="323.0" width="65.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="700.9" y="334.0">Java_or..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="697.9" y="307.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="700.9" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (27 samples, 5.34%)</title><rect x="700.3" y="307.0" width="62.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="703.3" y="318.0">rocksd..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.20%)</title><rect x="700.3" y="291.0" width="2.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="703.3" y="302.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.20%)</title><rect x="700.3" y="275.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="703.3" y="286.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (26 samples, 5.14%)</title><rect x="702.6" y="291.0" width="60.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="705.6" y="302.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (26 samples, 5.14%)</title><rect x="702.6" y="275.0" width="60.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="705.6" y="286.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (26 samples, 5.14%)</title><rect x="702.6" y="259.0" width="60.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="705.6" y="270.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (23 samples, 4.55%)</title><rect x="702.6" y="243.0" width="53.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="705.6" y="254.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (22 samples, 4.35%)</title><rect x="702.6" y="227.0" width="51.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="705.6" y="238.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.20%)</title><rect x="704.9" y="211.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="707.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (4 samples, 0.79%)</title><rect x="707.3" y="211.0" width="9.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="710.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.20%)</title><rect x="707.3" y="195.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="710.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 0.59%)</title><rect x="709.6" y="195.0" width="7.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="712.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 0.40%)</title><rect x="711.9" y="179.0" width="4.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="714.9" y="190.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.20%)</title><rect x="714.3" y="163.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="717.3" y="174.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.20%)</title><rect x="714.3" y="147.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="717.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (9 samples, 1.78%)</title><rect x="716.6" y="211.0" width="21.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="719.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 1.78%)</title><rect x="716.6" y="195.0" width="21.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="719.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.20%)</title><rect x="716.6" y="179.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="719.6" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (8 samples, 1.58%)</title><rect x="718.9" y="179.0" width="18.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="721.9" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 1.58%)</title><rect x="718.9" y="163.0" width="18.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="721.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (1 samples, 0.20%)</title><rect x="718.9" y="147.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="721.9" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (7 samples, 1.38%)</title><rect x="721.3" y="147.0" width="16.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="724.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.20%)</title><rect x="721.3" y="131.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="724.3" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (5 samples, 0.99%)</title><rect x="723.6" y="131.0" width="11.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="726.6" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 0.99%)</title><rect x="723.6" y="115.0" width="11.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="726.6" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (4 samples, 0.79%)</title><rect x="723.6" y="99.0" width="9.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="726.6" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (2 samples, 0.40%)</title><rect x="725.9" y="83.0" width="4.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="728.9" y="94.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.20%)</title><rect x="725.9" y="67.0" width="2.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="728.9" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.20%)</title><rect x="728.3" y="67.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="731.3" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.20%)</title><rect x="730.6" y="83.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="733.6" y="94.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.20%)</title><rect x="730.6" y="67.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="733.6" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.20%)</title><rect x="732.9" y="99.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="735.9" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="732.9" y="83.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="735.9" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.20%)</title><rect x="735.3" y="131.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="738.3" y="142.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (1 samples, 0.20%)</title><rect x="737.6" y="211.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="740.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.20%)</title><rect x="737.6" y="195.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="740.6" y="206.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="737.6" y="179.0" width="2.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="740.6" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (5 samples, 0.99%)</title><rect x="739.9" y="211.0" width="11.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="742.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.20%)</title><rect x="751.6" y="211.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="754.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (1 samples, 0.20%)</title><rect x="753.9" y="227.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="756.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.20%)</title><rect x="756.2" y="243.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="759.2" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="758.6" y="243.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="761.6" y="254.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.20%)</title><rect x="760.9" y="243.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="763.9" y="254.0"></text>
</g>
<g>
<title>[async_workers-4 tid=2975] (48 samples, 9.49%)</title><rect x="763.2" y="467.0" width="112.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="766.2" y="478.0">[async_worker..</text>
</g>
<g>
<title>java/lang/Thread.run (48 samples, 9.49%)</title><rect x="763.2" y="451.0" width="112.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="766.2" y="462.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (48 samples, 9.49%)</title><rect x="763.2" y="435.0" width="112.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="766.2" y="446.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (48 samples, 9.49%)</title><rect x="763.2" y="419.0" width="112.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="766.2" y="430.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.20%)</title><rect x="763.2" y="403.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/1842484759.run (1 samples, 0.20%)</title><rect x="763.2" y="387.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="766.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (13 samples, 2.57%)</title><rect x="765.6" y="403.0" width="30.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.6" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (13 samples, 2.57%)</title><rect x="765.6" y="387.0" width="30.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="768.6" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 2.17%)</title><rect x="765.6" y="371.0" width="25.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="768.6" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.40%)</title><rect x="765.6" y="355.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.40%)</title><rect x="765.6" y="339.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.40%)</title><rect x="765.6" y="323.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.40%)</title><rect x="765.6" y="307.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.20%)</title><rect x="765.6" y="291.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.20%)</title><rect x="767.9" y="291.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="770.9" y="302.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.20%)</title><rect x="767.9" y="275.0" width="2.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="770.9" y="286.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.20%)</title><rect x="767.9" y="259.0" width="2.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="770.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.20%)</title><rect x="770.2" y="355.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.20%)</title><rect x="770.2" y="339.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="773.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 1.38%)</title><rect x="772.6" y="355.0" width="16.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="775.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 1.38%)</title><rect x="772.6" y="339.0" width="16.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.6" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 1.38%)</title><rect x="772.6" y="323.0" width="16.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="775.6" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.40%)</title><rect x="774.9" y="307.0" width="4.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="777.9" y="318.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.59%)</title><rect x="779.6" y="307.0" width="7.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="782.6" y="318.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.20%)</title><rect x="786.6" y="307.0" width="2.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="789.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.20%)</title><rect x="788.9" y="355.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="791.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.20%)</title><rect x="791.2" y="371.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.20%)</title><rect x="791.2" y="355.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.20%)</title><rect x="791.2" y="339.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="794.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.20%)</title><rect x="791.2" y="323.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.20%)</title><rect x="791.2" y="307.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="794.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.20%)</title><rect x="791.2" y="291.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="794.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.20%)</title><rect x="793.6" y="371.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="796.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.20%)</title><rect x="793.6" y="355.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.20%)</title><rect x="793.6" y="339.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="796.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.20%)</title><rect x="793.6" y="323.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="796.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.20%)</title><rect x="793.6" y="307.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="796.6" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.20%)</title><rect x="793.6" y="291.0" width="2.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="796.6" y="302.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.20%)</title><rect x="793.6" y="275.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="796.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/1842484759.run (34 samples, 6.72%)</title><rect x="795.9" y="403.0" width="79.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="798.9" y="414.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (34 samples, 6.72%)</title><rect x="795.9" y="387.0" width="79.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.9" y="398.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.79%)</title><rect x="795.9" y="371.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.40%)</title><rect x="800.6" y="355.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="803.6" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.40%)</title><rect x="800.6" y="339.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="803.6" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.40%)</title><rect x="800.6" y="323.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="803.6" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.40%)</title><rect x="800.6" y="307.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="803.6" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.40%)</title><rect x="800.6" y="291.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="803.6" y="302.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.40%)</title><rect x="800.6" y="275.0" width="4.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="803.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (30 samples, 5.93%)</title><rect x="805.2" y="371.0" width="70.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.2" y="382.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (30 samples, 5.93%)</title><rect x="805.2" y="355.0" width="70.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.2" y="366.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (30 samples, 5.93%)</title><rect x="805.2" y="339.0" width="70.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.2" y="350.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (28 samples, 5.53%)</title><rect x="805.2" y="323.0" width="65.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="808.2" y="334.0">Java_or..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (27 samples, 5.34%)</title><rect x="807.5" y="307.0" width="63.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="810.5" y="318.0">rocksd..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.20%)</title><rect x="807.5" y="291.0" width="2.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="810.5" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (26 samples, 5.14%)</title><rect x="809.9" y="291.0" width="60.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="812.9" y="302.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (26 samples, 5.14%)</title><rect x="809.9" y="275.0" width="60.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="812.9" y="286.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (26 samples, 5.14%)</title><rect x="809.9" y="259.0" width="60.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="812.9" y="270.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (25 samples, 4.94%)</title><rect x="812.2" y="243.0" width="58.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="815.2" y="254.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (24 samples, 4.74%)</title><rect x="812.2" y="227.0" width="56.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="815.2" y="238.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (4 samples, 0.79%)</title><rect x="821.5" y="211.0" width="9.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="824.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 0.59%)</title><rect x="821.5" y="195.0" width="7.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="824.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.59%)</title><rect x="821.5" y="179.0" width="7.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="824.5" y="190.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.20%)</title><rect x="821.5" y="163.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="824.5" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.40%)</title><rect x="823.9" y="163.0" width="4.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="826.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.40%)</title><rect x="823.9" y="147.0" width="4.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="826.9" y="158.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.20%)</title><rect x="823.9" y="131.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="826.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.20%)</title><rect x="826.2" y="131.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="829.2" y="142.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.20%)</title><rect x="828.5" y="195.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="831.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() [clone .plt] (1 samples, 0.20%)</title><rect x="830.9" y="211.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="833.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (5 samples, 0.99%)</title><rect x="833.2" y="211.0" width="11.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="836.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (5 samples, 0.99%)</title><rect x="833.2" y="195.0" width="11.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="836.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (5 samples, 0.99%)</title><rect x="833.2" y="179.0" width="11.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="836.2" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.79%)</title><rect x="835.5" y="163.0" width="9.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="838.5" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.79%)</title><rect x="835.5" y="147.0" width="9.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="838.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (4 samples, 0.79%)</title><rect x="835.5" y="131.0" width="9.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="838.5" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.59%)</title><rect x="835.5" y="115.0" width="7.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="838.5" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (2 samples, 0.40%)</title><rect x="837.9" y="99.0" width="4.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="840.9" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="840.2" y="83.0" width="2.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="843.2" y="94.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.20%)</title><rect x="840.2" y="67.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="843.2" y="78.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.20%)</title><rect x="842.5" y="115.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="845.5" y="126.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (1 samples, 0.20%)</title><rect x="844.9" y="211.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="847.9" y="222.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.20%)</title><rect x="844.9" y="195.0" width="2.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="847.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (8 samples, 1.58%)</title><rect x="847.2" y="211.0" width="18.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="850.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.20%)</title><rect x="865.8" y="211.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="868.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.20%)</title><rect x="865.8" y="195.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="868.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.20%)</title><rect x="868.2" y="227.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="871.2" y="238.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.20%)</title><rect x="870.5" y="323.0" width="2.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="873.5" y="334.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.20%)</title><rect x="870.5" y="307.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="873.5" y="318.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.20%)</title><rect x="872.8" y="323.0" width="2.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="875.8" y="334.0"></text>
</g>
<g>
<title>[async_workers-5 tid=2973] (47 samples, 9.29%)</title><rect x="875.2" y="467.0" width="109.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="878.2" y="478.0">[async_worker..</text>
</g>
<g>
<title>java/lang/Thread.run (47 samples, 9.29%)</title><rect x="875.2" y="451.0" width="109.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.2" y="462.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (47 samples, 9.29%)</title><rect x="875.2" y="435.0" width="109.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="878.2" y="446.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (47 samples, 9.29%)</title><rect x="875.2" y="419.0" width="109.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.2" y="430.0">java/util/con..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.40%)</title><rect x="877.5" y="403.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="880.5" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.40%)</title><rect x="877.5" y="387.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="880.5" y="398.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.20%)</title><rect x="877.5" y="371.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="880.5" y="382.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.20%)</title><rect x="879.8" y="371.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="882.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (2 samples, 0.40%)</title><rect x="882.2" y="403.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="885.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.40%)</title><rect x="882.2" y="387.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="885.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.20%)</title><rect x="884.5" y="371.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (16 samples, 3.16%)</title><rect x="886.8" y="403.0" width="37.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="889.8" y="414.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (16 samples, 3.16%)</title><rect x="886.8" y="387.0" width="37.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="889.8" y="398.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 2.77%)</title><rect x="886.8" y="371.0" width="32.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.8" y="382.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (14 samples, 2.77%)</title><rect x="886.8" y="355.0" width="32.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.8" y="366.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (14 samples, 2.77%)</title><rect x="886.8" y="339.0" width="32.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="889.8" y="350.0">jd..</text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.20%)</title><rect x="886.8" y="323.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="889.8" y="334.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 1.58%)</title><rect x="889.2" y="323.0" width="18.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="892.2" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.79%)</title><rect x="889.2" y="307.0" width="9.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="892.2" y="318.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.20%)</title><rect x="891.5" y="291.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="894.5" y="302.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.20%)</title><rect x="893.8" y="291.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="896.8" y="302.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.20%)</title><rect x="896.2" y="291.0" width="2.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="899.2" y="302.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.20%)</title><rect x="898.5" y="307.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="901.5" y="318.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.20%)</title><rect x="900.8" y="307.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="903.8" y="318.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.40%)</title><rect x="903.2" y="307.0" width="4.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="906.2" y="318.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.99%)</title><rect x="907.8" y="323.0" width="11.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="910.8" y="334.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.20%)</title><rect x="907.8" y="307.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="910.8" y="318.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.20%)</title><rect x="910.2" y="307.0" width="2.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="913.2" y="318.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.59%)</title><rect x="912.5" y="307.0" width="7.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="915.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.40%)</title><rect x="919.5" y="371.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="922.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.40%)</title><rect x="919.5" y="355.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="922.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.40%)</title><rect x="919.5" y="339.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="922.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.40%)</title><rect x="919.5" y="323.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="922.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.20%)</title><rect x="921.8" y="307.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="924.8" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.20%)</title><rect x="921.8" y="291.0" width="2.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="924.8" y="302.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.20%)</title><rect x="921.8" y="275.0" width="2.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="924.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/1842484759.run (26 samples, 5.14%)</title><rect x="924.2" y="403.0" width="60.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="927.2" y="414.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (26 samples, 5.14%)</title><rect x="924.2" y="387.0" width="60.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="927.2" y="398.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.59%)</title><rect x="924.2" y="371.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="927.2" y="382.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.20%)</title><rect x="924.2" y="355.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="927.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.20%)</title><rect x="924.2" y="339.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="927.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.20%)</title><rect x="924.2" y="323.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="927.2" y="334.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.20%)</title><rect x="924.2" y="307.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="927.2" y="318.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.20%)</title><rect x="924.2" y="291.0" width="2.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="927.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.40%)</title><rect x="926.5" y="355.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="929.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.20%)</title><rect x="926.5" y="339.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="929.5" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.20%)</title><rect x="926.5" y="323.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="929.5" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.20%)</title><rect x="926.5" y="307.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="929.5" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.20%)</title><rect x="926.5" y="291.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="929.5" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.20%)</title><rect x="926.5" y="275.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="929.5" y="286.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.20%)</title><rect x="926.5" y="259.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="929.5" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.20%)</title><rect x="928.8" y="339.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="931.8" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.20%)</title><rect x="928.8" y="323.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="931.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (23 samples, 4.55%)</title><rect x="931.1" y="371.0" width="53.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="934.1" y="382.0">ru/ma..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (21 samples, 4.15%)</title><rect x="931.1" y="355.0" width="49.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="934.1" y="366.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (21 samples, 4.15%)</title><rect x="931.1" y="339.0" width="49.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="934.1" y="350.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (19 samples, 3.75%)</title><rect x="931.1" y="323.0" width="44.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="934.1" y="334.0">Java..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.20%)</title><rect x="931.1" y="307.0" width="2.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="934.1" y="318.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.20%)</title><rect x="933.5" y="307.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="936.5" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (17 samples, 3.36%)</title><rect x="935.8" y="307.0" width="39.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="938.8" y="318.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (17 samples, 3.36%)</title><rect x="935.8" y="291.0" width="39.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="938.8" y="302.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (17 samples, 3.36%)</title><rect x="935.8" y="275.0" width="39.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="938.8" y="286.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (16 samples, 3.16%)</title><rect x="935.8" y="259.0" width="37.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="938.8" y="270.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (13 samples, 2.57%)</title><rect x="935.8" y="243.0" width="30.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="938.8" y="254.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.20%)</title><rect x="935.8" y="227.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="938.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (12 samples, 2.37%)</title><rect x="938.1" y="227.0" width="28.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="941.1" y="238.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.20%)</title><rect x="942.8" y="211.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="945.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.20%)</title><rect x="942.8" y="195.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="945.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="942.8" y="179.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="945.8" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="942.8" y="163.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="945.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (2 samples, 0.40%)</title><rect x="945.1" y="211.0" width="4.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="948.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.40%)</title><rect x="945.1" y="195.0" width="4.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="948.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (2 samples, 0.40%)</title><rect x="945.1" y="179.0" width="4.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="948.1" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.40%)</title><rect x="945.1" y="163.0" width="4.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="948.1" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.40%)</title><rect x="945.1" y="147.0" width="4.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="948.1" y="158.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="945.1" y="131.0" width="2.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="948.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.20%)</title><rect x="947.5" y="131.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="950.5" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.20%)</title><rect x="947.5" y="115.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="950.5" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.20%)</title><rect x="947.5" y="99.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="950.5" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="947.5" y="83.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="950.5" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="947.5" y="67.0" width="2.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="950.5" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.20%)</title><rect x="947.5" y="51.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="950.5" y="62.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="947.5" y="35.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="950.5" y="46.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.20%)</title><rect x="949.8" y="211.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="952.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (6 samples, 1.19%)</title><rect x="952.1" y="211.0" width="14.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="955.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.20%)</title><rect x="966.1" y="243.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="969.1" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="968.5" y="243.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="971.5" y="254.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.20%)</title><rect x="970.8" y="243.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="973.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.20%)</title><rect x="973.1" y="259.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="976.1" y="270.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.20%)</title><rect x="975.5" y="323.0" width="2.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="978.5" y="334.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.20%)</title><rect x="975.5" y="307.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="978.5" y="318.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.20%)</title><rect x="977.8" y="323.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="980.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArraySpecial (2 samples, 0.40%)</title><rect x="980.1" y="355.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="983.1" y="366.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.20%)</title><rect x="980.1" y="339.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="983.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.20%)</title><rect x="982.5" y="339.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="985.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.20%)</title><rect x="982.5" y="323.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="985.5" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.20%)</title><rect x="982.5" y="307.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="985.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.20%)</title><rect x="982.5" y="291.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="985.5" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.20%)</title><rect x="982.5" y="275.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="985.5" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.20%)</title><rect x="982.5" y="259.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="985.5" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.20%)</title><rect x="982.5" y="243.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="985.5" y="254.0"></text>
</g>
<g>
<title>[async_workers-6 tid=2969] (44 samples, 8.70%)</title><rect x="984.8" y="467.0" width="102.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="987.8" y="478.0">[async_worke..</text>
</g>
<g>
<title>java/lang/Thread.run (44 samples, 8.70%)</title><rect x="984.8" y="451.0" width="102.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="987.8" y="462.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (44 samples, 8.70%)</title><rect x="984.8" y="435.0" width="102.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="987.8" y="446.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (44 samples, 8.70%)</title><rect x="984.8" y="419.0" width="102.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="987.8" y="430.0">java/util/co..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.20%)</title><rect x="984.8" y="403.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="987.8" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.20%)</title><rect x="984.8" y="387.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="987.8" y="398.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.20%)</title><rect x="984.8" y="371.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="987.8" y="382.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.20%)</title><rect x="984.8" y="355.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="987.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (10 samples, 1.98%)</title><rect x="987.1" y="403.0" width="23.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="990.1" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (10 samples, 1.98%)</title><rect x="987.1" y="387.0" width="23.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="990.1" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 1.38%)</title><rect x="989.4" y="371.0" width="16.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="992.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 1.38%)</title><rect x="989.4" y="355.0" width="16.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="992.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 1.38%)</title><rect x="989.4" y="339.0" width="16.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="992.4" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.79%)</title><rect x="989.4" y="323.0" width="9.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="992.4" y="334.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.20%)</title><rect x="989.4" y="307.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="992.4" y="318.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.40%)</title><rect x="991.8" y="307.0" width="4.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="994.8" y="318.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.20%)</title><rect x="994.1" y="291.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="997.1" y="302.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.20%)</title><rect x="996.4" y="307.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="999.4" y="318.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.40%)</title><rect x="998.8" y="323.0" width="4.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1001.8" y="334.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.40%)</title><rect x="998.8" y="307.0" width="4.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1001.8" y="318.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.20%)</title><rect x="1003.4" y="323.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1006.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.40%)</title><rect x="1005.8" y="371.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1008.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.40%)</title><rect x="1005.8" y="355.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1008.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.40%)</title><rect x="1005.8" y="339.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1008.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.40%)</title><rect x="1005.8" y="323.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1008.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.20%)</title><rect x="1008.1" y="307.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1011.1" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.20%)</title><rect x="1008.1" y="291.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1011.1" y="302.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.20%)</title><rect x="1008.1" y="275.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1011.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/1842484759.run (33 samples, 6.52%)</title><rect x="1010.4" y="403.0" width="77.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1013.4" y="414.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (33 samples, 6.52%)</title><rect x="1010.4" y="387.0" width="77.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1013.4" y="398.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 1.38%)</title><rect x="1010.4" y="371.0" width="16.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1013.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.99%)</title><rect x="1015.1" y="355.0" width="11.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1018.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.20%)</title><rect x="1015.1" y="339.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1018.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.20%)</title><rect x="1017.4" y="339.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1020.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.20%)</title><rect x="1017.4" y="323.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1020.4" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.20%)</title><rect x="1017.4" y="307.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1020.4" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.20%)</title><rect x="1017.4" y="291.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1020.4" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.20%)</title><rect x="1017.4" y="275.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1020.4" y="286.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.20%)</title><rect x="1017.4" y="259.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1020.4" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.59%)</title><rect x="1019.8" y="339.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1022.8" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.59%)</title><rect x="1019.8" y="323.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1022.8" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.59%)</title><rect x="1019.8" y="307.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1022.8" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.59%)</title><rect x="1019.8" y="291.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1022.8" y="302.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.20%)</title><rect x="1019.8" y="275.0" width="2.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1022.8" y="286.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.20%)</title><rect x="1019.8" y="259.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1022.8" y="270.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.40%)</title><rect x="1022.1" y="275.0" width="4.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1025.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (24 samples, 4.74%)</title><rect x="1026.8" y="371.0" width="55.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1029.8" y="382.0">ru/ma..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (24 samples, 4.74%)</title><rect x="1026.8" y="355.0" width="55.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1029.8" y="366.0">org/r..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.20%)</title><rect x="1026.8" y="339.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1029.8" y="350.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (23 samples, 4.55%)</title><rect x="1029.1" y="339.0" width="53.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1032.1" y="350.0">org/r..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (23 samples, 4.55%)</title><rect x="1029.1" y="323.0" width="53.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1032.1" y="334.0">Java_..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (23 samples, 4.55%)</title><rect x="1029.1" y="307.0" width="53.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1032.1" y="318.0">rocks..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.20%)</title><rect x="1029.1" y="291.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1032.1" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (22 samples, 4.35%)</title><rect x="1031.4" y="291.0" width="51.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1034.4" y="302.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (22 samples, 4.35%)</title><rect x="1031.4" y="275.0" width="51.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1034.4" y="286.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (22 samples, 4.35%)</title><rect x="1031.4" y="259.0" width="51.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1034.4" y="270.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (21 samples, 4.15%)</title><rect x="1031.4" y="243.0" width="49.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1034.4" y="254.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (21 samples, 4.15%)</title><rect x="1031.4" y="227.0" width="49.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1034.4" y="238.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (3 samples, 0.59%)</title><rect x="1038.4" y="211.0" width="7.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1041.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 0.59%)</title><rect x="1038.4" y="195.0" width="7.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1041.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.59%)</title><rect x="1038.4" y="179.0" width="7.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1041.4" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="1038.4" y="163.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1041.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.40%)</title><rect x="1040.8" y="163.0" width="4.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1043.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.20%)</title><rect x="1040.8" y="147.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1043.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.20%)</title><rect x="1043.1" y="147.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1046.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.20%)</title><rect x="1043.1" y="131.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1046.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (4 samples, 0.79%)</title><rect x="1045.4" y="211.0" width="9.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1048.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 0.79%)</title><rect x="1045.4" y="195.0" width="9.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1048.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (4 samples, 0.79%)</title><rect x="1045.4" y="179.0" width="9.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1048.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.79%)</title><rect x="1045.4" y="163.0" width="9.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1048.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.79%)</title><rect x="1045.4" y="147.0" width="9.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1048.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const [clone .plt] (1 samples, 0.20%)</title><rect x="1045.4" y="131.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1048.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (3 samples, 0.59%)</title><rect x="1047.7" y="131.0" width="7.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1050.7" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="1047.7" y="115.0" width="2.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1050.7" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.40%)</title><rect x="1050.1" y="115.0" width="4.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1053.1" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="1050.1" y="99.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1053.1" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.20%)</title><rect x="1052.4" y="99.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1055.4" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="1052.4" y="83.0" width="2.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1055.4" y="94.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (1 samples, 0.20%)</title><rect x="1054.7" y="211.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1057.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.20%)</title><rect x="1054.7" y="195.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1057.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.20%)</title><rect x="1054.7" y="179.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1057.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (5 samples, 0.99%)</title><rect x="1057.1" y="211.0" width="11.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1060.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (4 samples, 0.79%)</title><rect x="1068.7" y="211.0" width="9.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1071.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (4 samples, 0.79%)</title><rect x="1068.7" y="195.0" width="9.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1071.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.20%)</title><rect x="1078.1" y="211.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1081.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="1080.4" y="243.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1083.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.20%)</title><rect x="1080.4" y="227.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1083.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (2 samples, 0.40%)</title><rect x="1082.7" y="371.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1085.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (2 samples, 0.40%)</title><rect x="1082.7" y="355.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.7" y="366.0"></text>
</g>
<g>
<title>[async_workers-7 tid=2971] (44 samples, 8.70%)</title><rect x="1087.4" y="467.0" width="102.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1090.4" y="478.0">[async_worke..</text>
</g>
<g>
<title>java/lang/Thread.run (44 samples, 8.70%)</title><rect x="1087.4" y="451.0" width="102.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1090.4" y="462.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (44 samples, 8.70%)</title><rect x="1087.4" y="435.0" width="102.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1090.4" y="446.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (44 samples, 8.70%)</title><rect x="1087.4" y="419.0" width="102.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1090.4" y="430.0">java/util/co..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.59%)</title><rect x="1089.7" y="403.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.7" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.40%)</title><rect x="1092.1" y="387.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1095.1" y="398.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.40%)</title><rect x="1092.1" y="371.0" width="4.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1095.1" y="382.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.20%)</title><rect x="1092.1" y="355.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1095.1" y="366.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.20%)</title><rect x="1094.4" y="355.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1097.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.20%)</title><rect x="1096.7" y="403.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1099.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.20%)</title><rect x="1096.7" y="387.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1099.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.20%)</title><rect x="1096.7" y="371.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1099.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 1.58%)</title><rect x="1099.1" y="403.0" width="18.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1102.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 1.58%)</title><rect x="1099.1" y="387.0" width="18.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1102.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 1.38%)</title><rect x="1099.1" y="371.0" width="16.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1102.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.40%)</title><rect x="1099.1" y="355.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.40%)</title><rect x="1099.1" y="339.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1102.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.20%)</title><rect x="1101.4" y="323.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1104.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.20%)</title><rect x="1101.4" y="307.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1104.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.20%)</title><rect x="1101.4" y="291.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1104.4" y="302.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.20%)</title><rect x="1101.4" y="275.0" width="2.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1104.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.20%)</title><rect x="1103.7" y="355.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1106.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.20%)</title><rect x="1103.7" y="339.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1106.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.59%)</title><rect x="1106.0" y="355.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1109.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.59%)</title><rect x="1106.0" y="339.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1109.0" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.40%)</title><rect x="1106.0" y="323.0" width="4.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1109.0" y="334.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.20%)</title><rect x="1106.0" y="307.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1109.0" y="318.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.20%)</title><rect x="1108.4" y="307.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1111.4" y="318.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.20%)</title><rect x="1110.7" y="323.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1113.7" y="334.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.20%)</title><rect x="1110.7" y="307.0" width="2.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1113.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.20%)</title><rect x="1113.0" y="355.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1116.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.20%)</title><rect x="1115.4" y="371.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.20%)</title><rect x="1115.4" y="355.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1118.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.20%)</title><rect x="1115.4" y="339.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1118.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.20%)</title><rect x="1115.4" y="323.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1118.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/1842484759.run (31 samples, 6.13%)</title><rect x="1117.7" y="403.0" width="72.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1120.7" y="414.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (31 samples, 6.13%)</title><rect x="1117.7" y="387.0" width="72.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1120.7" y="398.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.59%)</title><rect x="1117.7" y="371.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1120.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.40%)</title><rect x="1120.0" y="355.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1123.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.40%)</title><rect x="1120.0" y="339.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1123.0" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.40%)</title><rect x="1120.0" y="323.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1123.0" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.40%)</title><rect x="1120.0" y="307.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1123.0" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.40%)</title><rect x="1120.0" y="291.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1123.0" y="302.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.40%)</title><rect x="1120.0" y="275.0" width="4.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1123.0" y="286.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.20%)</title><rect x="1120.0" y="259.0" width="2.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1123.0" y="270.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.20%)</title><rect x="1122.4" y="259.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1125.4" y="270.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.20%)</title><rect x="1122.4" y="243.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1125.4" y="254.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.20%)</title><rect x="1122.4" y="227.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1125.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (28 samples, 5.53%)</title><rect x="1124.7" y="371.0" width="65.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1127.7" y="382.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (28 samples, 5.53%)</title><rect x="1124.7" y="355.0" width="65.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1127.7" y="366.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (28 samples, 5.53%)</title><rect x="1124.7" y="339.0" width="65.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.7" y="350.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (27 samples, 5.34%)</title><rect x="1124.7" y="323.0" width="63.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1127.7" y="334.0">Java_o..</text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.20%)</title><rect x="1124.7" y="307.0" width="2.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1127.7" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (26 samples, 5.14%)</title><rect x="1127.0" y="307.0" width="60.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1130.0" y="318.0">rocksd..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.20%)</title><rect x="1127.0" y="291.0" width="2.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1130.0" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (25 samples, 4.94%)</title><rect x="1129.4" y="291.0" width="58.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1132.4" y="302.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (24 samples, 4.74%)</title><rect x="1131.7" y="275.0" width="56.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1134.7" y="286.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (24 samples, 4.74%)</title><rect x="1131.7" y="259.0" width="56.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1134.7" y="270.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (20 samples, 3.95%)</title><rect x="1131.7" y="243.0" width="46.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.7" y="254.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (20 samples, 3.95%)</title><rect x="1131.7" y="227.0" width="46.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1134.7" y="238.0">rock..</text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.20%)</title><rect x="1141.0" y="211.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1144.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (4 samples, 0.79%)</title><rect x="1143.4" y="211.0" width="9.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1146.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (4 samples, 0.79%)</title><rect x="1143.4" y="195.0" width="9.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1146.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (4 samples, 0.79%)</title><rect x="1143.4" y="179.0" width="9.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1146.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.40%)</title><rect x="1143.4" y="163.0" width="4.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1146.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.20%)</title><rect x="1143.4" y="147.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1146.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.20%)</title><rect x="1145.7" y="147.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1148.7" y="158.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.20%)</title><rect x="1145.7" y="131.0" width="2.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1148.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.20%)</title><rect x="1148.0" y="163.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.20%)</title><rect x="1150.4" y="163.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1153.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="1150.4" y="147.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1153.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (1 samples, 0.20%)</title><rect x="1152.7" y="211.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1155.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (1 samples, 0.20%)</title><rect x="1155.0" y="211.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (3 samples, 0.59%)</title><rect x="1157.4" y="211.0" width="6.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.59%)</title><rect x="1157.4" y="195.0" width="6.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1160.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.59%)</title><rect x="1157.4" y="179.0" width="6.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1160.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.40%)</title><rect x="1157.4" y="163.0" width="4.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1160.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.40%)</title><rect x="1157.4" y="147.0" width="4.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1160.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.40%)</title><rect x="1157.4" y="131.0" width="4.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1160.4" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="1157.4" y="115.0" width="2.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1160.4" y="126.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.20%)</title><rect x="1157.4" y="99.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1160.4" y="110.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.20%)</title><rect x="1159.7" y="115.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1162.7" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13428117874057060119.so (1 samples, 0.20%)</title><rect x="1159.7" y="99.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1162.7" y="110.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.20%)</title><rect x="1162.0" y="163.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1165.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (2 samples, 0.40%)</title><rect x="1164.3" y="211.0" width="4.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.3" y="222.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.20%)</title><rect x="1164.3" y="195.0" width="2.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1167.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.20%)</title><rect x="1166.7" y="195.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.20%)</title><rect x="1166.7" y="179.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="1166.7" y="163.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.7" y="174.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, rocksdb::MemTable* const&amp;) (1 samples, 0.20%)</title><rect x="1166.7" y="147.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.40%)</title><rect x="1169.0" y="211.0" width="4.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.20%)</title><rect x="1173.7" y="211.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.20%)</title><rect x="1173.7" y="195.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.20%)</title><rect x="1176.0" y="211.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1179.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.79%)</title><rect x="1178.3" y="243.0" width="9.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.3" y="254.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.20%)</title><rect x="1178.3" y="227.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (1 samples, 0.20%)</title><rect x="1180.7" y="227.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="1183.0" y="227.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.0" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) [clone .plt] (1 samples, 0.20%)</title><rect x="1185.3" y="227.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.3" y="238.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.20%)</title><rect x="1187.7" y="323.0" width="2.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1190.7" y="334.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.20%)</title><rect x="1187.7" y="307.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1190.7" y="318.0"></text>
</g>
</g>
</svg>
