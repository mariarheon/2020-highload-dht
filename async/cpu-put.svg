<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="565"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="565"> </text>
<g id="frames">
<g>
<title>all (1,154 samples, 100.00%)</title><rect x="10.0" y="531.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="542.0">all</text>
</g>
<g>
<title>[C2 CompilerThre tid=15563] (13 samples, 1.13%)</title><rect x="10.0" y="515.0" width="13.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>start_thread (13 samples, 1.13%)</title><rect x="10.0" y="499.0" width="13.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (13 samples, 1.13%)</title><rect x="10.0" y="483.0" width="13.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>Thread::call_run() (13 samples, 1.13%)</title><rect x="10.0" y="467.0" width="13.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (13 samples, 1.13%)</title><rect x="10.0" y="451.0" width="13.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (13 samples, 1.13%)</title><rect x="10.0" y="435.0" width="13.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (13 samples, 1.13%)</title><rect x="10.0" y="419.0" width="13.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (13 samples, 1.13%)</title><rect x="10.0" y="403.0" width="13.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (13 samples, 1.13%)</title><rect x="10.0" y="387.0" width="13.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (8 samples, 0.69%)</title><rect x="10.0" y="371.0" width="8.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.09%)</title><rect x="10.0" y="355.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.09%)</title><rect x="10.0" y="339.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.09%)</title><rect x="10.0" y="323.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.09%)</title><rect x="11.0" y="355.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.0" y="366.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.09%)</title><rect x="11.0" y="339.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.0" y="350.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.09%)</title><rect x="11.0" y="323.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="14.0" y="334.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_exit_block_pressure(Block*) (1 samples, 0.09%)</title><rect x="11.0" y="307.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="14.0" y="318.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.09%)</title><rect x="11.0" y="291.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.0" y="302.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (6 samples, 0.52%)</title><rect x="12.0" y="355.0" width="6.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.0" y="366.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (3 samples, 0.26%)</title><rect x="12.0" y="339.0" width="3.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.0" y="350.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.09%)</title><rect x="13.1" y="323.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="16.1" y="334.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.09%)</title><rect x="14.1" y="323.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.1" y="334.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.09%)</title><rect x="14.1" y="307.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.1" y="318.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.09%)</title><rect x="15.1" y="339.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.1" y="350.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.09%)</title><rect x="15.1" y="323.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.1" y="334.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.17%)</title><rect x="16.1" y="339.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="19.1" y="350.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.09%)</title><rect x="17.2" y="323.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="20.2" y="334.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 0.35%)</title><rect x="18.2" y="371.0" width="4.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="21.2" y="382.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.09%)</title><rect x="18.2" y="355.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="21.2" y="366.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.09%)</title><rect x="18.2" y="339.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="21.2" y="350.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (1 samples, 0.09%)</title><rect x="18.2" y="323.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="21.2" y="334.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.09%)</title><rect x="18.2" y="307.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="21.2" y="318.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.09%)</title><rect x="18.2" y="291.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="21.2" y="302.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.09%)</title><rect x="18.2" y="275.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="21.2" y="286.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) (1 samples, 0.09%)</title><rect x="18.2" y="259.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="21.2" y="270.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.09%)</title><rect x="19.2" y="355.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="22.2" y="366.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.09%)</title><rect x="19.2" y="339.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="22.2" y="350.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.09%)</title><rect x="20.2" y="355.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="23.2" y="366.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.09%)</title><rect x="20.2" y="339.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="23.2" y="350.0"></text>
</g>
<g>
<title>Node_List::push(Node*) (1 samples, 0.09%)</title><rect x="20.2" y="323.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="23.2" y="334.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.09%)</title><rect x="20.2" y="307.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="23.2" y="318.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.09%)</title><rect x="20.2" y="291.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="23.2" y="302.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.09%)</title><rect x="21.2" y="355.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="24.2" y="366.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.09%)</title><rect x="21.2" y="339.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="24.2" y="350.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="21.2" y="323.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="24.2" y="334.0"></text>
</g>
<g>
<title>idealize_test(PhaseGVN*, IfNode*) (1 samples, 0.09%)</title><rect x="21.2" y="307.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="24.2" y="318.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.09%)</title><rect x="21.2" y="291.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="24.2" y="302.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.09%)</title><rect x="21.2" y="275.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="24.2" y="286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="22.3" y="371.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="25.3" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="22.3" y="355.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="25.3" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="22.3" y="339.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="25.3" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="22.3" y="323.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="25.3" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="22.3" y="307.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="25.3" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="22.3" y="291.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="25.3" y="302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="22.3" y="275.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="25.3" y="286.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="22.3" y="259.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="25.3" y="270.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="22.3" y="243.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="25.3" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="22.3" y="227.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="25.3" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="22.3" y="211.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="25.3" y="222.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.09%)</title><rect x="22.3" y="195.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="25.3" y="206.0"></text>
</g>
<g>
<title>TypePtr::speculative_maybe_null() const (1 samples, 0.09%)</title><rect x="22.3" y="179.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="25.3" y="190.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.09%)</title><rect x="22.3" y="163.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="25.3" y="174.0"></text>
</g>
<g>
<title>TypeInstPtr::remove_speculative() const (1 samples, 0.09%)</title><rect x="22.3" y="147.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="25.3" y="158.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.09%)</title><rect x="22.3" y="131.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="25.3" y="142.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.09%)</title><rect x="22.3" y="115.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="25.3" y="126.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=15599] (149 samples, 12.91%)</title><rect x="23.3" y="515.0" width="152.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="26.3" y="526.0">[NIO Selector #0 ti..</text>
</g>
<g>
<title>[deoptimization] (1 samples, 0.09%)</title><rect x="23.3" y="499.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="26.3" y="510.0"></text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info(JavaThread*, int) (1 samples, 0.09%)</title><rect x="23.3" y="483.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="26.3" y="494.0"></text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info_helper(JavaThread*, int) (1 samples, 0.09%)</title><rect x="23.3" y="467.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="26.3" y="478.0"></text>
</g>
<g>
<title>vframeArray::allocate(JavaThread*, int, GrowableArray&lt;compiledVFrame*&gt;*, RegisterMap*, frame, frame, frame, bool) (1 samples, 0.09%)</title><rect x="23.3" y="451.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="26.3" y="462.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (148 samples, 12.82%)</title><rect x="24.3" y="499.0" width="151.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.3" y="510.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.09%)</title><rect x="24.3" y="483.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.09%)</title><rect x="25.3" y="483.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (17 samples, 1.47%)</title><rect x="26.4" y="483.0" width="17.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (13 samples, 1.13%)</title><rect x="30.5" y="467.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="33.5" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.09%)</title><rect x="32.5" y="451.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="35.5" y="462.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.09%)</title><rect x="33.5" y="451.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="36.5" y="462.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 0.78%)</title><rect x="34.5" y="451.0" width="9.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="37.5" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (129 samples, 11.18%)</title><rect x="43.7" y="483.0" width="131.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.7" y="494.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (129 samples, 11.18%)</title><rect x="43.7" y="467.0" width="131.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.7" y="478.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (122 samples, 10.57%)</title><rect x="43.7" y="451.0" width="124.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="46.7" y="462.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (115 samples, 9.97%)</title><rect x="45.8" y="435.0" width="117.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.8" y="446.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (115 samples, 9.97%)</title><rect x="45.8" y="419.0" width="117.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.8" y="430.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (114 samples, 9.88%)</title><rect x="45.8" y="403.0" width="116.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.8" y="414.0">RequestHandler..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8 samples, 0.69%)</title><rect x="45.8" y="387.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.43%)</title><rect x="46.8" y="371.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.09%)</title><rect x="46.8" y="355.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.35%)</title><rect x="47.8" y="355.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="50.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.35%)</title><rect x="47.8" y="339.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="50.8" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.35%)</title><rect x="47.8" y="323.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.8" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.35%)</title><rect x="47.8" y="307.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="50.8" y="318.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.09%)</title><rect x="47.8" y="291.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="50.8" y="302.0"></text>
</g>
<g>
<title>__libc_send (3 samples, 0.26%)</title><rect x="48.9" y="291.0" width="3.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="51.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.17%)</title><rect x="51.9" y="371.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.09%)</title><rect x="52.9" y="355.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="52.9" y="339.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.09%)</title><rect x="54.0" y="387.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.09%)</title><rect x="54.0" y="371.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="54.0" y="355.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.09%)</title><rect x="54.0" y="339.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.put (105 samples, 9.10%)</title><rect x="55.0" y="387.0" width="107.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.0" y="398.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (105 samples, 9.10%)</title><rect x="55.0" y="371.0" width="107.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.0" y="382.0">ru/mail/polis..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (104 samples, 9.01%)</title><rect x="55.0" y="355.0" width="106.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.0" y="366.0">org/rocksdb/R..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (104 samples, 9.01%)</title><rect x="55.0" y="339.0" width="106.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.0" y="350.0">org/rocksdb/R..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (100 samples, 8.67%)</title><rect x="55.0" y="323.0" width="102.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="58.0" y="334.0">Java_org_roc..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.09%)</title><rect x="57.0" y="307.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="60.0" y="318.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.17%)</title><rect x="58.1" y="307.0" width="2.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="61.1" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (95 samples, 8.23%)</title><rect x="60.1" y="307.0" width="97.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="63.1" y="318.0">rocksdb_put..</text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.09%)</title><rect x="61.1" y="291.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="64.1" y="302.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.09%)</title><rect x="62.1" y="291.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="65.1" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (92 samples, 7.97%)</title><rect x="63.2" y="291.0" width="94.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="66.2" y="302.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="64.2" y="275.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="67.2" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (90 samples, 7.80%)</title><rect x="65.2" y="275.0" width="92.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="68.2" y="286.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (88 samples, 7.63%)</title><rect x="65.2" y="259.0" width="90.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="68.2" y="270.0">rocksdb::D..</text>
</g>
<g>
<title>__libc_free (2 samples, 0.17%)</title><rect x="65.2" y="243.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="68.2" y="254.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.09%)</title><rect x="67.3" y="243.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="70.3" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (81 samples, 7.02%)</title><rect x="68.3" y="243.0" width="82.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="71.3" y="254.0">rocksdb::..</text>
</g>
<g>
<title>__pthread_cond_destroy (1 samples, 0.09%)</title><rect x="68.3" y="227.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="71.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (79 samples, 6.85%)</title><rect x="69.3" y="227.0" width="80.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="72.3" y="238.0">rocksdb::..</text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="76.5" y="211.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="79.5" y="222.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="77.5" y="211.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="80.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (2 samples, 0.17%)</title><rect x="78.5" y="211.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="81.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.09%)</title><rect x="80.6" y="211.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="83.6" y="222.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.09%)</title><rect x="80.6" y="195.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="83.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (18 samples, 1.56%)</title><rect x="81.6" y="211.0" width="18.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="84.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (14 samples, 1.21%)</title><rect x="81.6" y="195.0" width="14.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="84.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.09%)</title><rect x="81.6" y="179.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="84.6" y="190.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (13 samples, 1.13%)</title><rect x="82.6" y="179.0" width="13.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="85.6" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="82.6" y="163.0" width="1.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="85.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Flush(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.09%)</title><rect x="83.6" y="163.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="86.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (7 samples, 0.61%)</title><rect x="84.6" y="163.0" width="7.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="87.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (7 samples, 0.61%)</title><rect x="84.6" y="147.0" width="7.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="87.6" y="158.0"></text>
</g>
<g>
<title>__libc_write (4 samples, 0.35%)</title><rect x="84.6" y="131.0" width="4.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="87.6" y="142.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.17%)</title><rect x="88.7" y="131.0" width="2.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="91.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.09%)</title><rect x="90.8" y="131.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="93.8" y="142.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (4 samples, 0.35%)</title><rect x="91.8" y="163.0" width="4.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="94.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.09%)</title><rect x="91.8" y="147.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="94.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="92.8" y="147.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="95.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (2 samples, 0.17%)</title><rect x="93.8" y="147.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="96.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Append(rocksdb::WriteBatch*, rocksdb::WriteBatch const*, bool) (1 samples, 0.09%)</title><rect x="95.9" y="195.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="98.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (1 samples, 0.09%)</title><rect x="96.9" y="195.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="99.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="97.9" y="195.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="100.9" y="206.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() [clone .plt] (1 samples, 0.09%)</title><rect x="99.0" y="195.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="102.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (15 samples, 1.30%)</title><rect x="100.0" y="211.0" width="15.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="103.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (13 samples, 1.13%)</title><rect x="101.0" y="195.0" width="13.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="104.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (13 samples, 1.13%)</title><rect x="101.0" y="179.0" width="13.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="104.0" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 1.13%)</title><rect x="101.0" y="163.0" width="13.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="104.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (1 samples, 0.09%)</title><rect x="101.0" y="147.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="104.0" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (12 samples, 1.04%)</title><rect x="102.0" y="147.0" width="12.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="105.0" y="158.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.09%)</title><rect x="103.1" y="131.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="106.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (10 samples, 0.87%)</title><rect x="104.1" y="131.0" width="10.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="107.1" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="105.1" y="115.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="108.1" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (6 samples, 0.52%)</title><rect x="106.1" y="115.0" width="6.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="109.1" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (6 samples, 0.52%)</title><rect x="106.1" y="99.0" width="6.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="109.1" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="111.2" y="83.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="114.2" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="111.2" y="67.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="114.2" y="78.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.09%)</title><rect x="111.2" y="51.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="114.2" y="62.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.09%)</title><rect x="112.3" y="115.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="115.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.09%)</title><rect x="113.3" y="115.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="116.3" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="113.3" y="99.0" width="1.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="116.3" y="110.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.09%)</title><rect x="114.3" y="195.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="117.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (8 samples, 0.69%)</title><rect x="115.3" y="211.0" width="8.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="118.3" y="222.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.09%)</title><rect x="115.3" y="195.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="118.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (7 samples, 0.61%)</title><rect x="116.3" y="195.0" width="7.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="119.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="116.3" y="179.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="119.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (6 samples, 0.52%)</title><rect x="117.4" y="179.0" width="6.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="120.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.52%)</title><rect x="117.4" y="163.0" width="6.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="120.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (6 samples, 0.52%)</title><rect x="117.4" y="147.0" width="6.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="120.4" y="158.0"></text>
</g>
<g>
<title>memcpy@plt (1 samples, 0.09%)</title><rect x="118.4" y="131.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="121.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.09%)</title><rect x="119.4" y="131.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="122.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.17%)</title><rect x="120.4" y="131.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="123.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.17%)</title><rect x="120.4" y="115.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="123.4" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.17%)</title><rect x="120.4" y="99.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="123.4" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (2 samples, 0.17%)</title><rect x="120.4" y="83.0" width="2.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="123.4" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (1 samples, 0.09%)</title><rect x="122.5" y="131.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="125.5" y="142.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (22 samples, 1.91%)</title><rect x="123.5" y="211.0" width="22.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="126.5" y="222.0">r..</text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="144.0" y="195.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="147.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.09%)</title><rect x="145.0" y="195.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="148.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (3 samples, 0.26%)</title><rect x="146.0" y="211.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="149.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.26%)</title><rect x="146.0" y="195.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="149.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.09%)</title><rect x="149.1" y="211.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="152.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) [clone .plt] (1 samples, 0.09%)</title><rect x="150.1" y="227.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="153.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.09%)</title><rect x="151.1" y="243.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="154.1" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.17%)</title><rect x="152.1" y="243.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="155.1" y="254.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.09%)</title><rect x="152.1" y="227.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="155.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (1 samples, 0.09%)</title><rect x="153.2" y="227.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="156.2" y="238.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) [clone .plt] (1 samples, 0.09%)</title><rect x="154.2" y="243.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="157.2" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.09%)</title><rect x="155.2" y="259.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="158.2" y="270.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.09%)</title><rect x="156.2" y="259.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="159.2" y="270.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.35%)</title><rect x="157.2" y="323.0" width="4.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="160.2" y="334.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.09%)</title><rect x="157.2" y="307.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="160.2" y="318.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.26%)</title><rect x="158.3" y="307.0" width="3.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="161.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArraySpecial (1 samples, 0.09%)</title><rect x="161.3" y="355.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.09%)</title><rect x="162.4" y="403.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.35%)</title><rect x="163.4" y="435.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.09%)</title><rect x="163.4" y="419.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="166.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="163.4" y="403.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="163.4" y="387.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.09%)</title><rect x="163.4" y="371.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="166.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="163.4" y="355.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="164.4" y="419.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="167.4" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="164.4" y="403.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="167.4" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.09%)</title><rect x="166.4" y="419.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="169.4" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="167.5" y="435.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="170.5" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 0.61%)</title><rect x="168.5" y="451.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.5" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 0.61%)</title><rect x="168.5" y="435.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="171.5" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.35%)</title><rect x="168.5" y="419.0" width="4.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="171.5" y="430.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.17%)</title><rect x="168.5" y="403.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="171.5" y="414.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.17%)</title><rect x="170.5" y="403.0" width="2.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="173.5" y="414.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.09%)</title><rect x="170.5" y="387.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="173.5" y="398.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.09%)</title><rect x="171.6" y="387.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="174.6" y="398.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.09%)</title><rect x="172.6" y="419.0" width="1.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="175.6" y="430.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.17%)</title><rect x="173.6" y="419.0" width="2.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="176.6" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=15600] (205 samples, 17.76%)</title><rect x="175.6" y="515.0" width="209.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="178.6" y="526.0">[NIO Selector #1 tid=15600]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (205 samples, 17.76%)</title><rect x="175.6" y="499.0" width="209.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="178.6" y="510.0">one/nio/server/SelectorThre..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.09%)</title><rect x="177.7" y="483.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="180.7" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (22 samples, 1.91%)</title><rect x="178.7" y="483.0" width="22.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.7" y="494.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.17%)</title><rect x="178.7" y="467.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="181.7" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.09%)</title><rect x="178.7" y="451.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="181.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.access$100 (1 samples, 0.09%)</title><rect x="179.7" y="451.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="182.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (20 samples, 1.73%)</title><rect x="180.8" y="467.0" width="20.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.8" y="478.0"></text>
</g>
<g>
<title>__clock_gettime (6 samples, 0.52%)</title><rect x="181.8" y="451.0" width="6.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="184.8" y="462.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.09%)</title><rect x="187.9" y="451.0" width="1.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="190.9" y="462.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.09%)</title><rect x="188.9" y="451.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="191.9" y="462.0"></text>
</g>
<g>
<title>epoll_wait (11 samples, 0.95%)</title><rect x="190.0" y="451.0" width="11.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="193.0" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (180 samples, 15.60%)</title><rect x="201.2" y="483.0" width="184.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="204.2" y="494.0">one/nio/net/Session.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.09%)</title><rect x="201.2" y="467.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (179 samples, 15.51%)</title><rect x="202.2" y="467.0" width="183.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.2" y="478.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (165 samples, 14.30%)</title><rect x="202.2" y="451.0" width="168.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.2" y="462.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (1 samples, 0.09%)</title><rect x="203.3" y="435.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (155 samples, 13.43%)</title><rect x="204.3" y="435.0" width="158.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.3" y="446.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (155 samples, 13.43%)</title><rect x="204.3" y="419.0" width="158.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="207.3" y="430.0">one/nio/http/HttpSer..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (148 samples, 12.82%)</title><rect x="205.3" y="403.0" width="151.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.3" y="414.0">RequestHandler1_put..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (13 samples, 1.13%)</title><rect x="205.3" y="387.0" width="13.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="208.3" y="398.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.35%)</title><rect x="205.3" y="371.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.35%)</title><rect x="205.3" y="355.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="208.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.35%)</title><rect x="205.3" y="339.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.3" y="350.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="208.4" y="323.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="211.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 0.69%)</title><rect x="209.4" y="371.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="212.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.26%)</title><rect x="209.4" y="355.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.17%)</title><rect x="210.4" y="339.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="213.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.17%)</title><rect x="210.4" y="323.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="213.4" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.17%)</title><rect x="210.4" y="307.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="213.4" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.17%)</title><rect x="210.4" y="291.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="213.4" y="302.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.17%)</title><rect x="210.4" y="275.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="213.4" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.43%)</title><rect x="212.5" y="355.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.5" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.43%)</title><rect x="212.5" y="339.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="215.5" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.43%)</title><rect x="212.5" y="323.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="215.5" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.43%)</title><rect x="212.5" y="307.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="215.5" y="318.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.09%)</title><rect x="212.5" y="291.0" width="1.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="215.5" y="302.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="212.5" y="275.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="215.5" y="286.0"></text>
</g>
<g>
<title>__libc_send (4 samples, 0.35%)</title><rect x="213.5" y="291.0" width="4.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="216.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="217.6" y="371.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="220.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.09%)</title><rect x="218.6" y="387.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="221.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.09%)</title><rect x="218.6" y="371.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="221.6" y="382.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.09%)</title><rect x="218.6" y="355.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="221.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.put (134 samples, 11.61%)</title><rect x="219.6" y="387.0" width="137.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="222.6" y="398.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (1 samples, 0.09%)</title><rect x="221.7" y="371.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.7" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="221.7" y="355.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="224.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="221.7" y="339.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="224.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.09%)</title><rect x="221.7" y="323.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="224.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (130 samples, 11.27%)</title><rect x="222.7" y="371.0" width="132.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="225.7" y="382.0">ru/mail/polis/da..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (129 samples, 11.18%)</title><rect x="222.7" y="355.0" width="131.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="225.7" y="366.0">org/rocksdb/Rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (129 samples, 11.18%)</title><rect x="222.7" y="339.0" width="131.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="225.7" y="350.0">org/rocksdb/Rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (126 samples, 10.92%)</title><rect x="222.7" y="323.0" width="128.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="225.7" y="334.0">Java_org_rocksdb..</text>
</g>
<g>
<title>malloc (2 samples, 0.17%)</title><rect x="224.7" y="307.0" width="2.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="227.7" y="318.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="226.8" y="307.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="229.8" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (121 samples, 10.49%)</title><rect x="227.8" y="307.0" width="123.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="230.8" y="318.0">rocksdb_put_hel..</text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.09%)</title><rect x="228.8" y="291.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="231.8" y="302.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.26%)</title><rect x="229.8" y="291.0" width="3.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="232.8" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (116 samples, 10.05%)</title><rect x="232.9" y="291.0" width="118.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="235.9" y="302.0">rocksdb::DB::P..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.17%)</title><rect x="232.9" y="275.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="235.9" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (114 samples, 9.88%)</title><rect x="235.0" y="275.0" width="116.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="238.0" y="286.0">rocksdb::DBImp..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (114 samples, 9.88%)</title><rect x="235.0" y="259.0" width="116.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="238.0" y="270.0">rocksdb::DB::P..</text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.09%)</title><rect x="236.0" y="243.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="239.0" y="254.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (2 samples, 0.17%)</title><rect x="237.0" y="243.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="240.0" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (106 samples, 9.19%)</title><rect x="239.0" y="243.0" width="108.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="242.0" y="254.0">rocksdb::DBIm..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.09%)</title><rect x="239.0" y="227.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="242.0" y="238.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="240.1" y="227.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="243.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::~ColumnFamilyHandleImpl() (1 samples, 0.09%)</title><rect x="241.1" y="227.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="244.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (99 samples, 8.58%)</title><rect x="242.1" y="227.0" width="101.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="245.1" y="238.0">rocksdb::DBI..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.17%)</title><rect x="247.2" y="211.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="250.2" y="222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="249.3" y="211.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="252.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.09%)</title><rect x="250.3" y="211.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="253.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.17%)</title><rect x="251.3" y="211.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="254.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (22 samples, 1.91%)</title><rect x="253.4" y="211.0" width="22.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="256.4" y="222.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.09%)</title><rect x="255.4" y="195.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="258.4" y="206.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.09%)</title><rect x="255.4" y="179.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="258.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (19 samples, 1.65%)</title><rect x="256.4" y="195.0" width="19.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="259.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (19 samples, 1.65%)</title><rect x="256.4" y="179.0" width="19.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="259.4" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (7 samples, 0.61%)</title><rect x="257.5" y="163.0" width="7.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="260.5" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (7 samples, 0.61%)</title><rect x="264.6" y="163.0" width="7.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="267.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.09%)</title><rect x="264.6" y="147.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="267.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (6 samples, 0.52%)</title><rect x="265.6" y="147.0" width="6.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="268.6" y="158.0"></text>
</g>
<g>
<title>__libc_write (3 samples, 0.26%)</title><rect x="267.7" y="131.0" width="3.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="270.7" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.09%)</title><rect x="270.7" y="131.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="273.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) [clone .plt] (1 samples, 0.09%)</title><rect x="271.8" y="163.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="274.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.26%)</title><rect x="272.8" y="163.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="275.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (3 samples, 0.26%)</title><rect x="272.8" y="147.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="275.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.09%)</title><rect x="274.8" y="131.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="277.8" y="142.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (1 samples, 0.09%)</title><rect x="275.9" y="211.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="278.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.09%)</title><rect x="276.9" y="211.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="279.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const [clone .plt] (1 samples, 0.09%)</title><rect x="277.9" y="211.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="280.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (26 samples, 2.25%)</title><rect x="278.9" y="211.0" width="26.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="281.9" y="222.0">r..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (25 samples, 2.17%)</title><rect x="279.9" y="195.0" width="25.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="282.9" y="206.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="279.9" y="179.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="282.9" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (24 samples, 2.08%)</title><rect x="281.0" y="179.0" width="24.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="284.0" y="190.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (21 samples, 1.82%)</title><rect x="281.0" y="163.0" width="21.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="284.0" y="174.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (21 samples, 1.82%)</title><rect x="281.0" y="147.0" width="21.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="284.0" y="158.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (2 samples, 0.17%)</title><rect x="283.0" y="131.0" width="2.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="286.0" y="142.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.09%)</title><rect x="285.1" y="131.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="288.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (15 samples, 1.30%)</title><rect x="286.1" y="131.0" width="15.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="289.1" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (2 samples, 0.17%)</title><rect x="287.1" y="115.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="290.1" y="126.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.09%)</title><rect x="287.1" y="99.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="290.1" y="110.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.09%)</title><rect x="288.1" y="99.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="291.1" y="110.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (10 samples, 0.87%)</title><rect x="289.2" y="115.0" width="10.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="292.2" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (8 samples, 0.69%)</title><rect x="289.2" y="99.0" width="8.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="292.2" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (6 samples, 0.52%)</title><rect x="291.2" y="83.0" width="6.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="294.2" y="94.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.17%)</title><rect x="293.2" y="67.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="296.2" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.17%)</title><rect x="295.3" y="67.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="298.3" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.17%)</title><rect x="297.3" y="99.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="300.3" y="110.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.09%)</title><rect x="299.4" y="115.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="302.4" y="126.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() [clone .plt] (1 samples, 0.09%)</title><rect x="300.4" y="115.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="303.4" y="126.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.09%)</title><rect x="301.4" y="131.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="304.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.26%)</title><rect x="302.4" y="163.0" width="3.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="305.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (7 samples, 0.61%)</title><rect x="305.5" y="211.0" width="7.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="308.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 0.52%)</title><rect x="305.5" y="195.0" width="6.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="308.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.09%)</title><rect x="305.5" y="179.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="308.5" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (5 samples, 0.43%)</title><rect x="306.5" y="179.0" width="5.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="309.5" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.43%)</title><rect x="306.5" y="163.0" width="5.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="309.5" y="174.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.09%)</title><rect x="306.5" y="147.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="309.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.35%)</title><rect x="307.6" y="147.0" width="4.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="310.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (4 samples, 0.35%)</title><rect x="307.6" y="131.0" width="4.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="310.6" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="307.6" y="115.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="310.6" y="126.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (3 samples, 0.26%)</title><rect x="308.6" y="115.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="311.6" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.26%)</title><rect x="308.6" y="99.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="311.6" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (3 samples, 0.26%)</title><rect x="308.6" y="83.0" width="3.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="311.6" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (2 samples, 0.17%)</title><rect x="309.6" y="67.0" width="2.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="312.6" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.17%)</title><rect x="309.6" y="51.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="312.6" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.09%)</title><rect x="310.6" y="35.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="313.6" y="46.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;*) (1 samples, 0.09%)</title><rect x="311.6" y="195.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="314.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.09%)</title><rect x="312.7" y="211.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="315.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (23 samples, 1.99%)</title><rect x="313.7" y="211.0" width="23.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="316.7" y="222.0">r..</text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.17%)</title><rect x="337.2" y="211.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="340.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.17%)</title><rect x="337.2" y="195.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="340.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) [clone .plt] (1 samples, 0.09%)</title><rect x="339.3" y="211.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="342.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.09%)</title><rect x="340.3" y="211.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="343.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.09%)</title><rect x="341.3" y="211.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="344.3" y="222.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;*) (1 samples, 0.09%)</title><rect x="342.3" y="211.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="345.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (1 samples, 0.09%)</title><rect x="343.3" y="227.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="346.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.09%)</title><rect x="344.4" y="227.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="347.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.09%)</title><rect x="345.4" y="227.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="348.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.09%)</title><rect x="346.4" y="227.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="349.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.35%)</title><rect x="347.4" y="243.0" width="4.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="350.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="347.4" y="227.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="350.4" y="238.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() [clone .plt] (1 samples, 0.09%)</title><rect x="347.4" y="211.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="350.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (1 samples, 0.09%)</title><rect x="348.5" y="227.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="351.5" y="238.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.17%)</title><rect x="349.5" y="227.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="352.5" y="238.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="351.5" y="323.0" width="2.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="354.5" y="334.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="351.5" y="307.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="354.5" y="318.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.09%)</title><rect x="352.5" y="307.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="355.5" y="318.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.09%)</title><rect x="353.6" y="323.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="356.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArraySpecial (1 samples, 0.09%)</title><rect x="354.6" y="355.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="357.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.09%)</title><rect x="354.6" y="339.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="357.6" y="350.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1 samples, 0.09%)</title><rect x="354.6" y="323.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (1 samples, 0.09%)</title><rect x="355.6" y="371.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="358.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.09%)</title><rect x="355.6" y="355.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="358.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.09%)</title><rect x="356.6" y="403.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="359.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.43%)</title><rect x="357.7" y="403.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="360.7" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.26%)</title><rect x="357.7" y="387.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="360.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.26%)</title><rect x="357.7" y="371.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="360.7" y="382.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.09%)</title><rect x="359.7" y="355.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="362.7" y="366.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.09%)</title><rect x="359.7" y="339.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="362.7" y="350.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.09%)</title><rect x="359.7" y="323.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="362.7" y="334.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.09%)</title><rect x="359.7" y="307.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="362.7" y="318.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.09%)</title><rect x="359.7" y="291.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="362.7" y="302.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.09%)</title><rect x="359.7" y="275.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="362.7" y="286.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.09%)</title><rect x="359.7" y="259.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="362.7" y="270.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.09%)</title><rect x="359.7" y="243.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="362.7" y="254.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.09%)</title><rect x="359.7" y="227.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="362.7" y="238.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.09%)</title><rect x="359.7" y="211.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="362.7" y="222.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.09%)</title><rect x="359.7" y="195.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="362.7" y="206.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.09%)</title><rect x="359.7" y="179.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="362.7" y="190.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.09%)</title><rect x="359.7" y="163.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="362.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.17%)</title><rect x="360.7" y="387.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="363.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.35%)</title><rect x="362.8" y="435.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="365.8" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.26%)</title><rect x="362.8" y="419.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.8" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="363.8" y="403.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.8" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.09%)</title><rect x="365.8" y="419.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="368.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.09%)</title><rect x="366.9" y="435.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="369.9" y="446.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.09%)</title><rect x="366.9" y="419.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="369.9" y="430.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.09%)</title><rect x="366.9" y="403.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="369.9" y="414.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.09%)</title><rect x="366.9" y="387.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="369.9" y="398.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.09%)</title><rect x="366.9" y="371.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="367.9" y="435.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="370.9" y="446.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.09%)</title><rect x="367.9" y="419.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="367.9" y="403.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="370.9" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="368.9" y="435.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="371.9" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (14 samples, 1.21%)</title><rect x="371.0" y="451.0" width="14.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.0" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (13 samples, 1.13%)</title><rect x="372.0" y="435.0" width="13.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.0" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.26%)</title><rect x="375.0" y="419.0" width="3.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="378.0" y="430.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.09%)</title><rect x="375.0" y="403.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="378.0" y="414.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="376.1" y="403.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="379.1" y="414.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.09%)</title><rect x="377.1" y="403.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="380.1" y="414.0"></text>
</g>
<g>
<title>__recv (6 samples, 0.52%)</title><rect x="378.1" y="419.0" width="6.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="381.1" y="430.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="384.2" y="419.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="387.2" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=15601] (165 samples, 14.30%)</title><rect x="385.3" y="515.0" width="168.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="388.3" y="526.0">[NIO Selector #2 tid=1..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (165 samples, 14.30%)</title><rect x="385.3" y="499.0" width="168.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="388.3" y="510.0">one/nio/server/Selecto..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.09%)</title><rect x="387.3" y="483.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.09%)</title><rect x="387.3" y="467.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.3" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (17 samples, 1.47%)</title><rect x="388.3" y="483.0" width="17.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="391.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.09%)</title><rect x="389.4" y="467.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="392.4" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.09%)</title><rect x="389.4" y="451.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.4" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (15 samples, 1.30%)</title><rect x="390.4" y="467.0" width="15.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="393.4" y="478.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.43%)</title><rect x="393.4" y="451.0" width="5.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="396.4" y="462.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.09%)</title><rect x="398.6" y="451.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="401.6" y="462.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.09%)</title><rect x="399.6" y="451.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="402.6" y="462.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.43%)</title><rect x="400.6" y="451.0" width="5.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="403.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (145 samples, 12.56%)</title><rect x="405.7" y="483.0" width="148.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="408.7" y="494.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (144 samples, 12.48%)</title><rect x="406.7" y="467.0" width="147.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="409.7" y="478.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (135 samples, 11.70%)</title><rect x="406.7" y="451.0" width="138.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="409.7" y="462.0">one/nio/http/Http..</text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.09%)</title><rect x="407.8" y="435.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="410.8" y="446.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="408.8" y="435.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="411.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (122 samples, 10.57%)</title><rect x="409.8" y="435.0" width="124.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="412.8" y="446.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (122 samples, 10.57%)</title><rect x="409.8" y="419.0" width="124.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="412.8" y="430.0">one/nio/http/Ht..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (119 samples, 10.31%)</title><rect x="410.8" y="403.0" width="121.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="413.8" y="414.0">RequestHandler1..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (14 samples, 1.21%)</title><rect x="410.8" y="387.0" width="14.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.8" y="398.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.17%)</title><rect x="411.9" y="371.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="414.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.17%)</title><rect x="411.9" y="355.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="414.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.17%)</title><rect x="411.9" y="339.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="414.9" y="350.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="411.9" y="323.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="414.9" y="334.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="411.9" y="307.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="414.9" y="318.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="412.9" y="323.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="415.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 0.87%)</title><rect x="413.9" y="371.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.35%)</title><rect x="413.9" y="355.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="416.9" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.17%)</title><rect x="415.9" y="339.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="418.9" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.17%)</title><rect x="415.9" y="323.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="418.9" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.17%)</title><rect x="415.9" y="307.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="418.9" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.17%)</title><rect x="415.9" y="291.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="418.9" y="302.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.17%)</title><rect x="415.9" y="275.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.9" y="286.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="417.0" y="259.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="420.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.52%)</title><rect x="418.0" y="355.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="421.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.52%)</title><rect x="418.0" y="339.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="421.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.09%)</title><rect x="419.0" y="323.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.0" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.35%)</title><rect x="420.0" y="323.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="423.0" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.35%)</title><rect x="420.0" y="307.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.0" y="318.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.17%)</title><rect x="422.1" y="291.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="425.1" y="302.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="422.1" y="275.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="425.1" y="286.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.09%)</title><rect x="423.1" y="275.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="426.1" y="286.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.09%)</title><rect x="423.1" y="259.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="426.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="424.1" y="371.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.1" y="382.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.09%)</title><rect x="424.1" y="355.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="424.1" y="339.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.09%)</title><rect x="425.1" y="387.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="428.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.09%)</title><rect x="425.1" y="371.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="428.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.09%)</title><rect x="425.1" y="355.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="428.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="425.1" y="339.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="428.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="425.1" y="323.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.09%)</title><rect x="425.1" y="307.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="428.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.put (104 samples, 9.01%)</title><rect x="426.2" y="387.0" width="106.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="429.2" y="398.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (104 samples, 9.01%)</title><rect x="426.2" y="371.0" width="106.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="429.2" y="382.0">ru/mail/polis..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (101 samples, 8.75%)</title><rect x="426.2" y="355.0" width="103.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="429.2" y="366.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (100 samples, 8.67%)</title><rect x="427.2" y="339.0" width="102.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.2" y="350.0">org/rocksdb/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (92 samples, 7.97%)</title><rect x="428.2" y="323.0" width="94.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="431.2" y="334.0">Java_org_ro..</text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.09%)</title><rect x="429.2" y="307.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="432.2" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (90 samples, 7.80%)</title><rect x="430.3" y="307.0" width="92.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="433.3" y="318.0">rocksdb_put..</text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.09%)</title><rect x="430.3" y="291.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="433.3" y="302.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.09%)</title><rect x="431.3" y="291.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="434.3" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (88 samples, 7.63%)</title><rect x="432.3" y="291.0" width="90.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="435.3" y="302.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.09%)</title><rect x="432.3" y="275.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="435.3" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (87 samples, 7.54%)</title><rect x="433.3" y="275.0" width="89.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="436.3" y="286.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (85 samples, 7.37%)</title><rect x="433.3" y="259.0" width="86.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="436.3" y="270.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.09%)</title><rect x="433.3" y="243.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="436.3" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (79 samples, 6.85%)</title><rect x="434.4" y="243.0" width="80.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="437.4" y="254.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.09%)</title><rect x="435.4" y="227.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="438.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (75 samples, 6.50%)</title><rect x="436.4" y="227.0" width="76.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="439.4" y="238.0">rocksdb:..</text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.26%)</title><rect x="441.5" y="211.0" width="3.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="444.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.09%)</title><rect x="444.6" y="211.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="447.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (12 samples, 1.04%)</title><rect x="445.6" y="211.0" width="12.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="448.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (12 samples, 1.04%)</title><rect x="445.6" y="195.0" width="12.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="448.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (10 samples, 0.87%)</title><rect x="447.6" y="179.0" width="10.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="450.6" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="448.7" y="163.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="451.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="449.7" y="163.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="452.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (5 samples, 0.43%)</title><rect x="450.7" y="163.0" width="5.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="453.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (5 samples, 0.43%)</title><rect x="450.7" y="147.0" width="5.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="453.7" y="158.0"></text>
</g>
<g>
<title>__libc_write (5 samples, 0.43%)</title><rect x="450.7" y="131.0" width="5.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="453.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.17%)</title><rect x="455.8" y="163.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="458.8" y="174.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.09%)</title><rect x="455.8" y="147.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="458.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="456.8" y="147.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="459.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.09%)</title><rect x="457.9" y="211.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="460.9" y="222.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="457.9" y="195.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="460.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (1 samples, 0.09%)</title><rect x="458.9" y="211.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="461.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (12 samples, 1.04%)</title><rect x="459.9" y="211.0" width="12.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="462.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (11 samples, 0.95%)</title><rect x="459.9" y="195.0" width="11.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="462.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (11 samples, 0.95%)</title><rect x="459.9" y="179.0" width="11.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="462.9" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (10 samples, 0.87%)</title><rect x="460.9" y="163.0" width="10.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="463.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.09%)</title><rect x="460.9" y="147.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="463.9" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (9 samples, 0.78%)</title><rect x="462.0" y="147.0" width="9.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="465.0" y="158.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="464.0" y="131.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="467.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (5 samples, 0.43%)</title><rect x="465.0" y="131.0" width="5.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="468.0" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 0.43%)</title><rect x="465.0" y="115.0" width="5.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="468.0" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (4 samples, 0.35%)</title><rect x="466.0" y="99.0" width="4.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="469.0" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (3 samples, 0.26%)</title><rect x="467.1" y="83.0" width="3.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="470.1" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="467.1" y="67.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="470.1" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.17%)</title><rect x="468.1" y="67.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="471.1" y="78.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="469.1" y="51.0" width="1.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="472.1" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (1 samples, 0.09%)</title><rect x="470.1" y="131.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="473.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) [clone .plt] (1 samples, 0.09%)</title><rect x="471.2" y="195.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="474.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (10 samples, 0.87%)</title><rect x="472.2" y="211.0" width="10.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="475.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (10 samples, 0.87%)</title><rect x="472.2" y="195.0" width="10.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="475.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (10 samples, 0.87%)</title><rect x="472.2" y="179.0" width="10.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="475.2" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (10 samples, 0.87%)</title><rect x="472.2" y="163.0" width="10.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="475.2" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (10 samples, 0.87%)</title><rect x="472.2" y="147.0" width="10.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="475.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (9 samples, 0.78%)</title><rect x="473.2" y="131.0" width="9.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="476.2" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="473.2" y="115.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="476.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (8 samples, 0.69%)</title><rect x="474.2" y="115.0" width="8.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="477.2" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (8 samples, 0.69%)</title><rect x="474.2" y="99.0" width="8.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="477.2" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (6 samples, 0.52%)</title><rect x="475.3" y="83.0" width="6.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="478.3" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (2 samples, 0.17%)</title><rect x="479.3" y="67.0" width="2.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="482.3" y="78.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="479.3" y="51.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="482.3" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="480.4" y="51.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="483.4" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.09%)</title><rect x="481.4" y="83.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="484.4" y="94.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.09%)</title><rect x="481.4" y="67.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="484.4" y="78.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (22 samples, 1.91%)</title><rect x="482.4" y="211.0" width="22.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="485.4" y="222.0">r..</text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.17%)</title><rect x="502.9" y="195.0" width="2.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="505.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (4 samples, 0.35%)</title><rect x="504.9" y="211.0" width="4.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="507.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.26%)</title><rect x="505.9" y="195.0" width="3.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="508.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.09%)</title><rect x="509.0" y="211.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="512.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.09%)</title><rect x="510.0" y="211.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="513.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.09%)</title><rect x="510.0" y="195.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="513.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.09%)</title><rect x="511.0" y="211.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="514.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::AssertHeld() (1 samples, 0.09%)</title><rect x="512.1" y="211.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="515.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) [clone .plt] (1 samples, 0.09%)</title><rect x="513.1" y="227.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="516.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.09%)</title><rect x="514.1" y="227.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="517.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.35%)</title><rect x="515.1" y="243.0" width="4.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="518.1" y="254.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.09%)</title><rect x="516.2" y="227.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="519.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (1 samples, 0.09%)</title><rect x="517.2" y="227.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="520.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="518.2" y="227.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="521.2" y="238.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() [clone .plt] (1 samples, 0.09%)</title><rect x="518.2" y="211.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="521.2" y="222.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.09%)</title><rect x="519.2" y="243.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="522.2" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.09%)</title><rect x="520.2" y="259.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="523.2" y="270.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="521.3" y="259.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="524.3" y="270.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.26%)</title><rect x="522.3" y="323.0" width="3.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="525.3" y="334.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="522.3" y="307.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="525.3" y="318.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="522.3" y="291.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="525.3" y="302.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.09%)</title><rect x="522.3" y="275.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="525.3" y="286.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.09%)</title><rect x="522.3" y="259.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="525.3" y="270.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="523.3" y="307.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="526.3" y="318.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.09%)</title><rect x="524.3" y="307.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="527.3" y="318.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.09%)</title><rect x="525.4" y="323.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="528.4" y="334.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.09%)</title><rect x="526.4" y="323.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="529.4" y="334.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (2 samples, 0.17%)</title><rect x="527.4" y="323.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="530.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArraySpecial (3 samples, 0.26%)</title><rect x="529.4" y="355.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="532.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (2 samples, 0.17%)</title><rect x="530.5" y="339.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="532.5" y="403.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="535.5" y="414.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.09%)</title><rect x="533.5" y="403.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="536.5" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.09%)</title><rect x="533.5" y="387.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="536.5" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.09%)</title><rect x="533.5" y="371.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="536.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.35%)</title><rect x="534.6" y="435.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="537.6" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="534.6" y="419.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="537.6" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="534.6" y="403.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="537.6" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.17%)</title><rect x="536.6" y="419.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="539.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.17%)</title><rect x="538.6" y="435.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="541.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.17%)</title><rect x="538.6" y="419.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.17%)</title><rect x="538.6" y="403.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="541.6" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.35%)</title><rect x="540.7" y="435.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="543.7" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="542.7" y="419.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (9 samples, 0.78%)</title><rect x="544.8" y="451.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.8" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 0.78%)</title><rect x="544.8" y="435.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="547.8" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.43%)</title><rect x="545.8" y="419.0" width="5.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="548.8" y="430.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="546.8" y="403.0" width="1.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="549.8" y="414.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.26%)</title><rect x="547.9" y="403.0" width="3.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="550.9" y="414.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.09%)</title><rect x="547.9" y="387.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="550.9" y="398.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.17%)</title><rect x="548.9" y="387.0" width="2.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="551.9" y="398.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (2 samples, 0.17%)</title><rect x="548.9" y="371.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="551.9" y="382.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.26%)</title><rect x="550.9" y="419.0" width="3.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="553.9" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=15602] (127 samples, 11.01%)</title><rect x="554.0" y="515.0" width="129.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="557.0" y="526.0">[NIO Selector #3..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (127 samples, 11.01%)</title><rect x="554.0" y="499.0" width="129.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.0" y="510.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (21 samples, 1.82%)</title><rect x="556.0" y="483.0" width="21.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="559.0" y="494.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (20 samples, 1.73%)</title><rect x="557.1" y="467.0" width="20.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="560.1" y="478.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 0.35%)</title><rect x="560.1" y="451.0" width="4.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="563.1" y="462.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.09%)</title><rect x="564.2" y="451.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="567.2" y="462.0"></text>
</g>
<g>
<title>epoll_wait (12 samples, 1.04%)</title><rect x="565.2" y="451.0" width="12.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="568.2" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (104 samples, 9.01%)</title><rect x="577.5" y="483.0" width="106.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="580.5" y="494.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (104 samples, 9.01%)</title><rect x="577.5" y="467.0" width="106.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.5" y="478.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (97 samples, 8.41%)</title><rect x="577.5" y="451.0" width="99.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="580.5" y="462.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (89 samples, 7.71%)</title><rect x="577.5" y="435.0" width="91.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.5" y="446.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (89 samples, 7.71%)</title><rect x="577.5" y="419.0" width="91.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="580.5" y="430.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (89 samples, 7.71%)</title><rect x="577.5" y="403.0" width="91.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.5" y="414.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 0.61%)</title><rect x="577.5" y="387.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="580.5" y="398.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.17%)</title><rect x="578.5" y="371.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="581.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.17%)</title><rect x="578.5" y="355.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="581.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.17%)</title><rect x="578.5" y="339.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="581.5" y="350.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="578.5" y="323.0" width="2.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="581.5" y="334.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.17%)</title><rect x="578.5" y="307.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="581.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.35%)</title><rect x="580.6" y="371.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="583.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.17%)</title><rect x="580.6" y="355.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="583.6" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.17%)</title><rect x="582.6" y="355.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="585.6" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.17%)</title><rect x="582.6" y="339.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="585.6" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.17%)</title><rect x="582.6" y="323.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.6" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.17%)</title><rect x="582.6" y="307.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="585.6" y="318.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.17%)</title><rect x="582.6" y="291.0" width="2.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="585.6" y="302.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.17%)</title><rect x="582.6" y="275.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="585.6" y="286.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.09%)</title><rect x="582.6" y="259.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="585.6" y="270.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.09%)</title><rect x="583.6" y="259.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="586.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.put (82 samples, 7.11%)</title><rect x="584.7" y="387.0" width="83.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="587.7" y="398.0">ru/mail/p..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="585.7" y="371.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="588.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (78 samples, 6.76%)</title><rect x="586.7" y="371.0" width="79.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="589.7" y="382.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (78 samples, 6.76%)</title><rect x="586.7" y="355.0" width="79.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="589.7" y="366.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (78 samples, 6.76%)</title><rect x="586.7" y="339.0" width="79.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="589.7" y="350.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (76 samples, 6.59%)</title><rect x="587.7" y="323.0" width="77.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="590.7" y="334.0">Java_org_..</text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (1 samples, 0.09%)</title><rect x="589.8" y="307.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="592.8" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (73 samples, 6.33%)</title><rect x="590.8" y="307.0" width="74.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="593.8" y="318.0">rocksdb_..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.09%)</title><rect x="590.8" y="291.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="593.8" y="302.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.09%)</title><rect x="590.8" y="275.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="593.8" y="286.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (71 samples, 6.15%)</title><rect x="591.8" y="291.0" width="72.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="594.8" y="302.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="591.8" y="275.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="594.8" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (70 samples, 6.07%)</title><rect x="592.8" y="275.0" width="71.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="595.8" y="286.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (69 samples, 5.98%)</title><rect x="592.8" y="259.0" width="70.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="595.8" y="270.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.09%)</title><rect x="592.8" y="243.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="595.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (66 samples, 5.72%)</title><rect x="593.9" y="243.0" width="67.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="596.9" y="254.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.09%)</title><rect x="593.9" y="227.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="596.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (64 samples, 5.55%)</title><rect x="594.9" y="227.0" width="65.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="597.9" y="238.0">rocksdb..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.09%)</title><rect x="599.0" y="211.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="602.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.09%)</title><rect x="600.0" y="211.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="603.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (12 samples, 1.04%)</title><rect x="601.0" y="211.0" width="12.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="604.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (11 samples, 0.95%)</title><rect x="602.0" y="195.0" width="11.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="605.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (10 samples, 0.87%)</title><rect x="603.1" y="179.0" width="10.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="606.1" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (4 samples, 0.35%)</title><rect x="603.1" y="163.0" width="4.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="606.1" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (3 samples, 0.26%)</title><rect x="604.1" y="147.0" width="3.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="607.1" y="158.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.09%)</title><rect x="605.1" y="131.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="608.1" y="142.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="606.1" y="131.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="609.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (1 samples, 0.09%)</title><rect x="607.2" y="163.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="610.2" y="174.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (5 samples, 0.43%)</title><rect x="608.2" y="163.0" width="5.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="611.2" y="174.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="609.2" y="147.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="612.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (3 samples, 0.26%)</title><rect x="610.2" y="147.0" width="3.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="613.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.09%)</title><rect x="613.3" y="211.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="616.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (16 samples, 1.39%)</title><rect x="614.3" y="211.0" width="16.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="617.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (16 samples, 1.39%)</title><rect x="614.3" y="195.0" width="16.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="617.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.09%)</title><rect x="614.3" y="179.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="617.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (15 samples, 1.30%)</title><rect x="615.3" y="179.0" width="15.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="618.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (14 samples, 1.21%)</title><rect x="615.3" y="163.0" width="14.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="618.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (14 samples, 1.21%)</title><rect x="615.3" y="147.0" width="14.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="618.3" y="158.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="615.3" y="131.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="618.3" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (13 samples, 1.13%)</title><rect x="616.4" y="131.0" width="13.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="619.4" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (8 samples, 0.69%)</title><rect x="619.4" y="115.0" width="8.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="622.4" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (6 samples, 0.52%)</title><rect x="619.4" y="99.0" width="6.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="622.4" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.09%)</title><rect x="625.6" y="99.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="628.6" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="626.6" y="99.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="629.6" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.09%)</title><rect x="627.6" y="115.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="630.6" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.09%)</title><rect x="628.6" y="115.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="631.6" y="126.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.09%)</title><rect x="629.7" y="163.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="632.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (7 samples, 0.61%)</title><rect x="630.7" y="211.0" width="7.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="633.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (7 samples, 0.61%)</title><rect x="630.7" y="195.0" width="7.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="633.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="630.7" y="179.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="633.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (6 samples, 0.52%)</title><rect x="631.7" y="179.0" width="6.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="634.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.52%)</title><rect x="631.7" y="163.0" width="6.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="634.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (6 samples, 0.52%)</title><rect x="631.7" y="147.0" width="6.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="634.7" y="158.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="633.7" y="131.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="636.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.17%)</title><rect x="634.8" y="131.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="637.8" y="142.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.09%)</title><rect x="634.8" y="115.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="637.8" y="126.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.09%)</title><rect x="635.8" y="115.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="638.8" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.09%)</title><rect x="635.8" y="99.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="638.8" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="635.8" y="83.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="638.8" y="94.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.09%)</title><rect x="636.8" y="131.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="639.8" y="142.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (13 samples, 1.13%)</title><rect x="637.8" y="211.0" width="13.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="640.8" y="222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="650.1" y="195.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="653.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.09%)</title><rect x="651.1" y="211.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="654.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (4 samples, 0.35%)</title><rect x="652.1" y="211.0" width="4.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="655.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (4 samples, 0.35%)</title><rect x="652.1" y="195.0" width="4.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="655.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.09%)</title><rect x="656.2" y="211.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="659.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.09%)</title><rect x="657.3" y="211.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="660.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.09%)</title><rect x="658.3" y="211.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="661.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() [clone .plt] (1 samples, 0.09%)</title><rect x="659.3" y="211.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="662.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.09%)</title><rect x="660.3" y="227.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="663.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.09%)</title><rect x="661.4" y="243.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="664.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="662.4" y="243.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="665.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) [clone .plt] (1 samples, 0.09%)</title><rect x="663.4" y="259.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="666.4" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="664.4" y="291.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="667.4" y="302.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="665.4" y="323.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="668.4" y="334.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.09%)</title><rect x="665.4" y="307.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="668.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (2 samples, 0.17%)</title><rect x="666.5" y="371.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="669.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (2 samples, 0.17%)</title><rect x="666.5" y="355.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="669.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.35%)</title><rect x="668.5" y="435.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.17%)</title><rect x="668.5" y="419.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="671.5" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.17%)</title><rect x="668.5" y="403.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="671.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.17%)</title><rect x="668.5" y="387.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="671.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.17%)</title><rect x="668.5" y="371.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="671.5" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="669.5" y="355.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="670.6" y="419.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="673.6" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="670.6" y="403.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="673.6" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.09%)</title><rect x="671.6" y="419.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="674.6" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.35%)</title><rect x="672.6" y="435.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="675.6" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="675.7" y="419.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="678.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 0.61%)</title><rect x="676.7" y="451.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 0.61%)</title><rect x="676.7" y="435.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.7" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.35%)</title><rect x="676.7" y="419.0" width="4.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="679.7" y="430.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.09%)</title><rect x="677.7" y="403.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="680.7" y="414.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.09%)</title><rect x="678.7" y="403.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="681.7" y="414.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="679.8" y="403.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="682.8" y="414.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.09%)</title><rect x="680.8" y="419.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="683.8" y="430.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.17%)</title><rect x="681.8" y="419.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="684.8" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=15603] (82 samples, 7.11%)</title><rect x="683.8" y="515.0" width="83.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="686.8" y="526.0">[NIO Sele..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (82 samples, 7.11%)</title><rect x="683.8" y="499.0" width="83.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.8" y="510.0">one/nio/s..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.09%)</title><rect x="683.8" y="483.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="686.8" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.09%)</title><rect x="684.9" y="483.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="687.9" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 0.87%)</title><rect x="685.9" y="483.0" width="10.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="688.9" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 0.52%)</title><rect x="690.0" y="467.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.0" y="478.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.09%)</title><rect x="691.0" y="451.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="694.0" y="462.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.09%)</title><rect x="691.0" y="435.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="694.0" y="446.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.35%)</title><rect x="692.0" y="451.0" width="4.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="695.0" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (70 samples, 6.07%)</title><rect x="696.1" y="483.0" width="71.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.1" y="494.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (70 samples, 6.07%)</title><rect x="696.1" y="467.0" width="71.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.1" y="478.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (64 samples, 5.55%)</title><rect x="696.1" y="451.0" width="65.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.1" y="462.0">one/nio..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (1 samples, 0.09%)</title><rect x="696.1" y="435.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="699.1" y="446.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.17%)</title><rect x="697.1" y="435.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (61 samples, 5.29%)</title><rect x="699.2" y="435.0" width="62.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.2" y="446.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (61 samples, 5.29%)</title><rect x="699.2" y="419.0" width="62.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="702.2" y="430.0">one/ni..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (61 samples, 5.29%)</title><rect x="699.2" y="403.0" width="62.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.2" y="414.0">Reques..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.52%)</title><rect x="699.2" y="387.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="702.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.52%)</title><rect x="699.2" y="371.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="702.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.09%)</title><rect x="699.2" y="355.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="702.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.09%)</title><rect x="699.2" y="339.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="702.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="699.2" y="323.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.2" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="699.2" y="307.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.2" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="699.2" y="291.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.2" y="302.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.09%)</title><rect x="699.2" y="275.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="702.2" y="286.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="699.2" y="259.0" width="1.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="702.2" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.43%)</title><rect x="700.2" y="355.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="703.2" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.43%)</title><rect x="700.2" y="339.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="703.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.09%)</title><rect x="701.2" y="323.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.2" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.26%)</title><rect x="702.3" y="323.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="705.3" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.26%)</title><rect x="702.3" y="307.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="705.3" y="318.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.17%)</title><rect x="702.3" y="291.0" width="2.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="705.3" y="302.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.09%)</title><rect x="703.3" y="275.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="706.3" y="286.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.09%)</title><rect x="704.3" y="291.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="707.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.put (55 samples, 4.77%)</title><rect x="705.3" y="387.0" width="56.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="708.3" y="398.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (54 samples, 4.68%)</title><rect x="705.3" y="371.0" width="55.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="708.3" y="382.0">ru/ma..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (54 samples, 4.68%)</title><rect x="705.3" y="355.0" width="55.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="708.3" y="366.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (54 samples, 4.68%)</title><rect x="705.3" y="339.0" width="55.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.3" y="350.0">org/r..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (53 samples, 4.59%)</title><rect x="705.3" y="323.0" width="54.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="708.3" y="334.0">Java_..</text>
</g>
<g>
<title>malloc (1 samples, 0.09%)</title><rect x="705.3" y="307.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="708.3" y="318.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.09%)</title><rect x="706.3" y="307.0" width="1.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="709.3" y="318.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="707.4" y="307.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="710.4" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (50 samples, 4.33%)</title><rect x="708.4" y="307.0" width="51.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="711.4" y="318.0">rocks..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.09%)</title><rect x="708.4" y="291.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="711.4" y="302.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.09%)</title><rect x="708.4" y="275.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="711.4" y="286.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (49 samples, 4.25%)</title><rect x="709.4" y="291.0" width="50.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="712.4" y="302.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (48 samples, 4.16%)</title><rect x="710.4" y="275.0" width="49.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="713.4" y="286.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (47 samples, 4.07%)</title><rect x="710.4" y="259.0" width="48.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="713.4" y="270.0">rock..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.09%)</title><rect x="710.4" y="243.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="713.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (42 samples, 3.64%)</title><rect x="711.5" y="243.0" width="42.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="714.5" y="254.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (41 samples, 3.55%)</title><rect x="711.5" y="227.0" width="41.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="714.5" y="238.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (7 samples, 0.61%)</title><rect x="715.5" y="211.0" width="7.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="718.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (7 samples, 0.61%)</title><rect x="715.5" y="195.0" width="7.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="718.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.09%)</title><rect x="715.5" y="179.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="718.5" y="190.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (6 samples, 0.52%)</title><rect x="716.6" y="179.0" width="6.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="719.6" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (2 samples, 0.17%)</title><rect x="717.6" y="163.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="720.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.17%)</title><rect x="719.6" y="163.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="722.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.09%)</title><rect x="720.7" y="147.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="723.7" y="158.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.09%)</title><rect x="720.7" y="131.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="723.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.09%)</title><rect x="721.7" y="163.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="724.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="721.7" y="147.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="724.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (8 samples, 0.69%)</title><rect x="722.7" y="211.0" width="8.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="725.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (7 samples, 0.61%)</title><rect x="723.7" y="195.0" width="7.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="726.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (7 samples, 0.61%)</title><rect x="723.7" y="179.0" width="7.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="726.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 0.61%)</title><rect x="723.7" y="163.0" width="7.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="726.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (7 samples, 0.61%)</title><rect x="723.7" y="147.0" width="7.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="726.7" y="158.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.09%)</title><rect x="723.7" y="131.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="726.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (6 samples, 0.52%)</title><rect x="724.7" y="131.0" width="6.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="727.7" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (6 samples, 0.52%)</title><rect x="724.7" y="115.0" width="6.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="727.7" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (5 samples, 0.43%)</title><rect x="725.8" y="99.0" width="5.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="728.8" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (4 samples, 0.35%)</title><rect x="726.8" y="83.0" width="4.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="729.8" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.17%)</title><rect x="728.8" y="67.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="731.8" y="78.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (3 samples, 0.26%)</title><rect x="730.9" y="211.0" width="3.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="733.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.26%)</title><rect x="730.9" y="195.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="733.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.26%)</title><rect x="730.9" y="179.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="733.9" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.26%)</title><rect x="730.9" y="163.0" width="3.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="733.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.26%)</title><rect x="730.9" y="147.0" width="3.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="733.9" y="158.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.09%)</title><rect x="730.9" y="131.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="733.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.17%)</title><rect x="731.9" y="131.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="734.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.09%)</title><rect x="732.9" y="115.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="735.9" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.09%)</title><rect x="732.9" y="99.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="735.9" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="732.9" y="83.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="735.9" y="94.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.09%)</title><rect x="734.0" y="211.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="737.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (13 samples, 1.13%)</title><rect x="735.0" y="211.0" width="13.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="738.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (3 samples, 0.26%)</title><rect x="748.3" y="211.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="751.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.26%)</title><rect x="748.3" y="195.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="751.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.09%)</title><rect x="751.3" y="211.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="754.3" y="222.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;*) (1 samples, 0.09%)</title><rect x="752.4" y="211.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="755.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) [clone .plt] (1 samples, 0.09%)</title><rect x="753.4" y="227.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="756.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.35%)</title><rect x="754.4" y="243.0" width="4.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="757.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.09%)</title><rect x="754.4" y="227.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="757.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (1 samples, 0.09%)</title><rect x="755.4" y="227.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="758.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (1 samples, 0.09%)</title><rect x="756.4" y="227.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="759.4" y="238.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) [clone .plt] (1 samples, 0.09%)</title><rect x="757.5" y="227.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="760.5" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.09%)</title><rect x="758.5" y="259.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="761.5" y="270.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.09%)</title><rect x="759.5" y="323.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="762.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (1 samples, 0.09%)</title><rect x="760.5" y="371.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.09%)</title><rect x="760.5" y="355.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="763.5" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 0.52%)</title><rect x="761.6" y="451.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 0.52%)</title><rect x="761.6" y="435.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="764.6" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.35%)</title><rect x="762.6" y="419.0" width="4.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="765.6" y="430.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.09%)</title><rect x="762.6" y="403.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="765.6" y="414.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.09%)</title><rect x="763.6" y="403.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="766.6" y="414.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="764.6" y="403.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="767.6" y="414.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="765.6" y="403.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="768.6" y="414.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.09%)</title><rect x="765.6" y="387.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="768.6" y="398.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.09%)</title><rect x="766.7" y="419.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="769.7" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=15604] (145 samples, 12.56%)</title><rect x="767.7" y="515.0" width="148.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="770.7" y="526.0">[NIO Selector #5 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (145 samples, 12.56%)</title><rect x="767.7" y="499.0" width="148.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="770.7" y="510.0">one/nio/server/Sele..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.09%)</title><rect x="773.8" y="483.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="776.8" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.09%)</title><rect x="774.9" y="483.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="777.9" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.09%)</title><rect x="774.9" y="467.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="777.9" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (17 samples, 1.47%)</title><rect x="775.9" y="483.0" width="17.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="778.9" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (16 samples, 1.39%)</title><rect x="776.9" y="467.0" width="16.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.9" y="478.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.09%)</title><rect x="780.0" y="451.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="783.0" y="462.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.09%)</title><rect x="780.0" y="435.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="783.0" y="446.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.09%)</title><rect x="781.0" y="451.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="784.0" y="462.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.09%)</title><rect x="782.0" y="451.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="785.0" y="462.0"></text>
</g>
<g>
<title>epoll_wait (10 samples, 0.87%)</title><rect x="783.0" y="451.0" width="10.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="786.0" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (120 samples, 10.40%)</title><rect x="793.3" y="483.0" width="122.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.3" y="494.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (120 samples, 10.40%)</title><rect x="793.3" y="467.0" width="122.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.3" y="478.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (109 samples, 9.45%)</title><rect x="793.3" y="451.0" width="111.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="796.3" y="462.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (104 samples, 9.01%)</title><rect x="794.3" y="435.0" width="106.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.3" y="446.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (104 samples, 9.01%)</title><rect x="794.3" y="419.0" width="106.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="797.3" y="430.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (101 samples, 8.75%)</title><rect x="796.3" y="403.0" width="103.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="799.3" y="414.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8 samples, 0.69%)</title><rect x="796.3" y="387.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="799.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 0.61%)</title><rect x="797.3" y="371.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="800.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.17%)</title><rect x="797.3" y="355.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="800.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.09%)</title><rect x="798.4" y="339.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="801.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="798.4" y="323.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="801.4" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="798.4" y="307.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.4" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="798.4" y="291.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="801.4" y="302.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.09%)</title><rect x="798.4" y="275.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="801.4" y="286.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="798.4" y="259.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="801.4" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.43%)</title><rect x="799.4" y="355.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.4" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.43%)</title><rect x="799.4" y="339.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="802.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.09%)</title><rect x="799.4" y="323.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="802.4" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.35%)</title><rect x="800.4" y="323.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="803.4" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.35%)</title><rect x="800.4" y="307.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="803.4" y="318.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.09%)</title><rect x="800.4" y="291.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="803.4" y="302.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.09%)</title><rect x="800.4" y="275.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="803.4" y="286.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.17%)</title><rect x="801.4" y="291.0" width="2.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="804.4" y="302.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.09%)</title><rect x="803.5" y="291.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="806.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.09%)</title><rect x="804.5" y="387.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="807.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.09%)</title><rect x="804.5" y="371.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="807.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="804.5" y="355.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="807.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.09%)</title><rect x="804.5" y="339.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="807.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.put (92 samples, 7.97%)</title><rect x="805.5" y="387.0" width="94.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="808.5" y="398.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (1 samples, 0.09%)</title><rect x="805.5" y="371.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="808.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="805.5" y="355.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="808.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="805.5" y="339.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="808.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.09%)</title><rect x="805.5" y="323.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (90 samples, 7.80%)</title><rect x="806.6" y="371.0" width="92.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.6" y="382.0">ru/mail/pol..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (89 samples, 7.71%)</title><rect x="806.6" y="355.0" width="91.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.6" y="366.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (89 samples, 7.71%)</title><rect x="806.6" y="339.0" width="91.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.6" y="350.0">org/rocksdb..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (85 samples, 7.37%)</title><rect x="806.6" y="323.0" width="86.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="809.6" y="334.0">Java_org_r..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.09%)</title><rect x="807.6" y="307.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="810.6" y="318.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.09%)</title><rect x="808.6" y="307.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="811.6" y="318.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.09%)</title><rect x="809.6" y="307.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="812.6" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (81 samples, 7.02%)</title><rect x="810.6" y="307.0" width="82.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="813.6" y="318.0">rocksdb_p..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.09%)</title><rect x="810.6" y="291.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="813.6" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (80 samples, 6.93%)</title><rect x="811.7" y="291.0" width="81.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="814.7" y="302.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (80 samples, 6.93%)</title><rect x="811.7" y="275.0" width="81.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="814.7" y="286.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (79 samples, 6.85%)</title><rect x="811.7" y="259.0" width="80.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="814.7" y="270.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (76 samples, 6.59%)</title><rect x="811.7" y="243.0" width="77.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="814.7" y="254.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.09%)</title><rect x="811.7" y="227.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="814.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (75 samples, 6.50%)</title><rect x="812.7" y="227.0" width="76.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="815.7" y="238.0">rocksdb:..</text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="814.7" y="211.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="817.7" y="222.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="815.8" y="211.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="818.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.09%)</title><rect x="816.8" y="211.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="819.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.09%)</title><rect x="817.8" y="211.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="820.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (13 samples, 1.13%)</title><rect x="818.8" y="211.0" width="13.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="821.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (12 samples, 1.04%)</title><rect x="819.8" y="195.0" width="12.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="822.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (12 samples, 1.04%)</title><rect x="819.8" y="179.0" width="12.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="822.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.09%)</title><rect x="819.8" y="163.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="822.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (9 samples, 0.78%)</title><rect x="820.9" y="163.0" width="9.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="823.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (1 samples, 0.09%)</title><rect x="820.9" y="147.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="823.9" y="158.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.09%)</title><rect x="821.9" y="147.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="824.9" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (7 samples, 0.61%)</title><rect x="822.9" y="147.0" width="7.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="825.9" y="158.0"></text>
</g>
<g>
<title>__libc_write (5 samples, 0.43%)</title><rect x="823.9" y="131.0" width="5.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="826.9" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.09%)</title><rect x="829.0" y="131.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="832.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.17%)</title><rect x="830.1" y="163.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="833.1" y="174.0"></text>
</g>
<g>
<title>memcpy@plt (1 samples, 0.09%)</title><rect x="830.1" y="147.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="833.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.09%)</title><rect x="831.1" y="147.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="834.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (2 samples, 0.17%)</title><rect x="832.1" y="211.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="835.1" y="222.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="833.1" y="195.0" width="1.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="836.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() [clone .plt] (1 samples, 0.09%)</title><rect x="834.2" y="211.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="837.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (1 samples, 0.09%)</title><rect x="835.2" y="211.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="838.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.09%)</title><rect x="836.2" y="211.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="839.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (16 samples, 1.39%)</title><rect x="837.2" y="211.0" width="16.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="840.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (16 samples, 1.39%)</title><rect x="837.2" y="195.0" width="16.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="840.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="837.2" y="179.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="840.2" y="190.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.09%)</title><rect x="838.2" y="179.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="841.2" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (14 samples, 1.21%)</title><rect x="839.3" y="179.0" width="14.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="842.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 1.13%)</title><rect x="840.3" y="163.0" width="13.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="843.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (2 samples, 0.17%)</title><rect x="840.3" y="147.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="843.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (11 samples, 0.95%)</title><rect x="842.3" y="147.0" width="11.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="845.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (9 samples, 0.78%)</title><rect x="842.3" y="131.0" width="9.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="845.3" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (2 samples, 0.17%)</title><rect x="842.3" y="115.0" width="2.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="845.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.17%)</title><rect x="842.3" y="99.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="845.3" y="110.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (7 samples, 0.61%)</title><rect x="844.4" y="115.0" width="7.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="847.4" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (7 samples, 0.61%)</title><rect x="844.4" y="99.0" width="7.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="847.4" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (4 samples, 0.35%)</title><rect x="847.5" y="83.0" width="4.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="850.5" y="94.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="848.5" y="67.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="851.5" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.17%)</title><rect x="849.5" y="67.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="852.5" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.09%)</title><rect x="851.5" y="131.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="854.5" y="142.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.09%)</title><rect x="852.6" y="131.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="855.6" y="142.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (10 samples, 0.87%)</title><rect x="853.6" y="211.0" width="10.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="856.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.09%)</title><rect x="853.6" y="195.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="856.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 0.78%)</title><rect x="854.6" y="195.0" width="9.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="857.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.09%)</title><rect x="854.6" y="179.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="857.6" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (8 samples, 0.69%)</title><rect x="855.6" y="179.0" width="8.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="858.6" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.69%)</title><rect x="855.6" y="163.0" width="8.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="858.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (1 samples, 0.09%)</title><rect x="855.6" y="147.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="858.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (7 samples, 0.61%)</title><rect x="856.7" y="147.0" width="7.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="859.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (6 samples, 0.52%)</title><rect x="857.7" y="131.0" width="6.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="860.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (6 samples, 0.52%)</title><rect x="857.7" y="115.0" width="6.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="860.7" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (6 samples, 0.52%)</title><rect x="857.7" y="99.0" width="6.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="860.7" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (6 samples, 0.52%)</title><rect x="857.7" y="83.0" width="6.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="860.7" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="862.8" y="67.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="865.8" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="862.8" y="51.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="865.8" y="62.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="862.8" y="35.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="865.8" y="46.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (23 samples, 1.99%)</title><rect x="863.8" y="211.0" width="23.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="866.8" y="222.0">r..</text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.09%)</title><rect x="887.3" y="211.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="890.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.09%)</title><rect x="887.3" y="195.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="890.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.09%)</title><rect x="888.4" y="211.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="891.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.09%)</title><rect x="888.4" y="195.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="891.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.17%)</title><rect x="889.4" y="243.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="892.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="889.4" y="227.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="892.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (1 samples, 0.09%)</title><rect x="890.4" y="227.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="893.4" y="238.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.09%)</title><rect x="891.4" y="243.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="894.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.09%)</title><rect x="892.4" y="259.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="895.4" y="270.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.26%)</title><rect x="893.5" y="323.0" width="3.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="896.5" y="334.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.17%)</title><rect x="893.5" y="307.0" width="2.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="896.5" y="318.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.09%)</title><rect x="895.5" y="307.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="898.5" y="318.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.09%)</title><rect x="895.5" y="291.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="898.5" y="302.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.09%)</title><rect x="896.5" y="323.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="899.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArraySpecial (1 samples, 0.09%)</title><rect x="897.6" y="355.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="900.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (1 samples, 0.09%)</title><rect x="898.6" y="371.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.09%)</title><rect x="898.6" y="355.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="901.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.09%)</title><rect x="899.6" y="403.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.6" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.35%)</title><rect x="900.6" y="435.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="903.6" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.26%)</title><rect x="901.6" y="419.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="904.6" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 0.95%)</title><rect x="904.7" y="451.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 0.78%)</title><rect x="906.8" y="435.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="909.8" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.35%)</title><rect x="907.8" y="419.0" width="4.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="910.8" y="430.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.09%)</title><rect x="908.8" y="403.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="911.8" y="414.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.09%)</title><rect x="909.8" y="403.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="912.8" y="414.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="910.8" y="403.0" width="1.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="913.8" y="414.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.17%)</title><rect x="911.9" y="419.0" width="2.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="914.9" y="430.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.17%)</title><rect x="913.9" y="419.0" width="2.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="916.9" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=15605] (123 samples, 10.66%)</title><rect x="916.0" y="515.0" width="125.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="919.0" y="526.0">[NIO Selector #..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (123 samples, 10.66%)</title><rect x="916.0" y="499.0" width="125.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="919.0" y="510.0">one/nio/server/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 0.87%)</title><rect x="916.0" y="483.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.0" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (10 samples, 0.87%)</title><rect x="916.0" y="467.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="919.0" y="478.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.09%)</title><rect x="916.0" y="451.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="919.0" y="462.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.09%)</title><rect x="917.0" y="451.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="920.0" y="462.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.09%)</title><rect x="918.0" y="451.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="921.0" y="462.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.61%)</title><rect x="919.0" y="451.0" width="7.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="922.0" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (113 samples, 9.79%)</title><rect x="926.2" y="483.0" width="115.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="929.2" y="494.0">one/nio/net/Se..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="926.2" y="467.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="929.2" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="926.2" y="451.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="929.2" y="462.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="926.2" y="435.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="929.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (111 samples, 9.62%)</title><rect x="927.2" y="467.0" width="113.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.2" y="478.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (104 samples, 9.01%)</title><rect x="927.2" y="451.0" width="106.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="930.2" y="462.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (95 samples, 8.23%)</title><rect x="927.2" y="435.0" width="97.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="930.2" y="446.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (95 samples, 8.23%)</title><rect x="927.2" y="419.0" width="97.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="930.2" y="430.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (93 samples, 8.06%)</title><rect x="928.2" y="403.0" width="95.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="931.2" y="414.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.87%)</title><rect x="929.3" y="387.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="932.3" y="398.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.09%)</title><rect x="929.3" y="371.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="932.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.09%)</title><rect x="929.3" y="355.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="932.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="929.3" y="339.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="932.3" y="350.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="929.3" y="323.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="932.3" y="334.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="929.3" y="307.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="932.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 0.69%)</title><rect x="930.3" y="371.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.17%)</title><rect x="930.3" y="355.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.52%)</title><rect x="932.3" y="355.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="935.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.52%)</title><rect x="932.3" y="339.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="935.3" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 0.52%)</title><rect x="932.3" y="323.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="935.3" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (6 samples, 0.52%)</title><rect x="932.3" y="307.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="935.3" y="318.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.17%)</title><rect x="932.3" y="291.0" width="2.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="935.3" y="302.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="932.3" y="275.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="935.3" y="286.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.09%)</title><rect x="933.3" y="275.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="936.3" y="286.0"></text>
</g>
<g>
<title>__libc_send (4 samples, 0.35%)</title><rect x="934.4" y="291.0" width="4.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="937.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="938.5" y="371.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="941.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.put (82 samples, 7.11%)</title><rect x="939.5" y="387.0" width="83.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="942.5" y="398.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (81 samples, 7.02%)</title><rect x="939.5" y="371.0" width="82.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="942.5" y="382.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (78 samples, 6.76%)</title><rect x="939.5" y="355.0" width="79.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="942.5" y="366.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (78 samples, 6.76%)</title><rect x="939.5" y="339.0" width="79.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="942.5" y="350.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (74 samples, 6.41%)</title><rect x="941.5" y="323.0" width="75.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="944.5" y="334.0">Java_org..</text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.09%)</title><rect x="942.5" y="307.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="945.5" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (72 samples, 6.24%)</title><rect x="943.6" y="307.0" width="73.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="946.6" y="318.0">rocksdb_..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (72 samples, 6.24%)</title><rect x="943.6" y="291.0" width="73.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="946.6" y="302.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.09%)</title><rect x="943.6" y="275.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="946.6" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (71 samples, 6.15%)</title><rect x="944.6" y="275.0" width="72.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="947.6" y="286.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (70 samples, 6.07%)</title><rect x="944.6" y="259.0" width="71.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="947.6" y="270.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (62 samples, 5.37%)</title><rect x="944.6" y="243.0" width="63.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="947.6" y="254.0">rocksdb..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.09%)</title><rect x="944.6" y="227.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="947.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (58 samples, 5.03%)</title><rect x="945.6" y="227.0" width="59.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="948.6" y="238.0">rocksd..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.09%)</title><rect x="949.7" y="211.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="952.7" y="222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="950.7" y="211.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="953.7" y="222.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="951.8" y="211.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="954.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.09%)</title><rect x="952.8" y="211.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="955.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (8 samples, 0.69%)</title><rect x="953.8" y="211.0" width="8.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="956.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (6 samples, 0.52%)</title><rect x="954.8" y="195.0" width="6.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="957.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (6 samples, 0.52%)</title><rect x="954.8" y="179.0" width="6.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="957.8" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="954.8" y="163.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="957.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (3 samples, 0.26%)</title><rect x="955.8" y="163.0" width="3.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="958.8" y="174.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="955.8" y="147.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="958.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.17%)</title><rect x="956.9" y="147.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="959.9" y="158.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.17%)</title><rect x="956.9" y="131.0" width="2.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="959.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.17%)</title><rect x="958.9" y="163.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="961.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.09%)</title><rect x="958.9" y="147.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="961.9" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="959.9" y="147.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="962.9" y="158.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.09%)</title><rect x="961.0" y="195.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="964.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (1 samples, 0.09%)</title><rect x="962.0" y="211.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="965.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (14 samples, 1.21%)</title><rect x="963.0" y="211.0" width="14.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="966.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (14 samples, 1.21%)</title><rect x="963.0" y="195.0" width="14.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="966.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (14 samples, 1.21%)</title><rect x="963.0" y="179.0" width="14.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="966.0" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 1.13%)</title><rect x="964.0" y="163.0" width="13.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="967.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (2 samples, 0.17%)</title><rect x="964.0" y="147.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="967.0" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (11 samples, 0.95%)</title><rect x="966.1" y="147.0" width="11.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="969.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (11 samples, 0.95%)</title><rect x="966.1" y="131.0" width="11.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="969.1" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="966.1" y="115.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="969.1" y="126.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.09%)</title><rect x="966.1" y="99.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="969.1" y="110.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (9 samples, 0.78%)</title><rect x="967.1" y="115.0" width="9.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="970.1" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (5 samples, 0.43%)</title><rect x="969.1" y="99.0" width="5.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="972.1" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (3 samples, 0.26%)</title><rect x="971.2" y="83.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="974.2" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.26%)</title><rect x="971.2" y="67.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="974.2" y="78.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="972.2" y="51.0" width="1.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="975.2" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.09%)</title><rect x="973.2" y="51.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="976.2" y="62.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.17%)</title><rect x="974.2" y="99.0" width="2.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="977.2" y="110.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.09%)</title><rect x="976.3" y="115.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="979.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (5 samples, 0.43%)</title><rect x="977.3" y="211.0" width="5.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="980.3" y="222.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.09%)</title><rect x="977.3" y="195.0" width="1.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="980.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 0.35%)</title><rect x="978.3" y="195.0" width="4.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="981.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (4 samples, 0.35%)</title><rect x="978.3" y="179.0" width="4.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="981.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.35%)</title><rect x="978.3" y="163.0" width="4.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="981.3" y="174.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.09%)</title><rect x="978.3" y="147.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="981.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.26%)</title><rect x="979.4" y="147.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="982.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (3 samples, 0.26%)</title><rect x="979.4" y="131.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="982.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (3 samples, 0.26%)</title><rect x="979.4" y="115.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="982.4" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.26%)</title><rect x="979.4" y="99.0" width="3.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="982.4" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (3 samples, 0.26%)</title><rect x="979.4" y="83.0" width="3.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="982.4" y="94.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (19 samples, 1.65%)</title><rect x="982.4" y="211.0" width="19.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="985.4" y="222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="1000.8" y="195.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1003.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.09%)</title><rect x="1001.9" y="211.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1004.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.09%)</title><rect x="1001.9" y="195.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1004.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.09%)</title><rect x="1002.9" y="211.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1005.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.09%)</title><rect x="1002.9" y="195.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1005.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.09%)</title><rect x="1003.9" y="211.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1006.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.09%)</title><rect x="1004.9" y="227.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1007.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (1 samples, 0.09%)</title><rect x="1005.9" y="227.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1008.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.09%)</title><rect x="1007.0" y="227.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1010.0" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.09%)</title><rect x="1008.0" y="243.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1011.0" y="254.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.09%)</title><rect x="1009.0" y="243.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1012.0" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="1010.0" y="243.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1013.0" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (1 samples, 0.09%)</title><rect x="1010.0" y="227.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1013.0" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.09%)</title><rect x="1011.1" y="243.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1014.1" y="254.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.09%)</title><rect x="1012.1" y="243.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1015.1" y="254.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.09%)</title><rect x="1013.1" y="243.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1016.1" y="254.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.09%)</title><rect x="1014.1" y="243.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1017.1" y="254.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (1 samples, 0.09%)</title><rect x="1015.1" y="243.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1018.1" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.09%)</title><rect x="1016.2" y="259.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1019.2" y="270.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.09%)</title><rect x="1017.2" y="323.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1020.2" y="334.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) [clone .plt] (1 samples, 0.09%)</title><rect x="1018.2" y="323.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1021.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArraySpecial (3 samples, 0.26%)</title><rect x="1019.2" y="355.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1022.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (2 samples, 0.17%)</title><rect x="1020.3" y="339.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1023.3" y="350.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1 samples, 0.09%)</title><rect x="1021.3" y="323.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1024.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (1 samples, 0.09%)</title><rect x="1022.3" y="371.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1025.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.09%)</title><rect x="1022.3" y="355.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1025.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.09%)</title><rect x="1023.3" y="403.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1026.3" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="1023.3" y="387.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1026.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="1023.3" y="371.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1026.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.26%)</title><rect x="1024.4" y="435.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1027.4" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="1024.4" y="419.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1027.4" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="1025.4" y="403.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1028.4" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.09%)</title><rect x="1026.4" y="419.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1029.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.17%)</title><rect x="1027.4" y="435.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1030.4" y="446.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.17%)</title><rect x="1027.4" y="419.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1030.4" y="430.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.17%)</title><rect x="1027.4" y="403.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1030.4" y="414.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.17%)</title><rect x="1027.4" y="387.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1030.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.17%)</title><rect x="1027.4" y="371.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1030.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.35%)</title><rect x="1029.5" y="435.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1032.5" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="1031.5" y="419.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1034.5" y="430.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.09%)</title><rect x="1033.6" y="451.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1036.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 0.52%)</title><rect x="1034.6" y="451.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1037.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 0.52%)</title><rect x="1034.6" y="435.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1037.6" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.09%)</title><rect x="1035.6" y="419.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1038.6" y="430.0"></text>
</g>
<g>
<title>WeakPreserveExceptionMark::WeakPreserveExceptionMark(Thread*) (1 samples, 0.09%)</title><rect x="1035.6" y="403.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1038.6" y="414.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.26%)</title><rect x="1036.6" y="419.0" width="3.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1039.6" y="430.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="1039.7" y="419.0" width="1.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1042.7" y="430.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="1040.7" y="467.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1043.7" y="478.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="1040.7" y="451.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1043.7" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=15606] (145 samples, 12.56%)</title><rect x="1041.7" y="515.0" width="148.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1044.7" y="526.0">[NIO Selector #7 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (145 samples, 12.56%)</title><rect x="1041.7" y="499.0" width="148.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1044.7" y="510.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.09%)</title><rect x="1044.8" y="483.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1047.8" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.09%)</title><rect x="1045.8" y="483.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1048.8" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (17 samples, 1.47%)</title><rect x="1046.8" y="483.0" width="17.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1049.8" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.09%)</title><rect x="1046.8" y="467.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1049.8" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.09%)</title><rect x="1046.8" y="451.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1049.8" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (16 samples, 1.39%)</title><rect x="1047.9" y="467.0" width="16.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1050.9" y="478.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 0.35%)</title><rect x="1047.9" y="451.0" width="4.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1050.9" y="462.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.09%)</title><rect x="1050.9" y="435.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1053.9" y="446.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.17%)</title><rect x="1052.0" y="451.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1055.0" y="462.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.09%)</title><rect x="1054.0" y="451.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1057.0" y="462.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 0.78%)</title><rect x="1055.0" y="451.0" width="9.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1058.0" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (123 samples, 10.66%)</title><rect x="1064.2" y="483.0" width="125.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1067.2" y="494.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (123 samples, 10.66%)</title><rect x="1064.2" y="467.0" width="125.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1067.2" y="478.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (112 samples, 9.71%)</title><rect x="1065.3" y="451.0" width="114.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1068.3" y="462.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (2 samples, 0.17%)</title><rect x="1067.3" y="435.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1070.3" y="446.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.09%)</title><rect x="1069.3" y="435.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1072.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (101 samples, 8.75%)</title><rect x="1070.4" y="435.0" width="103.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1073.4" y="446.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (101 samples, 8.75%)</title><rect x="1070.4" y="419.0" width="103.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1073.4" y="430.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (100 samples, 8.67%)</title><rect x="1070.4" y="403.0" width="102.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1073.4" y="414.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 1.30%)</title><rect x="1070.4" y="387.0" width="15.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1073.4" y="398.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.09%)</title><rect x="1070.4" y="371.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1073.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.09%)</title><rect x="1070.4" y="355.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1073.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="1070.4" y="339.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1073.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (12 samples, 1.04%)</title><rect x="1071.4" y="371.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1074.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.17%)</title><rect x="1071.4" y="355.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1074.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.17%)</title><rect x="1071.4" y="339.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1074.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.17%)</title><rect x="1071.4" y="323.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1074.4" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.17%)</title><rect x="1071.4" y="307.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1074.4" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.17%)</title><rect x="1071.4" y="291.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1074.4" y="302.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.17%)</title><rect x="1071.4" y="275.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1074.4" y="286.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.17%)</title><rect x="1071.4" y="259.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1074.4" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.87%)</title><rect x="1073.4" y="355.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1076.4" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.87%)</title><rect x="1073.4" y="339.0" width="10.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.4" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (10 samples, 0.87%)</title><rect x="1073.4" y="323.0" width="10.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1076.4" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (10 samples, 0.87%)</title><rect x="1073.4" y="307.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1076.4" y="318.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.35%)</title><rect x="1074.5" y="291.0" width="4.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1077.5" y="302.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.17%)</title><rect x="1076.5" y="275.0" width="2.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1079.5" y="286.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.09%)</title><rect x="1076.5" y="259.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1079.5" y="270.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.09%)</title><rect x="1077.5" y="259.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1080.5" y="270.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.09%)</title><rect x="1077.5" y="243.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1080.5" y="254.0"></text>
</g>
<g>
<title>__libc_send (5 samples, 0.43%)</title><rect x="1078.5" y="291.0" width="5.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1081.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.17%)</title><rect x="1083.7" y="371.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1086.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.put (85 samples, 7.37%)</title><rect x="1085.7" y="387.0" width="86.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1088.7" y="398.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (1 samples, 0.09%)</title><rect x="1086.7" y="371.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1089.7" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="1086.7" y="355.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1089.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="1086.7" y="339.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (82 samples, 7.11%)</title><rect x="1087.7" y="371.0" width="83.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1090.7" y="382.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (82 samples, 7.11%)</title><rect x="1087.7" y="355.0" width="83.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1090.7" y="366.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (82 samples, 7.11%)</title><rect x="1087.7" y="339.0" width="83.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1090.7" y="350.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (77 samples, 6.67%)</title><rect x="1087.7" y="323.0" width="78.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1090.7" y="334.0">Java_org_..</text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.17%)</title><rect x="1087.7" y="307.0" width="2.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1090.7" y="318.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.09%)</title><rect x="1089.8" y="307.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1092.8" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (74 samples, 6.41%)</title><rect x="1090.8" y="307.0" width="75.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1093.8" y="318.0">rocksdb_..</text>
</g>
<g>
<title>memmove@plt (1 samples, 0.09%)</title><rect x="1091.8" y="291.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1094.8" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (72 samples, 6.24%)</title><rect x="1092.9" y="291.0" width="73.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1095.9" y="302.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="1092.9" y="275.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1095.9" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (71 samples, 6.15%)</title><rect x="1093.9" y="275.0" width="72.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1096.9" y="286.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (71 samples, 6.15%)</title><rect x="1093.9" y="259.0" width="72.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1096.9" y="270.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (69 samples, 5.98%)</title><rect x="1093.9" y="243.0" width="70.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1096.9" y="254.0">rocksdb:..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.09%)</title><rect x="1093.9" y="227.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1096.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (67 samples, 5.81%)</title><rect x="1094.9" y="227.0" width="68.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1097.9" y="238.0">rocksdb..</text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="1101.0" y="211.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1104.0" y="222.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.09%)</title><rect x="1102.1" y="211.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1105.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (8 samples, 0.69%)</title><rect x="1103.1" y="211.0" width="8.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1106.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.09%)</title><rect x="1103.1" y="195.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1106.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.09%)</title><rect x="1103.1" y="179.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1106.1" y="190.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (7 samples, 0.61%)</title><rect x="1104.1" y="195.0" width="7.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1107.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (7 samples, 0.61%)</title><rect x="1104.1" y="179.0" width="7.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1107.1" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (2 samples, 0.17%)</title><rect x="1104.1" y="163.0" width="2.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1107.1" y="174.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.09%)</title><rect x="1106.2" y="163.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1109.2" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.17%)</title><rect x="1107.2" y="163.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1110.2" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.17%)</title><rect x="1107.2" y="147.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1110.2" y="158.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.09%)</title><rect x="1107.2" y="131.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1110.2" y="142.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.09%)</title><rect x="1108.2" y="131.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1111.2" y="142.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.17%)</title><rect x="1109.2" y="163.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1112.2" y="174.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.09%)</title><rect x="1109.2" y="147.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1112.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="1110.2" y="147.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1113.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.09%)</title><rect x="1111.3" y="211.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1114.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.09%)</title><rect x="1112.3" y="211.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1115.3" y="222.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="1112.3" y="195.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1115.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.09%)</title><rect x="1113.3" y="211.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1116.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (15 samples, 1.30%)</title><rect x="1114.3" y="211.0" width="15.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1117.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (15 samples, 1.30%)</title><rect x="1114.3" y="195.0" width="15.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1117.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (15 samples, 1.30%)</title><rect x="1114.3" y="179.0" width="15.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1117.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (14 samples, 1.21%)</title><rect x="1115.4" y="163.0" width="14.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1118.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.09%)</title><rect x="1115.4" y="147.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1118.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (13 samples, 1.13%)</title><rect x="1116.4" y="147.0" width="13.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1119.4" y="158.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.09%)</title><rect x="1116.4" y="131.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1119.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.09%)</title><rect x="1117.4" y="131.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1120.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.09%)</title><rect x="1118.4" y="131.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1121.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (9 samples, 0.78%)</title><rect x="1119.4" y="131.0" width="9.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1122.4" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (1 samples, 0.09%)</title><rect x="1120.5" y="115.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1123.5" y="126.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.09%)</title><rect x="1120.5" y="99.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1123.5" y="110.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (6 samples, 0.52%)</title><rect x="1121.5" y="115.0" width="6.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1124.5" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (5 samples, 0.43%)</title><rect x="1122.5" y="99.0" width="5.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1125.5" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (3 samples, 0.26%)</title><rect x="1124.6" y="83.0" width="3.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1127.6" y="94.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="1124.6" y="67.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1127.6" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.17%)</title><rect x="1125.6" y="67.0" width="2.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1128.6" y="78.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.09%)</title><rect x="1126.6" y="51.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1129.6" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() [clone .plt] (1 samples, 0.09%)</title><rect x="1127.6" y="115.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1130.6" y="126.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.09%)</title><rect x="1128.6" y="131.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1131.6" y="142.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (12 samples, 1.04%)</title><rect x="1129.7" y="211.0" width="12.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1132.7" y="222.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.09%)</title><rect x="1130.7" y="195.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1133.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 0.78%)</title><rect x="1131.7" y="195.0" width="9.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1134.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (9 samples, 0.78%)</title><rect x="1131.7" y="179.0" width="9.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1134.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.69%)</title><rect x="1132.7" y="163.0" width="8.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1135.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (8 samples, 0.69%)</title><rect x="1132.7" y="147.0" width="8.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1135.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (8 samples, 0.69%)</title><rect x="1132.7" y="131.0" width="8.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1135.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (7 samples, 0.61%)</title><rect x="1133.8" y="115.0" width="7.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1136.8" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (6 samples, 0.52%)</title><rect x="1133.8" y="99.0" width="6.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1136.8" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (4 samples, 0.35%)</title><rect x="1135.8" y="83.0" width="4.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1138.8" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4684488825288409274.so (2 samples, 0.17%)</title><rect x="1136.8" y="67.0" width="2.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1139.8" y="78.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="1136.8" y="51.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1139.8" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="1137.9" y="51.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1140.9" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.09%)</title><rect x="1137.9" y="35.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1140.9" y="46.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.09%)</title><rect x="1138.9" y="67.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1141.9" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.09%)</title><rect x="1139.9" y="99.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1142.9" y="110.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) [clone .plt] (1 samples, 0.09%)</title><rect x="1140.9" y="195.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1143.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (16 samples, 1.39%)</title><rect x="1141.9" y="211.0" width="16.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.9" y="222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="1156.3" y="195.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1159.3" y="206.0"></text>
</g>
<g>
<title>std::condition_variable::condition_variable() [clone .plt] (1 samples, 0.09%)</title><rect x="1157.3" y="195.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1160.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.17%)</title><rect x="1158.3" y="211.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.17%)</title><rect x="1158.3" y="195.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1161.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.09%)</title><rect x="1160.3" y="211.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.09%)</title><rect x="1161.4" y="211.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1164.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.09%)</title><rect x="1162.4" y="211.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.09%)</title><rect x="1162.4" y="195.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1165.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (1 samples, 0.09%)</title><rect x="1163.4" y="227.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="1164.4" y="243.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1167.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="1164.4" y="227.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1167.4" y="238.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.09%)</title><rect x="1164.4" y="211.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1167.4" y="222.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) [clone .plt] (1 samples, 0.09%)</title><rect x="1165.5" y="243.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.5" y="254.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.26%)</title><rect x="1166.5" y="323.0" width="3.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1169.5" y="334.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="1166.5" y="307.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1169.5" y="318.0"></text>
</g>
<g>
<title>_int_free (2 samples, 0.17%)</title><rect x="1167.5" y="307.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1170.5" y="318.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.09%)</title><rect x="1169.5" y="323.0" width="1.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1172.5" y="334.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.09%)</title><rect x="1170.6" y="323.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1173.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (1 samples, 0.09%)</title><rect x="1171.6" y="371.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1174.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.09%)</title><rect x="1171.6" y="355.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1174.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (1 samples, 0.09%)</title><rect x="1171.6" y="339.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1174.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.09%)</title><rect x="1172.6" y="403.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1175.6" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="1172.6" y="387.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1175.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="1172.6" y="371.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1175.6" y="382.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="1172.6" y="355.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1175.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.35%)</title><rect x="1173.6" y="435.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1176.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.09%)</title><rect x="1173.6" y="419.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1176.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="1173.6" y="403.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1176.6" y="414.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="1173.6" y="387.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1176.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.09%)</title><rect x="1173.6" y="371.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1176.6" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="1173.6" y="355.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1176.6" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.26%)</title><rect x="1174.7" y="419.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1177.7" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="1177.7" y="435.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1180.7" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="1177.7" y="419.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1180.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (10 samples, 0.87%)</title><rect x="1179.8" y="451.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1182.8" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (10 samples, 0.87%)</title><rect x="1179.8" y="435.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1182.8" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.35%)</title><rect x="1179.8" y="419.0" width="4.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1182.8" y="430.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.09%)</title><rect x="1180.8" y="403.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.8" y="414.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.09%)</title><rect x="1181.8" y="403.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.8" y="414.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="1182.8" y="403.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1185.8" y="414.0"></text>
</g>
<g>
<title>__recv (5 samples, 0.43%)</title><rect x="1183.9" y="419.0" width="5.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1186.9" y="430.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="1189.0" y="419.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1192.0" y="430.0"></text>
</g>
</g>
</svg>
