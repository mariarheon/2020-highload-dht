<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="533"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="533"> </text>
<g id="frames">
<g>
<title>all (1,382 samples, 100.00%)</title><rect x="10.0" y="499.0" width="1180.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="510.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=240091] (45 samples, 3.26%)</title><rect x="10.0" y="483.0" width="38.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="494.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (45 samples, 3.26%)</title><rect x="10.0" y="467.0" width="38.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="478.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.14%)</title><rect x="10.0" y="451.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.14%)</title><rect x="10.0" y="435.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.14%)</title><rect x="10.0" y="419.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 0.58%)</title><rect x="11.7" y="451.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (8 samples, 0.58%)</title><rect x="11.7" y="435.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.7" y="446.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.14%)</title><rect x="11.7" y="419.0" width="1.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="14.7" y="430.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 0.43%)</title><rect x="13.4" y="419.0" width="5.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="16.4" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (35 samples, 2.53%)</title><rect x="18.5" y="451.0" width="29.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.5" y="462.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (35 samples, 2.53%)</title><rect x="18.5" y="435.0" width="29.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.5" y="446.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (26 samples, 1.88%)</title><rect x="18.5" y="419.0" width="22.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="21.5" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (11 samples, 0.80%)</title><rect x="20.2" y="403.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (11 samples, 0.80%)</title><rect x="20.2" y="387.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.2" y="398.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (9 samples, 0.65%)</title><rect x="20.2" y="371.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.07%)</title><rect x="20.2" y="355.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.07%)</title><rect x="20.2" y="339.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (8 samples, 0.58%)</title><rect x="21.1" y="355.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.07%)</title><rect x="21.1" y="339.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="24.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.07%)</title><rect x="21.1" y="323.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="24.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.get$Lambda (1 samples, 0.07%)</title><rect x="21.1" y="307.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.51%)</title><rect x="22.0" y="339.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (7 samples, 0.51%)</title><rect x="22.0" y="323.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.07%)</title><rect x="22.0" y="307.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.07%)</title><rect x="22.0" y="291.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.07%)</title><rect x="22.0" y="275.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.07%)</title><rect x="22.0" y="259.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.14%)</title><rect x="22.8" y="307.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.14%)</title><rect x="22.8" y="291.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.14%)</title><rect x="22.8" y="275.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.14%)</title><rect x="22.8" y="259.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.14%)</title><rect x="22.8" y="243.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.14%)</title><rect x="22.8" y="227.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.8" y="238.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.14%)</title><rect x="22.8" y="211.0" width="1.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="25.8" y="222.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.14%)</title><rect x="22.8" y="195.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="25.8" y="206.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.07%)</title><rect x="22.8" y="179.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="25.8" y="190.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="23.7" y="179.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="26.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.29%)</title><rect x="24.5" y="307.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="27.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.29%)</title><rect x="24.5" y="291.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.29%)</title><rect x="24.5" y="275.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="27.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.29%)</title><rect x="24.5" y="259.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.29%)</title><rect x="24.5" y="243.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.5" y="254.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.22%)</title><rect x="24.5" y="227.0" width="2.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="27.5" y="238.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.07%)</title><rect x="24.5" y="211.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="27.5" y="222.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.07%)</title><rect x="25.4" y="211.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="28.4" y="222.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.07%)</title><rect x="26.2" y="211.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="29.2" y="222.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="27.1" y="227.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="30.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.14%)</title><rect x="27.9" y="371.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.9" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.14%)</title><rect x="27.9" y="355.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.9" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.07%)</title><rect x="27.9" y="339.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="30.9" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.07%)</title><rect x="28.8" y="339.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.07%)</title><rect x="28.8" y="323.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.07%)</title><rect x="28.8" y="307.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.29%)</title><rect x="29.6" y="403.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.22%)</title><rect x="29.6" y="387.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.6" y="398.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.22%)</title><rect x="29.6" y="371.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.6" y="382.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.22%)</title><rect x="29.6" y="355.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.22%)</title><rect x="29.6" y="339.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.6" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.07%)</title><rect x="32.2" y="387.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="35.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.58%)</title><rect x="33.1" y="403.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.14%)</title><rect x="38.2" y="387.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="41.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.14%)</title><rect x="38.2" y="371.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.2" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="39.9" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.9" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="39.9" y="387.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (9 samples, 0.65%)</title><rect x="40.7" y="419.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="43.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 0.65%)</title><rect x="40.7" y="403.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.7" y="414.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.36%)</title><rect x="41.6" y="387.0" width="4.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="44.6" y="398.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.07%)</title><rect x="41.6" y="371.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="44.6" y="382.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="42.4" y="371.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="45.4" y="382.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.22%)</title><rect x="43.3" y="371.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="46.3" y="382.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.14%)</title><rect x="43.3" y="355.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="46.3" y="366.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.07%)</title><rect x="45.0" y="355.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="48.0" y="366.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.14%)</title><rect x="45.9" y="387.0" width="1.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="48.9" y="398.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.07%)</title><rect x="47.6" y="387.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="50.6" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=240092] (36 samples, 2.60%)</title><rect x="48.4" y="483.0" width="30.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="51.4" y="494.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (36 samples, 2.60%)</title><rect x="48.4" y="467.0" width="30.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="51.4" y="478.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 0.51%)</title><rect x="48.4" y="451.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.4" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (7 samples, 0.51%)</title><rect x="48.4" y="435.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="51.4" y="446.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.07%)</title><rect x="49.3" y="419.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="52.3" y="430.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.36%)</title><rect x="50.1" y="419.0" width="4.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="53.1" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (29 samples, 2.10%)</title><rect x="54.4" y="451.0" width="24.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.4" y="462.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (29 samples, 2.10%)</title><rect x="54.4" y="435.0" width="24.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="57.4" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (14 samples, 1.01%)</title><rect x="55.3" y="419.0" width="11.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7 samples, 0.51%)</title><rect x="55.3" y="403.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="58.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7 samples, 0.51%)</title><rect x="55.3" y="387.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.3" y="398.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (5 samples, 0.36%)</title><rect x="55.3" y="371.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (5 samples, 0.36%)</title><rect x="55.3" y="355.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.36%)</title><rect x="55.3" y="339.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.36%)</title><rect x="55.3" y="323.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="58.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.14%)</title><rect x="55.3" y="307.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.14%)</title><rect x="55.3" y="291.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.14%)</title><rect x="55.3" y="275.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.14%)</title><rect x="55.3" y="259.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.14%)</title><rect x="57.0" y="307.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.14%)</title><rect x="57.0" y="291.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.07%)</title><rect x="57.8" y="275.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="57.8" y="259.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="57.8" y="243.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="57.8" y="227.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="60.8" y="238.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.07%)</title><rect x="57.8" y="211.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="60.8" y="222.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="57.8" y="195.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="60.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="58.7" y="307.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="58.7" y="291.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="58.7" y="275.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="58.7" y="259.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="61.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="58.7" y="243.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.7" y="254.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="58.7" y="227.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="61.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.14%)</title><rect x="59.5" y="371.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.5" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.14%)</title><rect x="59.5" y="355.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.5" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.07%)</title><rect x="59.5" y="339.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.5" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.07%)</title><rect x="60.4" y="339.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.07%)</title><rect x="60.4" y="323.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.07%)</title><rect x="60.4" y="307.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.22%)</title><rect x="61.2" y="403.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.14%)</title><rect x="61.2" y="387.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.2" y="398.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.14%)</title><rect x="61.2" y="371.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.2" y="382.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.14%)</title><rect x="61.2" y="355.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.14%)</title><rect x="61.2" y="339.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.07%)</title><rect x="62.9" y="387.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.29%)</title><rect x="63.8" y="403.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.07%)</title><rect x="66.4" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.07%)</title><rect x="66.4" y="371.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.4" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (14 samples, 1.01%)</title><rect x="67.2" y="419.0" width="12.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.2" y="430.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (14 samples, 1.01%)</title><rect x="67.2" y="403.0" width="12.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="70.2" y="414.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.29%)</title><rect x="68.9" y="387.0" width="3.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="71.9" y="398.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.22%)</title><rect x="68.9" y="371.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="71.9" y="382.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.07%)</title><rect x="68.9" y="355.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="71.9" y="366.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.07%)</title><rect x="69.8" y="355.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="72.8" y="366.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.07%)</title><rect x="70.6" y="355.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="73.6" y="366.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.07%)</title><rect x="71.5" y="371.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="74.5" y="382.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.07%)</title><rect x="72.3" y="387.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="75.3" y="398.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.07%)</title><rect x="73.2" y="387.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="76.2" y="398.0"></text>
</g>
<g>
<title>__recv (4 samples, 0.29%)</title><rect x="74.0" y="387.0" width="3.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="77.0" y="398.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.07%)</title><rect x="77.5" y="387.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="80.5" y="398.0"></text>
</g>
<g>
<title>recv@plt (1 samples, 0.07%)</title><rect x="78.3" y="387.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="81.3" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=240093] (38 samples, 2.75%)</title><rect x="79.2" y="483.0" width="32.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="82.2" y="494.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (38 samples, 2.75%)</title><rect x="79.2" y="467.0" width="32.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.2" y="478.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.14%)</title><rect x="79.2" y="451.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.2" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.14%)</title><rect x="79.2" y="435.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="82.2" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 0.65%)</title><rect x="80.9" y="451.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.9" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 0.65%)</title><rect x="80.9" y="435.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.9" y="446.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.14%)</title><rect x="82.6" y="419.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="85.6" y="430.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.07%)</title><rect x="83.4" y="403.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="86.4" y="414.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.07%)</title><rect x="84.3" y="419.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="87.3" y="430.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.29%)</title><rect x="85.1" y="419.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="88.1" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (27 samples, 1.95%)</title><rect x="88.6" y="451.0" width="23.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.6" y="462.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (25 samples, 1.81%)</title><rect x="89.4" y="435.0" width="21.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.4" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (16 samples, 1.16%)</title><rect x="89.4" y="419.0" width="13.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="92.4" y="430.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (1 samples, 0.07%)</title><rect x="90.3" y="403.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="93.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (8 samples, 0.58%)</title><rect x="91.1" y="403.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (8 samples, 0.58%)</title><rect x="91.1" y="387.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.1" y="398.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (8 samples, 0.58%)</title><rect x="91.1" y="371.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.07%)</title><rect x="91.1" y="355.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.07%)</title><rect x="91.1" y="339.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="91.1" y="323.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="94.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.07%)</title><rect x="91.1" y="307.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (7 samples, 0.51%)</title><rect x="92.0" y="355.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.51%)</title><rect x="92.0" y="339.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (7 samples, 0.51%)</title><rect x="92.0" y="323.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.14%)</title><rect x="92.0" y="307.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.14%)</title><rect x="92.0" y="291.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.14%)</title><rect x="92.0" y="275.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="95.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.14%)</title><rect x="92.0" y="259.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="95.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.36%)</title><rect x="93.7" y="307.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="96.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.36%)</title><rect x="93.7" y="291.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.36%)</title><rect x="93.7" y="275.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="96.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.36%)</title><rect x="93.7" y="259.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.36%)</title><rect x="93.7" y="243.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.7" y="254.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.14%)</title><rect x="93.7" y="227.0" width="1.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="96.7" y="238.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.07%)</title><rect x="93.7" y="211.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="96.7" y="222.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.07%)</title><rect x="94.5" y="211.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="97.5" y="222.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.22%)</title><rect x="95.4" y="227.0" width="2.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="98.4" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.22%)</title><rect x="97.9" y="403.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.9" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.07%)</title><rect x="97.9" y="387.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="100.9" y="398.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="97.9" y="371.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="97.9" y="355.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.07%)</title><rect x="97.9" y="339.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.9" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.14%)</title><rect x="98.8" y="387.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.14%)</title><rect x="100.5" y="403.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="103.5" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="102.2" y="403.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.2" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="102.2" y="387.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.2" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (9 samples, 0.65%)</title><rect x="103.1" y="419.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="106.1" y="430.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 0.65%)</title><rect x="103.1" y="403.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="106.1" y="414.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.29%)</title><rect x="103.1" y="387.0" width="3.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="106.1" y="398.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.07%)</title><rect x="103.1" y="371.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="106.1" y="382.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.14%)</title><rect x="103.9" y="371.0" width="1.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="106.9" y="382.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.07%)</title><rect x="105.6" y="371.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="108.6" y="382.0"></text>
</g>
<g>
<title>__recv (4 samples, 0.29%)</title><rect x="106.5" y="387.0" width="3.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="109.5" y="398.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.07%)</title><rect x="109.9" y="387.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="112.9" y="398.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.07%)</title><rect x="110.8" y="435.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="113.8" y="446.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.07%)</title><rect x="110.8" y="419.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="113.8" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=240094] (46 samples, 3.33%)</title><rect x="111.6" y="483.0" width="39.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="114.6" y="494.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (46 samples, 3.33%)</title><rect x="111.6" y="467.0" width="39.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="114.6" y="478.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.14%)</title><rect x="111.6" y="451.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.14%)</title><rect x="111.6" y="435.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.6" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13 samples, 0.94%)</title><rect x="113.3" y="451.0" width="11.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="116.3" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.07%)</title><rect x="114.2" y="435.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.2" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.07%)</title><rect x="114.2" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.2" y="430.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (11 samples, 0.80%)</title><rect x="115.0" y="435.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.0" y="446.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.07%)</title><rect x="115.9" y="419.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="118.9" y="430.0"></text>
</g>
<g>
<title>clock_gettime@plt (2 samples, 0.14%)</title><rect x="116.7" y="419.0" width="1.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="119.7" y="430.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.51%)</title><rect x="118.4" y="419.0" width="6.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="121.4" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (31 samples, 2.24%)</title><rect x="124.4" y="451.0" width="26.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="127.4" y="462.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (31 samples, 2.24%)</title><rect x="124.4" y="435.0" width="26.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.4" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (19 samples, 1.37%)</title><rect x="124.4" y="419.0" width="16.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="127.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (13 samples, 0.94%)</title><rect x="125.3" y="403.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="128.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (13 samples, 0.94%)</title><rect x="125.3" y="387.0" width="11.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.3" y="398.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (11 samples, 0.80%)</title><rect x="125.3" y="371.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.07%)</title><rect x="125.3" y="355.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.07%)</title><rect x="125.3" y="339.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="128.3" y="350.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.07%)</title><rect x="125.3" y="323.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="125.3" y="307.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="125.3" y="291.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.07%)</title><rect x="125.3" y="275.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (10 samples, 0.72%)</title><rect x="126.1" y="355.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.72%)</title><rect x="126.1" y="339.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="129.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (9 samples, 0.65%)</title><rect x="127.0" y="323.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="130.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.22%)</title><rect x="127.0" y="307.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.22%)</title><rect x="127.0" y="291.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="130.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.22%)</title><rect x="127.0" y="275.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="130.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.22%)</title><rect x="127.0" y="259.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="130.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="129.5" y="307.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="129.5" y="291.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="132.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="129.5" y="275.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.36%)</title><rect x="130.4" y="307.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="133.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.36%)</title><rect x="130.4" y="291.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.36%)</title><rect x="130.4" y="275.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="133.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.36%)</title><rect x="130.4" y="259.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.29%)</title><rect x="131.2" y="243.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.2" y="254.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.07%)</title><rect x="131.2" y="227.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="134.2" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.14%)</title><rect x="132.1" y="227.0" width="1.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="135.1" y="238.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.07%)</title><rect x="133.0" y="211.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="136.0" y="222.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="133.8" y="227.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="136.8" y="238.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.14%)</title><rect x="134.7" y="371.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.7" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.14%)</title><rect x="134.7" y="355.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.7" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.14%)</title><rect x="134.7" y="339.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="137.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.14%)</title><rect x="134.7" y="323.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.14%)</title><rect x="134.7" y="307.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="137.7" y="318.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="135.5" y="291.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="138.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.14%)</title><rect x="136.4" y="403.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.07%)</title><rect x="136.4" y="387.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.4" y="398.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="136.4" y="371.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="139.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="136.4" y="355.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.07%)</title><rect x="136.4" y="339.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.07%)</title><rect x="137.2" y="387.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.14%)</title><rect x="138.1" y="403.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.07%)</title><rect x="138.9" y="387.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.07%)</title><rect x="138.9" y="371.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="139.8" y="403.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.8" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="139.8" y="387.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.8" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (12 samples, 0.87%)</title><rect x="140.6" y="419.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.6" y="430.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (12 samples, 0.87%)</title><rect x="140.6" y="403.0" width="10.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.6" y="414.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.36%)</title><rect x="143.2" y="387.0" width="4.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="146.2" y="398.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="144.1" y="371.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="147.1" y="382.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.22%)</title><rect x="144.9" y="371.0" width="2.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="147.9" y="382.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.07%)</title><rect x="144.9" y="355.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="147.9" y="366.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.14%)</title><rect x="145.8" y="355.0" width="1.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="148.8" y="366.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.07%)</title><rect x="146.6" y="339.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="149.6" y="350.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.07%)</title><rect x="147.5" y="387.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="150.5" y="398.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.22%)</title><rect x="148.3" y="387.0" width="2.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="151.3" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=240095] (39 samples, 2.82%)</title><rect x="150.9" y="483.0" width="33.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="153.9" y="494.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (39 samples, 2.82%)</title><rect x="150.9" y="467.0" width="33.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.9" y="478.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 0.72%)</title><rect x="151.7" y="451.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.07%)</title><rect x="151.7" y="435.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.7" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.07%)</title><rect x="151.7" y="419.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="154.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 0.65%)</title><rect x="152.6" y="435.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.6" y="446.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.22%)</title><rect x="152.6" y="419.0" width="2.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="155.6" y="430.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.07%)</title><rect x="154.3" y="403.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="157.3" y="414.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.14%)</title><rect x="155.2" y="419.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="158.2" y="430.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.07%)</title><rect x="156.9" y="419.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="159.9" y="430.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.22%)</title><rect x="157.7" y="419.0" width="2.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="160.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (28 samples, 2.03%)</title><rect x="160.3" y="451.0" width="23.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.3" y="462.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (28 samples, 2.03%)</title><rect x="160.3" y="435.0" width="23.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.3" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (17 samples, 1.23%)</title><rect x="160.3" y="419.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (11 samples, 0.80%)</title><rect x="160.3" y="403.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (11 samples, 0.80%)</title><rect x="160.3" y="387.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.3" y="398.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (10 samples, 0.72%)</title><rect x="160.3" y="371.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (10 samples, 0.72%)</title><rect x="160.3" y="355.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.72%)</title><rect x="160.3" y="339.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (10 samples, 0.72%)</title><rect x="160.3" y="323.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="163.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.07%)</title><rect x="160.3" y="307.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.07%)</title><rect x="160.3" y="291.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="163.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.07%)</title><rect x="160.3" y="275.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.07%)</title><rect x="160.3" y="259.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="163.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="161.1" y="307.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="164.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="161.1" y="291.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="164.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.07%)</title><rect x="161.1" y="275.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="164.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="161.1" y="259.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="164.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="161.1" y="243.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="164.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="161.1" y="227.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="164.1" y="238.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.07%)</title><rect x="161.1" y="211.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="164.1" y="222.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="161.1" y="195.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="164.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.58%)</title><rect x="162.0" y="307.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.58%)</title><rect x="162.0" y="291.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.58%)</title><rect x="162.0" y="275.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="165.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.58%)</title><rect x="162.0" y="259.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.58%)</title><rect x="162.0" y="243.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.0" y="254.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.22%)</title><rect x="162.0" y="227.0" width="2.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="165.0" y="238.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.07%)</title><rect x="162.0" y="211.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="165.0" y="222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="162.8" y="211.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="165.8" y="222.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="163.7" y="211.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="166.7" y="222.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.36%)</title><rect x="164.5" y="227.0" width="4.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="167.5" y="238.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.07%)</title><rect x="168.8" y="371.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.8" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.07%)</title><rect x="168.8" y="355.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="171.8" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.07%)</title><rect x="168.8" y="339.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="171.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.07%)</title><rect x="168.8" y="323.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.07%)</title><rect x="168.8" y="307.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="171.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.22%)</title><rect x="169.7" y="403.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.14%)</title><rect x="169.7" y="387.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="172.7" y="398.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.14%)</title><rect x="169.7" y="371.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.14%)</title><rect x="169.7" y="355.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.7" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.14%)</title><rect x="169.7" y="339.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.7" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.07%)</title><rect x="171.4" y="387.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.14%)</title><rect x="172.2" y="403.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="175.2" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="173.9" y="403.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.9" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="173.9" y="387.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="176.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 0.80%)</title><rect x="174.8" y="419.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="177.8" y="430.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (11 samples, 0.80%)</title><rect x="174.8" y="403.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="177.8" y="414.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.29%)</title><rect x="175.6" y="387.0" width="3.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="178.6" y="398.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.22%)</title><rect x="176.5" y="371.0" width="2.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="179.5" y="382.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.14%)</title><rect x="177.4" y="355.0" width="1.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="180.4" y="366.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.07%)</title><rect x="179.1" y="387.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="182.1" y="398.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.14%)</title><rect x="179.9" y="387.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="182.9" y="398.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.22%)</title><rect x="181.6" y="387.0" width="2.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="184.6" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=240096] (37 samples, 2.68%)</title><rect x="184.2" y="483.0" width="31.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="187.2" y="494.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (37 samples, 2.68%)</title><rect x="184.2" y="467.0" width="31.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.2" y="478.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.07%)</title><rect x="185.9" y="451.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="188.9" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.07%)</title><rect x="185.9" y="435.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="188.9" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13 samples, 0.94%)</title><rect x="186.7" y="451.0" width="11.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="189.7" y="462.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.07%)</title><rect x="187.6" y="435.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="190.6" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.07%)</title><rect x="187.6" y="419.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="190.6" y="430.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.07%)</title><rect x="187.6" y="403.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="190.6" y="414.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="187.6" y="387.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="190.6" y="398.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="187.6" y="371.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="190.6" y="382.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.07%)</title><rect x="187.6" y="355.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="190.6" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.07%)</title><rect x="188.5" y="435.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.5" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.07%)</title><rect x="188.5" y="419.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.5" y="430.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (10 samples, 0.72%)</title><rect x="189.3" y="435.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="192.3" y="446.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.07%)</title><rect x="190.2" y="419.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="193.2" y="430.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.14%)</title><rect x="191.0" y="419.0" width="1.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="194.0" y="430.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 0.43%)</title><rect x="192.7" y="419.0" width="5.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="195.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (21 samples, 1.52%)</title><rect x="197.8" y="451.0" width="18.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="200.8" y="462.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="197.8" y="435.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="200.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (20 samples, 1.45%)</title><rect x="198.7" y="435.0" width="17.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="201.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (14 samples, 1.01%)</title><rect x="198.7" y="419.0" width="12.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="201.7" y="430.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.07%)</title><rect x="199.6" y="403.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="202.6" y="414.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="200.4" y="403.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="203.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (9 samples, 0.65%)</title><rect x="201.3" y="403.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="204.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (9 samples, 0.65%)</title><rect x="201.3" y="387.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.3" y="398.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (7 samples, 0.51%)</title><rect x="201.3" y="371.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="204.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.07%)</title><rect x="201.3" y="355.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.07%)</title><rect x="201.3" y="339.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.3" y="350.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.07%)</title><rect x="201.3" y="323.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="204.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="201.3" y="307.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="204.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="201.3" y="291.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.07%)</title><rect x="201.3" y="275.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (6 samples, 0.43%)</title><rect x="202.1" y="355.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="205.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.43%)</title><rect x="202.1" y="339.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="205.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 0.43%)</title><rect x="202.1" y="323.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="205.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.07%)</title><rect x="202.1" y="307.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.07%)</title><rect x="202.1" y="291.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.07%)</title><rect x="202.1" y="275.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="205.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.07%)</title><rect x="202.1" y="259.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="205.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="203.0" y="307.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="203.0" y="291.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="206.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.07%)</title><rect x="203.0" y="275.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="203.0" y="259.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="206.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="203.0" y="243.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="203.0" y="227.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.0" y="238.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.07%)</title><rect x="203.0" y="211.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="206.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.29%)</title><rect x="203.8" y="307.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="206.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.29%)</title><rect x="203.8" y="291.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.29%)</title><rect x="203.8" y="275.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.29%)</title><rect x="203.8" y="259.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.29%)</title><rect x="203.8" y="243.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="206.8" y="254.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.07%)</title><rect x="203.8" y="227.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="206.8" y="238.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.07%)</title><rect x="203.8" y="211.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="206.8" y="222.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.22%)</title><rect x="204.7" y="227.0" width="2.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="207.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.14%)</title><rect x="207.2" y="371.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.2" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.14%)</title><rect x="207.2" y="355.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.2" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.07%)</title><rect x="207.2" y="339.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.2" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.07%)</title><rect x="208.1" y="339.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="211.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.07%)</title><rect x="208.1" y="323.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.07%)</title><rect x="208.1" y="307.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="208.9" y="403.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="211.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.07%)</title><rect x="208.9" y="387.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="211.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.07%)</title><rect x="208.9" y="371.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="209.8" y="403.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="212.8" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="209.8" y="387.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="212.8" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 0.43%)</title><rect x="210.7" y="419.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 0.43%)</title><rect x="210.7" y="403.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="213.7" y="414.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.14%)</title><rect x="211.5" y="387.0" width="1.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="214.5" y="398.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.07%)</title><rect x="211.5" y="371.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="214.5" y="382.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.07%)</title><rect x="212.4" y="371.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="215.4" y="382.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.07%)</title><rect x="212.4" y="355.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="215.4" y="366.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.22%)</title><rect x="213.2" y="387.0" width="2.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="216.2" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=240097] (31 samples, 2.24%)</title><rect x="215.8" y="483.0" width="26.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="218.8" y="494.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (31 samples, 2.24%)</title><rect x="215.8" y="467.0" width="26.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="218.8" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.07%)</title><rect x="215.8" y="451.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.8" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (12 samples, 0.87%)</title><rect x="216.6" y="451.0" width="10.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 0.65%)</title><rect x="219.2" y="435.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="222.2" y="446.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 0.43%)</title><rect x="221.8" y="419.0" width="5.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="224.8" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (18 samples, 1.30%)</title><rect x="226.9" y="451.0" width="15.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="229.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (18 samples, 1.30%)</title><rect x="226.9" y="435.0" width="15.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="229.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8 samples, 0.58%)</title><rect x="226.9" y="419.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="229.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.22%)</title><rect x="226.9" y="403.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="229.9" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.22%)</title><rect x="226.9" y="387.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.9" y="398.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (3 samples, 0.22%)</title><rect x="226.9" y="371.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="229.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (3 samples, 0.22%)</title><rect x="226.9" y="355.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.22%)</title><rect x="226.9" y="339.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="229.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.22%)</title><rect x="226.9" y="323.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="229.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="226.9" y="307.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="229.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="226.9" y="291.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="229.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.07%)</title><rect x="226.9" y="275.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="229.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="226.9" y="259.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="229.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="226.9" y="243.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="229.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="226.9" y="227.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.9" y="238.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.07%)</title><rect x="226.9" y="211.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="229.9" y="222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="226.9" y="195.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="229.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.14%)</title><rect x="227.7" y="307.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="230.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="227.7" y="291.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="227.7" y="275.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="227.7" y="259.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="227.7" y="243.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.7" y="254.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.07%)</title><rect x="227.7" y="227.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="230.7" y="238.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.07%)</title><rect x="227.7" y="211.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="230.7" y="222.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="228.6" y="227.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="231.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.29%)</title><rect x="229.4" y="403.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="232.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.07%)</title><rect x="232.0" y="387.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.0" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="232.9" y="403.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="235.9" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="232.9" y="387.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (10 samples, 0.72%)</title><rect x="233.7" y="419.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (10 samples, 0.72%)</title><rect x="233.7" y="403.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="236.7" y="414.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.29%)</title><rect x="235.4" y="387.0" width="3.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="238.4" y="398.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.22%)</title><rect x="236.3" y="371.0" width="2.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="239.3" y="382.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.07%)</title><rect x="238.0" y="355.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="241.0" y="366.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.07%)</title><rect x="238.8" y="387.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="241.8" y="398.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.22%)</title><rect x="239.7" y="387.0" width="2.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="242.7" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=240098] (41 samples, 2.97%)</title><rect x="242.2" y="483.0" width="35.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="245.2" y="494.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (41 samples, 2.97%)</title><rect x="242.2" y="467.0" width="35.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="245.2" y="478.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.22%)</title><rect x="242.2" y="451.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.2" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.22%)</title><rect x="242.2" y="435.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="245.2" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (12 samples, 0.87%)</title><rect x="244.8" y="451.0" width="10.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.8" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.07%)</title><rect x="245.7" y="435.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.7" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.07%)</title><rect x="245.7" y="419.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="248.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (10 samples, 0.72%)</title><rect x="246.5" y="435.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="249.5" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.07%)</title><rect x="246.5" y="419.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="249.5" y="430.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.22%)</title><rect x="247.4" y="419.0" width="2.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="250.4" y="430.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.07%)</title><rect x="249.1" y="403.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="252.1" y="414.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.07%)</title><rect x="249.9" y="419.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="252.9" y="430.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.36%)</title><rect x="250.8" y="419.0" width="4.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="253.8" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (26 samples, 1.88%)</title><rect x="255.1" y="451.0" width="22.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="258.1" y="462.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (26 samples, 1.88%)</title><rect x="255.1" y="435.0" width="22.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="258.1" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (14 samples, 1.01%)</title><rect x="255.1" y="419.0" width="11.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="258.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.22%)</title><rect x="257.6" y="403.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="260.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.22%)</title><rect x="257.6" y="387.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.6" y="398.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (1 samples, 0.07%)</title><rect x="257.6" y="371.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.put (1 samples, 0.07%)</title><rect x="257.6" y="355.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="260.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.07%)</title><rect x="257.6" y="339.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="260.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.07%)</title><rect x="257.6" y="323.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="260.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="257.6" y="307.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="260.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="257.6" y="291.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="257.6" y="275.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="257.6" y="259.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="260.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="257.6" y="243.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="260.6" y="254.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="257.6" y="227.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="260.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.14%)</title><rect x="258.5" y="371.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="261.5" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.14%)</title><rect x="258.5" y="355.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="261.5" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.14%)</title><rect x="258.5" y="339.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="261.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.14%)</title><rect x="258.5" y="323.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="261.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.14%)</title><rect x="258.5" y="307.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.07%)</title><rect x="260.2" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="263.2" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.07%)</title><rect x="260.2" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="263.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.51%)</title><rect x="261.0" y="403.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.0" y="414.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.22%)</title><rect x="264.4" y="387.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="267.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.14%)</title><rect x="265.3" y="371.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="268.3" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (12 samples, 0.87%)</title><rect x="267.0" y="419.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="270.0" y="430.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (12 samples, 0.87%)</title><rect x="267.0" y="403.0" width="10.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="270.0" y="414.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.29%)</title><rect x="267.0" y="387.0" width="3.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="270.0" y="398.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.07%)</title><rect x="268.7" y="371.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="271.7" y="382.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.07%)</title><rect x="269.6" y="371.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="272.6" y="382.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.07%)</title><rect x="270.4" y="387.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="273.4" y="398.0"></text>
</g>
<g>
<title>__recv (6 samples, 0.43%)</title><rect x="271.3" y="387.0" width="5.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="274.3" y="398.0"></text>
</g>
<g>
<title>recv@plt (1 samples, 0.07%)</title><rect x="276.4" y="387.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="279.4" y="398.0"></text>
</g>
<g>
<title>[async_workers-0 tid=240137] (134 samples, 9.70%)</title><rect x="277.3" y="483.0" width="114.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="280.3" y="494.0">[async_workers..</text>
</g>
<g>
<title>java/lang/Thread.run (134 samples, 9.70%)</title><rect x="277.3" y="467.0" width="114.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.3" y="478.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (134 samples, 9.70%)</title><rect x="277.3" y="451.0" width="114.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="280.3" y="462.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (134 samples, 9.70%)</title><rect x="277.3" y="435.0" width="114.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.3" y="446.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.14%)</title><rect x="277.3" y="419.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="280.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="277.3" y="403.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="277.3" y="387.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.07%)</title><rect x="278.1" y="371.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (28 samples, 2.03%)</title><rect x="279.0" y="419.0" width="23.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="282.0" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (28 samples, 2.03%)</title><rect x="279.0" y="403.0" width="23.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="282.0" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (24 samples, 1.74%)</title><rect x="279.0" y="387.0" width="20.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="282.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.14%)</title><rect x="279.0" y="371.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (2 samples, 0.14%)</title><rect x="279.0" y="355.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="282.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.07%)</title><rect x="279.0" y="339.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.07%)</title><rect x="279.8" y="339.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="282.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.22%)</title><rect x="280.7" y="371.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.22%)</title><rect x="280.7" y="355.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="283.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.22%)</title><rect x="280.7" y="339.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="283.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="281.5" y="323.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="281.5" y="307.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.5" y="318.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.14%)</title><rect x="281.5" y="291.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="284.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (19 samples, 1.37%)</title><rect x="283.2" y="371.0" width="16.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="286.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (19 samples, 1.37%)</title><rect x="283.2" y="355.0" width="16.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.2" y="366.0"></text>
</g>
<g>
<title>Unsafe_Park (11 samples, 0.80%)</title><rect x="284.9" y="339.0" width="9.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="287.9" y="350.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (2 samples, 0.14%)</title><rect x="287.5" y="323.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="290.5" y="334.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.22%)</title><rect x="289.2" y="323.0" width="2.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="292.2" y="334.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.14%)</title><rect x="291.8" y="323.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="294.8" y="334.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.07%)</title><rect x="293.5" y="323.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="296.5" y="334.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.36%)</title><rect x="294.3" y="339.0" width="4.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="297.3" y="350.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.07%)</title><rect x="294.3" y="323.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="297.3" y="334.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.14%)</title><rect x="295.2" y="323.0" width="1.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="298.2" y="334.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.14%)</title><rect x="296.9" y="323.0" width="1.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="299.9" y="334.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.07%)</title><rect x="298.6" y="339.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="301.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.29%)</title><rect x="299.5" y="387.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="302.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.29%)</title><rect x="299.5" y="371.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="302.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.29%)</title><rect x="299.5" y="355.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="302.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.29%)</title><rect x="299.5" y="339.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="302.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.22%)</title><rect x="300.3" y="323.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="303.3" y="334.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.07%)</title><rect x="300.3" y="307.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="303.3" y="318.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.07%)</title><rect x="300.3" y="291.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="303.3" y="302.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.14%)</title><rect x="301.2" y="307.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="304.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.run (104 samples, 7.53%)</title><rect x="302.9" y="419.0" width="88.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="305.9" y="430.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (104 samples, 7.53%)</title><rect x="302.9" y="403.0" width="88.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="305.9" y="414.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.putInternal (104 samples, 7.53%)</title><rect x="302.9" y="387.0" width="88.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="305.9" y="398.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (13 samples, 0.94%)</title><rect x="302.9" y="371.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="305.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.07%)</title><rect x="304.6" y="355.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="307.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.07%)</title><rect x="304.6" y="339.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.07%)</title><rect x="304.6" y="323.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="307.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 0.65%)</title><rect x="305.4" y="355.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="308.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.36%)</title><rect x="305.4" y="339.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.14%)</title><rect x="308.0" y="323.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="311.0" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.14%)</title><rect x="308.0" y="307.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.14%)</title><rect x="308.0" y="291.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="311.0" y="302.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="308.8" y="275.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="311.8" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.29%)</title><rect x="309.7" y="339.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="312.7" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.29%)</title><rect x="309.7" y="323.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="312.7" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.29%)</title><rect x="309.7" y="307.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.7" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.29%)</title><rect x="309.7" y="291.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="312.7" y="302.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.14%)</title><rect x="310.5" y="275.0" width="1.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="313.5" y="286.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.07%)</title><rect x="311.4" y="259.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="314.4" y="270.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.07%)</title><rect x="311.4" y="243.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="314.4" y="254.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.07%)</title><rect x="312.3" y="275.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="315.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="313.1" y="355.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.07%)</title><rect x="313.1" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="316.1" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.07%)</title><rect x="313.1" y="323.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (3 samples, 0.22%)</title><rect x="314.0" y="371.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="317.0" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.22%)</title><rect x="314.0" y="355.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.0" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.22%)</title><rect x="314.0" y="339.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="317.0" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.22%)</title><rect x="314.0" y="323.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="317.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.22%)</title><rect x="314.0" y="307.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="317.0" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.22%)</title><rect x="314.0" y="291.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="317.0" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.14%)</title><rect x="314.0" y="275.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.0" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.14%)</title><rect x="314.0" y="259.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="317.0" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.07%)</title><rect x="315.7" y="275.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="318.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.07%)</title><rect x="315.7" y="259.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.7" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.07%)</title><rect x="315.7" y="243.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="318.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (86 samples, 6.22%)</title><rect x="316.5" y="371.0" width="73.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.5" y="382.0">ru/mail/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (85 samples, 6.15%)</title><rect x="316.5" y="355.0" width="72.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.5" y="366.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (85 samples, 6.15%)</title><rect x="316.5" y="339.0" width="72.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="319.5" y="350.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (83 samples, 6.01%)</title><rect x="317.4" y="323.0" width="70.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="320.4" y="334.0">Java_org..</text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.07%)</title><rect x="317.4" y="307.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="320.4" y="318.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="318.2" y="307.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="321.2" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (81 samples, 5.86%)</title><rect x="319.1" y="307.0" width="69.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="322.1" y="318.0">rocksdb..</text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.07%)</title><rect x="319.1" y="291.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="322.1" y="302.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.07%)</title><rect x="319.9" y="291.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="322.9" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (78 samples, 5.64%)</title><rect x="320.8" y="291.0" width="66.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="323.8" y="302.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (78 samples, 5.64%)</title><rect x="320.8" y="275.0" width="66.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="323.8" y="286.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (78 samples, 5.64%)</title><rect x="320.8" y="259.0" width="66.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="323.8" y="270.0">rocksdb..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.07%)</title><rect x="320.8" y="243.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="323.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (72 samples, 5.21%)</title><rect x="321.6" y="243.0" width="61.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="324.6" y="254.0">rocksd..</text>
</g>
<g>
<title>__pthread_cond_destroy (1 samples, 0.07%)</title><rect x="321.6" y="227.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="324.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.07%)</title><rect x="322.5" y="227.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="325.5" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (69 samples, 4.99%)</title><rect x="323.4" y="227.0" width="58.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="326.4" y="238.0">rocksd..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="325.9" y="211.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="328.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.07%)</title><rect x="326.8" y="211.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="329.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (9 samples, 0.65%)</title><rect x="327.6" y="211.0" width="7.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="330.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (8 samples, 0.58%)</title><rect x="327.6" y="195.0" width="6.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="330.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (8 samples, 0.58%)</title><rect x="327.6" y="179.0" width="6.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="330.6" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (3 samples, 0.22%)</title><rect x="328.5" y="163.0" width="2.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="331.5" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (3 samples, 0.22%)</title><rect x="331.0" y="163.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="334.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (3 samples, 0.22%)</title><rect x="331.0" y="147.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="334.0" y="158.0"></text>
</g>
<g>
<title>__libc_write (3 samples, 0.22%)</title><rect x="331.0" y="131.0" width="2.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="334.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.07%)</title><rect x="333.6" y="163.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="336.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="333.6" y="147.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="336.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.07%)</title><rect x="333.6" y="131.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="336.6" y="142.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.07%)</title><rect x="334.5" y="195.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="337.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (14 samples, 1.01%)</title><rect x="335.3" y="211.0" width="12.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="338.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (13 samples, 0.94%)</title><rect x="335.3" y="195.0" width="11.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="338.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (13 samples, 0.94%)</title><rect x="335.3" y="179.0" width="11.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="338.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 0.87%)</title><rect x="336.2" y="163.0" width="10.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="339.2" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (12 samples, 0.87%)</title><rect x="336.2" y="147.0" width="10.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="339.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (11 samples, 0.80%)</title><rect x="336.2" y="131.0" width="9.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="339.2" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (10 samples, 0.72%)</title><rect x="337.0" y="115.0" width="8.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="340.0" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (8 samples, 0.58%)</title><rect x="337.0" y="99.0" width="6.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="340.0" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (2 samples, 0.14%)</title><rect x="341.3" y="83.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="344.3" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.14%)</title><rect x="341.3" y="67.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="344.3" y="78.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.07%)</title><rect x="342.1" y="51.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="345.1" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.07%)</title><rect x="343.0" y="83.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="346.0" y="94.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.07%)</title><rect x="343.0" y="67.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="346.0" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.14%)</title><rect x="343.8" y="99.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="346.8" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (2 samples, 0.14%)</title><rect x="343.8" y="83.0" width="1.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="346.8" y="94.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.07%)</title><rect x="345.6" y="131.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="348.6" y="142.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) [clone .plt] (1 samples, 0.07%)</title><rect x="346.4" y="195.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="349.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (10 samples, 0.72%)</title><rect x="347.3" y="211.0" width="8.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="350.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (10 samples, 0.72%)</title><rect x="347.3" y="195.0" width="8.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="350.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (10 samples, 0.72%)</title><rect x="347.3" y="179.0" width="8.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="350.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.58%)</title><rect x="348.1" y="163.0" width="6.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="351.1" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (8 samples, 0.58%)</title><rect x="348.1" y="147.0" width="6.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="351.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.07%)</title><rect x="348.1" y="131.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="351.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (7 samples, 0.51%)</title><rect x="349.0" y="131.0" width="5.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="352.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (7 samples, 0.51%)</title><rect x="349.0" y="115.0" width="5.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="352.0" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (7 samples, 0.51%)</title><rect x="349.0" y="99.0" width="5.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="352.0" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (5 samples, 0.36%)</title><rect x="349.8" y="83.0" width="4.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="352.8" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (5 samples, 0.36%)</title><rect x="349.8" y="67.0" width="4.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="352.8" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.36%)</title><rect x="349.8" y="51.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="352.8" y="62.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="350.7" y="35.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="353.7" y="46.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.07%)</title><rect x="351.5" y="35.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="354.5" y="46.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.14%)</title><rect x="352.4" y="35.0" width="1.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="355.4" y="46.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.07%)</title><rect x="354.1" y="83.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="357.1" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="354.1" y="67.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="357.1" y="78.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.07%)</title><rect x="354.9" y="163.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="357.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.07%)</title><rect x="355.8" y="211.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="358.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (25 samples, 1.81%)</title><rect x="356.7" y="211.0" width="21.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="359.7" y="222.0">r..</text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.14%)</title><rect x="376.3" y="195.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="379.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (5 samples, 0.36%)</title><rect x="378.0" y="211.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="381.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (5 samples, 0.36%)</title><rect x="378.0" y="195.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="381.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.07%)</title><rect x="382.3" y="227.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="385.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.07%)</title><rect x="383.1" y="243.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="386.1" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.14%)</title><rect x="384.0" y="243.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="387.0" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="384.0" y="227.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="387.0" y="238.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.07%)</title><rect x="384.0" y="211.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="387.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) [clone .plt] (1 samples, 0.07%)</title><rect x="384.8" y="227.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="387.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.07%)</title><rect x="385.7" y="243.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="388.7" y="254.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.07%)</title><rect x="386.5" y="243.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="389.5" y="254.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.07%)</title><rect x="387.4" y="291.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="390.4" y="302.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.07%)</title><rect x="388.2" y="323.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="391.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (1 samples, 0.07%)</title><rect x="389.1" y="355.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="392.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (2 samples, 0.14%)</title><rect x="390.0" y="371.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (2 samples, 0.14%)</title><rect x="390.0" y="355.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.0" y="366.0"></text>
</g>
<g>
<title>[async_workers-1 tid=240136] (141 samples, 10.20%)</title><rect x="391.7" y="483.0" width="120.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="394.7" y="494.0">[async_workers-..</text>
</g>
<g>
<title>java/lang/Thread.run (141 samples, 10.20%)</title><rect x="391.7" y="467.0" width="120.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="394.7" y="478.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (141 samples, 10.20%)</title><rect x="391.7" y="451.0" width="120.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.7" y="462.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (141 samples, 10.20%)</title><rect x="391.7" y="435.0" width="120.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.7" y="446.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.14%)</title><rect x="391.7" y="419.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="394.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="391.7" y="403.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="391.7" y="387.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="394.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="391.7" y="371.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="394.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (27 samples, 1.95%)</title><rect x="393.4" y="419.0" width="23.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="396.4" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (27 samples, 1.95%)</title><rect x="393.4" y="403.0" width="23.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="396.4" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (24 samples, 1.74%)</title><rect x="393.4" y="387.0" width="20.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.14%)</title><rect x="393.4" y="371.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="396.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="393.4" y="355.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="396.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="393.4" y="339.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="396.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.07%)</title><rect x="394.2" y="339.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (22 samples, 1.59%)</title><rect x="395.1" y="371.0" width="18.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="398.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (21 samples, 1.52%)</title><rect x="395.9" y="355.0" width="18.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.9" y="366.0"></text>
</g>
<g>
<title>Unsafe_Park (18 samples, 1.30%)</title><rect x="395.9" y="339.0" width="15.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="398.9" y="350.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.07%)</title><rect x="396.8" y="323.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="399.8" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (9 samples, 0.65%)</title><rect x="397.6" y="323.0" width="7.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="400.6" y="334.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.14%)</title><rect x="401.1" y="307.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="404.1" y="318.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (2 samples, 0.14%)</title><rect x="401.1" y="291.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="404.1" y="302.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.07%)</title><rect x="402.8" y="307.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="405.8" y="318.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.14%)</title><rect x="403.6" y="307.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="406.6" y="318.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.07%)</title><rect x="405.3" y="323.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="408.3" y="334.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (5 samples, 0.36%)</title><rect x="406.2" y="323.0" width="4.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="409.2" y="334.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.07%)</title><rect x="410.4" y="323.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="413.4" y="334.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.22%)</title><rect x="411.3" y="339.0" width="2.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="414.3" y="350.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.07%)</title><rect x="411.3" y="323.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="414.3" y="334.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.14%)</title><rect x="412.2" y="323.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="415.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="413.9" y="387.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="413.9" y="371.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="416.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.07%)</title><rect x="413.9" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="416.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.14%)</title><rect x="414.7" y="387.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="414.7" y="371.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="417.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="414.7" y="355.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="414.7" y="339.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="417.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="414.7" y="323.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.7" y="334.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.07%)</title><rect x="414.7" y="307.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="417.7" y="318.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.07%)</title><rect x="414.7" y="291.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="417.7" y="302.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="415.6" y="307.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="418.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.run (112 samples, 8.10%)</title><rect x="416.4" y="419.0" width="95.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.4" y="430.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (112 samples, 8.10%)</title><rect x="416.4" y="403.0" width="95.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.4" y="414.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.putInternal (112 samples, 8.10%)</title><rect x="416.4" y="387.0" width="95.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.4" y="398.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (11 samples, 0.80%)</title><rect x="416.4" y="371.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="419.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.29%)</title><rect x="416.4" y="355.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.29%)</title><rect x="416.4" y="339.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="419.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.29%)</title><rect x="416.4" y="323.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="419.4" y="334.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.14%)</title><rect x="418.1" y="307.0" width="1.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="421.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.36%)</title><rect x="419.8" y="355.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.36%)</title><rect x="419.8" y="339.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="422.8" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.36%)</title><rect x="419.8" y="323.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="422.8" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.14%)</title><rect x="419.8" y="307.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="422.8" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.22%)</title><rect x="421.5" y="307.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="424.5" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.22%)</title><rect x="421.5" y="291.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="424.5" y="302.0"></text>
</g>
<g>
<title>__libc_send (3 samples, 0.22%)</title><rect x="421.5" y="275.0" width="2.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="424.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.14%)</title><rect x="424.1" y="355.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="427.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (2 samples, 0.14%)</title><rect x="425.8" y="371.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="428.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.14%)</title><rect x="425.8" y="355.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="428.8" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.14%)</title><rect x="425.8" y="339.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="428.8" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="425.8" y="323.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="428.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="425.8" y="307.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="428.8" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="425.8" y="291.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.8" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.14%)</title><rect x="425.8" y="275.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="428.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.14%)</title><rect x="425.8" y="259.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="428.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (98 samples, 7.09%)</title><rect x="427.5" y="371.0" width="83.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.5" y="382.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (97 samples, 7.02%)</title><rect x="427.5" y="355.0" width="82.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="430.5" y="366.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (97 samples, 7.02%)</title><rect x="427.5" y="339.0" width="82.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="430.5" y="350.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (92 samples, 6.66%)</title><rect x="428.4" y="323.0" width="78.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="431.4" y="334.0">Java_org_..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.07%)</title><rect x="428.4" y="307.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="431.4" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (91 samples, 6.58%)</title><rect x="429.2" y="307.0" width="77.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="432.2" y="318.0">rocksdb_p..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="429.2" y="291.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="432.2" y="302.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.07%)</title><rect x="430.1" y="291.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="433.1" y="302.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.07%)</title><rect x="430.1" y="275.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="433.1" y="286.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (89 samples, 6.44%)</title><rect x="430.9" y="291.0" width="76.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="433.9" y="302.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (89 samples, 6.44%)</title><rect x="430.9" y="275.0" width="76.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="433.9" y="286.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (88 samples, 6.37%)</title><rect x="430.9" y="259.0" width="75.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="433.9" y="270.0">rocksdb:..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.07%)</title><rect x="431.8" y="243.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="434.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.07%)</title><rect x="432.6" y="243.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="435.6" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (81 samples, 5.86%)</title><rect x="433.5" y="243.0" width="69.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="436.5" y="254.0">rocksdb..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.07%)</title><rect x="433.5" y="227.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="436.5" y="238.0"></text>
</g>
<g>
<title>__pthread_cond_destroy (1 samples, 0.07%)</title><rect x="434.4" y="227.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="437.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MemTableInsertStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.07%)</title><rect x="435.2" y="227.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="438.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (75 samples, 5.43%)</title><rect x="436.1" y="227.0" width="64.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="439.1" y="238.0">rocksdb..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.07%)</title><rect x="439.5" y="211.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="442.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (12 samples, 0.87%)</title><rect x="440.3" y="211.0" width="10.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="443.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (10 samples, 0.72%)</title><rect x="441.2" y="195.0" width="8.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="444.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (10 samples, 0.72%)</title><rect x="441.2" y="179.0" width="8.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="444.2" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="442.0" y="163.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="445.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (7 samples, 0.51%)</title><rect x="442.9" y="163.0" width="6.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="445.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) [clone .plt] (1 samples, 0.07%)</title><rect x="444.6" y="147.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="447.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (4 samples, 0.29%)</title><rect x="445.5" y="147.0" width="3.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="448.5" y="158.0"></text>
</g>
<g>
<title>__libc_write (3 samples, 0.22%)</title><rect x="445.5" y="131.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="448.5" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.07%)</title><rect x="448.0" y="131.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="451.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.07%)</title><rect x="448.9" y="163.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="451.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="448.9" y="147.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="451.9" y="158.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="449.7" y="195.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="452.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (1 samples, 0.07%)</title><rect x="450.6" y="211.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="453.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() [clone .plt] (1 samples, 0.07%)</title><rect x="451.4" y="211.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="454.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (1 samples, 0.07%)</title><rect x="452.3" y="211.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="455.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.07%)</title><rect x="453.1" y="211.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="456.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const [clone .plt] (1 samples, 0.07%)</title><rect x="454.0" y="211.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="457.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (19 samples, 1.37%)</title><rect x="454.8" y="211.0" width="16.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="457.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (19 samples, 1.37%)</title><rect x="454.8" y="195.0" width="16.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="457.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (19 samples, 1.37%)</title><rect x="454.8" y="179.0" width="16.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="457.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (16 samples, 1.16%)</title><rect x="456.6" y="163.0" width="13.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="459.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (16 samples, 1.16%)</title><rect x="456.6" y="147.0" width="13.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="459.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (14 samples, 1.01%)</title><rect x="458.3" y="131.0" width="11.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="461.3" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (2 samples, 0.14%)</title><rect x="459.1" y="115.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="462.1" y="126.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.14%)</title><rect x="459.1" y="99.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="462.1" y="110.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (11 samples, 0.80%)</title><rect x="460.8" y="115.0" width="9.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="463.8" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (11 samples, 0.80%)</title><rect x="460.8" y="99.0" width="9.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="463.8" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (5 samples, 0.36%)</title><rect x="464.2" y="83.0" width="4.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="467.2" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.36%)</title><rect x="464.2" y="67.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="467.2" y="78.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (3 samples, 0.22%)</title><rect x="465.9" y="51.0" width="2.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="468.9" y="62.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="468.5" y="83.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="471.5" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.07%)</title><rect x="469.4" y="83.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="472.4" y="94.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.07%)</title><rect x="469.4" y="67.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="472.4" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) [clone .plt] (1 samples, 0.07%)</title><rect x="470.2" y="163.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="473.2" y="174.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (6 samples, 0.43%)</title><rect x="471.1" y="211.0" width="5.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="474.1" y="222.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.07%)</title><rect x="471.1" y="195.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="474.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (5 samples, 0.36%)</title><rect x="471.9" y="195.0" width="4.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="474.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (5 samples, 0.36%)</title><rect x="471.9" y="179.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="474.9" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.29%)</title><rect x="472.8" y="163.0" width="3.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="475.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.29%)</title><rect x="472.8" y="147.0" width="3.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="475.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (3 samples, 0.22%)</title><rect x="473.6" y="131.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="476.6" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (3 samples, 0.22%)</title><rect x="473.6" y="115.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="476.6" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.22%)</title><rect x="473.6" y="99.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="476.6" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (3 samples, 0.22%)</title><rect x="473.6" y="83.0" width="2.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="476.6" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="475.3" y="67.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="478.3" y="78.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="475.3" y="51.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="478.3" y="62.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (17 samples, 1.23%)</title><rect x="476.2" y="211.0" width="14.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="479.2" y="222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.22%)</title><rect x="488.1" y="195.0" width="2.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="491.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (10 samples, 0.72%)</title><rect x="490.7" y="211.0" width="8.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="493.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (10 samples, 0.72%)</title><rect x="490.7" y="195.0" width="8.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="493.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) [clone .plt] (1 samples, 0.07%)</title><rect x="499.2" y="211.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="502.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (2 samples, 0.14%)</title><rect x="500.1" y="227.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="503.1" y="238.0"></text>
</g>
<g>
<title>std::condition_variable::~condition_variable() (1 samples, 0.07%)</title><rect x="501.8" y="227.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="504.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.14%)</title><rect x="502.7" y="243.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="505.7" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (1 samples, 0.07%)</title><rect x="502.7" y="227.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="505.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="503.5" y="227.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="506.5" y="238.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.07%)</title><rect x="503.5" y="211.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="506.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="504.4" y="243.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="507.4" y="254.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.07%)</title><rect x="505.2" y="243.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="508.2" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.07%)</title><rect x="506.1" y="259.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="509.1" y="270.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.29%)</title><rect x="506.9" y="323.0" width="3.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="509.9" y="334.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.14%)</title><rect x="506.9" y="307.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="509.9" y="318.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.07%)</title><rect x="508.6" y="307.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="511.6" y="318.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.07%)</title><rect x="509.5" y="307.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="512.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.07%)</title><rect x="510.3" y="355.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="513.3" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.07%)</title><rect x="510.3" y="339.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="513.3" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="510.3" y="323.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="513.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="510.3" y="307.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.3" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="510.3" y="291.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="513.3" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="510.3" y="275.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.3" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="510.3" y="259.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (1 samples, 0.07%)</title><rect x="511.2" y="371.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="514.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.07%)</title><rect x="511.2" y="355.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.2" y="366.0"></text>
</g>
<g>
<title>[async_workers-2 tid=240142] (134 samples, 9.70%)</title><rect x="512.1" y="483.0" width="114.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="515.1" y="494.0">[async_workers..</text>
</g>
<g>
<title>java/lang/Thread.run (134 samples, 9.70%)</title><rect x="512.1" y="467.0" width="114.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="515.1" y="478.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (134 samples, 9.70%)</title><rect x="512.1" y="451.0" width="114.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.1" y="462.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (134 samples, 9.70%)</title><rect x="512.1" y="435.0" width="114.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.1" y="446.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (30 samples, 2.17%)</title><rect x="512.1" y="419.0" width="25.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.1" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (30 samples, 2.17%)</title><rect x="512.1" y="403.0" width="25.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="515.1" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (22 samples, 1.59%)</title><rect x="512.9" y="387.0" width="18.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.14%)</title><rect x="512.9" y="371.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.07%)</title><rect x="513.8" y="355.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="516.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.07%)</title><rect x="513.8" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="516.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.14%)</title><rect x="514.6" y="371.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="517.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="514.6" y="355.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="517.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="514.6" y="339.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="517.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="514.6" y="323.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="517.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="514.6" y="307.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.6" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.07%)</title><rect x="514.6" y="291.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="517.6" y="302.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.07%)</title><rect x="514.6" y="275.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="517.6" y="286.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="515.5" y="291.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="518.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (18 samples, 1.30%)</title><rect x="516.3" y="371.0" width="15.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="519.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 1.30%)</title><rect x="516.3" y="355.0" width="15.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.3" y="366.0"></text>
</g>
<g>
<title>Unsafe_Park (11 samples, 0.80%)</title><rect x="517.2" y="339.0" width="9.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="520.2" y="350.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.07%)</title><rect x="518.0" y="323.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="521.0" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="518.9" y="323.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="521.9" y="334.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (6 samples, 0.43%)</title><rect x="519.7" y="323.0" width="5.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="522.7" y="334.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="524.9" y="323.0" width="0.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="527.9" y="334.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.07%)</title><rect x="525.7" y="323.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="528.7" y="334.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.29%)</title><rect x="526.6" y="339.0" width="3.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="529.6" y="350.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.14%)</title><rect x="526.6" y="323.0" width="1.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="529.6" y="334.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.14%)</title><rect x="528.3" y="323.0" width="1.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="531.3" y="334.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.14%)</title><rect x="530.0" y="339.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="533.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.22%)</title><rect x="531.7" y="387.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="534.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.22%)</title><rect x="531.7" y="371.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.22%)</title><rect x="531.7" y="355.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="534.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="533.4" y="339.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="536.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="533.4" y="323.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="536.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="533.4" y="307.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="536.4" y="318.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="533.4" y="291.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="536.4" y="302.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.07%)</title><rect x="533.4" y="275.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="536.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.29%)</title><rect x="534.3" y="387.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="537.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.29%)</title><rect x="534.3" y="371.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.29%)</title><rect x="534.3" y="355.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="537.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.29%)</title><rect x="534.3" y="339.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.29%)</title><rect x="534.3" y="323.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="537.3" y="334.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.07%)</title><rect x="534.3" y="307.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="537.3" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.07%)</title><rect x="535.1" y="307.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="538.1" y="318.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.07%)</title><rect x="535.1" y="291.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="538.1" y="302.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.14%)</title><rect x="536.0" y="307.0" width="1.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="539.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.run (104 samples, 7.53%)</title><rect x="537.7" y="419.0" width="88.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="540.7" y="430.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (104 samples, 7.53%)</title><rect x="537.7" y="403.0" width="88.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="540.7" y="414.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.putInternal (104 samples, 7.53%)</title><rect x="537.7" y="387.0" width="88.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="540.7" y="398.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 1.09%)</title><rect x="537.7" y="371.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="540.7" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="539.4" y="355.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="542.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.14%)</title><rect x="540.2" y="355.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.14%)</title><rect x="540.2" y="339.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="543.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.14%)</title><rect x="540.2" y="323.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.2" y="334.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="540.2" y="307.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="543.2" y="318.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.07%)</title><rect x="540.2" y="291.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="543.2" y="302.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="541.1" y="307.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="544.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 0.65%)</title><rect x="541.9" y="355.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="544.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.14%)</title><rect x="541.9" y="339.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.9" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.14%)</title><rect x="541.9" y="323.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.9" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.14%)</title><rect x="541.9" y="307.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="544.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.14%)</title><rect x="541.9" y="291.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="544.9" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.51%)</title><rect x="543.6" y="339.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="546.6" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.51%)</title><rect x="543.6" y="323.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.6" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (7 samples, 0.51%)</title><rect x="543.6" y="307.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.6" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (7 samples, 0.51%)</title><rect x="543.6" y="291.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="546.6" y="302.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.14%)</title><rect x="543.6" y="275.0" width="1.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="546.6" y="286.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.07%)</title><rect x="544.5" y="259.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="547.5" y="270.0"></text>
</g>
<g>
<title>__libc_send (5 samples, 0.36%)</title><rect x="545.4" y="275.0" width="4.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="548.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="549.6" y="355.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.07%)</title><rect x="549.6" y="339.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.07%)</title><rect x="549.6" y="323.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (1 samples, 0.07%)</title><rect x="550.5" y="371.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="553.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="550.5" y="355.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="553.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="550.5" y="339.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="550.5" y="323.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="553.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="550.5" y="307.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="553.5" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="550.5" y="291.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="553.5" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="550.5" y="275.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="553.5" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="550.5" y="259.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.5" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.07%)</title><rect x="550.5" y="243.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="553.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (87 samples, 6.30%)</title><rect x="551.3" y="371.0" width="74.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.3" y="382.0">ru/mail/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (87 samples, 6.30%)</title><rect x="551.3" y="355.0" width="74.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="554.3" y="366.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (87 samples, 6.30%)</title><rect x="551.3" y="339.0" width="74.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.3" y="350.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (83 samples, 6.01%)</title><rect x="551.3" y="323.0" width="70.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="554.3" y="334.0">Java_org..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (83 samples, 6.01%)</title><rect x="551.3" y="307.0" width="70.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="554.3" y="318.0">rocksdb_..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.22%)</title><rect x="551.3" y="291.0" width="2.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="554.3" y="302.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.07%)</title><rect x="552.2" y="275.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="555.2" y="286.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.07%)</title><rect x="553.0" y="275.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="556.0" y="286.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.07%)</title><rect x="553.0" y="259.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="556.0" y="270.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.07%)</title><rect x="553.9" y="291.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="556.9" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (79 samples, 5.72%)</title><rect x="554.7" y="291.0" width="67.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="557.7" y="302.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="554.7" y="275.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="557.7" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (78 samples, 5.64%)</title><rect x="555.6" y="275.0" width="66.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="558.6" y="286.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (78 samples, 5.64%)</title><rect x="555.6" y="259.0" width="66.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="558.6" y="270.0">rocksdb..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.07%)</title><rect x="555.6" y="243.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="558.6" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (72 samples, 5.21%)</title><rect x="556.5" y="243.0" width="61.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="559.5" y="254.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::MemTableInsertStatusCheck(rocksdb::Status const&amp;) (2 samples, 0.14%)</title><rect x="556.5" y="227.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="559.5" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (69 samples, 4.99%)</title><rect x="558.2" y="227.0" width="58.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="561.2" y="238.0">rocksd..</text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="559.9" y="211.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="562.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.07%)</title><rect x="560.7" y="211.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="563.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (11 samples, 0.80%)</title><rect x="561.6" y="211.0" width="9.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="564.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (10 samples, 0.72%)</title><rect x="561.6" y="195.0" width="8.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="564.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (10 samples, 0.72%)</title><rect x="561.6" y="179.0" width="8.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="564.6" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="562.4" y="163.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="565.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (6 samples, 0.43%)</title><rect x="563.3" y="163.0" width="5.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="566.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.07%)</title><rect x="564.1" y="147.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="567.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.07%)</title><rect x="565.0" y="147.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="568.0" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (3 samples, 0.22%)</title><rect x="565.8" y="147.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="568.8" y="158.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.14%)</title><rect x="566.7" y="131.0" width="1.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="569.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.14%)</title><rect x="568.4" y="163.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="571.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.07%)</title><rect x="568.4" y="147.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="571.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="569.3" y="147.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="572.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="570.1" y="195.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="573.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.07%)</title><rect x="571.0" y="211.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="574.0" y="222.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="571.0" y="195.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="574.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (14 samples, 1.01%)</title><rect x="571.8" y="211.0" width="12.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="574.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (14 samples, 1.01%)</title><rect x="571.8" y="195.0" width="12.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="574.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (14 samples, 1.01%)</title><rect x="571.8" y="179.0" width="12.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="574.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 0.94%)</title><rect x="571.8" y="163.0" width="11.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="574.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (1 samples, 0.07%)</title><rect x="571.8" y="147.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="574.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (12 samples, 0.87%)</title><rect x="572.7" y="147.0" width="10.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="575.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (9 samples, 0.65%)</title><rect x="573.5" y="131.0" width="7.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="576.5" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="574.4" y="115.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="577.4" y="126.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.07%)</title><rect x="574.4" y="99.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="577.4" y="110.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 0.36%)</title><rect x="575.2" y="115.0" width="4.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="578.2" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (4 samples, 0.29%)</title><rect x="575.2" y="99.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="578.2" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (2 samples, 0.14%)</title><rect x="576.9" y="83.0" width="1.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="579.9" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="576.9" y="67.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="579.9" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.07%)</title><rect x="577.8" y="67.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="580.8" y="78.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.07%)</title><rect x="577.8" y="51.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="580.8" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.07%)</title><rect x="578.7" y="99.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="581.7" y="110.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.07%)</title><rect x="578.7" y="83.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="581.7" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.14%)</title><rect x="579.5" y="115.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="582.5" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (2 samples, 0.14%)</title><rect x="579.5" y="99.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="582.5" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (1 samples, 0.07%)</title><rect x="581.2" y="131.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="584.2" y="142.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.07%)</title><rect x="582.1" y="131.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="585.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.07%)</title><rect x="582.9" y="163.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="585.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (4 samples, 0.29%)</title><rect x="583.8" y="211.0" width="3.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="586.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.22%)</title><rect x="584.6" y="195.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="587.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.22%)</title><rect x="584.6" y="179.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="587.6" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.22%)</title><rect x="584.6" y="163.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="587.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.07%)</title><rect x="584.6" y="147.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="587.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.07%)</title><rect x="585.5" y="147.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="588.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.07%)</title><rect x="585.5" y="131.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="588.5" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.07%)</title><rect x="585.5" y="115.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="588.5" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.07%)</title><rect x="585.5" y="99.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="588.5" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="585.5" y="83.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="588.5" y="94.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_insert_unique_pos(rocksdb::MemTable* const&amp;) (1 samples, 0.07%)</title><rect x="586.3" y="147.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="589.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (27 samples, 1.95%)</title><rect x="587.2" y="211.0" width="23.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="590.2" y="222.0">r..</text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.22%)</title><rect x="606.8" y="195.0" width="2.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="609.8" y="206.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.07%)</title><rect x="609.4" y="195.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="612.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (5 samples, 0.36%)</title><rect x="610.2" y="211.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="613.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (4 samples, 0.29%)</title><rect x="610.2" y="195.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="613.2" y="206.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="612.8" y="179.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="615.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.07%)</title><rect x="613.7" y="195.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="616.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.07%)</title><rect x="614.5" y="211.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="617.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.07%)</title><rect x="614.5" y="195.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="617.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.07%)</title><rect x="615.4" y="211.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="618.4" y="222.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;*) [clone .plt] (1 samples, 0.07%)</title><rect x="616.2" y="211.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="619.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.07%)</title><rect x="617.1" y="227.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="620.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.29%)</title><rect x="617.9" y="243.0" width="3.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="620.9" y="254.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.07%)</title><rect x="617.9" y="227.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="620.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.22%)</title><rect x="618.8" y="227.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="621.8" y="238.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.07%)</title><rect x="621.3" y="243.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="624.3" y="254.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.29%)</title><rect x="622.2" y="323.0" width="3.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="625.2" y="334.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="622.2" y="307.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="625.2" y="318.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.07%)</title><rect x="623.1" y="307.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="626.1" y="318.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.14%)</title><rect x="623.9" y="307.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="626.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (1 samples, 0.07%)</title><rect x="625.6" y="371.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="628.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.07%)</title><rect x="625.6" y="355.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.6" y="366.0"></text>
</g>
<g>
<title>[async_workers-3 tid=240135] (125 samples, 9.04%)</title><rect x="626.5" y="483.0" width="106.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="629.5" y="494.0">[async_worker..</text>
</g>
<g>
<title>java/lang/Thread.run (125 samples, 9.04%)</title><rect x="626.5" y="467.0" width="106.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="629.5" y="478.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (125 samples, 9.04%)</title><rect x="626.5" y="451.0" width="106.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.5" y="462.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (125 samples, 9.04%)</title><rect x="626.5" y="435.0" width="106.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="629.5" y="446.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.07%)</title><rect x="626.5" y="419.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="626.5" y="403.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="629.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="626.5" y="387.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (27 samples, 1.95%)</title><rect x="627.3" y="419.0" width="23.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.3" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (27 samples, 1.95%)</title><rect x="627.3" y="403.0" width="23.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="630.3" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (20 samples, 1.45%)</title><rect x="627.3" y="387.0" width="17.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.14%)</title><rect x="628.2" y="371.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="631.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (2 samples, 0.14%)</title><rect x="628.2" y="355.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (2 samples, 0.14%)</title><rect x="628.2" y="339.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="631.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.07%)</title><rect x="629.9" y="371.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="629.9" y="355.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.07%)</title><rect x="630.7" y="371.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (15 samples, 1.09%)</title><rect x="631.6" y="371.0" width="12.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (15 samples, 1.09%)</title><rect x="631.6" y="355.0" width="12.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.6" y="366.0"></text>
</g>
<g>
<title>Unsafe_Park (12 samples, 0.87%)</title><rect x="632.4" y="339.0" width="10.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="635.4" y="350.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.07%)</title><rect x="633.3" y="323.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="636.3" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.29%)</title><rect x="634.2" y="323.0" width="3.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="637.2" y="334.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.07%)</title><rect x="635.9" y="307.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="638.9" y="318.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="636.7" y="307.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="639.7" y="318.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.07%)</title><rect x="637.6" y="323.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="640.6" y="334.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.07%)</title><rect x="638.4" y="323.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="641.4" y="334.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.22%)</title><rect x="639.3" y="323.0" width="2.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="642.3" y="334.0"></text>
</g>
<g>
<title>pthread_mutex_trylock@plt (1 samples, 0.07%)</title><rect x="641.8" y="323.0" width="0.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="644.8" y="334.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.14%)</title><rect x="642.7" y="339.0" width="1.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="645.7" y="350.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.07%)</title><rect x="642.7" y="323.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="645.7" y="334.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.07%)</title><rect x="643.5" y="323.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="646.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.51%)</title><rect x="644.4" y="387.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.51%)</title><rect x="644.4" y="371.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.51%)</title><rect x="644.4" y="355.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.51%)</title><rect x="644.4" y="339.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.51%)</title><rect x="644.4" y="323.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.4" y="334.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.22%)</title><rect x="644.4" y="307.0" width="2.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="647.4" y="318.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.07%)</title><rect x="644.4" y="291.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="647.4" y="302.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.07%)</title><rect x="645.3" y="291.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="648.3" y="302.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.07%)</title><rect x="646.1" y="291.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="649.1" y="302.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.29%)</title><rect x="647.0" y="307.0" width="3.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="650.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.run (97 samples, 7.02%)</title><rect x="650.4" y="419.0" width="82.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.4" y="430.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (97 samples, 7.02%)</title><rect x="650.4" y="403.0" width="82.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="653.4" y="414.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.putInternal (97 samples, 7.02%)</title><rect x="650.4" y="387.0" width="82.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.4" y="398.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (11 samples, 0.80%)</title><rect x="650.4" y="371.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="653.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 0.72%)</title><rect x="651.2" y="355.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="654.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.29%)</title><rect x="651.2" y="339.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.22%)</title><rect x="652.1" y="323.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.1" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.22%)</title><rect x="652.1" y="307.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="655.1" y="318.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.22%)</title><rect x="652.1" y="291.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="655.1" y="302.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.14%)</title><rect x="652.9" y="275.0" width="1.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="655.9" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.43%)</title><rect x="654.6" y="339.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.6" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.43%)</title><rect x="654.6" y="323.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.6" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 0.43%)</title><rect x="654.6" y="307.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="657.6" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (6 samples, 0.43%)</title><rect x="654.6" y="291.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="657.6" y="302.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.14%)</title><rect x="654.6" y="275.0" width="1.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="657.6" y="286.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.14%)</title><rect x="654.6" y="259.0" width="1.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="657.6" y="270.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.07%)</title><rect x="655.5" y="243.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="658.5" y="254.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.07%)</title><rect x="655.5" y="227.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="658.5" y="238.0"></text>
</g>
<g>
<title>__libc_send (4 samples, 0.29%)</title><rect x="656.4" y="275.0" width="3.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="659.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (2 samples, 0.14%)</title><rect x="659.8" y="371.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="662.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.14%)</title><rect x="659.8" y="355.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="662.8" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.14%)</title><rect x="659.8" y="339.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="662.8" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="659.8" y="323.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="659.8" y="307.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.8" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="659.8" y="291.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="662.8" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.14%)</title><rect x="659.8" y="275.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.14%)</title><rect x="659.8" y="259.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (84 samples, 6.08%)</title><rect x="661.5" y="371.0" width="71.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="664.5" y="382.0">ru/mail/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (82 samples, 5.93%)</title><rect x="661.5" y="355.0" width="70.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="664.5" y="366.0">org/rock..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="662.3" y="339.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="665.3" y="350.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (80 samples, 5.79%)</title><rect x="663.2" y="339.0" width="68.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.2" y="350.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (76 samples, 5.50%)</title><rect x="664.0" y="323.0" width="64.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="667.0" y="334.0">Java_or..</text>
</g>
<g>
<title>malloc (1 samples, 0.07%)</title><rect x="664.0" y="307.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="667.0" y="318.0"></text>
</g>
<g>
<title>operator delete[](void*) [clone .plt] (1 samples, 0.07%)</title><rect x="664.9" y="307.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="667.9" y="318.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.07%)</title><rect x="665.7" y="307.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="668.7" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (73 samples, 5.28%)</title><rect x="666.6" y="307.0" width="62.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="669.6" y="318.0">rocksd..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.07%)</title><rect x="666.6" y="291.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="669.6" y="302.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.07%)</title><rect x="667.5" y="291.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="670.5" y="302.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.07%)</title><rect x="667.5" y="275.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="670.5" y="286.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.07%)</title><rect x="667.5" y="259.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="670.5" y="270.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (71 samples, 5.14%)</title><rect x="668.3" y="291.0" width="60.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="671.3" y="302.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (71 samples, 5.14%)</title><rect x="668.3" y="275.0" width="60.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="671.3" y="286.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (71 samples, 5.14%)</title><rect x="668.3" y="259.0" width="60.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="671.3" y="270.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (66 samples, 4.78%)</title><rect x="668.3" y="243.0" width="56.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="671.3" y="254.0">rocksd..</text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.07%)</title><rect x="668.3" y="227.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="671.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (61 samples, 4.41%)</title><rect x="669.2" y="227.0" width="52.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="672.2" y="238.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.14%)</title><rect x="670.9" y="211.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="673.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.07%)</title><rect x="672.6" y="211.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="675.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (1 samples, 0.07%)</title><rect x="672.6" y="195.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="675.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (8 samples, 0.58%)</title><rect x="673.4" y="211.0" width="6.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="676.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (8 samples, 0.58%)</title><rect x="673.4" y="195.0" width="6.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="676.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (8 samples, 0.58%)</title><rect x="673.4" y="179.0" width="6.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="676.4" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="675.1" y="163.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="678.1" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.14%)</title><rect x="676.0" y="163.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="679.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.07%)</title><rect x="676.8" y="147.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="679.8" y="158.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.07%)</title><rect x="676.8" y="131.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="679.8" y="142.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) [clone .plt] (1 samples, 0.07%)</title><rect x="677.7" y="163.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="680.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.14%)</title><rect x="678.6" y="163.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="681.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.07%)</title><rect x="678.6" y="147.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="681.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="679.4" y="147.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="682.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.07%)</title><rect x="679.4" y="131.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="682.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() [clone .plt] (1 samples, 0.07%)</title><rect x="680.3" y="211.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="683.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (15 samples, 1.09%)</title><rect x="681.1" y="211.0" width="12.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="684.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (15 samples, 1.09%)</title><rect x="681.1" y="195.0" width="12.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="684.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (15 samples, 1.09%)</title><rect x="681.1" y="179.0" width="12.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="684.1" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (15 samples, 1.09%)</title><rect x="681.1" y="163.0" width="12.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="684.1" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (14 samples, 1.01%)</title><rect x="682.0" y="147.0" width="11.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="685.0" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (12 samples, 0.87%)</title><rect x="683.7" y="131.0" width="10.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="686.7" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (8 samples, 0.58%)</title><rect x="685.4" y="115.0" width="6.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="688.4" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (8 samples, 0.58%)</title><rect x="685.4" y="99.0" width="6.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="688.4" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (5 samples, 0.36%)</title><rect x="687.9" y="83.0" width="4.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="690.9" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.36%)</title><rect x="687.9" y="67.0" width="4.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="690.9" y="78.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.14%)</title><rect x="688.8" y="51.0" width="1.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="691.8" y="62.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="690.5" y="51.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="693.5" y="62.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.07%)</title><rect x="691.4" y="51.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="694.4" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.07%)</title><rect x="692.2" y="115.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="695.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.07%)</title><rect x="693.1" y="115.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="696.1" y="126.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (7 samples, 0.51%)</title><rect x="693.9" y="211.0" width="6.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="696.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 0.43%)</title><rect x="694.8" y="195.0" width="5.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="697.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (6 samples, 0.43%)</title><rect x="694.8" y="179.0" width="5.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="697.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.36%)</title><rect x="695.6" y="163.0" width="4.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="698.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (5 samples, 0.36%)</title><rect x="695.6" y="147.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="698.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (5 samples, 0.36%)</title><rect x="695.6" y="131.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="698.6" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.07%)</title><rect x="696.5" y="115.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="699.5" y="126.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (3 samples, 0.22%)</title><rect x="697.3" y="115.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="700.3" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.22%)</title><rect x="697.3" y="99.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="700.3" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (3 samples, 0.22%)</title><rect x="697.3" y="83.0" width="2.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="700.3" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="699.0" y="67.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="702.0" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.07%)</title><rect x="699.0" y="51.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="702.0" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.07%)</title><rect x="699.0" y="35.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="702.0" y="46.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (16 samples, 1.16%)</title><rect x="699.9" y="211.0" width="13.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="702.9" y="222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.14%)</title><rect x="711.9" y="195.0" width="1.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="714.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (7 samples, 0.51%)</title><rect x="713.6" y="211.0" width="5.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="716.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (7 samples, 0.51%)</title><rect x="713.6" y="195.0" width="5.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="716.6" y="206.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="718.7" y="179.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="721.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (2 samples, 0.14%)</title><rect x="719.5" y="211.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="722.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.07%)</title><rect x="721.2" y="227.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="724.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (1 samples, 0.07%)</title><rect x="722.1" y="227.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="725.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.07%)</title><rect x="723.0" y="227.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="726.0" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.07%)</title><rect x="723.8" y="227.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="726.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.07%)</title><rect x="724.7" y="243.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="727.7" y="254.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.07%)</title><rect x="725.5" y="243.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="728.5" y="254.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (3 samples, 0.22%)</title><rect x="726.4" y="243.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="729.4" y="254.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="728.9" y="323.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="731.9" y="334.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.07%)</title><rect x="728.9" y="307.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="731.9" y="318.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="729.8" y="323.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="732.8" y="334.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.07%)</title><rect x="730.6" y="323.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="733.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (2 samples, 0.14%)</title><rect x="731.5" y="355.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.5" y="366.0"></text>
</g>
<g>
<title>[async_workers-4 tid=240138] (132 samples, 9.55%)</title><rect x="733.2" y="483.0" width="112.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="736.2" y="494.0">[async_workers..</text>
</g>
<g>
<title>java/lang/Thread.run (132 samples, 9.55%)</title><rect x="733.2" y="467.0" width="112.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.2" y="478.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (132 samples, 9.55%)</title><rect x="733.2" y="451.0" width="112.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="736.2" y="462.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (132 samples, 9.55%)</title><rect x="733.2" y="435.0" width="112.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="736.2" y="446.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (31 samples, 2.24%)</title><rect x="733.2" y="419.0" width="26.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="736.2" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (31 samples, 2.24%)</title><rect x="733.2" y="403.0" width="26.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="736.2" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (23 samples, 1.66%)</title><rect x="734.1" y="387.0" width="19.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="737.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (5 samples, 0.36%)</title><rect x="734.1" y="371.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="737.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.29%)</title><rect x="734.9" y="355.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="737.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.29%)</title><rect x="734.9" y="339.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="737.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.22%)</title><rect x="735.8" y="323.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="738.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.22%)</title><rect x="735.8" y="307.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="738.8" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.22%)</title><rect x="735.8" y="291.0" width="2.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="738.8" y="302.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.07%)</title><rect x="735.8" y="275.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="738.8" y="286.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.07%)</title><rect x="736.6" y="275.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="739.6" y="286.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="737.5" y="275.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="740.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (18 samples, 1.30%)</title><rect x="738.3" y="371.0" width="15.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="741.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 1.30%)</title><rect x="738.3" y="355.0" width="15.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="741.3" y="366.0"></text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.72%)</title><rect x="739.2" y="339.0" width="8.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="742.2" y="350.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.07%)</title><rect x="739.2" y="323.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="742.2" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.29%)</title><rect x="740.0" y="323.0" width="3.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="743.0" y="334.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.07%)</title><rect x="743.4" y="323.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="746.4" y="334.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.07%)</title><rect x="744.3" y="323.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="747.3" y="334.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.22%)</title><rect x="745.2" y="323.0" width="2.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="748.2" y="334.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.51%)</title><rect x="747.7" y="339.0" width="6.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="750.7" y="350.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.14%)</title><rect x="747.7" y="323.0" width="1.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="750.7" y="334.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="749.4" y="323.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="752.4" y="334.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (4 samples, 0.29%)</title><rect x="750.3" y="323.0" width="3.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="753.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.14%)</title><rect x="753.7" y="387.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.14%)</title><rect x="753.7" y="371.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.14%)</title><rect x="753.7" y="355.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.14%)</title><rect x="753.7" y="339.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="756.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.14%)</title><rect x="753.7" y="323.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="756.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.14%)</title><rect x="753.7" y="307.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="756.7" y="318.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.14%)</title><rect x="753.7" y="291.0" width="1.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="756.7" y="302.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="753.7" y="275.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="756.7" y="286.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="753.7" y="259.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="756.7" y="270.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="754.5" y="275.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="757.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.36%)</title><rect x="755.4" y="387.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="758.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.36%)</title><rect x="755.4" y="371.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="758.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.36%)</title><rect x="755.4" y="355.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="758.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.36%)</title><rect x="755.4" y="339.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="758.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.36%)</title><rect x="755.4" y="323.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="758.4" y="334.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.29%)</title><rect x="755.4" y="307.0" width="3.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="758.4" y="318.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.07%)</title><rect x="755.4" y="291.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="758.4" y="302.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.07%)</title><rect x="756.3" y="291.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="759.3" y="302.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.14%)</title><rect x="757.1" y="291.0" width="1.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="760.1" y="302.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="758.8" y="307.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="761.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.run (101 samples, 7.31%)</title><rect x="759.7" y="419.0" width="86.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.7" y="430.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (101 samples, 7.31%)</title><rect x="759.7" y="403.0" width="86.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="762.7" y="414.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.putInternal (101 samples, 7.31%)</title><rect x="759.7" y="387.0" width="86.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="762.7" y="398.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 0.51%)</title><rect x="759.7" y="371.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.14%)</title><rect x="760.5" y="355.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="763.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.14%)</title><rect x="760.5" y="339.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="763.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.14%)</title><rect x="760.5" y="323.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="763.5" y="334.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="761.4" y="307.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="764.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.22%)</title><rect x="762.2" y="355.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="765.2" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.22%)</title><rect x="762.2" y="339.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="765.2" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.22%)</title><rect x="762.2" y="323.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.2" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.22%)</title><rect x="762.2" y="307.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.2" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.22%)</title><rect x="762.2" y="291.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="765.2" y="302.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.14%)</title><rect x="762.2" y="275.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="765.2" y="286.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.07%)</title><rect x="763.1" y="259.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="766.1" y="270.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.07%)</title><rect x="763.9" y="275.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="766.9" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="764.8" y="355.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="767.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (3 samples, 0.22%)</title><rect x="765.6" y="371.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="768.6" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.22%)</title><rect x="765.6" y="355.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.22%)</title><rect x="765.6" y="339.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="768.6" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.22%)</title><rect x="765.6" y="323.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="768.6" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.22%)</title><rect x="765.6" y="307.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="768.6" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.22%)</title><rect x="765.6" y="291.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.6" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.22%)</title><rect x="765.6" y="275.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="768.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.22%)</title><rect x="765.6" y="259.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.6" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.07%)</title><rect x="767.4" y="243.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (91 samples, 6.58%)</title><rect x="768.2" y="371.0" width="77.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="771.2" y="382.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (91 samples, 6.58%)</title><rect x="768.2" y="355.0" width="77.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="771.2" y="366.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (91 samples, 6.58%)</title><rect x="768.2" y="339.0" width="77.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="771.2" y="350.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (90 samples, 6.51%)</title><rect x="768.2" y="323.0" width="76.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="771.2" y="334.0">Java_org..</text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.07%)</title><rect x="768.2" y="307.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="771.2" y="318.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="769.1" y="307.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="772.1" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (88 samples, 6.37%)</title><rect x="769.9" y="307.0" width="75.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="772.9" y="318.0">rocksdb_..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (87 samples, 6.30%)</title><rect x="769.9" y="291.0" width="74.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="772.9" y="302.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (87 samples, 6.30%)</title><rect x="769.9" y="275.0" width="74.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="772.9" y="286.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (86 samples, 6.22%)</title><rect x="769.9" y="259.0" width="73.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="772.9" y="270.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (81 samples, 5.86%)</title><rect x="771.6" y="243.0" width="69.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="774.6" y="254.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.07%)</title><rect x="771.6" y="227.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="774.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (79 samples, 5.72%)</title><rect x="772.5" y="227.0" width="67.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="775.5" y="238.0">rocksdb..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.07%)</title><rect x="777.6" y="211.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="780.6" y="222.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="778.5" y="211.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="781.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.14%)</title><rect x="779.3" y="211.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="782.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (9 samples, 0.65%)</title><rect x="781.0" y="211.0" width="7.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="784.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.07%)</title><rect x="781.0" y="195.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="784.0" y="206.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.07%)</title><rect x="781.0" y="179.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="784.0" y="190.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (8 samples, 0.58%)</title><rect x="781.9" y="195.0" width="6.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="784.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() [clone .plt] (1 samples, 0.07%)</title><rect x="781.9" y="179.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="784.9" y="190.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (7 samples, 0.51%)</title><rect x="782.7" y="179.0" width="6.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="785.7" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (2 samples, 0.14%)</title><rect x="782.7" y="163.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="785.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (3 samples, 0.22%)</title><rect x="784.4" y="163.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="787.4" y="174.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="784.4" y="147.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="787.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.14%)</title><rect x="785.3" y="147.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="788.3" y="158.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.14%)</title><rect x="785.3" y="131.0" width="1.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="788.3" y="142.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (1 samples, 0.07%)</title><rect x="787.0" y="163.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="790.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.07%)</title><rect x="787.8" y="163.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="790.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="787.8" y="147.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="790.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.07%)</title><rect x="788.7" y="211.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="791.7" y="222.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="788.7" y="195.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="791.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (1 samples, 0.07%)</title><rect x="789.6" y="211.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="792.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (13 samples, 0.94%)</title><rect x="790.4" y="211.0" width="11.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="793.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (12 samples, 0.87%)</title><rect x="790.4" y="195.0" width="10.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="793.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (12 samples, 0.87%)</title><rect x="790.4" y="179.0" width="10.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="793.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 0.87%)</title><rect x="790.4" y="163.0" width="10.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="793.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (12 samples, 0.87%)</title><rect x="790.4" y="147.0" width="10.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="793.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (11 samples, 0.80%)</title><rect x="791.3" y="131.0" width="9.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="794.3" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (10 samples, 0.72%)</title><rect x="791.3" y="115.0" width="8.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="794.3" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (8 samples, 0.58%)</title><rect x="791.3" y="99.0" width="6.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="794.3" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (4 samples, 0.29%)</title><rect x="793.0" y="83.0" width="3.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="796.0" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.29%)</title><rect x="793.0" y="67.0" width="3.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="796.0" y="78.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="793.8" y="51.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="796.8" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.07%)</title><rect x="794.7" y="51.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="797.7" y="62.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="795.5" y="51.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="798.5" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.14%)</title><rect x="796.4" y="83.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="799.4" y="94.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.07%)</title><rect x="797.2" y="67.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="800.2" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.07%)</title><rect x="798.1" y="99.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="801.1" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.07%)</title><rect x="798.9" y="99.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="801.9" y="110.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() [clone .plt] (1 samples, 0.07%)</title><rect x="799.8" y="115.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="802.8" y="126.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.07%)</title><rect x="800.7" y="195.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="803.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (3 samples, 0.22%)</title><rect x="801.5" y="211.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="804.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.22%)</title><rect x="801.5" y="195.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="804.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.22%)</title><rect x="801.5" y="179.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="804.5" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.22%)</title><rect x="801.5" y="163.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="804.5" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.22%)</title><rect x="801.5" y="147.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="804.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.14%)</title><rect x="801.5" y="131.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="804.5" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.07%)</title><rect x="802.4" y="115.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="805.4" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.07%)</title><rect x="802.4" y="99.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="805.4" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="802.4" y="83.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="805.4" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="802.4" y="67.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="805.4" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.07%)</title><rect x="802.4" y="51.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="805.4" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (1 samples, 0.07%)</title><rect x="803.2" y="131.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="806.2" y="142.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.07%)</title><rect x="804.1" y="211.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="807.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (26 samples, 1.88%)</title><rect x="804.9" y="211.0" width="22.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="807.9" y="222.0">r..</text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.14%)</title><rect x="824.6" y="195.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="827.6" y="206.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="826.3" y="195.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="829.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (12 samples, 0.87%)</title><rect x="827.1" y="211.0" width="10.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="830.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (12 samples, 0.87%)</title><rect x="827.1" y="195.0" width="10.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="830.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.07%)</title><rect x="837.4" y="211.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="840.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.07%)</title><rect x="838.2" y="211.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="841.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.07%)</title><rect x="839.1" y="211.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="842.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.07%)</title><rect x="839.9" y="227.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="842.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.14%)</title><rect x="840.8" y="243.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="843.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.07%)</title><rect x="840.8" y="227.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="843.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) [clone .plt] (1 samples, 0.07%)</title><rect x="841.6" y="227.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="844.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.07%)</title><rect x="842.5" y="243.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="845.5" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.07%)</title><rect x="843.3" y="259.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="846.3" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="844.2" y="291.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="847.2" y="302.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="845.1" y="323.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="848.1" y="334.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.07%)</title><rect x="845.1" y="307.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="848.1" y="318.0"></text>
</g>
<g>
<title>[async_workers-5 tid=240139] (116 samples, 8.39%)</title><rect x="845.9" y="483.0" width="99.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="848.9" y="494.0">[async_worke..</text>
</g>
<g>
<title>java/lang/Thread.run (116 samples, 8.39%)</title><rect x="845.9" y="467.0" width="99.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.9" y="478.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (116 samples, 8.39%)</title><rect x="845.9" y="451.0" width="99.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="848.9" y="462.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (116 samples, 8.39%)</title><rect x="845.9" y="435.0" width="99.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="848.9" y="446.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.14%)</title><rect x="845.9" y="419.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="848.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="845.9" y="403.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="848.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="845.9" y="387.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="848.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.07%)</title><rect x="846.8" y="371.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="849.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (20 samples, 1.45%)</title><rect x="847.6" y="419.0" width="17.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (20 samples, 1.45%)</title><rect x="847.6" y="403.0" width="17.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="850.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (18 samples, 1.30%)</title><rect x="847.6" y="387.0" width="15.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.14%)</title><rect x="847.6" y="371.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (2 samples, 0.14%)</title><rect x="847.6" y="355.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="850.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.07%)</title><rect x="847.6" y="339.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.07%)</title><rect x="848.5" y="339.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.22%)</title><rect x="849.3" y="371.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="852.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="850.2" y="355.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="850.2" y="339.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="853.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="850.2" y="323.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="853.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="850.2" y="307.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.2" y="318.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.07%)</title><rect x="850.2" y="291.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="853.2" y="302.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.07%)</title><rect x="851.0" y="291.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="854.0" y="302.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="851.0" y="275.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="854.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (13 samples, 0.94%)</title><rect x="851.9" y="371.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="854.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.94%)</title><rect x="851.9" y="355.0" width="11.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="854.9" y="366.0"></text>
</g>
<g>
<title>Unsafe_Park (9 samples, 0.65%)</title><rect x="851.9" y="339.0" width="7.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="854.9" y="350.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.07%)</title><rect x="851.9" y="323.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="854.9" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.14%)</title><rect x="852.7" y="323.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="855.7" y="334.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.07%)</title><rect x="853.6" y="307.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="856.6" y="318.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.07%)</title><rect x="854.4" y="323.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="857.4" y="334.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.22%)</title><rect x="855.3" y="323.0" width="2.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="858.3" y="334.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.14%)</title><rect x="857.9" y="323.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="860.9" y="334.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.22%)</title><rect x="859.6" y="339.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="862.6" y="350.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.07%)</title><rect x="859.6" y="323.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="862.6" y="334.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.14%)</title><rect x="860.4" y="323.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="863.4" y="334.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.07%)</title><rect x="862.1" y="339.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="865.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="863.0" y="387.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="866.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="863.0" y="371.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="866.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.07%)</title><rect x="863.0" y="355.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="866.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.07%)</title><rect x="863.0" y="339.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="866.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="863.8" y="387.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="866.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="863.8" y="371.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="866.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="863.8" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="866.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="863.8" y="339.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="866.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="863.8" y="323.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="866.8" y="334.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.07%)</title><rect x="863.8" y="307.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="866.8" y="318.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.07%)</title><rect x="863.8" y="291.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="866.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.run (94 samples, 6.80%)</title><rect x="864.7" y="419.0" width="80.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.7" y="430.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (94 samples, 6.80%)</title><rect x="864.7" y="403.0" width="80.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="867.7" y="414.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.putInternal (94 samples, 6.80%)</title><rect x="864.7" y="387.0" width="80.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="867.7" y="398.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (13 samples, 0.94%)</title><rect x="864.7" y="371.0" width="11.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="867.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.07%)</title><rect x="864.7" y="355.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.07%)</title><rect x="864.7" y="339.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="867.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.07%)</title><rect x="864.7" y="323.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.7" y="334.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="864.7" y="307.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="867.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (11 samples, 0.80%)</title><rect x="865.5" y="355.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="868.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.36%)</title><rect x="865.5" y="339.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="868.5" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.14%)</title><rect x="868.1" y="323.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="871.1" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.14%)</title><rect x="868.1" y="307.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="871.1" y="318.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.14%)</title><rect x="868.1" y="291.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="871.1" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.43%)</title><rect x="869.8" y="339.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="872.8" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.43%)</title><rect x="869.8" y="323.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="872.8" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 0.43%)</title><rect x="869.8" y="307.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="872.8" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (6 samples, 0.43%)</title><rect x="869.8" y="291.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="872.8" y="302.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.22%)</title><rect x="869.8" y="275.0" width="2.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="872.8" y="286.0"></text>
</g>
<g>
<title>WeakPreserveExceptionMark::WeakPreserveExceptionMark(Thread*) (2 samples, 0.14%)</title><rect x="869.8" y="259.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="872.8" y="270.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="871.5" y="259.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="874.5" y="270.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.14%)</title><rect x="872.4" y="275.0" width="1.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="875.4" y="286.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.07%)</title><rect x="874.1" y="275.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="877.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="874.9" y="355.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="877.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (81 samples, 5.86%)</title><rect x="875.8" y="371.0" width="69.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="878.8" y="382.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (79 samples, 5.72%)</title><rect x="875.8" y="355.0" width="67.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="878.8" y="366.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (79 samples, 5.72%)</title><rect x="875.8" y="339.0" width="67.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="878.8" y="350.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (76 samples, 5.50%)</title><rect x="875.8" y="323.0" width="64.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="878.8" y="334.0">Java_or..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="876.6" y="307.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="879.6" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (74 samples, 5.35%)</title><rect x="877.5" y="307.0" width="63.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="880.5" y="318.0">rocksdb..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.14%)</title><rect x="877.5" y="291.0" width="1.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="880.5" y="302.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.07%)</title><rect x="878.4" y="275.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="881.4" y="286.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (72 samples, 5.21%)</title><rect x="879.2" y="291.0" width="61.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="882.2" y="302.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (72 samples, 5.21%)</title><rect x="879.2" y="275.0" width="61.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="882.2" y="286.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (71 samples, 5.14%)</title><rect x="879.2" y="259.0" width="60.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="882.2" y="270.0">rocksd..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.07%)</title><rect x="879.2" y="243.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="882.2" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (66 samples, 4.78%)</title><rect x="880.1" y="243.0" width="56.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="883.1" y="254.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (64 samples, 4.63%)</title><rect x="880.1" y="227.0" width="54.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="883.1" y="238.0">rocks..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.07%)</title><rect x="883.5" y="211.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="886.5" y="222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="884.3" y="211.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="887.3" y="222.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="885.2" y="211.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="888.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.07%)</title><rect x="886.0" y="211.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="889.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (9 samples, 0.65%)</title><rect x="886.9" y="211.0" width="7.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="889.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (9 samples, 0.65%)</title><rect x="886.9" y="195.0" width="7.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="889.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (9 samples, 0.65%)</title><rect x="886.9" y="179.0" width="7.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="889.9" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (2 samples, 0.14%)</title><rect x="887.7" y="163.0" width="1.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="890.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (6 samples, 0.43%)</title><rect x="889.5" y="163.0" width="5.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="892.5" y="174.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="889.5" y="147.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="892.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (5 samples, 0.36%)</title><rect x="890.3" y="147.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="893.3" y="158.0"></text>
</g>
<g>
<title>__libc_write (4 samples, 0.29%)</title><rect x="891.2" y="131.0" width="3.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="894.2" y="142.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (3 samples, 0.22%)</title><rect x="894.6" y="211.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="897.6" y="222.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.22%)</title><rect x="894.6" y="195.0" width="2.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="897.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (1 samples, 0.07%)</title><rect x="897.1" y="211.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="900.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (9 samples, 0.65%)</title><rect x="898.0" y="211.0" width="7.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="901.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 0.65%)</title><rect x="898.0" y="195.0" width="7.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="901.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (9 samples, 0.65%)</title><rect x="898.0" y="179.0" width="7.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="901.0" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.43%)</title><rect x="898.8" y="163.0" width="5.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="901.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.07%)</title><rect x="898.8" y="147.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="901.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (5 samples, 0.36%)</title><rect x="899.7" y="147.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="902.7" y="158.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="899.7" y="131.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="902.7" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.07%)</title><rect x="900.5" y="131.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="903.5" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.14%)</title><rect x="901.4" y="131.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="904.4" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.14%)</title><rect x="901.4" y="115.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="904.4" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (2 samples, 0.14%)</title><rect x="901.4" y="99.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="904.4" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="902.3" y="83.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="905.3" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.07%)</title><rect x="903.1" y="131.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="906.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.14%)</title><rect x="904.0" y="163.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="907.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (3 samples, 0.22%)</title><rect x="905.7" y="211.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="908.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.22%)</title><rect x="905.7" y="195.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="908.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.22%)</title><rect x="905.7" y="179.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="908.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.22%)</title><rect x="905.7" y="163.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="908.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.14%)</title><rect x="905.7" y="147.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="908.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.14%)</title><rect x="905.7" y="131.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="908.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.07%)</title><rect x="905.7" y="115.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="908.7" y="126.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.07%)</title><rect x="906.5" y="115.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="909.5" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.07%)</title><rect x="906.5" y="99.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="909.5" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="906.5" y="83.0" width="0.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="909.5" y="94.0"></text>
</g>
<g>
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (1 samples, 0.07%)</title><rect x="907.4" y="147.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="910.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.07%)</title><rect x="908.2" y="211.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="911.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (20 samples, 1.45%)</title><rect x="909.1" y="211.0" width="17.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="912.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (9 samples, 0.65%)</title><rect x="926.2" y="211.0" width="7.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="929.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (9 samples, 0.65%)</title><rect x="926.2" y="195.0" width="7.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="929.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.07%)</title><rect x="933.8" y="211.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="936.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.07%)</title><rect x="934.7" y="227.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="937.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.07%)</title><rect x="935.6" y="227.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="938.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.14%)</title><rect x="936.4" y="243.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="939.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.07%)</title><rect x="936.4" y="227.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="939.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="937.3" y="227.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="940.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.07%)</title><rect x="938.1" y="243.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="941.1" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.07%)</title><rect x="939.0" y="243.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="942.0" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.07%)</title><rect x="939.8" y="259.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="942.8" y="270.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="940.7" y="323.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="943.7" y="334.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.07%)</title><rect x="940.7" y="307.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="943.7" y="318.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="941.5" y="323.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="944.5" y="334.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.07%)</title><rect x="942.4" y="323.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="945.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.07%)</title><rect x="943.2" y="355.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="946.2" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.07%)</title><rect x="943.2" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="946.2" y="350.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.07%)</title><rect x="943.2" y="323.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="946.2" y="334.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.07%)</title><rect x="943.2" y="307.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="946.2" y="318.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.07%)</title><rect x="943.2" y="291.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="946.2" y="302.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="943.2" y="275.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="946.2" y="286.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="943.2" y="259.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="946.2" y="270.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="943.2" y="243.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="946.2" y="254.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.07%)</title><rect x="943.2" y="227.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="946.2" y="238.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.07%)</title><rect x="943.2" y="211.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="946.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArrayUnsigned (1 samples, 0.07%)</title><rect x="944.1" y="355.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="947.1" y="366.0"></text>
</g>
<g>
<title>[async_workers-6 tid=240141] (131 samples, 9.48%)</title><rect x="944.9" y="483.0" width="111.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="947.9" y="494.0">[async_worker..</text>
</g>
<g>
<title>java/lang/Thread.run (131 samples, 9.48%)</title><rect x="944.9" y="467.0" width="111.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="947.9" y="478.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (131 samples, 9.48%)</title><rect x="944.9" y="451.0" width="111.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="947.9" y="462.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (131 samples, 9.48%)</title><rect x="944.9" y="435.0" width="111.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.9" y="446.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.07%)</title><rect x="944.9" y="419.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="947.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="944.9" y="403.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="947.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="944.9" y="387.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="947.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (30 samples, 2.17%)</title><rect x="945.8" y="419.0" width="25.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="948.8" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (30 samples, 2.17%)</title><rect x="945.8" y="403.0" width="25.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="948.8" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (22 samples, 1.59%)</title><rect x="946.7" y="387.0" width="18.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="949.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.07%)</title><rect x="947.5" y="371.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="950.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.07%)</title><rect x="947.5" y="355.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="950.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (4 samples, 0.29%)</title><rect x="948.4" y="371.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.29%)</title><rect x="948.4" y="355.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="951.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.29%)</title><rect x="948.4" y="339.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="951.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.29%)</title><rect x="948.4" y="323.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="951.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.29%)</title><rect x="948.4" y="307.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="951.4" y="318.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.07%)</title><rect x="948.4" y="291.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="951.4" y="302.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.07%)</title><rect x="949.2" y="291.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="952.2" y="302.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.07%)</title><rect x="949.2" y="275.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="952.2" y="286.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.14%)</title><rect x="950.1" y="291.0" width="1.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="953.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (16 samples, 1.16%)</title><rect x="951.8" y="371.0" width="13.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (16 samples, 1.16%)</title><rect x="951.8" y="355.0" width="13.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="954.8" y="366.0"></text>
</g>
<g>
<title>Unsafe_Park (9 samples, 0.65%)</title><rect x="952.6" y="339.0" width="7.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="955.6" y="350.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.43%)</title><rect x="954.3" y="323.0" width="5.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="957.3" y="334.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.07%)</title><rect x="956.9" y="307.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="959.9" y="318.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.14%)</title><rect x="957.8" y="307.0" width="1.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="960.8" y="318.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="959.5" y="323.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="962.5" y="334.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.43%)</title><rect x="960.3" y="339.0" width="5.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="963.3" y="350.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.07%)</title><rect x="960.3" y="323.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="963.3" y="334.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (5 samples, 0.36%)</title><rect x="961.2" y="323.0" width="4.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="964.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="965.4" y="387.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="968.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="965.4" y="371.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="968.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.07%)</title><rect x="965.4" y="355.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="968.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.43%)</title><rect x="966.3" y="387.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="969.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.43%)</title><rect x="966.3" y="371.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.43%)</title><rect x="966.3" y="355.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="969.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.43%)</title><rect x="966.3" y="339.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="969.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.29%)</title><rect x="968.0" y="323.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="971.0" y="334.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.07%)</title><rect x="968.0" y="307.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="971.0" y="318.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.07%)</title><rect x="968.0" y="291.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="971.0" y="302.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.22%)</title><rect x="968.9" y="307.0" width="2.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="971.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.run (100 samples, 7.24%)</title><rect x="971.4" y="419.0" width="85.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="974.4" y="430.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (100 samples, 7.24%)</title><rect x="971.4" y="403.0" width="85.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="974.4" y="414.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.putInternal (100 samples, 7.24%)</title><rect x="971.4" y="387.0" width="85.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="974.4" y="398.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.72%)</title><rect x="971.4" y="371.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="974.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.14%)</title><rect x="971.4" y="355.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="974.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.14%)</title><rect x="971.4" y="339.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="974.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.14%)</title><rect x="971.4" y="323.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="974.4" y="334.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="972.3" y="307.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="975.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 0.51%)</title><rect x="973.1" y="355.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="976.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="974.0" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="977.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.22%)</title><rect x="974.8" y="339.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="977.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.14%)</title><rect x="975.7" y="323.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="978.7" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.14%)</title><rect x="975.7" y="307.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="978.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.14%)</title><rect x="975.7" y="291.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="978.7" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.14%)</title><rect x="977.4" y="339.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="980.4" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.14%)</title><rect x="977.4" y="323.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="980.4" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.07%)</title><rect x="978.2" y="307.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.2" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.07%)</title><rect x="978.2" y="291.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.2" y="302.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.07%)</title><rect x="978.2" y="275.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="981.2" y="286.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.07%)</title><rect x="978.2" y="259.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="981.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="979.1" y="355.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="982.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.07%)</title><rect x="979.1" y="339.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="982.1" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.07%)</title><rect x="979.1" y="323.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="982.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (1 samples, 0.07%)</title><rect x="980.0" y="371.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="983.0" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="980.0" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="983.0" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="980.0" y="339.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="983.0" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="980.0" y="323.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="983.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="980.0" y="307.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="983.0" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="980.0" y="291.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="983.0" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="980.0" y="275.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="983.0" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="980.0" y="259.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="983.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (89 samples, 6.44%)</title><rect x="980.8" y="371.0" width="76.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="983.8" y="382.0">ru/mail/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (89 samples, 6.44%)</title><rect x="980.8" y="355.0" width="76.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="983.8" y="366.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (89 samples, 6.44%)</title><rect x="980.8" y="339.0" width="76.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="983.8" y="350.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (83 samples, 6.01%)</title><rect x="980.8" y="323.0" width="70.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="983.8" y="334.0">Java_org..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (83 samples, 6.01%)</title><rect x="980.8" y="307.0" width="70.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="983.8" y="318.0">rocksdb_..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.14%)</title><rect x="980.8" y="291.0" width="1.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="983.8" y="302.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.07%)</title><rect x="982.5" y="291.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="985.5" y="302.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.07%)</title><rect x="983.4" y="291.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="986.4" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (79 samples, 5.72%)</title><rect x="984.2" y="291.0" width="67.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="987.2" y="302.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.07%)</title><rect x="984.2" y="275.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="987.2" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (78 samples, 5.64%)</title><rect x="985.1" y="275.0" width="66.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="988.1" y="286.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (78 samples, 5.64%)</title><rect x="985.1" y="259.0" width="66.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="988.1" y="270.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.07%)</title><rect x="985.1" y="243.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="988.1" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (75 samples, 5.43%)</title><rect x="985.9" y="243.0" width="64.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="988.9" y="254.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::ColumnFamilyHandleImpl(rocksdb::ColumnFamilyData*, rocksdb::DBImpl*, rocksdb::InstrumentedMutex*) (1 samples, 0.07%)</title><rect x="985.9" y="227.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="988.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.07%)</title><rect x="986.8" y="227.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="989.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (70 samples, 5.07%)</title><rect x="987.6" y="227.0" width="59.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="990.6" y="238.0">rocksd..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="991.1" y="211.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="994.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (9 samples, 0.65%)</title><rect x="991.9" y="211.0" width="7.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="994.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (8 samples, 0.58%)</title><rect x="992.8" y="195.0" width="6.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="995.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.07%)</title><rect x="992.8" y="179.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="995.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (7 samples, 0.51%)</title><rect x="993.6" y="179.0" width="6.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="996.6" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (2 samples, 0.14%)</title><rect x="993.6" y="163.0" width="1.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="996.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (5 samples, 0.36%)</title><rect x="995.3" y="163.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="998.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (5 samples, 0.36%)</title><rect x="995.3" y="147.0" width="4.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="998.3" y="158.0"></text>
</g>
<g>
<title>__libc_write (3 samples, 0.22%)</title><rect x="995.3" y="131.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="998.3" y="142.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="997.9" y="131.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1000.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.07%)</title><rect x="998.7" y="131.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1001.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.07%)</title><rect x="999.6" y="211.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1002.6" y="222.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="999.6" y="195.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1002.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (1 samples, 0.07%)</title><rect x="1000.4" y="211.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1003.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (1 samples, 0.07%)</title><rect x="1001.3" y="211.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1004.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (1 samples, 0.07%)</title><rect x="1002.2" y="211.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1005.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (17 samples, 1.23%)</title><rect x="1003.0" y="211.0" width="14.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1006.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (17 samples, 1.23%)</title><rect x="1003.0" y="195.0" width="14.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1006.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (17 samples, 1.23%)</title><rect x="1003.0" y="179.0" width="14.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1006.0" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (16 samples, 1.16%)</title><rect x="1003.0" y="163.0" width="13.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1006.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (2 samples, 0.14%)</title><rect x="1003.0" y="147.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1006.0" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (14 samples, 1.01%)</title><rect x="1004.7" y="147.0" width="12.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1007.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const [clone .plt] (1 samples, 0.07%)</title><rect x="1005.6" y="131.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1008.6" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (12 samples, 0.87%)</title><rect x="1006.4" y="131.0" width="10.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1009.4" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (8 samples, 0.58%)</title><rect x="1008.1" y="115.0" width="6.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1011.1" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (7 samples, 0.51%)</title><rect x="1009.0" y="99.0" width="6.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1012.0" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (4 samples, 0.29%)</title><rect x="1009.8" y="83.0" width="3.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1012.8" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.29%)</title><rect x="1009.8" y="67.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1012.8" y="78.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="1010.7" y="51.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1013.7" y="62.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.14%)</title><rect x="1011.5" y="51.0" width="1.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1014.5" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.14%)</title><rect x="1013.3" y="83.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1016.3" y="94.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.07%)</title><rect x="1014.1" y="67.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1017.1" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.14%)</title><rect x="1015.0" y="115.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1018.0" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="1015.0" y="99.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1018.0" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.07%)</title><rect x="1015.8" y="99.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1018.8" y="110.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.07%)</title><rect x="1016.7" y="163.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1019.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (7 samples, 0.51%)</title><rect x="1017.5" y="211.0" width="6.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1020.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 0.43%)</title><rect x="1017.5" y="195.0" width="5.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1020.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (6 samples, 0.43%)</title><rect x="1017.5" y="179.0" width="5.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1020.5" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.36%)</title><rect x="1017.5" y="163.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1020.5" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.29%)</title><rect x="1017.5" y="147.0" width="3.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1020.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (4 samples, 0.29%)</title><rect x="1017.5" y="131.0" width="3.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1020.5" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (3 samples, 0.22%)</title><rect x="1018.4" y="115.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1021.4" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.22%)</title><rect x="1018.4" y="99.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1021.4" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (3 samples, 0.22%)</title><rect x="1018.4" y="83.0" width="2.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1021.4" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="1020.1" y="67.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1023.1" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.07%)</title><rect x="1020.1" y="51.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1023.1" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.07%)</title><rect x="1020.1" y="35.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1023.1" y="46.0"></text>
</g>
<g>
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (1 samples, 0.07%)</title><rect x="1020.9" y="147.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1023.9" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.07%)</title><rect x="1021.8" y="163.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1024.8" y="174.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.07%)</title><rect x="1022.6" y="195.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1025.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (16 samples, 1.16%)</title><rect x="1023.5" y="211.0" width="13.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1026.5" y="222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="1036.3" y="195.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1039.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (11 samples, 0.80%)</title><rect x="1037.2" y="211.0" width="9.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1040.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (10 samples, 0.72%)</title><rect x="1038.0" y="195.0" width="8.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1041.0" y="206.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="1045.7" y="179.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1048.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.07%)</title><rect x="1046.6" y="211.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1049.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.07%)</title><rect x="1047.4" y="227.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1050.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.07%)</title><rect x="1048.3" y="227.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1051.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) [clone .plt] (1 samples, 0.07%)</title><rect x="1049.1" y="227.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1052.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.14%)</title><rect x="1050.0" y="243.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1053.0" y="254.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.07%)</title><rect x="1050.0" y="227.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1053.0" y="238.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.07%)</title><rect x="1050.8" y="227.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1053.8" y="238.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.29%)</title><rect x="1051.7" y="323.0" width="3.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1054.7" y="334.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.07%)</title><rect x="1051.7" y="307.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1054.7" y="318.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.14%)</title><rect x="1052.5" y="307.0" width="1.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1055.5" y="318.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.07%)</title><rect x="1054.2" y="307.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1057.2" y="318.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.07%)</title><rect x="1055.1" y="323.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1058.1" y="334.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="1055.9" y="323.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1058.9" y="334.0"></text>
</g>
<g>
<title>[async_workers-7 tid=240140] (156 samples, 11.29%)</title><rect x="1056.8" y="483.0" width="133.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1059.8" y="494.0">[async_workers-7 ..</text>
</g>
<g>
<title>java/lang/Thread.run (156 samples, 11.29%)</title><rect x="1056.8" y="467.0" width="133.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1059.8" y="478.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (156 samples, 11.29%)</title><rect x="1056.8" y="451.0" width="133.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1059.8" y="462.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (156 samples, 11.29%)</title><rect x="1056.8" y="435.0" width="133.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1059.8" y="446.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.07%)</title><rect x="1056.8" y="419.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1059.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="1056.8" y="403.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1059.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="1056.8" y="387.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1059.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="1056.8" y="371.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1059.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (35 samples, 2.53%)</title><rect x="1057.7" y="419.0" width="29.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1060.7" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (35 samples, 2.53%)</title><rect x="1057.7" y="403.0" width="29.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1060.7" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (30 samples, 2.17%)</title><rect x="1057.7" y="387.0" width="25.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1060.7" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.14%)</title><rect x="1057.7" y="371.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1060.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (2 samples, 0.14%)</title><rect x="1057.7" y="355.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1060.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.07%)</title><rect x="1057.7" y="339.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1060.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.07%)</title><rect x="1058.5" y="339.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1061.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.14%)</title><rect x="1059.4" y="371.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1062.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="1060.2" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1063.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="1060.2" y="339.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1063.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="1060.2" y="323.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1063.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="1060.2" y="307.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1063.2" y="318.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="1060.2" y="291.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1063.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (26 samples, 1.88%)</title><rect x="1061.1" y="371.0" width="22.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.1" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (26 samples, 1.88%)</title><rect x="1061.1" y="355.0" width="22.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.1" y="366.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.07%)</title><rect x="1061.1" y="339.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1064.1" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park (15 samples, 1.09%)</title><rect x="1061.9" y="339.0" width="12.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1064.9" y="350.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.07%)</title><rect x="1062.8" y="323.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1065.8" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (7 samples, 0.51%)</title><rect x="1063.6" y="323.0" width="6.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1066.6" y="334.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.14%)</title><rect x="1065.3" y="307.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1068.3" y="318.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.07%)</title><rect x="1067.0" y="307.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1070.0" y="318.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.14%)</title><rect x="1067.9" y="307.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1070.9" y="318.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.07%)</title><rect x="1069.6" y="323.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1072.6" y="334.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (2 samples, 0.14%)</title><rect x="1070.5" y="323.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1073.5" y="334.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.14%)</title><rect x="1072.2" y="323.0" width="1.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1075.2" y="334.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.07%)</title><rect x="1073.9" y="323.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1076.9" y="334.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.72%)</title><rect x="1074.7" y="339.0" width="8.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1077.7" y="350.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.14%)</title><rect x="1074.7" y="323.0" width="1.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1077.7" y="334.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.07%)</title><rect x="1076.4" y="323.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1079.4" y="334.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (7 samples, 0.51%)</title><rect x="1077.3" y="323.0" width="6.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1080.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.14%)</title><rect x="1083.3" y="387.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1086.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.14%)</title><rect x="1083.3" y="371.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1086.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.14%)</title><rect x="1083.3" y="355.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1086.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.07%)</title><rect x="1084.1" y="339.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1087.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.22%)</title><rect x="1085.0" y="387.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1088.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.22%)</title><rect x="1085.0" y="371.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1088.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.22%)</title><rect x="1085.0" y="355.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1088.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.22%)</title><rect x="1085.0" y="339.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1088.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.22%)</title><rect x="1085.0" y="323.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1088.0" y="334.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.22%)</title><rect x="1085.0" y="307.0" width="2.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1088.0" y="318.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.07%)</title><rect x="1085.0" y="291.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1088.0" y="302.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.07%)</title><rect x="1085.8" y="291.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1088.8" y="302.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.07%)</title><rect x="1086.7" y="291.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1089.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl$$Lambda$68/2099195806.run (120 samples, 8.68%)</title><rect x="1087.5" y="419.0" width="102.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.5" y="430.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.lambda$put$1 (120 samples, 8.68%)</title><rect x="1087.5" y="403.0" width="102.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1090.5" y="414.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/AsyncServiceImpl.putInternal (120 samples, 8.68%)</title><rect x="1087.5" y="387.0" width="102.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1090.5" y="398.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (14 samples, 1.01%)</title><rect x="1087.5" y="371.0" width="12.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1090.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (13 samples, 0.94%)</title><rect x="1088.4" y="355.0" width="11.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1091.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.36%)</title><rect x="1088.4" y="339.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1091.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.29%)</title><rect x="1089.2" y="323.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1092.2" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.29%)</title><rect x="1089.2" y="307.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1092.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.29%)</title><rect x="1089.2" y="291.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1092.2" y="302.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="1091.8" y="275.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1094.8" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.58%)</title><rect x="1092.7" y="339.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1095.7" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.58%)</title><rect x="1092.7" y="323.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1095.7" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (8 samples, 0.58%)</title><rect x="1092.7" y="307.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1095.7" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (8 samples, 0.58%)</title><rect x="1092.7" y="291.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1095.7" y="302.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.14%)</title><rect x="1092.7" y="275.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1095.7" y="286.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.07%)</title><rect x="1093.5" y="259.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1096.5" y="270.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.07%)</title><rect x="1093.5" y="243.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1096.5" y="254.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.07%)</title><rect x="1093.5" y="227.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1096.5" y="238.0"></text>
</g>
<g>
<title>__libc_send (5 samples, 0.36%)</title><rect x="1094.4" y="275.0" width="4.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1097.4" y="286.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.07%)</title><rect x="1098.6" y="275.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1101.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (1 samples, 0.07%)</title><rect x="1099.5" y="371.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1102.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="1099.5" y="355.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1102.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="1099.5" y="339.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1102.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1099.5" y="323.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1102.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1099.5" y="307.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1102.5" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1099.5" y="291.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1102.5" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="1099.5" y="275.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.5" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="1099.5" y="259.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1102.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (104 samples, 7.53%)</title><rect x="1100.3" y="371.0" width="88.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1103.3" y="382.0">ru/mail/po..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (104 samples, 7.53%)</title><rect x="1100.3" y="355.0" width="88.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1103.3" y="366.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (103 samples, 7.45%)</title><rect x="1101.2" y="339.0" width="87.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1104.2" y="350.0">org/rocksd..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (96 samples, 6.95%)</title><rect x="1102.1" y="323.0" width="81.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1105.1" y="334.0">Java_org_..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.07%)</title><rect x="1102.1" y="307.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1105.1" y="318.0"></text>
</g>
<g>
<title>operator delete[](void*) [clone .plt] (1 samples, 0.07%)</title><rect x="1102.9" y="307.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1105.9" y="318.0"></text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (1 samples, 0.07%)</title><rect x="1103.8" y="307.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1106.8" y="318.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) [clone .plt] (1 samples, 0.07%)</title><rect x="1104.6" y="307.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1107.6" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (92 samples, 6.66%)</title><rect x="1105.5" y="307.0" width="78.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1108.5" y="318.0">rocksdb_p..</text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.14%)</title><rect x="1105.5" y="291.0" width="1.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1108.5" y="302.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.07%)</title><rect x="1106.3" y="275.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1109.3" y="286.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (88 samples, 6.37%)</title><rect x="1107.2" y="291.0" width="75.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1110.2" y="302.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (87 samples, 6.30%)</title><rect x="1108.0" y="275.0" width="74.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1111.0" y="286.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (86 samples, 6.22%)</title><rect x="1108.0" y="259.0" width="73.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1111.0" y="270.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (79 samples, 5.72%)</title><rect x="1108.9" y="243.0" width="67.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1111.9" y="254.0">rocksdb..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.07%)</title><rect x="1109.7" y="227.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1112.7" y="238.0"></text>
</g>
<g>
<title>__pthread_cond_destroy (1 samples, 0.07%)</title><rect x="1110.6" y="227.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1113.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (75 samples, 5.43%)</title><rect x="1111.4" y="227.0" width="64.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1114.4" y="238.0">rocksdb..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.07%)</title><rect x="1115.7" y="211.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1118.7" y="222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.07%)</title><rect x="1116.6" y="211.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1119.6" y="222.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="1117.4" y="211.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1120.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.14%)</title><rect x="1118.3" y="211.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1121.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (2 samples, 0.14%)</title><rect x="1120.0" y="211.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1123.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (2 samples, 0.14%)</title><rect x="1120.0" y="195.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1123.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (7 samples, 0.51%)</title><rect x="1121.7" y="211.0" width="6.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1124.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (7 samples, 0.51%)</title><rect x="1121.7" y="195.0" width="6.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1124.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (7 samples, 0.51%)</title><rect x="1121.7" y="179.0" width="6.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1124.7" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (2 samples, 0.14%)</title><rect x="1121.7" y="163.0" width="1.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1124.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (5 samples, 0.36%)</title><rect x="1123.4" y="163.0" width="4.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1126.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (5 samples, 0.36%)</title><rect x="1123.4" y="147.0" width="4.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1126.4" y="158.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.14%)</title><rect x="1125.1" y="131.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1128.1" y="142.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="1126.8" y="131.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1129.8" y="142.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.07%)</title><rect x="1127.7" y="211.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1130.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (20 samples, 1.45%)</title><rect x="1128.5" y="211.0" width="17.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1131.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (20 samples, 1.45%)</title><rect x="1128.5" y="195.0" width="17.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1131.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (20 samples, 1.45%)</title><rect x="1128.5" y="179.0" width="17.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1131.5" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (17 samples, 1.23%)</title><rect x="1128.5" y="163.0" width="14.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1131.5" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.14%)</title><rect x="1128.5" y="147.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1131.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (15 samples, 1.09%)</title><rect x="1130.2" y="147.0" width="12.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1133.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.07%)</title><rect x="1131.1" y="131.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1134.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (12 samples, 0.87%)</title><rect x="1131.9" y="131.0" width="10.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1134.9" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (6 samples, 0.43%)</title><rect x="1134.5" y="115.0" width="5.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1137.5" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (5 samples, 0.36%)</title><rect x="1135.4" y="99.0" width="4.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1138.4" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (2 samples, 0.14%)</title><rect x="1137.1" y="83.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1140.1" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.14%)</title><rect x="1137.1" y="67.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1140.1" y="78.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.07%)</title><rect x="1137.1" y="51.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1140.1" y="62.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.07%)</title><rect x="1137.9" y="51.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1140.9" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.07%)</title><rect x="1138.8" y="83.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1141.8" y="94.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.07%)</title><rect x="1138.8" y="67.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1141.8" y="78.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.07%)</title><rect x="1139.6" y="115.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1142.6" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.07%)</title><rect x="1140.5" y="115.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1143.5" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.07%)</title><rect x="1141.3" y="115.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1144.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.07%)</title><rect x="1142.2" y="131.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1145.2" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.07%)</title><rect x="1143.0" y="163.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1146.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.07%)</title><rect x="1143.9" y="163.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.07%)</title><rect x="1144.7" y="163.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1147.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (7 samples, 0.51%)</title><rect x="1145.6" y="211.0" width="6.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1148.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (7 samples, 0.51%)</title><rect x="1145.6" y="195.0" width="6.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1148.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (7 samples, 0.51%)</title><rect x="1145.6" y="179.0" width="6.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.6" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.43%)</title><rect x="1145.6" y="163.0" width="5.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1148.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (6 samples, 0.43%)</title><rect x="1145.6" y="147.0" width="5.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1148.6" y="158.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (1 samples, 0.07%)</title><rect x="1145.6" y="131.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1148.6" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.07%)</title><rect x="1146.5" y="131.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.5" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (4 samples, 0.29%)</title><rect x="1147.3" y="131.0" width="3.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1150.3" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (4 samples, 0.29%)</title><rect x="1147.3" y="115.0" width="3.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1150.3" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 0.29%)</title><rect x="1147.3" y="99.0" width="3.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1150.3" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (3 samples, 0.22%)</title><rect x="1148.2" y="83.0" width="2.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1151.2" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3935557096920137386.so (2 samples, 0.14%)</title><rect x="1149.0" y="67.0" width="1.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1152.0" y="78.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="1149.0" y="51.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1152.0" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.07%)</title><rect x="1149.9" y="51.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1152.9" y="62.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="1149.9" y="35.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1152.9" y="46.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.07%)</title><rect x="1150.7" y="163.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1153.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (1 samples, 0.07%)</title><rect x="1151.6" y="211.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (21 samples, 1.52%)</title><rect x="1152.4" y="211.0" width="18.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (4 samples, 0.29%)</title><rect x="1170.4" y="211.0" width="3.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1173.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (4 samples, 0.29%)</title><rect x="1170.4" y="195.0" width="3.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (1 samples, 0.07%)</title><rect x="1173.8" y="211.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.07%)</title><rect x="1173.8" y="195.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.07%)</title><rect x="1174.6" y="211.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.07%)</title><rect x="1175.5" y="227.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1178.5" y="238.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.07%)</title><rect x="1176.3" y="243.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1179.3" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.22%)</title><rect x="1177.2" y="243.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.2" y="254.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.07%)</title><rect x="1177.2" y="227.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="1178.0" y="227.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.0" y="238.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.07%)</title><rect x="1178.9" y="227.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.07%)</title><rect x="1179.8" y="243.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.8" y="254.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (1 samples, 0.07%)</title><rect x="1180.6" y="243.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.6" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.07%)</title><rect x="1181.5" y="259.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.5" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.07%)</title><rect x="1182.3" y="291.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.3" y="302.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="1183.2" y="291.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.2" y="302.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.07%)</title><rect x="1184.0" y="323.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1187.0" y="334.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.14%)</title><rect x="1184.9" y="323.0" width="1.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1187.9" y="334.0"></text>
</g>
<g>
<title>malloc (2 samples, 0.14%)</title><rect x="1186.6" y="323.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1189.6" y="334.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.07%)</title><rect x="1188.3" y="323.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1189.1" y="371.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.07%)</title><rect x="1189.1" y="355.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.1" y="366.0"></text>
</g>
</g>
</svg>
