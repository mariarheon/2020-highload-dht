<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="565"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="565"> </text>
<g id="frames">
<g>
<title>all (834 samples, 100.00%)</title><rect x="10.0" y="531.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="542.0">all</text>
</g>
<g>
<title>[C2 CompilerThre tid=319301] (13 samples, 1.56%)</title><rect x="10.0" y="515.0" width="18.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>start_thread (13 samples, 1.56%)</title><rect x="10.0" y="499.0" width="18.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (13 samples, 1.56%)</title><rect x="10.0" y="483.0" width="18.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>Thread::call_run() (13 samples, 1.56%)</title><rect x="10.0" y="467.0" width="18.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (13 samples, 1.56%)</title><rect x="10.0" y="451.0" width="18.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (13 samples, 1.56%)</title><rect x="10.0" y="435.0" width="18.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (13 samples, 1.56%)</title><rect x="10.0" y="419.0" width="18.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (13 samples, 1.56%)</title><rect x="10.0" y="403.0" width="18.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (13 samples, 1.56%)</title><rect x="10.0" y="387.0" width="18.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (8 samples, 0.96%)</title><rect x="10.0" y="371.0" width="11.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.12%)</title><rect x="10.0" y="355.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.12%)</title><rect x="10.0" y="339.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.12%)</title><rect x="10.0" y="323.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (1 samples, 0.12%)</title><rect x="10.0" y="307.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>MacroAssembler::fast_unlock(RegisterImpl*, RegisterImpl*, RegisterImpl*, bool) (1 samples, 0.12%)</title><rect x="10.0" y="291.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.12%)</title><rect x="11.4" y="355.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="14.4" y="366.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.12%)</title><rect x="11.4" y="339.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="14.4" y="350.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.12%)</title><rect x="11.4" y="323.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.4" y="334.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.12%)</title><rect x="11.4" y="307.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="14.4" y="318.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.12%)</title><rect x="11.4" y="291.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="14.4" y="302.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.12%)</title><rect x="11.4" y="275.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.4" y="286.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.12%)</title><rect x="11.4" y="259.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.4" y="270.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.12%)</title><rect x="11.4" y="243.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="14.4" y="254.0"></text>
</g>
<g>
<title>TypeKlassPtr::eq(Type const*) const (1 samples, 0.12%)</title><rect x="11.4" y="227.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.4" y="238.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (6 samples, 0.72%)</title><rect x="12.8" y="355.0" width="8.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="15.8" y="366.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.12%)</title><rect x="12.8" y="339.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.8" y="350.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.12%)</title><rect x="12.8" y="323.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.8" y="334.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.24%)</title><rect x="14.2" y="339.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="17.2" y="350.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.12%)</title><rect x="17.1" y="339.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="20.1" y="350.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (2 samples, 0.24%)</title><rect x="18.5" y="339.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="21.5" y="350.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (2 samples, 0.24%)</title><rect x="18.5" y="323.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="21.5" y="334.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::copy_copy(Node*, Node*, Block*, unsigned int) (2 samples, 0.24%)</title><rect x="18.5" y="307.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="21.5" y="318.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 0.48%)</title><rect x="21.3" y="371.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="24.3" y="382.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) (1 samples, 0.12%)</title><rect x="21.3" y="355.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="24.3" y="366.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.12%)</title><rect x="21.3" y="339.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="24.3" y="350.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.12%)</title><rect x="21.3" y="323.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="24.3" y="334.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.12%)</title><rect x="21.3" y="307.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="24.3" y="318.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.12%)</title><rect x="21.3" y="291.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="24.3" y="302.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.12%)</title><rect x="22.7" y="355.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="25.7" y="366.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.12%)</title><rect x="22.7" y="339.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="25.7" y="350.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (1 samples, 0.12%)</title><rect x="24.1" y="355.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="27.1" y="366.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.12%)</title><rect x="25.6" y="355.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="28.6" y="366.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.12%)</title><rect x="25.6" y="339.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="28.6" y="350.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.12%)</title><rect x="25.6" y="323.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="28.6" y="334.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.12%)</title><rect x="25.6" y="307.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="28.6" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="27.0" y="371.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="30.0" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.12%)</title><rect x="27.0" y="355.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="30.0" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.12%)</title><rect x="27.0" y="339.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="30.0" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.12%)</title><rect x="27.0" y="323.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="30.0" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.12%)</title><rect x="27.0" y="307.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="30.0" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.12%)</title><rect x="27.0" y="291.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="30.0" y="302.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="27.0" y="275.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="30.0" y="286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="27.0" y="259.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="30.0" y="270.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.12%)</title><rect x="27.0" y="243.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="30.0" y="254.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.12%)</title><rect x="27.0" y="227.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="30.0" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.12%)</title><rect x="27.0" y="211.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="30.0" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.12%)</title><rect x="27.0" y="195.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="30.0" y="206.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.12%)</title><rect x="27.0" y="179.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="30.0" y="190.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.12%)</title><rect x="27.0" y="163.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="30.0" y="174.0"></text>
</g>
<g>
<title>Compile::alias_type(ciField*) (1 samples, 0.12%)</title><rect x="27.0" y="147.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="30.0" y="158.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.12%)</title><rect x="27.0" y="131.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="30.0" y="142.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=319341] (119 samples, 14.27%)</title><rect x="28.4" y="515.0" width="168.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="31.4" y="526.0">[NIO Selector #0 tid=3..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (119 samples, 14.27%)</title><rect x="28.4" y="499.0" width="168.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.4" y="510.0">one/nio/server/Selecto..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 1.08%)</title><rect x="29.8" y="483.0" width="12.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.8" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (7 samples, 0.84%)</title><rect x="32.6" y="467.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="35.6" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.24%)</title><rect x="32.6" y="451.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="35.6" y="462.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.36%)</title><rect x="35.5" y="451.0" width="4.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="38.5" y="462.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.24%)</title><rect x="36.9" y="435.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="39.9" y="446.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.12%)</title><rect x="39.7" y="451.0" width="1.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="42.7" y="462.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.12%)</title><rect x="41.1" y="451.0" width="1.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="44.1" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (109 samples, 13.07%)</title><rect x="42.5" y="483.0" width="154.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.5" y="494.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (109 samples, 13.07%)</title><rect x="42.5" y="467.0" width="154.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.5" y="478.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (97 samples, 11.63%)</title><rect x="42.5" y="451.0" width="137.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.5" y="462.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (94 samples, 11.27%)</title><rect x="44.0" y="435.0" width="133.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.0" y="446.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (94 samples, 11.27%)</title><rect x="44.0" y="419.0" width="133.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.0" y="430.0">one/nio/http/Htt..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (93 samples, 11.15%)</title><rect x="44.0" y="403.0" width="131.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.0" y="414.0">RequestHandler1_..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (14 samples, 1.68%)</title><rect x="44.0" y="387.0" width="19.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.0" y="398.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.12%)</title><rect x="44.0" y="371.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.12%)</title><rect x="44.0" y="355.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.12%)</title><rect x="44.0" y="339.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (13 samples, 1.56%)</title><rect x="45.4" y="371.0" width="18.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.84%)</title><rect x="45.4" y="355.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.12%)</title><rect x="45.4" y="339.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.72%)</title><rect x="46.8" y="339.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.72%)</title><rect x="46.8" y="323.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.8" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.72%)</title><rect x="46.8" y="307.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.72%)</title><rect x="46.8" y="291.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.8" y="302.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.12%)</title><rect x="53.9" y="275.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="56.9" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.72%)</title><rect x="55.3" y="355.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.72%)</title><rect x="55.3" y="339.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.3" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 0.72%)</title><rect x="55.3" y="323.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.3" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (6 samples, 0.72%)</title><rect x="55.3" y="307.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.3" y="318.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.24%)</title><rect x="56.7" y="291.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="59.7" y="302.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.12%)</title><rect x="58.1" y="275.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="61.1" y="286.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="58.1" y="259.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="61.1" y="270.0"></text>
</g>
<g>
<title>__libc_send (3 samples, 0.36%)</title><rect x="59.5" y="291.0" width="4.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="62.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.24%)</title><rect x="63.8" y="387.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="66.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.24%)</title><rect x="63.8" y="371.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.put (77 samples, 9.23%)</title><rect x="66.6" y="387.0" width="108.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="69.6" y="398.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (2 samples, 0.24%)</title><rect x="66.6" y="371.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.6" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.24%)</title><rect x="66.6" y="355.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.24%)</title><rect x="66.6" y="339.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.6" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.24%)</title><rect x="66.6" y="323.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="69.6" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.24%)</title><rect x="66.6" y="307.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.6" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.24%)</title><rect x="66.6" y="291.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.6" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.12%)</title><rect x="68.0" y="275.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (71 samples, 8.51%)</title><rect x="69.4" y="371.0" width="100.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.4" y="382.0">ru/mail/poli..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (69 samples, 8.27%)</title><rect x="69.4" y="355.0" width="97.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.4" y="366.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (69 samples, 8.27%)</title><rect x="69.4" y="339.0" width="97.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.4" y="350.0">org/rocksdb..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (67 samples, 8.03%)</title><rect x="69.4" y="323.0" width="94.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="72.4" y="334.0">Java_org_ro..</text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.12%)</title><rect x="70.8" y="307.0" width="1.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="73.8" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (65 samples, 7.79%)</title><rect x="72.3" y="307.0" width="91.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="75.3" y="318.0">rocksdb_put..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.12%)</title><rect x="72.3" y="291.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="75.3" y="302.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.12%)</title><rect x="73.7" y="291.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="76.7" y="302.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.36%)</title><rect x="75.1" y="291.0" width="4.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="78.1" y="302.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.12%)</title><rect x="77.9" y="275.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="80.9" y="286.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (60 samples, 7.19%)</title><rect x="79.3" y="291.0" width="84.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="82.3" y="302.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (60 samples, 7.19%)</title><rect x="79.3" y="275.0" width="84.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="82.3" y="286.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (59 samples, 7.07%)</title><rect x="79.3" y="259.0" width="83.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="82.3" y="270.0">rocksdb::..</text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.12%)</title><rect x="79.3" y="243.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="82.3" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (53 samples, 6.35%)</title><rect x="80.7" y="243.0" width="75.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="83.7" y="254.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (51 samples, 6.12%)</title><rect x="80.7" y="227.0" width="72.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="83.7" y="238.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (15 samples, 1.80%)</title><rect x="83.6" y="211.0" width="21.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="86.6" y="222.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (15 samples, 1.80%)</title><rect x="83.6" y="195.0" width="21.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="86.6" y="206.0">r..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (15 samples, 1.80%)</title><rect x="83.6" y="179.0" width="21.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="86.6" y="190.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="85.0" y="163.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="88.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Flush(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.12%)</title><rect x="86.4" y="163.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="89.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (8 samples, 0.96%)</title><rect x="87.8" y="163.0" width="11.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="90.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.12%)</title><rect x="87.8" y="147.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="90.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (7 samples, 0.84%)</title><rect x="89.2" y="147.0" width="9.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="92.2" y="158.0"></text>
</g>
<g>
<title>__libc_write (5 samples, 0.60%)</title><rect x="89.2" y="131.0" width="7.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="92.2" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.12%)</title><rect x="96.3" y="131.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="99.3" y="142.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="97.7" y="131.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="100.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (2 samples, 0.24%)</title><rect x="99.1" y="163.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="102.1" y="174.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.24%)</title><rect x="102.0" y="163.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="105.0" y="174.0"></text>
</g>
<g>
<title>memcpy@plt (1 samples, 0.12%)</title><rect x="103.4" y="147.0" width="1.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="106.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (1 samples, 0.12%)</title><rect x="104.8" y="211.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="107.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (9 samples, 1.08%)</title><rect x="106.2" y="211.0" width="12.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="109.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 1.08%)</title><rect x="106.2" y="195.0" width="12.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="109.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (9 samples, 1.08%)</title><rect x="106.2" y="179.0" width="12.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="109.2" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 1.08%)</title><rect x="106.2" y="163.0" width="12.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="109.2" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (9 samples, 1.08%)</title><rect x="106.2" y="147.0" width="12.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="109.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (9 samples, 1.08%)</title><rect x="106.2" y="131.0" width="12.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="109.2" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="111.9" y="115.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="114.9" y="126.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="111.9" y="99.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="114.9" y="110.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.36%)</title><rect x="113.3" y="115.0" width="4.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="116.3" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (3 samples, 0.36%)</title><rect x="113.3" y="99.0" width="4.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="116.3" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (2 samples, 0.24%)</title><rect x="113.3" y="83.0" width="2.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="116.3" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.24%)</title><rect x="113.3" y="67.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="116.3" y="78.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="114.7" y="51.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="117.7" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.12%)</title><rect x="116.1" y="83.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="119.1" y="94.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="116.1" y="67.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="119.1" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.12%)</title><rect x="117.5" y="115.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="120.5" y="126.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (5 samples, 0.60%)</title><rect x="118.9" y="211.0" width="7.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="121.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (5 samples, 0.60%)</title><rect x="118.9" y="195.0" width="7.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="121.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (5 samples, 0.60%)</title><rect x="118.9" y="179.0" width="7.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="121.9" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.60%)</title><rect x="118.9" y="163.0" width="7.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="121.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.48%)</title><rect x="118.9" y="147.0" width="5.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="121.9" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (4 samples, 0.48%)</title><rect x="118.9" y="131.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="121.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (4 samples, 0.48%)</title><rect x="118.9" y="115.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="121.9" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 0.48%)</title><rect x="118.9" y="99.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="121.9" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (4 samples, 0.48%)</title><rect x="118.9" y="83.0" width="5.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="121.9" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (3 samples, 0.36%)</title><rect x="120.4" y="67.0" width="4.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="123.4" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.36%)</title><rect x="120.4" y="51.0" width="4.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="123.4" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="121.8" y="35.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="124.8" y="46.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="123.2" y="35.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="126.2" y="46.0"></text>
</g>
<g>
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (1 samples, 0.12%)</title><rect x="124.6" y="147.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="127.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (13 samples, 1.56%)</title><rect x="126.0" y="211.0" width="18.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="129.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (3 samples, 0.36%)</title><rect x="144.4" y="211.0" width="4.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="147.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.36%)</title><rect x="144.4" y="195.0" width="4.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="147.4" y="206.0"></text>
</g>
<g>
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;) (1 samples, 0.12%)</title><rect x="147.2" y="179.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="150.2" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.12%)</title><rect x="148.7" y="211.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="151.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) [clone .plt] (1 samples, 0.12%)</title><rect x="150.1" y="211.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="153.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.12%)</title><rect x="151.5" y="211.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="154.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.12%)</title><rect x="152.9" y="227.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="155.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) [clone .plt] (1 samples, 0.12%)</title><rect x="154.3" y="227.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="157.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.60%)</title><rect x="155.7" y="243.0" width="7.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="158.7" y="254.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.12%)</title><rect x="155.7" y="227.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="158.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (1 samples, 0.12%)</title><rect x="157.1" y="227.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="160.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (2 samples, 0.24%)</title><rect x="158.6" y="227.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="161.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) [clone .plt] (1 samples, 0.12%)</title><rect x="161.4" y="227.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="164.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.12%)</title><rect x="162.8" y="259.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="165.8" y="270.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.12%)</title><rect x="164.2" y="323.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="167.2" y="334.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.12%)</title><rect x="164.2" y="307.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="167.2" y="318.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.12%)</title><rect x="165.6" y="323.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="168.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.12%)</title><rect x="167.1" y="355.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.12%)</title><rect x="167.1" y="339.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="170.1" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="167.1" y="323.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="170.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="167.1" y="307.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.1" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="167.1" y="291.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.1" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.12%)</title><rect x="167.1" y="275.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArraySpecial (1 samples, 0.12%)</title><rect x="168.5" y="355.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (1 samples, 0.12%)</title><rect x="168.5" y="339.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="171.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.12%)</title><rect x="168.5" y="323.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.5" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.12%)</title><rect x="168.5" y="307.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.12%)</title><rect x="168.5" y="291.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.5" y="302.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.12%)</title><rect x="168.5" y="275.0" width="1.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="171.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (4 samples, 0.48%)</title><rect x="169.9" y="371.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (4 samples, 0.48%)</title><rect x="169.9" y="355.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="172.9" y="366.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1 samples, 0.12%)</title><rect x="174.1" y="339.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="177.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.12%)</title><rect x="175.5" y="403.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.5" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.12%)</title><rect x="175.5" y="387.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.5" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.12%)</title><rect x="175.5" y="371.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="178.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.12%)</title><rect x="175.5" y="355.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.12%)</title><rect x="175.5" y="339.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.12%)</title><rect x="177.0" y="435.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.0" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.12%)</title><rect x="177.0" y="419.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.12%)</title><rect x="178.4" y="435.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="181.4" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (12 samples, 1.44%)</title><rect x="179.8" y="451.0" width="17.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.8" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (12 samples, 1.44%)</title><rect x="179.8" y="435.0" width="17.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="182.8" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.96%)</title><rect x="181.2" y="419.0" width="11.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="184.2" y="430.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.12%)</title><rect x="181.2" y="403.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="184.2" y="414.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.12%)</title><rect x="182.6" y="403.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="185.6" y="414.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="184.0" y="403.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="187.0" y="414.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.12%)</title><rect x="185.4" y="403.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="188.4" y="414.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.12%)</title><rect x="186.9" y="403.0" width="1.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="189.9" y="414.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.36%)</title><rect x="188.3" y="403.0" width="4.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="191.3" y="414.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.12%)</title><rect x="189.7" y="387.0" width="1.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="192.7" y="398.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.12%)</title><rect x="191.1" y="387.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="194.1" y="398.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.36%)</title><rect x="192.5" y="419.0" width="4.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="195.5" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=319342] (83 samples, 9.95%)</title><rect x="196.8" y="515.0" width="117.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="199.8" y="526.0">[NIO Selector ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (83 samples, 9.95%)</title><rect x="196.8" y="499.0" width="117.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="199.8" y="510.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (12 samples, 1.44%)</title><rect x="198.2" y="483.0" width="17.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="201.2" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (12 samples, 1.44%)</title><rect x="198.2" y="467.0" width="17.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.2" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.12%)</title><rect x="199.6" y="451.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="202.6" y="462.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.12%)</title><rect x="201.0" y="451.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="204.0" y="462.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.12%)</title><rect x="202.4" y="451.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="205.4" y="462.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 0.96%)</title><rect x="203.8" y="451.0" width="11.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="206.8" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (70 samples, 8.39%)</title><rect x="215.2" y="483.0" width="99.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.2" y="494.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (69 samples, 8.27%)</title><rect x="216.6" y="467.0" width="97.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="219.6" y="478.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (64 samples, 7.67%)</title><rect x="216.6" y="451.0" width="90.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.6" y="462.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (63 samples, 7.55%)</title><rect x="218.0" y="435.0" width="89.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="221.0" y="446.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (63 samples, 7.55%)</title><rect x="218.0" y="419.0" width="89.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="221.0" y="430.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (62 samples, 7.43%)</title><rect x="218.0" y="403.0" width="87.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="221.0" y="414.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 1.08%)</title><rect x="218.0" y="387.0" width="12.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="221.0" y="398.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.12%)</title><rect x="218.0" y="371.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="221.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.12%)</title><rect x="218.0" y="355.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="221.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.12%)</title><rect x="218.0" y="339.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 0.96%)</title><rect x="219.4" y="371.0" width="11.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="222.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.84%)</title><rect x="219.4" y="355.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.12%)</title><rect x="219.4" y="339.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="222.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.72%)</title><rect x="220.8" y="339.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="223.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.72%)</title><rect x="220.8" y="323.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="223.8" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.72%)</title><rect x="220.8" y="307.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="223.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.60%)</title><rect x="220.8" y="291.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="223.8" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="227.9" y="291.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="230.9" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.12%)</title><rect x="229.3" y="355.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="232.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.12%)</title><rect x="229.3" y="339.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="232.3" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.12%)</title><rect x="229.3" y="323.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="232.3" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.12%)</title><rect x="229.3" y="307.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="232.3" y="318.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.12%)</title><rect x="229.3" y="291.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="232.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.put (53 samples, 6.35%)</title><rect x="230.7" y="387.0" width="75.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="233.7" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (1 samples, 0.12%)</title><rect x="230.7" y="371.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="233.7" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.12%)</title><rect x="230.7" y="355.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="233.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.12%)</title><rect x="230.7" y="339.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="233.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="230.7" y="323.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="233.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="230.7" y="307.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="233.7" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="230.7" y="291.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="233.7" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.12%)</title><rect x="230.7" y="275.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (52 samples, 6.24%)</title><rect x="232.1" y="371.0" width="73.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="235.1" y="382.0">ru/mail/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (52 samples, 6.24%)</title><rect x="232.1" y="355.0" width="73.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.1" y="366.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (52 samples, 6.24%)</title><rect x="232.1" y="339.0" width="73.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.1" y="350.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (49 samples, 5.88%)</title><rect x="235.0" y="323.0" width="69.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="238.0" y="334.0">Java_or..</text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (1 samples, 0.12%)</title><rect x="235.0" y="307.0" width="1.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="238.0" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (48 samples, 5.76%)</title><rect x="236.4" y="307.0" width="67.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="239.4" y="318.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (48 samples, 5.76%)</title><rect x="236.4" y="291.0" width="67.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="239.4" y="302.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.12%)</title><rect x="236.4" y="275.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="239.4" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (47 samples, 5.64%)</title><rect x="237.8" y="275.0" width="66.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="240.8" y="286.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (46 samples, 5.52%)</title><rect x="237.8" y="259.0" width="65.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="240.8" y="270.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (46 samples, 5.52%)</title><rect x="237.8" y="243.0" width="65.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="240.8" y="254.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (45 samples, 5.40%)</title><rect x="237.8" y="227.0" width="63.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="240.8" y="238.0">rocksdb..</text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.12%)</title><rect x="242.0" y="211.0" width="1.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="245.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (7 samples, 0.84%)</title><rect x="243.5" y="211.0" width="9.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="246.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (7 samples, 0.84%)</title><rect x="243.5" y="195.0" width="9.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="246.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.12%)</title><rect x="243.5" y="179.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="246.5" y="190.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (6 samples, 0.72%)</title><rect x="244.9" y="179.0" width="8.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="247.9" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="246.3" y="163.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="249.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.24%)</title><rect x="247.7" y="163.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="250.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.24%)</title><rect x="247.7" y="147.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="250.7" y="158.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.24%)</title><rect x="247.7" y="131.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="250.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.24%)</title><rect x="250.5" y="163.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="253.5" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.24%)</title><rect x="250.5" y="147.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="253.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.12%)</title><rect x="253.4" y="211.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="256.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (11 samples, 1.32%)</title><rect x="254.8" y="211.0" width="15.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="257.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (11 samples, 1.32%)</title><rect x="254.8" y="195.0" width="15.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="257.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (11 samples, 1.32%)</title><rect x="254.8" y="179.0" width="15.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="257.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 1.08%)</title><rect x="257.6" y="163.0" width="12.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="260.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.12%)</title><rect x="257.6" y="147.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="260.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (8 samples, 0.96%)</title><rect x="259.0" y="147.0" width="11.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="262.0" y="158.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const [clone .plt] (1 samples, 0.12%)</title><rect x="260.4" y="131.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="263.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (6 samples, 0.72%)</title><rect x="261.8" y="131.0" width="8.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="264.8" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="261.8" y="115.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="264.8" y="126.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.12%)</title><rect x="261.8" y="99.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="264.8" y="110.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 0.60%)</title><rect x="263.3" y="115.0" width="7.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="266.3" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (5 samples, 0.60%)</title><rect x="263.3" y="99.0" width="7.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="266.3" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (2 samples, 0.24%)</title><rect x="264.7" y="83.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="267.7" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.24%)</title><rect x="264.7" y="67.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="267.7" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.24%)</title><rect x="267.5" y="83.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="270.5" y="94.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="268.9" y="67.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="271.9" y="78.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (4 samples, 0.48%)</title><rect x="270.3" y="211.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="273.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 0.48%)</title><rect x="270.3" y="195.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="273.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (4 samples, 0.48%)</title><rect x="270.3" y="179.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="273.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.36%)</title><rect x="270.3" y="163.0" width="4.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="273.3" y="174.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.12%)</title><rect x="270.3" y="147.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="273.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.12%)</title><rect x="271.8" y="147.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="274.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.12%)</title><rect x="273.2" y="147.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="276.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.12%)</title><rect x="273.2" y="131.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="276.2" y="142.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.12%)</title><rect x="274.6" y="163.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="277.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (13 samples, 1.56%)</title><rect x="276.0" y="211.0" width="18.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="279.0" y="222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.12%)</title><rect x="291.6" y="195.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="294.6" y="206.0"></text>
</g>
<g>
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;) (1 samples, 0.12%)</title><rect x="293.0" y="195.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="296.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (4 samples, 0.48%)</title><rect x="294.4" y="211.0" width="5.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="297.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (4 samples, 0.48%)</title><rect x="294.4" y="195.0" width="5.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="297.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.12%)</title><rect x="300.0" y="211.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="303.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.12%)</title><rect x="301.5" y="227.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="304.5" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="302.9" y="259.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="305.9" y="270.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.12%)</title><rect x="304.3" y="323.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="307.3" y="334.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.12%)</title><rect x="304.3" y="307.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="307.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.12%)</title><rect x="305.7" y="403.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.7" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.12%)</title><rect x="305.7" y="387.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.7" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.12%)</title><rect x="305.7" y="371.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="308.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.12%)</title><rect x="305.7" y="355.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="308.7" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.12%)</title><rect x="305.7" y="339.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.7" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 0.60%)</title><rect x="307.1" y="451.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="310.1" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 0.60%)</title><rect x="307.1" y="435.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.1" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.24%)</title><rect x="308.5" y="419.0" width="2.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="311.5" y="430.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.12%)</title><rect x="308.5" y="403.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="311.5" y="414.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.12%)</title><rect x="310.0" y="403.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="313.0" y="414.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.24%)</title><rect x="311.4" y="419.0" width="2.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="314.4" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=319343] (151 samples, 18.11%)</title><rect x="314.2" y="515.0" width="213.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="317.2" y="526.0">[NIO Selector #2 tid=319343]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (151 samples, 18.11%)</title><rect x="314.2" y="499.0" width="213.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.2" y="510.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.12%)</title><rect x="315.6" y="483.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.6" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.24%)</title><rect x="317.0" y="483.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="320.0" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.24%)</title><rect x="317.0" y="467.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="320.0" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (11 samples, 1.32%)</title><rect x="319.9" y="483.0" width="15.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="322.9" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (11 samples, 1.32%)</title><rect x="319.9" y="467.0" width="15.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="322.9" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.12%)</title><rect x="321.3" y="451.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="324.3" y="462.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.60%)</title><rect x="322.7" y="451.0" width="7.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="325.7" y="462.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="328.3" y="435.0" width="1.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="331.3" y="446.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.12%)</title><rect x="329.8" y="451.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="332.8" y="462.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.12%)</title><rect x="331.2" y="451.0" width="1.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="334.2" y="462.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.24%)</title><rect x="332.6" y="451.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="335.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (136 samples, 16.31%)</title><rect x="335.4" y="483.0" width="192.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.4" y="494.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (136 samples, 16.31%)</title><rect x="335.4" y="467.0" width="192.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="338.4" y="478.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (123 samples, 14.75%)</title><rect x="336.8" y="451.0" width="174.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.8" y="462.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (119 samples, 14.27%)</title><rect x="338.2" y="435.0" width="168.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.2" y="446.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (119 samples, 14.27%)</title><rect x="338.2" y="419.0" width="168.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="341.2" y="430.0">one/nio/http/HttpServe..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (118 samples, 14.15%)</title><rect x="338.2" y="403.0" width="167.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="341.2" y="414.0">RequestHandler1_put.h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 1.80%)</title><rect x="338.2" y="387.0" width="21.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.2" y="398.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.12%)</title><rect x="338.2" y="371.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="341.2" y="382.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.12%)</title><rect x="338.2" y="355.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="341.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.12%)</title><rect x="338.2" y="339.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="341.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (13 samples, 1.56%)</title><rect x="339.7" y="371.0" width="18.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="342.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.36%)</title><rect x="339.7" y="355.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="342.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.12%)</title><rect x="342.5" y="339.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="345.5" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 1.20%)</title><rect x="343.9" y="355.0" width="14.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="346.9" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 1.20%)</title><rect x="343.9" y="339.0" width="14.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="346.9" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (10 samples, 1.20%)</title><rect x="343.9" y="323.0" width="14.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="346.9" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (10 samples, 1.20%)</title><rect x="343.9" y="307.0" width="14.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.9" y="318.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.36%)</title><rect x="346.7" y="291.0" width="4.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="349.7" y="302.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="346.7" y="275.0" width="1.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="349.7" y="286.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.24%)</title><rect x="348.2" y="275.0" width="2.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="351.2" y="286.0"></text>
</g>
<g>
<title>__libc_send (5 samples, 0.60%)</title><rect x="351.0" y="291.0" width="7.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="354.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.12%)</title><rect x="358.1" y="371.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="361.1" y="382.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.12%)</title><rect x="358.1" y="355.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="361.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.12%)</title><rect x="358.1" y="339.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="361.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.put (103 samples, 12.35%)</title><rect x="359.5" y="387.0" width="145.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.5" y="398.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (4 samples, 0.48%)</title><rect x="359.5" y="371.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="362.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.48%)</title><rect x="359.5" y="355.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="362.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.48%)</title><rect x="359.5" y="339.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="362.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.48%)</title><rect x="359.5" y="323.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="362.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.48%)</title><rect x="359.5" y="307.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="362.5" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.48%)</title><rect x="359.5" y="291.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.5" y="302.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.12%)</title><rect x="363.7" y="275.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="366.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (99 samples, 11.87%)</title><rect x="365.1" y="371.0" width="140.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.1" y="382.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (99 samples, 11.87%)</title><rect x="365.1" y="355.0" width="140.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.1" y="366.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (99 samples, 11.87%)</title><rect x="365.1" y="339.0" width="140.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.1" y="350.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (95 samples, 11.39%)</title><rect x="365.1" y="323.0" width="134.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="368.1" y="334.0">Java_org_rocksdb_..</text>
</g>
<g>
<title>_int_free (1 samples, 0.12%)</title><rect x="366.5" y="307.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="369.5" y="318.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.12%)</title><rect x="368.0" y="307.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="371.0" y="318.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.24%)</title><rect x="369.4" y="307.0" width="2.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="372.4" y="318.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.12%)</title><rect x="372.2" y="307.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="375.2" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (89 samples, 10.67%)</title><rect x="373.6" y="307.0" width="125.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="376.6" y="318.0">rocksdb_put_hel..</text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.24%)</title><rect x="373.6" y="291.0" width="2.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="376.6" y="302.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.12%)</title><rect x="376.5" y="291.0" width="1.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="379.5" y="302.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="376.5" y="275.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="379.5" y="286.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (85 samples, 10.19%)</title><rect x="377.9" y="291.0" width="120.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="380.9" y="302.0">rocksdb::DB::Pu..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="377.9" y="275.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="380.9" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (84 samples, 10.07%)</title><rect x="379.3" y="275.0" width="118.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="382.3" y="286.0">rocksdb::DBImp..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (83 samples, 9.95%)</title><rect x="379.3" y="259.0" width="117.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="382.3" y="270.0">rocksdb::DB::P..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.12%)</title><rect x="379.3" y="243.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="382.3" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (74 samples, 8.87%)</title><rect x="380.7" y="243.0" width="104.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="383.7" y="254.0">rocksdb::DBI..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.12%)</title><rect x="380.7" y="227.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="383.7" y="238.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.12%)</title><rect x="382.1" y="227.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="385.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.12%)</title><rect x="383.5" y="227.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="386.5" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (69 samples, 8.27%)</title><rect x="384.9" y="227.0" width="97.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="387.9" y="238.0">rocksdb::DB..</text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.12%)</title><rect x="387.8" y="211.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="390.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (11 samples, 1.32%)</title><rect x="389.2" y="211.0" width="15.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="392.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (9 samples, 1.08%)</title><rect x="389.2" y="195.0" width="12.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="392.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (9 samples, 1.08%)</title><rect x="389.2" y="179.0" width="12.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="392.2" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (4 samples, 0.48%)</title><rect x="390.6" y="163.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="393.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (1 samples, 0.12%)</title><rect x="390.6" y="147.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="393.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (3 samples, 0.36%)</title><rect x="392.0" y="147.0" width="4.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="395.0" y="158.0"></text>
</g>
<g>
<title>__libc_write (3 samples, 0.36%)</title><rect x="392.0" y="131.0" width="4.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="395.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) [clone .plt] (1 samples, 0.12%)</title><rect x="396.3" y="163.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="399.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.36%)</title><rect x="397.7" y="163.0" width="4.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="400.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.12%)</title><rect x="397.7" y="147.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="400.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.12%)</title><rect x="399.1" y="147.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="402.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="400.5" y="147.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="403.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.12%)</title><rect x="401.9" y="195.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="404.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="403.3" y="195.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="406.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (1 samples, 0.12%)</title><rect x="404.7" y="211.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="407.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (1 samples, 0.12%)</title><rect x="406.2" y="211.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="409.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (1 samples, 0.12%)</title><rect x="407.6" y="211.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="410.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (19 samples, 2.28%)</title><rect x="409.0" y="211.0" width="26.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="412.0" y="222.0">r..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (18 samples, 2.16%)</title><rect x="410.4" y="195.0" width="25.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="413.4" y="206.0">r..</text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.12%)</title><rect x="410.4" y="179.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="413.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (17 samples, 2.04%)</title><rect x="411.8" y="179.0" width="24.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="414.8" y="190.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (14 samples, 1.68%)</title><rect x="416.1" y="163.0" width="19.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="419.1" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.12%)</title><rect x="416.1" y="147.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="419.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) [clone .plt] (1 samples, 0.12%)</title><rect x="417.5" y="147.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="420.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (12 samples, 1.44%)</title><rect x="418.9" y="147.0" width="17.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="421.9" y="158.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (2 samples, 0.24%)</title><rect x="418.9" y="131.0" width="2.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="421.9" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.12%)</title><rect x="421.7" y="131.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="424.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (9 samples, 1.08%)</title><rect x="423.1" y="131.0" width="12.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="426.1" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="423.1" y="115.0" width="1.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="426.1" y="126.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.12%)</title><rect x="423.1" y="99.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="426.1" y="110.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (7 samples, 0.84%)</title><rect x="424.6" y="115.0" width="9.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="427.6" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (6 samples, 0.72%)</title><rect x="424.6" y="99.0" width="8.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="427.6" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (5 samples, 0.60%)</title><rect x="426.0" y="83.0" width="7.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="429.0" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.48%)</title><rect x="427.4" y="67.0" width="5.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="430.4" y="78.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="430.2" y="51.0" width="1.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="433.2" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="431.6" y="51.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="434.6" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.12%)</title><rect x="433.0" y="99.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="436.0" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.12%)</title><rect x="434.5" y="115.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="437.5" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.12%)</title><rect x="434.5" y="99.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="437.5" y="110.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (4 samples, 0.48%)</title><rect x="435.9" y="211.0" width="5.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="438.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 0.48%)</title><rect x="435.9" y="195.0" width="5.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="438.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="435.9" y="179.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="438.9" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.36%)</title><rect x="437.3" y="179.0" width="4.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="440.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.24%)</title><rect x="437.3" y="163.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="440.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.24%)</title><rect x="437.3" y="147.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="440.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.24%)</title><rect x="437.3" y="131.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="440.3" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="437.3" y="115.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="440.3" y="126.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.12%)</title><rect x="437.3" y="99.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="440.3" y="110.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.12%)</title><rect x="438.7" y="115.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="441.7" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.12%)</title><rect x="438.7" y="99.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="441.7" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="438.7" y="83.0" width="1.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="441.7" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="438.7" y="67.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="441.7" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.12%)</title><rect x="438.7" y="51.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="441.7" y="62.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.12%)</title><rect x="438.7" y="35.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="441.7" y="46.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.12%)</title><rect x="440.1" y="163.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="443.1" y="174.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const [clone .plt] (1 samples, 0.12%)</title><rect x="441.5" y="211.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="444.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (19 samples, 2.28%)</title><rect x="442.9" y="211.0" width="26.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="445.9" y="222.0">r..</text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (8 samples, 0.96%)</title><rect x="469.8" y="211.0" width="11.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="472.8" y="222.0"></text>
</g>
<g>
<title>__GI_sched_yield (1 samples, 0.12%)</title><rect x="469.8" y="195.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="472.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (7 samples, 0.84%)</title><rect x="471.2" y="195.0" width="10.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="474.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.12%)</title><rect x="481.2" y="211.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="484.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) [clone .plt] (1 samples, 0.12%)</title><rect x="482.6" y="227.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="485.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (1 samples, 0.12%)</title><rect x="484.0" y="227.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="487.0" y="238.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.12%)</title><rect x="485.4" y="243.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="488.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.48%)</title><rect x="486.8" y="243.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="489.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.12%)</title><rect x="486.8" y="227.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="489.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.12%)</title><rect x="488.2" y="227.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="491.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="489.6" y="227.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="492.6" y="238.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() [clone .plt] (1 samples, 0.12%)</title><rect x="489.6" y="211.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="492.6" y="222.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.12%)</title><rect x="491.1" y="227.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="494.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.12%)</title><rect x="492.5" y="243.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="495.5" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="493.9" y="243.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="496.9" y="254.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (1 samples, 0.12%)</title><rect x="495.3" y="243.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="498.3" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.12%)</title><rect x="496.7" y="259.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="499.7" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.12%)</title><rect x="498.1" y="291.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="501.1" y="302.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.24%)</title><rect x="499.5" y="323.0" width="2.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="502.5" y="334.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.12%)</title><rect x="499.5" y="307.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="502.5" y="318.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.12%)</title><rect x="501.0" y="307.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="504.0" y="318.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (2 samples, 0.24%)</title><rect x="502.4" y="323.0" width="2.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="505.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.12%)</title><rect x="505.2" y="403.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.2" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.12%)</title><rect x="505.2" y="387.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="508.2" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.12%)</title><rect x="505.2" y="371.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="508.2" y="382.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.12%)</title><rect x="505.2" y="355.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.12%)</title><rect x="505.2" y="339.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="508.2" y="350.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="505.2" y="323.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="508.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.36%)</title><rect x="506.6" y="435.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="509.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.36%)</title><rect x="506.6" y="419.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="509.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.36%)</title><rect x="506.6" y="403.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="509.6" y="414.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.36%)</title><rect x="506.6" y="387.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.36%)</title><rect x="506.6" y="371.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="509.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (12 samples, 1.44%)</title><rect x="510.9" y="451.0" width="16.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="513.9" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (12 samples, 1.44%)</title><rect x="510.9" y="435.0" width="16.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.9" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.36%)</title><rect x="512.3" y="419.0" width="4.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="515.3" y="430.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.12%)</title><rect x="512.3" y="403.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="515.3" y="414.0"></text>
</g>
<g>
<title>WeakPreserveExceptionMark::WeakPreserveExceptionMark(Thread*) (1 samples, 0.12%)</title><rect x="513.7" y="403.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="516.7" y="414.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.12%)</title><rect x="515.1" y="403.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="518.1" y="414.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.24%)</title><rect x="516.5" y="419.0" width="2.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="519.5" y="430.0"></text>
</g>
<g>
<title>__recv (5 samples, 0.60%)</title><rect x="519.4" y="419.0" width="7.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="522.4" y="430.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.12%)</title><rect x="526.4" y="419.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="529.4" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=319344] (82 samples, 9.83%)</title><rect x="527.8" y="515.0" width="116.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="530.8" y="526.0">[NIO Selector ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (82 samples, 9.83%)</title><rect x="527.8" y="499.0" width="116.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="530.8" y="510.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.48%)</title><rect x="532.1" y="483.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.1" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.48%)</title><rect x="532.1" y="467.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="535.1" y="478.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.12%)</title><rect x="532.1" y="451.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="535.1" y="462.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="533.5" y="451.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="536.5" y="462.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.24%)</title><rect x="534.9" y="451.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="537.9" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (75 samples, 8.99%)</title><rect x="537.7" y="483.0" width="106.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.7" y="494.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (75 samples, 8.99%)</title><rect x="537.7" y="467.0" width="106.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="540.7" y="478.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (69 samples, 8.27%)</title><rect x="537.7" y="451.0" width="97.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="540.7" y="462.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (67 samples, 8.03%)</title><rect x="539.2" y="435.0" width="94.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="542.2" y="446.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (67 samples, 8.03%)</title><rect x="539.2" y="419.0" width="94.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="542.2" y="430.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (67 samples, 8.03%)</title><rect x="539.2" y="403.0" width="94.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="542.2" y="414.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (11 samples, 1.32%)</title><rect x="539.2" y="387.0" width="15.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="542.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (11 samples, 1.32%)</title><rect x="539.2" y="371.0" width="15.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="542.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 1.08%)</title><rect x="539.2" y="355.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="542.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.72%)</title><rect x="543.4" y="339.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="546.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.72%)</title><rect x="543.4" y="323.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="546.4" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.72%)</title><rect x="543.4" y="307.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.60%)</title><rect x="543.4" y="291.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="546.4" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="550.5" y="291.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="553.5" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.24%)</title><rect x="551.9" y="355.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.9" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.24%)</title><rect x="551.9" y="339.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.9" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.24%)</title><rect x="551.9" y="323.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="554.9" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.24%)</title><rect x="551.9" y="307.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="554.9" y="318.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.12%)</title><rect x="551.9" y="291.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="554.9" y="302.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.12%)</title><rect x="551.9" y="275.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="554.9" y="286.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.12%)</title><rect x="553.3" y="291.0" width="1.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="556.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.put (56 samples, 6.71%)</title><rect x="554.7" y="387.0" width="79.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="557.7" y="398.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (56 samples, 6.71%)</title><rect x="554.7" y="371.0" width="79.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.7" y="382.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (56 samples, 6.71%)</title><rect x="554.7" y="355.0" width="79.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.7" y="366.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (56 samples, 6.71%)</title><rect x="554.7" y="339.0" width="79.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.7" y="350.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (54 samples, 6.47%)</title><rect x="554.7" y="323.0" width="76.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="557.7" y="334.0">Java_org..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (54 samples, 6.47%)</title><rect x="554.7" y="307.0" width="76.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="557.7" y="318.0">rocksdb_..</text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.12%)</title><rect x="554.7" y="291.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="557.7" y="302.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.12%)</title><rect x="556.1" y="291.0" width="1.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="559.1" y="302.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.12%)</title><rect x="556.1" y="275.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="559.1" y="286.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (51 samples, 6.12%)</title><rect x="557.6" y="291.0" width="72.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="560.6" y="302.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (51 samples, 6.12%)</title><rect x="557.6" y="275.0" width="72.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="560.6" y="286.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (51 samples, 6.12%)</title><rect x="557.6" y="259.0" width="72.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="560.6" y="270.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (49 samples, 5.88%)</title><rect x="557.6" y="243.0" width="69.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="560.6" y="254.0">rocksdb..</text>
</g>
<g>
<title>__pthread_cond_destroy (1 samples, 0.12%)</title><rect x="557.6" y="227.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="560.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (46 samples, 5.52%)</title><rect x="559.0" y="227.0" width="65.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="562.0" y="238.0">rocksdb..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="560.4" y="211.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="563.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (7 samples, 0.84%)</title><rect x="561.8" y="211.0" width="9.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="564.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (6 samples, 0.72%)</title><rect x="563.2" y="195.0" width="8.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="566.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (6 samples, 0.72%)</title><rect x="563.2" y="179.0" width="8.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="566.2" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (4 samples, 0.48%)</title><rect x="563.2" y="163.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="566.2" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (4 samples, 0.48%)</title><rect x="563.2" y="147.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="566.2" y="158.0"></text>
</g>
<g>
<title>__libc_write (4 samples, 0.48%)</title><rect x="563.2" y="131.0" width="5.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="566.2" y="142.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.24%)</title><rect x="568.9" y="163.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="571.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.12%)</title><rect x="568.9" y="147.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="571.9" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.12%)</title><rect x="570.3" y="147.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="573.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.12%)</title><rect x="571.7" y="211.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="574.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (2 samples, 0.24%)</title><rect x="573.1" y="211.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="576.1" y="222.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.24%)</title><rect x="573.1" y="195.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="576.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (1 samples, 0.12%)</title><rect x="575.9" y="211.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="578.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (9 samples, 1.08%)</title><rect x="577.4" y="211.0" width="12.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="580.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 1.08%)</title><rect x="577.4" y="195.0" width="12.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="580.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (9 samples, 1.08%)</title><rect x="577.4" y="179.0" width="12.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="580.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 1.08%)</title><rect x="577.4" y="163.0" width="12.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="580.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (1 samples, 0.12%)</title><rect x="577.4" y="147.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="580.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (8 samples, 0.96%)</title><rect x="578.8" y="147.0" width="11.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="581.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (8 samples, 0.96%)</title><rect x="578.8" y="131.0" width="11.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="581.8" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="580.2" y="115.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="583.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.12%)</title><rect x="580.2" y="99.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="583.2" y="110.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 0.60%)</title><rect x="581.6" y="115.0" width="7.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="584.6" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (5 samples, 0.60%)</title><rect x="581.6" y="99.0" width="7.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="584.6" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (2 samples, 0.24%)</title><rect x="584.4" y="83.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="587.4" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.12%)</title><rect x="585.9" y="67.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="588.9" y="78.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="585.9" y="51.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="588.9" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.12%)</title><rect x="587.3" y="83.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="590.3" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="587.3" y="67.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="590.3" y="78.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.12%)</title><rect x="588.7" y="115.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="591.7" y="126.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (6 samples, 0.72%)</title><rect x="590.1" y="211.0" width="8.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="593.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 0.72%)</title><rect x="590.1" y="195.0" width="8.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="593.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (6 samples, 0.72%)</title><rect x="590.1" y="179.0" width="8.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="593.1" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.72%)</title><rect x="590.1" y="163.0" width="8.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="593.1" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (6 samples, 0.72%)</title><rect x="590.1" y="147.0" width="8.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="593.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.12%)</title><rect x="590.1" y="131.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="593.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (5 samples, 0.60%)</title><rect x="591.5" y="131.0" width="7.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="594.5" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.12%)</title><rect x="592.9" y="115.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="595.9" y="126.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (3 samples, 0.36%)</title><rect x="594.3" y="115.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="597.3" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.36%)</title><rect x="594.3" y="99.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="597.3" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (2 samples, 0.24%)</title><rect x="594.3" y="83.0" width="2.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="597.3" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.12%)</title><rect x="597.2" y="83.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="600.2" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="597.2" y="67.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="600.2" y="78.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (13 samples, 1.56%)</title><rect x="598.6" y="211.0" width="18.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="601.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (4 samples, 0.48%)</title><rect x="617.0" y="211.0" width="5.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="620.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (4 samples, 0.48%)</title><rect x="617.0" y="195.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="620.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::AssertHeld() [clone .plt] (1 samples, 0.12%)</title><rect x="622.6" y="211.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="625.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.12%)</title><rect x="624.1" y="227.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="627.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) [clone .plt] (1 samples, 0.12%)</title><rect x="625.5" y="227.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="628.5" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.24%)</title><rect x="626.9" y="243.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="629.9" y="254.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.12%)</title><rect x="626.9" y="227.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="629.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="628.3" y="227.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="631.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="629.7" y="291.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="632.7" y="302.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.12%)</title><rect x="631.1" y="323.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="634.1" y="334.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.12%)</title><rect x="631.1" y="307.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="634.1" y="318.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.12%)</title><rect x="632.5" y="323.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="635.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.12%)</title><rect x="634.0" y="435.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="637.0" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 0.72%)</title><rect x="635.4" y="451.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="638.4" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 0.72%)</title><rect x="635.4" y="435.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="638.4" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.36%)</title><rect x="635.4" y="419.0" width="4.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="638.4" y="430.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="635.4" y="403.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="638.4" y="414.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.24%)</title><rect x="636.8" y="403.0" width="2.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="639.8" y="414.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.36%)</title><rect x="639.6" y="419.0" width="4.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="642.6" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=319345] (87 samples, 10.43%)</title><rect x="643.9" y="515.0" width="123.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="646.9" y="526.0">[NIO Selector #..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (87 samples, 10.43%)</title><rect x="643.9" y="499.0" width="123.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.9" y="510.0">one/nio/server/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.12%)</title><rect x="645.3" y="483.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 1.20%)</title><rect x="646.7" y="483.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="649.7" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 1.08%)</title><rect x="648.1" y="467.0" width="12.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="651.1" y="478.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.12%)</title><rect x="648.1" y="451.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="651.1" y="462.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 0.96%)</title><rect x="649.5" y="451.0" width="11.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="652.5" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (75 samples, 8.99%)</title><rect x="660.8" y="483.0" width="106.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.8" y="494.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (75 samples, 8.99%)</title><rect x="660.8" y="467.0" width="106.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="663.8" y="478.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (72 samples, 8.63%)</title><rect x="660.8" y="451.0" width="101.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.8" y="462.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (69 samples, 8.27%)</title><rect x="662.3" y="435.0" width="97.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="665.3" y="446.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (69 samples, 8.27%)</title><rect x="662.3" y="419.0" width="97.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.3" y="430.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (68 samples, 8.15%)</title><rect x="662.3" y="403.0" width="96.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.3" y="414.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 1.08%)</title><rect x="662.3" y="387.0" width="12.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="665.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 0.96%)</title><rect x="662.3" y="371.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="665.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.48%)</title><rect x="662.3" y="355.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.48%)</title><rect x="662.3" y="339.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="665.3" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.48%)</title><rect x="662.3" y="323.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.3" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.48%)</title><rect x="662.3" y="307.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="665.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.36%)</title><rect x="662.3" y="291.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="665.3" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="666.5" y="291.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.5" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.48%)</title><rect x="667.9" y="355.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.9" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.48%)</title><rect x="667.9" y="339.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="670.9" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.48%)</title><rect x="667.9" y="323.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.9" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.48%)</title><rect x="667.9" y="307.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="670.9" y="318.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.24%)</title><rect x="667.9" y="291.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="670.9" y="302.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.24%)</title><rect x="670.7" y="291.0" width="2.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="673.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.12%)</title><rect x="673.6" y="371.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.6" y="382.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.12%)</title><rect x="673.6" y="355.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="676.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.12%)</title><rect x="673.6" y="339.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.put (59 samples, 7.07%)</title><rect x="675.0" y="387.0" width="83.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.0" y="398.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (2 samples, 0.24%)</title><rect x="675.0" y="371.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.0" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.24%)</title><rect x="675.0" y="355.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.0" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.24%)</title><rect x="675.0" y="339.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="678.0" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.24%)</title><rect x="675.0" y="323.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="678.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.24%)</title><rect x="675.0" y="307.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.0" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.24%)</title><rect x="675.0" y="291.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (56 samples, 6.71%)</title><rect x="677.8" y="371.0" width="79.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.8" y="382.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (55 samples, 6.59%)</title><rect x="677.8" y="355.0" width="77.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.8" y="366.0">org/rocks..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="679.2" y="339.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="682.2" y="350.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (53 samples, 6.35%)</title><rect x="680.6" y="339.0" width="75.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="683.6" y="350.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (52 samples, 6.24%)</title><rect x="680.6" y="323.0" width="73.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="683.6" y="334.0">Java_org..</text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.12%)</title><rect x="682.1" y="307.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="685.1" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (50 samples, 6.00%)</title><rect x="683.5" y="307.0" width="70.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="686.5" y="318.0">rocksdb_..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (49 samples, 5.88%)</title><rect x="684.9" y="291.0" width="69.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="687.9" y="302.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.12%)</title><rect x="684.9" y="275.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="687.9" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (48 samples, 5.76%)</title><rect x="686.3" y="275.0" width="67.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="689.3" y="286.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (47 samples, 5.64%)</title><rect x="686.3" y="259.0" width="66.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="689.3" y="270.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (43 samples, 5.16%)</title><rect x="687.7" y="243.0" width="60.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="690.7" y="254.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (40 samples, 4.80%)</title><rect x="687.7" y="227.0" width="56.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="690.7" y="238.0">rocksd..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="689.1" y="211.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="692.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.12%)</title><rect x="690.6" y="211.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="693.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (9 samples, 1.08%)</title><rect x="692.0" y="211.0" width="12.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="695.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (9 samples, 1.08%)</title><rect x="692.0" y="195.0" width="12.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="695.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (9 samples, 1.08%)</title><rect x="692.0" y="179.0" width="12.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="695.0" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="692.0" y="163.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="695.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Flush(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.12%)</title><rect x="693.4" y="163.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="696.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.12%)</title><rect x="694.8" y="163.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="697.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.24%)</title><rect x="696.2" y="163.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="699.2" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.12%)</title><rect x="697.6" y="147.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="700.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.12%)</title><rect x="699.0" y="163.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="702.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.36%)</title><rect x="700.5" y="163.0" width="4.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="703.5" y="174.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.24%)</title><rect x="700.5" y="147.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="703.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.12%)</title><rect x="703.3" y="147.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="706.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (2 samples, 0.24%)</title><rect x="704.7" y="211.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="707.7" y="222.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.12%)</title><rect x="706.1" y="195.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="709.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (10 samples, 1.20%)</title><rect x="707.5" y="211.0" width="14.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="710.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (10 samples, 1.20%)</title><rect x="707.5" y="195.0" width="14.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="710.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (10 samples, 1.20%)</title><rect x="707.5" y="179.0" width="14.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="710.5" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.96%)</title><rect x="707.5" y="163.0" width="11.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="710.5" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (8 samples, 0.96%)</title><rect x="707.5" y="147.0" width="11.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="710.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (7 samples, 0.84%)</title><rect x="707.5" y="131.0" width="9.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="710.5" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="707.5" y="115.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="710.5" y="126.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.12%)</title><rect x="707.5" y="99.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="710.5" y="110.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 0.60%)</title><rect x="708.9" y="115.0" width="7.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="711.9" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (3 samples, 0.36%)</title><rect x="710.4" y="99.0" width="4.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="713.4" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="711.8" y="83.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="714.8" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.12%)</title><rect x="711.8" y="67.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="714.8" y="78.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="711.8" y="51.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="714.8" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.12%)</title><rect x="713.2" y="83.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="716.2" y="94.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.12%)</title><rect x="713.2" y="67.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="716.2" y="78.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="714.6" y="99.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="717.6" y="110.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.12%)</title><rect x="716.0" y="115.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="719.0" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.12%)</title><rect x="717.4" y="131.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="720.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.24%)</title><rect x="718.8" y="163.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="721.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (2 samples, 0.24%)</title><rect x="721.7" y="211.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="724.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.24%)</title><rect x="721.7" y="195.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="724.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (2 samples, 0.24%)</title><rect x="721.7" y="179.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="724.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.24%)</title><rect x="721.7" y="163.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="724.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.24%)</title><rect x="721.7" y="147.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="724.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.24%)</title><rect x="721.7" y="131.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="724.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.24%)</title><rect x="721.7" y="115.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="724.7" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.24%)</title><rect x="721.7" y="99.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="724.7" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (2 samples, 0.24%)</title><rect x="721.7" y="83.0" width="2.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="724.7" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="723.1" y="67.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="726.1" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.12%)</title><rect x="723.1" y="51.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="726.1" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="723.1" y="35.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="726.1" y="46.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (10 samples, 1.20%)</title><rect x="724.5" y="211.0" width="14.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="727.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (3 samples, 0.36%)</title><rect x="738.7" y="211.0" width="4.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="741.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.36%)</title><rect x="738.7" y="195.0" width="4.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="741.7" y="206.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.12%)</title><rect x="741.5" y="179.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="744.5" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (1 samples, 0.12%)</title><rect x="742.9" y="211.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="745.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.12%)</title><rect x="742.9" y="195.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="745.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.12%)</title><rect x="744.3" y="227.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="747.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) [clone .plt] (1 samples, 0.12%)</title><rect x="745.7" y="227.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="748.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.12%)</title><rect x="747.1" y="227.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="750.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.12%)</title><rect x="748.6" y="243.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="751.6" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="750.0" y="243.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="753.0" y="254.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.12%)</title><rect x="750.0" y="227.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="753.0" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.12%)</title><rect x="751.4" y="243.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="754.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.12%)</title><rect x="752.8" y="259.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="755.8" y="270.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.12%)</title><rect x="754.2" y="323.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="757.2" y="334.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.12%)</title><rect x="754.2" y="307.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="757.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArraySpecial (1 samples, 0.12%)</title><rect x="755.6" y="355.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="758.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (1 samples, 0.12%)</title><rect x="757.1" y="371.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="760.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.12%)</title><rect x="757.1" y="355.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="760.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.12%)</title><rect x="758.5" y="403.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="761.5" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.12%)</title><rect x="758.5" y="387.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="761.5" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.12%)</title><rect x="758.5" y="371.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="761.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.12%)</title><rect x="758.5" y="355.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="761.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.12%)</title><rect x="758.5" y="339.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="761.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.12%)</title><rect x="759.9" y="435.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.12%)</title><rect x="759.9" y="419.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="762.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="759.9" y="403.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="759.9" y="387.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.12%)</title><rect x="759.9" y="371.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.12%)</title><rect x="761.3" y="435.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="764.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.12%)</title><rect x="761.3" y="419.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="764.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.12%)</title><rect x="761.3" y="403.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="764.3" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 0.36%)</title><rect x="762.7" y="451.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="765.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.36%)</title><rect x="762.7" y="435.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.7" y="446.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.36%)</title><rect x="762.7" y="419.0" width="4.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="765.7" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=319346] (96 samples, 11.51%)</title><rect x="767.0" y="515.0" width="135.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="770.0" y="526.0">[NIO Selector #5 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (96 samples, 11.51%)</title><rect x="767.0" y="499.0" width="135.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="770.0" y="510.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.12%)</title><rect x="767.0" y="483.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="770.0" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (11 samples, 1.32%)</title><rect x="768.4" y="483.0" width="15.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (11 samples, 1.32%)</title><rect x="768.4" y="467.0" width="15.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="771.4" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.12%)</title><rect x="768.4" y="451.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="771.4" y="462.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.60%)</title><rect x="769.8" y="451.0" width="7.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="772.8" y="462.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="775.4" y="435.0" width="1.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="778.4" y="446.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="776.9" y="451.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="779.9" y="462.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.48%)</title><rect x="778.3" y="451.0" width="5.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="781.3" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (84 samples, 10.07%)</title><rect x="783.9" y="483.0" width="118.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="786.9" y="494.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (83 samples, 9.95%)</title><rect x="785.3" y="467.0" width="117.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.3" y="478.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (80 samples, 9.59%)</title><rect x="785.3" y="451.0" width="113.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.3" y="462.0">one/nio/http/H..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="785.3" y="435.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="788.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (76 samples, 9.11%)</title><rect x="786.8" y="435.0" width="107.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="789.8" y="446.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (76 samples, 9.11%)</title><rect x="786.8" y="419.0" width="107.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.8" y="430.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (76 samples, 9.11%)</title><rect x="786.8" y="403.0" width="107.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.8" y="414.0">RequestHandle..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 1.20%)</title><rect x="786.8" y="387.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 1.20%)</title><rect x="786.8" y="371.0" width="14.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="789.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.48%)</title><rect x="786.8" y="355.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.24%)</title><rect x="788.2" y="339.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.12%)</title><rect x="791.0" y="339.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="794.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="791.0" y="323.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.0" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="791.0" y="307.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.0" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="791.0" y="291.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="794.0" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.72%)</title><rect x="792.4" y="355.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="795.4" y="366.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.12%)</title><rect x="793.8" y="339.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="796.8" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.48%)</title><rect x="795.3" y="339.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.3" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.48%)</title><rect x="795.3" y="323.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.3" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.48%)</title><rect x="795.3" y="307.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="798.3" y="318.0"></text>
</g>
<g>
<title>__libc_send (3 samples, 0.36%)</title><rect x="796.7" y="291.0" width="4.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="799.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.12%)</title><rect x="800.9" y="387.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="803.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.12%)</title><rect x="800.9" y="371.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="803.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.12%)</title><rect x="800.9" y="355.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="803.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.put (65 samples, 7.79%)</title><rect x="802.3" y="387.0" width="92.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="805.3" y="398.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (1 samples, 0.12%)</title><rect x="802.3" y="371.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="805.3" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.12%)</title><rect x="802.3" y="355.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="805.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.12%)</title><rect x="802.3" y="339.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="805.3" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="802.3" y="323.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="805.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="802.3" y="307.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.3" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="802.3" y="291.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="805.3" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.12%)</title><rect x="802.3" y="275.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (64 samples, 7.67%)</title><rect x="803.7" y="371.0" width="90.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="806.7" y="382.0">ru/mail/po..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (64 samples, 7.67%)</title><rect x="803.7" y="355.0" width="90.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="806.7" y="366.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (64 samples, 7.67%)</title><rect x="803.7" y="339.0" width="90.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.7" y="350.0">org/rocksd..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (64 samples, 7.67%)</title><rect x="803.7" y="323.0" width="90.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="806.7" y="334.0">Java_org_r..</text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (1 samples, 0.12%)</title><rect x="803.7" y="307.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="806.7" y="318.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (63 samples, 7.55%)</title><rect x="805.2" y="307.0" width="89.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="808.2" y="318.0">rocksdb_pu..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (62 samples, 7.43%)</title><rect x="805.2" y="291.0" width="87.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="808.2" y="302.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (62 samples, 7.43%)</title><rect x="805.2" y="275.0" width="87.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="808.2" y="286.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (60 samples, 7.19%)</title><rect x="806.6" y="259.0" width="84.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="809.6" y="270.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (56 samples, 6.71%)</title><rect x="806.6" y="243.0" width="79.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="809.6" y="254.0">rocksdb::..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.12%)</title><rect x="806.6" y="227.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="809.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (54 samples, 6.47%)</title><rect x="808.0" y="227.0" width="76.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="811.0" y="238.0">rocksdb:..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="812.2" y="211.0" width="1.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="815.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.12%)</title><rect x="813.6" y="211.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="816.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (11 samples, 1.32%)</title><rect x="815.1" y="211.0" width="15.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="818.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (2 samples, 0.24%)</title><rect x="815.1" y="195.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="818.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (9 samples, 1.08%)</title><rect x="817.9" y="195.0" width="12.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="820.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (8 samples, 0.96%)</title><rect x="819.3" y="179.0" width="11.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="822.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (5 samples, 0.60%)</title><rect x="820.7" y="163.0" width="7.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="823.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (4 samples, 0.48%)</title><rect x="822.1" y="147.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="825.1" y="158.0"></text>
</g>
<g>
<title>__libc_write (4 samples, 0.48%)</title><rect x="822.1" y="131.0" width="5.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="825.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.24%)</title><rect x="827.8" y="163.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="830.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="827.8" y="147.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="830.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.12%)</title><rect x="829.2" y="147.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="832.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.12%)</title><rect x="830.6" y="211.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="833.6" y="222.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (1 samples, 0.12%)</title><rect x="830.6" y="195.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="833.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() [clone .plt] (1 samples, 0.12%)</title><rect x="832.0" y="211.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="835.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (1 samples, 0.12%)</title><rect x="833.5" y="211.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="836.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (11 samples, 1.32%)</title><rect x="834.9" y="211.0" width="15.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="837.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (10 samples, 1.20%)</title><rect x="836.3" y="195.0" width="14.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="839.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (10 samples, 1.20%)</title><rect x="836.3" y="179.0" width="14.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="839.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 1.08%)</title><rect x="837.7" y="163.0" width="12.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="840.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (9 samples, 1.08%)</title><rect x="837.7" y="147.0" width="12.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="840.7" y="158.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (2 samples, 0.24%)</title><rect x="837.7" y="131.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="840.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.12%)</title><rect x="840.5" y="131.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="843.5" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (5 samples, 0.60%)</title><rect x="841.9" y="131.0" width="7.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="844.9" y="142.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="841.9" y="115.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="844.9" y="126.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.12%)</title><rect x="841.9" y="99.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="844.9" y="110.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 0.48%)</title><rect x="843.4" y="115.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="846.4" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (3 samples, 0.36%)</title><rect x="844.8" y="99.0" width="4.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="847.8" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (2 samples, 0.24%)</title><rect x="846.2" y="83.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="849.2" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.12%)</title><rect x="847.6" y="67.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="850.6" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() [clone .plt] (1 samples, 0.12%)</title><rect x="849.0" y="131.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="852.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (4 samples, 0.48%)</title><rect x="850.4" y="211.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="853.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.12%)</title><rect x="850.4" y="195.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="853.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.12%)</title><rect x="850.4" y="179.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="853.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.36%)</title><rect x="851.8" y="195.0" width="4.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="854.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.36%)</title><rect x="851.8" y="179.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="854.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.36%)</title><rect x="851.8" y="163.0" width="4.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="854.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.36%)</title><rect x="851.8" y="147.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="854.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (3 samples, 0.36%)</title><rect x="851.8" y="131.0" width="4.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="854.8" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (3 samples, 0.36%)</title><rect x="851.8" y="115.0" width="4.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="854.8" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.24%)</title><rect x="853.3" y="99.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="856.3" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (2 samples, 0.24%)</title><rect x="853.3" y="83.0" width="2.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="856.3" y="94.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (2 samples, 0.24%)</title><rect x="853.3" y="67.0" width="2.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="856.3" y="78.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="853.3" y="51.0" width="1.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="856.3" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.12%)</title><rect x="854.7" y="51.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="857.7" y="62.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="854.7" y="35.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="857.7" y="46.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (1 samples, 0.12%)</title><rect x="856.1" y="211.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="859.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (13 samples, 1.56%)</title><rect x="857.5" y="211.0" width="18.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="860.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (4 samples, 0.48%)</title><rect x="875.9" y="211.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="878.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (4 samples, 0.48%)</title><rect x="875.9" y="195.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="878.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.12%)</title><rect x="881.6" y="211.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="884.6" y="222.0"></text>
</g>
<g>
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base*) (1 samples, 0.12%)</title><rect x="883.0" y="211.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="886.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) [clone .plt] (1 samples, 0.12%)</title><rect x="884.4" y="227.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="887.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.12%)</title><rect x="885.8" y="243.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="888.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="887.2" y="243.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="890.2" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.24%)</title><rect x="888.6" y="243.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="891.6" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="891.5" y="259.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="894.5" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="892.9" y="291.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="895.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.24%)</title><rect x="894.3" y="435.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="897.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.24%)</title><rect x="894.3" y="419.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="897.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.24%)</title><rect x="894.3" y="403.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.3" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="897.1" y="435.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.1" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="897.1" y="419.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.12%)</title><rect x="897.1" y="403.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="900.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.12%)</title><rect x="897.1" y="387.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="900.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.12%)</title><rect x="897.1" y="371.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="900.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.12%)</title><rect x="898.5" y="451.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="901.5" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.24%)</title><rect x="900.0" y="451.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="903.0" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.12%)</title><rect x="901.4" y="435.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="904.4" y="446.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.12%)</title><rect x="901.4" y="419.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="904.4" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=319347] (79 samples, 9.47%)</title><rect x="902.8" y="515.0" width="111.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="905.8" y="526.0">[NIO Selector..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (79 samples, 9.47%)</title><rect x="902.8" y="499.0" width="111.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.8" y="510.0">one/nio/serve..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 0.96%)</title><rect x="904.2" y="483.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.2" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (7 samples, 0.84%)</title><rect x="905.6" y="467.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="908.6" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.12%)</title><rect x="905.6" y="451.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="908.6" y="462.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.12%)</title><rect x="907.0" y="451.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="910.0" y="462.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.12%)</title><rect x="907.0" y="435.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="910.0" y="446.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.60%)</title><rect x="908.4" y="451.0" width="7.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="911.4" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (70 samples, 8.39%)</title><rect x="915.5" y="483.0" width="99.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="918.5" y="494.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (70 samples, 8.39%)</title><rect x="915.5" y="467.0" width="99.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.5" y="478.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (68 samples, 8.15%)</title><rect x="915.5" y="451.0" width="96.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="918.5" y="462.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (65 samples, 7.79%)</title><rect x="916.9" y="435.0" width="92.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="919.9" y="446.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (65 samples, 7.79%)</title><rect x="916.9" y="419.0" width="92.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="919.9" y="430.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (65 samples, 7.79%)</title><rect x="916.9" y="403.0" width="92.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.9" y="414.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (13 samples, 1.56%)</title><rect x="916.9" y="387.0" width="18.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.9" y="398.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.24%)</title><rect x="916.9" y="371.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="919.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.24%)</title><rect x="916.9" y="355.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="919.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.24%)</title><rect x="916.9" y="339.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 0.96%)</title><rect x="919.8" y="371.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="922.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.72%)</title><rect x="919.8" y="355.0" width="8.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="922.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.12%)</title><rect x="922.6" y="339.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="925.6" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.36%)</title><rect x="924.0" y="339.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="927.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.36%)</title><rect x="924.0" y="323.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="927.0" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.36%)</title><rect x="924.0" y="307.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="927.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.36%)</title><rect x="924.0" y="291.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="927.0" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.24%)</title><rect x="928.2" y="355.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="931.2" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.24%)</title><rect x="928.2" y="339.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="931.2" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.24%)</title><rect x="928.2" y="323.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="931.2" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.24%)</title><rect x="928.2" y="307.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="931.2" y="318.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.12%)</title><rect x="928.2" y="291.0" width="1.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="931.2" y="302.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.12%)</title><rect x="928.2" y="275.0" width="1.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="931.2" y="286.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.12%)</title><rect x="929.7" y="291.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="932.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.36%)</title><rect x="931.1" y="371.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="934.1" y="382.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.36%)</title><rect x="931.1" y="355.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="934.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.36%)</title><rect x="931.1" y="339.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="934.1" y="350.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.12%)</title><rect x="933.9" y="323.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="936.9" y="334.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.12%)</title><rect x="933.9" y="307.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="936.9" y="318.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.12%)</title><rect x="933.9" y="291.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="936.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.12%)</title><rect x="935.3" y="387.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="938.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.12%)</title><rect x="935.3" y="371.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="938.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.12%)</title><rect x="935.3" y="355.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="938.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="935.3" y="339.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="938.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="935.3" y="323.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="938.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.12%)</title><rect x="935.3" y="307.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="938.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.put (51 samples, 6.12%)</title><rect x="936.7" y="387.0" width="72.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="939.7" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (1 samples, 0.12%)</title><rect x="936.7" y="371.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="939.7" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.12%)</title><rect x="936.7" y="355.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="939.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.12%)</title><rect x="936.7" y="339.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="939.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="936.7" y="323.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="939.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="936.7" y="307.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="939.7" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="936.7" y="291.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="939.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (49 samples, 5.88%)</title><rect x="938.2" y="371.0" width="69.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="941.2" y="382.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (49 samples, 5.88%)</title><rect x="938.2" y="355.0" width="69.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="941.2" y="366.0">org/roc..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="938.2" y="339.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="941.2" y="350.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (48 samples, 5.76%)</title><rect x="939.6" y="339.0" width="67.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="942.6" y="350.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (46 samples, 5.52%)</title><rect x="939.6" y="323.0" width="65.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="942.6" y="334.0">Java_or..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (46 samples, 5.52%)</title><rect x="939.6" y="307.0" width="65.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="942.6" y="318.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (44 samples, 5.28%)</title><rect x="939.6" y="291.0" width="62.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="942.6" y="302.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="941.0" y="275.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="944.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (42 samples, 5.04%)</title><rect x="942.4" y="275.0" width="59.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="945.4" y="286.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (40 samples, 4.80%)</title><rect x="943.8" y="259.0" width="56.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="946.8" y="270.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (39 samples, 4.68%)</title><rect x="943.8" y="243.0" width="55.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="946.8" y="254.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() [clone .plt] (1 samples, 0.12%)</title><rect x="943.8" y="227.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="946.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (36 samples, 4.32%)</title><rect x="945.2" y="227.0" width="51.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="948.2" y="238.0">rocks..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="946.6" y="211.0" width="1.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="949.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (8 samples, 0.96%)</title><rect x="948.1" y="211.0" width="11.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="951.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (8 samples, 0.96%)</title><rect x="948.1" y="195.0" width="11.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="951.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (8 samples, 0.96%)</title><rect x="948.1" y="179.0" width="11.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="951.1" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="948.1" y="163.0" width="1.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="951.1" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (5 samples, 0.60%)</title><rect x="949.5" y="163.0" width="7.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="952.5" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (5 samples, 0.60%)</title><rect x="949.5" y="147.0" width="7.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="952.5" y="158.0"></text>
</g>
<g>
<title>__libc_write (4 samples, 0.48%)</title><rect x="950.9" y="131.0" width="5.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="953.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) [clone .plt] (1 samples, 0.12%)</title><rect x="956.5" y="163.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="959.5" y="174.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.12%)</title><rect x="958.0" y="163.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="961.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="958.0" y="147.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="961.0" y="158.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() [clone .plt] (1 samples, 0.12%)</title><rect x="959.4" y="211.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="962.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (9 samples, 1.08%)</title><rect x="960.8" y="211.0" width="12.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="963.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 1.08%)</title><rect x="960.8" y="195.0" width="12.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="963.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.12%)</title><rect x="960.8" y="179.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="963.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (8 samples, 0.96%)</title><rect x="962.2" y="179.0" width="11.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="965.2" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.96%)</title><rect x="962.2" y="163.0" width="11.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="965.2" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.12%)</title><rect x="962.2" y="147.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="965.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (7 samples, 0.84%)</title><rect x="963.6" y="147.0" width="9.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="966.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (7 samples, 0.84%)</title><rect x="963.6" y="131.0" width="9.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="966.6" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.36%)</title><rect x="965.0" y="115.0" width="4.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="968.0" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (2 samples, 0.24%)</title><rect x="966.5" y="99.0" width="2.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="969.5" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="967.9" y="83.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="970.9" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.12%)</title><rect x="967.9" y="67.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="970.9" y="78.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="967.9" y="51.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="970.9" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.12%)</title><rect x="969.3" y="115.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="972.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.12%)</title><rect x="970.7" y="115.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="973.7" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="970.7" y="99.0" width="1.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="973.7" y="110.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.12%)</title><rect x="972.1" y="115.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="975.1" y="126.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (1 samples, 0.12%)</title><rect x="973.5" y="211.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="976.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (11 samples, 1.32%)</title><rect x="974.9" y="211.0" width="15.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="977.9" y="222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.12%)</title><rect x="989.1" y="195.0" width="1.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="992.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (4 samples, 0.48%)</title><rect x="990.5" y="211.0" width="5.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="993.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (4 samples, 0.48%)</title><rect x="990.5" y="195.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="993.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.12%)</title><rect x="996.2" y="227.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="999.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() [clone .plt] (1 samples, 0.12%)</title><rect x="997.6" y="227.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1000.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="999.0" y="243.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1002.0" y="254.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.12%)</title><rect x="999.0" y="227.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1002.0" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.12%)</title><rect x="1000.4" y="259.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1003.4" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.24%)</title><rect x="1001.8" y="291.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1004.8" y="302.0"></text>
</g>
<g>
<title>malloc (2 samples, 0.24%)</title><rect x="1004.7" y="323.0" width="2.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1007.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ZeroResponse.&lt;init&gt; (1 samples, 0.12%)</title><rect x="1007.5" y="371.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1010.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.12%)</title><rect x="1007.5" y="355.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1010.5" y="366.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1 samples, 0.12%)</title><rect x="1007.5" y="339.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1010.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.12%)</title><rect x="1008.9" y="435.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1011.9" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.12%)</title><rect x="1008.9" y="419.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1011.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.12%)</title><rect x="1010.3" y="435.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1013.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.12%)</title><rect x="1010.3" y="419.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1013.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.12%)</title><rect x="1010.3" y="403.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1013.3" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.24%)</title><rect x="1011.7" y="451.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1014.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.24%)</title><rect x="1011.7" y="435.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1014.7" y="446.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.12%)</title><rect x="1013.1" y="419.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1016.1" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=319348] (124 samples, 14.87%)</title><rect x="1014.6" y="515.0" width="175.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1017.6" y="526.0">[NIO Selector #7 tid=31..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (124 samples, 14.87%)</title><rect x="1014.6" y="499.0" width="175.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1017.6" y="510.0">one/nio/server/Selector..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.12%)</title><rect x="1016.0" y="483.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1019.0" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.36%)</title><rect x="1017.4" y="483.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1020.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.24%)</title><rect x="1018.8" y="467.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1021.8" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 1.20%)</title><rect x="1021.6" y="483.0" width="14.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1024.6" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 1.08%)</title><rect x="1023.0" y="467.0" width="12.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1026.0" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.12%)</title><rect x="1023.0" y="451.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1026.0" y="462.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.12%)</title><rect x="1024.5" y="451.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1027.5" y="462.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.12%)</title><rect x="1025.9" y="451.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1028.9" y="462.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="1027.3" y="451.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1030.3" y="462.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.60%)</title><rect x="1028.7" y="451.0" width="7.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1031.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (109 samples, 13.07%)</title><rect x="1035.8" y="483.0" width="154.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1038.8" y="494.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (108 samples, 12.95%)</title><rect x="1037.2" y="467.0" width="152.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1040.2" y="478.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (102 samples, 12.23%)</title><rect x="1037.2" y="451.0" width="144.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1040.2" y="462.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (95 samples, 11.39%)</title><rect x="1040.0" y="435.0" width="134.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1043.0" y="446.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (95 samples, 11.39%)</title><rect x="1040.0" y="419.0" width="134.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1043.0" y="430.0">one/nio/http/Http..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (93 samples, 11.15%)</title><rect x="1040.0" y="403.0" width="131.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1043.0" y="414.0">RequestHandler1_..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (18 samples, 2.16%)</title><rect x="1040.0" y="387.0" width="25.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1043.0" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (15 samples, 1.80%)</title><rect x="1040.0" y="371.0" width="21.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1043.0" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 1.08%)</title><rect x="1040.0" y="355.0" width="12.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1043.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.12%)</title><rect x="1041.4" y="339.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1044.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.84%)</title><rect x="1042.9" y="339.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.9" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.72%)</title><rect x="1044.3" y="323.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1047.3" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.72%)</title><rect x="1044.3" y="307.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.24%)</title><rect x="1044.3" y="291.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1047.3" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.48%)</title><rect x="1047.1" y="291.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1050.1" y="302.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.12%)</title><rect x="1051.3" y="275.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1054.3" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.72%)</title><rect x="1052.8" y="355.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1055.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.72%)</title><rect x="1052.8" y="339.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1055.8" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 0.72%)</title><rect x="1052.8" y="323.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1055.8" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (6 samples, 0.72%)</title><rect x="1052.8" y="307.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1055.8" y="318.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.24%)</title><rect x="1052.8" y="291.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1055.8" y="302.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.12%)</title><rect x="1054.2" y="275.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1057.2" y="286.0"></text>
</g>
<g>
<title>__libc_send (3 samples, 0.36%)</title><rect x="1055.6" y="291.0" width="4.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1058.6" y="302.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.12%)</title><rect x="1059.8" y="291.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1062.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.36%)</title><rect x="1061.2" y="371.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.2" y="382.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.36%)</title><rect x="1061.2" y="355.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.36%)</title><rect x="1061.2" y="339.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1064.2" y="350.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.12%)</title><rect x="1064.1" y="323.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1067.1" y="334.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.12%)</title><rect x="1064.1" y="307.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1067.1" y="318.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.12%)</title><rect x="1064.1" y="291.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1067.1" y="302.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.12%)</title><rect x="1064.1" y="275.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1067.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mariarheon/ServiceImpl.put (75 samples, 8.99%)</title><rect x="1065.5" y="387.0" width="106.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1068.5" y="398.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toByteBuffer (2 samples, 0.24%)</title><rect x="1065.5" y="371.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1068.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.24%)</title><rect x="1065.5" y="355.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1068.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.24%)</title><rect x="1065.5" y="339.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1068.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.24%)</title><rect x="1065.5" y="323.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1068.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.24%)</title><rect x="1065.5" y="307.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1068.5" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.24%)</title><rect x="1065.5" y="291.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1068.5" y="302.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.12%)</title><rect x="1066.9" y="275.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1069.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/DAOImpl.upsert (73 samples, 8.75%)</title><rect x="1068.3" y="371.0" width="103.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1071.3" y="382.0">ru/mail/poli..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (70 samples, 8.39%)</title><rect x="1068.3" y="355.0" width="99.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1071.3" y="366.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (69 samples, 8.27%)</title><rect x="1069.7" y="339.0" width="97.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1072.7" y="350.0">org/rocksdb..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (66 samples, 7.91%)</title><rect x="1071.2" y="323.0" width="93.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1074.2" y="334.0">Java_org_ro..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (66 samples, 7.91%)</title><rect x="1071.2" y="307.0" width="93.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1074.2" y="318.0">rocksdb_put..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (65 samples, 7.79%)</title><rect x="1071.2" y="291.0" width="91.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1074.2" y="302.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (65 samples, 7.79%)</title><rect x="1071.2" y="275.0" width="91.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1074.2" y="286.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (65 samples, 7.79%)</title><rect x="1071.2" y="259.0" width="91.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1074.2" y="270.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (62 samples, 7.43%)</title><rect x="1071.2" y="243.0" width="87.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1074.2" y="254.0">rocksdb::D..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.12%)</title><rect x="1071.2" y="227.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1074.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.12%)</title><rect x="1072.6" y="227.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1075.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (58 samples, 6.95%)</title><rect x="1074.0" y="227.0" width="82.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1077.0" y="238.0">rocksdb::..</text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.12%)</title><rect x="1079.6" y="211.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1082.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (8 samples, 0.96%)</title><rect x="1081.1" y="211.0" width="11.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1084.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (7 samples, 0.84%)</title><rect x="1081.1" y="195.0" width="9.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1084.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (6 samples, 0.72%)</title><rect x="1082.5" y="179.0" width="8.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1085.5" y="190.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="1085.3" y="163.0" width="1.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1088.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.24%)</title><rect x="1086.7" y="163.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1089.7" y="174.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) [clone .plt] (1 samples, 0.12%)</title><rect x="1086.7" y="147.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1089.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.12%)</title><rect x="1088.1" y="147.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1091.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.12%)</title><rect x="1089.5" y="163.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1092.5" y="174.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="1089.5" y="147.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1092.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="1091.0" y="195.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1094.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.12%)</title><rect x="1092.4" y="211.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1095.4" y="222.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.12%)</title><rect x="1092.4" y="195.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1095.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (1 samples, 0.12%)</title><rect x="1093.8" y="211.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1096.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (15 samples, 1.80%)</title><rect x="1095.2" y="211.0" width="21.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1098.2" y="222.0">r..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (13 samples, 1.56%)</title><rect x="1096.6" y="195.0" width="18.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1099.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (13 samples, 1.56%)</title><rect x="1096.6" y="179.0" width="18.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1099.6" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 1.44%)</title><rect x="1096.6" y="163.0" width="17.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1099.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (12 samples, 1.44%)</title><rect x="1096.6" y="147.0" width="17.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1099.6" y="158.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.24%)</title><rect x="1096.6" y="131.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1099.6" y="142.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.12%)</title><rect x="1099.4" y="131.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1102.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (9 samples, 1.08%)</title><rect x="1100.9" y="131.0" width="12.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1103.9" y="142.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (8 samples, 0.96%)</title><rect x="1100.9" y="115.0" width="11.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1103.9" y="126.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (6 samples, 0.72%)</title><rect x="1102.3" y="99.0" width="8.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1105.3" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (5 samples, 0.60%)</title><rect x="1103.7" y="83.0" width="7.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1106.7" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.36%)</title><rect x="1106.5" y="67.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1109.5" y="78.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.24%)</title><rect x="1107.9" y="51.0" width="2.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1110.9" y="62.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="1110.8" y="99.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1113.8" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.12%)</title><rect x="1112.2" y="115.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1115.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.12%)</title><rect x="1113.6" y="163.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1116.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.12%)</title><rect x="1115.0" y="195.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1118.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (3 samples, 0.36%)</title><rect x="1116.4" y="211.0" width="4.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1119.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.36%)</title><rect x="1116.4" y="195.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1119.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.36%)</title><rect x="1116.4" y="179.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1119.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.24%)</title><rect x="1116.4" y="163.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1119.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.24%)</title><rect x="1116.4" y="147.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1119.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.24%)</title><rect x="1116.4" y="131.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1119.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.12%)</title><rect x="1117.8" y="115.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1120.8" y="126.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.12%)</title><rect x="1117.8" y="99.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1120.8" y="110.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3525462586387562143.so (1 samples, 0.12%)</title><rect x="1117.8" y="83.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1120.8" y="94.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.12%)</title><rect x="1119.3" y="163.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1122.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (1 samples, 0.12%)</title><rect x="1120.7" y="211.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1123.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const [clone .plt] (1 samples, 0.12%)</title><rect x="1122.1" y="211.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1125.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (19 samples, 2.28%)</title><rect x="1123.5" y="211.0" width="26.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1126.5" y="222.0">r..</text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.12%)</title><rect x="1149.0" y="195.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (3 samples, 0.36%)</title><rect x="1150.4" y="211.0" width="4.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.36%)</title><rect x="1150.4" y="195.0" width="4.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1153.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.12%)</title><rect x="1154.6" y="211.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.12%)</title><rect x="1156.0" y="227.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.0" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.12%)</title><rect x="1157.5" y="227.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1160.5" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.36%)</title><rect x="1158.9" y="243.0" width="4.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.9" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (1 samples, 0.12%)</title><rect x="1158.9" y="227.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1161.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.12%)</title><rect x="1160.3" y="227.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="1161.7" y="227.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.7" y="238.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.12%)</title><rect x="1161.7" y="211.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1164.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.12%)</title><rect x="1163.1" y="291.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.1" y="302.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.12%)</title><rect x="1164.5" y="323.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1167.5" y="334.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.12%)</title><rect x="1165.9" y="323.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArraySpecial (3 samples, 0.36%)</title><rect x="1167.4" y="355.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1170.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/mariarheon/ByteBufferUtils.toArray (2 samples, 0.24%)</title><rect x="1168.8" y="339.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1171.8" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.24%)</title><rect x="1168.8" y="323.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1171.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.24%)</title><rect x="1168.8" y="307.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1171.8" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.24%)</title><rect x="1168.8" y="291.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1171.8" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="1170.2" y="275.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1173.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.24%)</title><rect x="1171.6" y="403.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1174.6" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.24%)</title><rect x="1171.6" y="387.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1174.6" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.12%)</title><rect x="1171.6" y="371.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1174.6" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.12%)</title><rect x="1173.0" y="371.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1176.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.12%)</title><rect x="1173.0" y="355.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1176.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.12%)</title><rect x="1173.0" y="339.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1176.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.60%)</title><rect x="1174.4" y="435.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1177.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.12%)</title><rect x="1180.1" y="419.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1183.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.12%)</title><rect x="1180.1" y="403.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1183.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 0.72%)</title><rect x="1181.5" y="451.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1184.5" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 0.60%)</title><rect x="1182.9" y="435.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1185.9" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.12%)</title><rect x="1184.3" y="419.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1187.3" y="430.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.36%)</title><rect x="1185.8" y="419.0" width="4.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1188.8" y="430.0"></text>
</g>
</g>
</svg>
